// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$255 {

    static final MemoryLayout GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_POWERDOWN_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_DISK_POWERDOWN_TIMEOUT", constants$255.GUID_DISK_POWERDOWN_TIMEOUT$LAYOUT);
    static final MemoryLayout GUID_DISK_IDLE_TIMEOUT$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_IDLE_TIMEOUT$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_DISK_IDLE_TIMEOUT", constants$255.GUID_DISK_IDLE_TIMEOUT$LAYOUT);
    static final MemoryLayout GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_BURST_IGNORE_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_DISK_BURST_IGNORE_THRESHOLD", constants$255.GUID_DISK_BURST_IGNORE_THRESHOLD$LAYOUT);
    static final MemoryLayout GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_DISK_ADAPTIVE_POWERDOWN$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_DISK_ADAPTIVE_POWERDOWN", constants$255.GUID_DISK_ADAPTIVE_POWERDOWN$LAYOUT);
    static final MemoryLayout GUID_SLEEP_SUBGROUP$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_SLEEP_SUBGROUP$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_SLEEP_SUBGROUP", constants$255.GUID_SLEEP_SUBGROUP$LAYOUT);
    static final MemoryLayout GUID_SLEEP_IDLE_THRESHOLD$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_SLEEP_IDLE_THRESHOLD$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_SLEEP_IDLE_THRESHOLD", constants$255.GUID_SLEEP_IDLE_THRESHOLD$LAYOUT);
}


