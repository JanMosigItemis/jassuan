// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$969 {

    static final MemoryLayout IWinTypesBase_v0_1_s_ifspec$LAYOUT = C_POINTER;
    static final VarHandle IWinTypesBase_v0_1_s_ifspec$VH = MemoryHandles.asAddressVarHandle(constants$969.IWinTypesBase_v0_1_s_ifspec$LAYOUT.varHandle(long.class));
    static final MemorySegment IWinTypesBase_v0_1_s_ifspec$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IWinTypesBase_v0_1_s_ifspec", constants$969.IWinTypesBase_v0_1_s_ifspec$LAYOUT);
    static final MemoryLayout IID_IUnknown$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IUnknown$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IUnknown", constants$969.IID_IUnknown$LAYOUT);
    static final MemoryLayout IID_AsyncIUnknown$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_AsyncIUnknown$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_AsyncIUnknown", constants$969.IID_AsyncIUnknown$LAYOUT);
    static final MemoryLayout IID_IClassFactory$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IClassFactory$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IClassFactory", constants$969.IID_IClassFactory$LAYOUT);
    static final FunctionDescriptor IClassFactory_RemoteCreateInstance_Proxy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IClassFactory_RemoteCreateInstance_Proxy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IClassFactory_RemoteCreateInstance_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$969.IClassFactory_RemoteCreateInstance_Proxy$FUNC, false
    );
    static final FunctionDescriptor IClassFactory_RemoteCreateInstance_Stub$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IClassFactory_RemoteCreateInstance_Stub$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IClassFactory_RemoteCreateInstance_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$969.IClassFactory_RemoteCreateInstance_Stub$FUNC, false
    );
}


