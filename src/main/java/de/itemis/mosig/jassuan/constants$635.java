// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$635 {

    static final FunctionDescriptor GetShellWindow$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetShellWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetShellWindow",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$635.GetShellWindow$FUNC, false
    );
    static final FunctionDescriptor RegisterShellHookWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle RegisterShellHookWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegisterShellHookWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$635.RegisterShellHookWindow$FUNC, false
    );
    static final FunctionDescriptor DeregisterShellHookWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle DeregisterShellHookWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DeregisterShellHookWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$635.DeregisterShellHookWindow$FUNC, false
    );
    static final FunctionDescriptor EnumWindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle EnumWindows$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EnumWindows",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$635.EnumWindows$FUNC, false
    );
    static final FunctionDescriptor EnumThreadWindows$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle EnumThreadWindows$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EnumThreadWindows",
        "(ILjdk/incubator/foreign/MemoryAddress;J)I",
        constants$635.EnumThreadWindows$FUNC, false
    );
    static final FunctionDescriptor GetClassNameA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle GetClassNameA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetClassNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$635.GetClassNameA$FUNC, false
    );
}


