// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$958 {

    static final FunctionDescriptor NdrSH_IfAllocSet$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NdrSH_IfAllocSet$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrSH_IfAllocSet",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$958.NdrSH_IfAllocSet$FUNC, false
    );
    static final FunctionDescriptor NdrSH_IfCopy$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NdrSH_IfCopy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrSH_IfCopy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$958.NdrSH_IfCopy$FUNC, false
    );
    static final FunctionDescriptor NdrSH_IfAllocCopy$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NdrSH_IfAllocCopy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrSH_IfAllocCopy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$958.NdrSH_IfAllocCopy$FUNC, false
    );
    static final FunctionDescriptor NdrSH_Copy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NdrSH_Copy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrSH_Copy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$958.NdrSH_Copy$FUNC, false
    );
    static final FunctionDescriptor NdrSH_IfFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrSH_IfFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrSH_IfFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$958.NdrSH_IfFree$FUNC, false
    );
    static final FunctionDescriptor NdrSH_StringMarshall$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle NdrSH_StringMarshall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrSH_StringMarshall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        constants$958.NdrSH_StringMarshall$FUNC, false
    );
}


