// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$719 {

    static final FunctionDescriptor RegSaveKeyExW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle RegSaveKeyExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegSaveKeyExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$719.RegSaveKeyExW$FUNC, false
    );
    static final FunctionDescriptor Wow64Win32ApiEntry$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_LONG,
        C_LONG
    );
    static final MethodHandle Wow64Win32ApiEntry$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Wow64Win32ApiEntry",
        "(III)I",
        constants$719.Wow64Win32ApiEntry$FUNC, false
    );
    static final FunctionDescriptor RegCopyTreeA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegCopyTreeA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegCopyTreeA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$719.RegCopyTreeA$FUNC, false
    );
    static final FunctionDescriptor RegCopyTreeW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegCopyTreeW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegCopyTreeW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$719.RegCopyTreeW$FUNC, false
    );
    static final FunctionDescriptor RegCreateKeyTransactedA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegCreateKeyTransactedA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegCreateKeyTransactedA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$719.RegCreateKeyTransactedA$FUNC, false
    );
    static final FunctionDescriptor RegCreateKeyTransactedW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegCreateKeyTransactedW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegCreateKeyTransactedW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$719.RegCreateKeyTransactedW$FUNC, false
    );
}


