// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$349 {

    static final FunctionDescriptor AccessCheckByTypeResultListAndAuditAlarmW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle AccessCheckByTypeResultListAndAuditAlarmW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AccessCheckByTypeResultListAndAuditAlarmW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$349.AccessCheckByTypeResultListAndAuditAlarmW$FUNC, false
    );
    static final FunctionDescriptor AccessCheckByTypeResultListAndAuditAlarmByHandleW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle AccessCheckByTypeResultListAndAuditAlarmByHandleW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AccessCheckByTypeResultListAndAuditAlarmByHandleW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$349.AccessCheckByTypeResultListAndAuditAlarmByHandleW$FUNC, false
    );
    static final FunctionDescriptor AddAccessAllowedObjectAce$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle AddAccessAllowedObjectAce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAccessAllowedObjectAce",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$349.AddAccessAllowedObjectAce$FUNC, false
    );
    static final FunctionDescriptor AddAccessDeniedAce$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle AddAccessDeniedAce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAccessDeniedAce",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$349.AddAccessDeniedAce$FUNC, false
    );
    static final FunctionDescriptor AddAccessDeniedAceEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle AddAccessDeniedAceEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAccessDeniedAceEx",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)I",
        constants$349.AddAccessDeniedAceEx$FUNC, false
    );
    static final FunctionDescriptor AddAccessDeniedObjectAce$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle AddAccessDeniedObjectAce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAccessDeniedObjectAce",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$349.AddAccessDeniedObjectAce$FUNC, false
    );
}


