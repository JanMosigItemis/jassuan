// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$611 {

    static final FunctionDescriptor GetTabbedTextExtentW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle GetTabbedTextExtentW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetTabbedTextExtentW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$611.GetTabbedTextExtentW$FUNC, false
    );
    static final FunctionDescriptor UpdateWindow$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle UpdateWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "UpdateWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$611.UpdateWindow$FUNC, false
    );
    static final FunctionDescriptor SetActiveWindow$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetActiveWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetActiveWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$611.SetActiveWindow$FUNC, false
    );
    static final FunctionDescriptor GetForegroundWindow$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetForegroundWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetForegroundWindow",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$611.GetForegroundWindow$FUNC, false
    );
    static final FunctionDescriptor PaintDesktop$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle PaintDesktop$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PaintDesktop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$611.PaintDesktop$FUNC, false
    );
    static final FunctionDescriptor SwitchToThisWindow$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle SwitchToThisWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SwitchToThisWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$611.SwitchToThisWindow$FUNC, false
    );
}


