// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$367 {

    static final FunctionDescriptor WakeByAddressAll$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle WakeByAddressAll$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WakeByAddressAll",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$367.WakeByAddressAll$FUNC, false
    );
    static final FunctionDescriptor InitializeSRWLock$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle InitializeSRWLock$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "InitializeSRWLock",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$367.InitializeSRWLock$FUNC, false
    );
    static final FunctionDescriptor ReleaseSRWLockExclusive$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle ReleaseSRWLockExclusive$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReleaseSRWLockExclusive",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$367.ReleaseSRWLockExclusive$FUNC, false
    );
    static final FunctionDescriptor ReleaseSRWLockShared$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle ReleaseSRWLockShared$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReleaseSRWLockShared",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$367.ReleaseSRWLockShared$FUNC, false
    );
    static final FunctionDescriptor AcquireSRWLockExclusive$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle AcquireSRWLockExclusive$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AcquireSRWLockExclusive",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$367.AcquireSRWLockExclusive$FUNC, false
    );
    static final FunctionDescriptor AcquireSRWLockShared$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle AcquireSRWLockShared$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AcquireSRWLockShared",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$367.AcquireSRWLockShared$FUNC, false
    );
}


