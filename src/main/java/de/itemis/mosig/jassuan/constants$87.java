// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$87 {

    static final FunctionDescriptor getcwd$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle getcwd$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "getcwd",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$87.getcwd$FUNC, false
    );
    static final FunctionDescriptor mkdir$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle mkdir$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mkdir",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$87.mkdir$FUNC, false
    );
    static final FunctionDescriptor mktemp$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle mktemp$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mktemp",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$87.mktemp$FUNC, false
    );
    static final FunctionDescriptor rmdir$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle rmdir$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "rmdir",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$87.rmdir$FUNC, false
    );
    static final FunctionDescriptor chmod$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle chmod$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "chmod",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$87.chmod$FUNC, false
    );
    static final FunctionDescriptor _sopen_s$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle _sopen_s$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_sopen_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;III)I",
        constants$87._sopen_s$FUNC, false
    );
}


