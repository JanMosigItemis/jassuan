// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_29 extends assuan_h_28 {

    public static MemorySegment szOID_ECC_CURVE_SECP224R1() {
        return constants$1512.szOID_ECC_CURVE_SECP224R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP256K1() {
        return constants$1512.szOID_ECC_CURVE_SECP256K1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP256R1() {
        return constants$1512.szOID_ECC_CURVE_SECP256R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP384R1() {
        return constants$1512.szOID_ECC_CURVE_SECP384R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_SECP521R1() {
        return constants$1512.szOID_ECC_CURVE_SECP521R1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS7() {
        return constants$1512.szOID_ECC_CURVE_WTLS7$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS9() {
        return constants$1513.szOID_ECC_CURVE_WTLS9$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_WTLS12() {
        return constants$1513.szOID_ECC_CURVE_WTLS12$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V1() {
        return constants$1513.szOID_ECC_CURVE_X962P192V1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V2() {
        return constants$1513.szOID_ECC_CURVE_X962P192V2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P192V3() {
        return constants$1513.szOID_ECC_CURVE_X962P192V3$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V1() {
        return constants$1513.szOID_ECC_CURVE_X962P239V1$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V2() {
        return constants$1514.szOID_ECC_CURVE_X962P239V2$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P239V3() {
        return constants$1514.szOID_ECC_CURVE_X962P239V3$SEGMENT;
    }
    public static MemorySegment szOID_ECC_CURVE_X962P256V1() {
        return constants$1514.szOID_ECC_CURVE_X962P256V1$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA1() {
        return constants$1514.szOID_ECDSA_SHA1$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SPECIFIED() {
        return constants$1514.szOID_ECDSA_SPECIFIED$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA256() {
        return constants$1514.szOID_ECDSA_SHA256$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA384() {
        return constants$1515.szOID_ECDSA_SHA384$SEGMENT;
    }
    public static MemorySegment szOID_ECDSA_SHA512() {
        return constants$1515.szOID_ECDSA_SHA512$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES128_CBC() {
        return constants$1515.szOID_NIST_AES128_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES192_CBC() {
        return constants$1515.szOID_NIST_AES192_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES256_CBC() {
        return constants$1515.szOID_NIST_AES256_CBC$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES128_WRAP() {
        return constants$1515.szOID_NIST_AES128_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES192_WRAP() {
        return constants$1516.szOID_NIST_AES192_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_NIST_AES256_WRAP() {
        return constants$1516.szOID_NIST_AES256_WRAP$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF() {
        return constants$1516.szOID_DH_SINGLE_PASS_STDDH_SHA1_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF() {
        return constants$1516.szOID_DH_SINGLE_PASS_STDDH_SHA256_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF() {
        return constants$1516.szOID_DH_SINGLE_PASS_STDDH_SHA384_KDF$SEGMENT;
    }
    public static MemorySegment szOID_DS() {
        return constants$1516.szOID_DS$SEGMENT;
    }
    public static MemorySegment szOID_DSALG() {
        return constants$1517.szOID_DSALG$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_CRPT() {
        return constants$1517.szOID_DSALG_CRPT$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_HASH() {
        return constants$1517.szOID_DSALG_HASH$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_SIGN() {
        return constants$1517.szOID_DSALG_SIGN$SEGMENT;
    }
    public static MemorySegment szOID_DSALG_RSA() {
        return constants$1517.szOID_DSALG_RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIW() {
        return constants$1517.szOID_OIW$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC() {
        return constants$1518.szOID_OIWSEC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md4RSA() {
        return constants$1518.szOID_OIWSEC_md4RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md5RSA() {
        return constants$1518.szOID_OIWSEC_md5RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md4RSA2() {
        return constants$1518.szOID_OIWSEC_md4RSA2$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desECB() {
        return constants$1518.szOID_OIWSEC_desECB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desCBC() {
        return constants$1518.szOID_OIWSEC_desCBC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desOFB() {
        return constants$1519.szOID_OIWSEC_desOFB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desCFB() {
        return constants$1519.szOID_OIWSEC_desCFB$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desMAC() {
        return constants$1519.szOID_OIWSEC_desMAC$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_rsaSign() {
        return constants$1519.szOID_OIWSEC_rsaSign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsa() {
        return constants$1519.szOID_OIWSEC_dsa$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_shaDSA() {
        return constants$1519.szOID_OIWSEC_shaDSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_mdc2RSA() {
        return constants$1520.szOID_OIWSEC_mdc2RSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_shaRSA() {
        return constants$1520.szOID_OIWSEC_shaRSA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dhCommMod() {
        return constants$1520.szOID_OIWSEC_dhCommMod$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_desEDE() {
        return constants$1520.szOID_OIWSEC_desEDE$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha() {
        return constants$1520.szOID_OIWSEC_sha$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_mdc2() {
        return constants$1520.szOID_OIWSEC_mdc2$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaComm() {
        return constants$1521.szOID_OIWSEC_dsaComm$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaCommSHA() {
        return constants$1521.szOID_OIWSEC_dsaCommSHA$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_rsaXchg() {
        return constants$1521.szOID_OIWSEC_rsaXchg$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_keyHashSeal() {
        return constants$1521.szOID_OIWSEC_keyHashSeal$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md2RSASign() {
        return constants$1521.szOID_OIWSEC_md2RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_md5RSASign() {
        return constants$1521.szOID_OIWSEC_md5RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha1() {
        return constants$1522.szOID_OIWSEC_sha1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaSHA1() {
        return constants$1522.szOID_OIWSEC_dsaSHA1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_dsaCommSHA1() {
        return constants$1522.szOID_OIWSEC_dsaCommSHA1$SEGMENT;
    }
    public static MemorySegment szOID_OIWSEC_sha1RSASign() {
        return constants$1522.szOID_OIWSEC_sha1RSASign$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR() {
        return constants$1522.szOID_OIWDIR$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_CRPT() {
        return constants$1522.szOID_OIWDIR_CRPT$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_HASH() {
        return constants$1523.szOID_OIWDIR_HASH$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_SIGN() {
        return constants$1523.szOID_OIWDIR_SIGN$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_md2() {
        return constants$1523.szOID_OIWDIR_md2$SEGMENT;
    }
    public static MemorySegment szOID_OIWDIR_md2RSA() {
        return constants$1523.szOID_OIWDIR_md2RSA$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC() {
        return constants$1523.szOID_INFOSEC$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsSignature() {
        return constants$1523.szOID_INFOSEC_sdnsSignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicSignature() {
        return constants$1524.szOID_INFOSEC_mosaicSignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsConfidentiality() {
        return constants$1524.szOID_INFOSEC_sdnsConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicConfidentiality() {
        return constants$1524.szOID_INFOSEC_mosaicConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsIntegrity() {
        return constants$1524.szOID_INFOSEC_sdnsIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicIntegrity() {
        return constants$1524.szOID_INFOSEC_mosaicIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsTokenProtection() {
        return constants$1524.szOID_INFOSEC_sdnsTokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicTokenProtection() {
        return constants$1525.szOID_INFOSEC_mosaicTokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsKeyManagement() {
        return constants$1525.szOID_INFOSEC_sdnsKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKeyManagement() {
        return constants$1525.szOID_INFOSEC_mosaicKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_sdnsKMandSig() {
        return constants$1525.szOID_INFOSEC_sdnsKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKMandSig() {
        return constants$1525.szOID_INFOSEC_mosaicKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteASignature() {
        return constants$1525.szOID_INFOSEC_SuiteASignature$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAConfidentiality() {
        return constants$1526.szOID_INFOSEC_SuiteAConfidentiality$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAIntegrity() {
        return constants$1526.szOID_INFOSEC_SuiteAIntegrity$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteATokenProtection() {
        return constants$1526.szOID_INFOSEC_SuiteATokenProtection$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAKeyManagement() {
        return constants$1526.szOID_INFOSEC_SuiteAKeyManagement$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_SuiteAKMandSig() {
        return constants$1526.szOID_INFOSEC_SuiteAKMandSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicUpdatedSig() {
        return constants$1526.szOID_INFOSEC_mosaicUpdatedSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicKMandUpdSig() {
        return constants$1527.szOID_INFOSEC_mosaicKMandUpdSig$SEGMENT;
    }
    public static MemorySegment szOID_INFOSEC_mosaicUpdatedInteg() {
        return constants$1527.szOID_INFOSEC_mosaicUpdatedInteg$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha256() {
        return constants$1527.szOID_NIST_sha256$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha384() {
        return constants$1527.szOID_NIST_sha384$SEGMENT;
    }
    public static MemorySegment szOID_NIST_sha512() {
        return constants$1527.szOID_NIST_sha512$SEGMENT;
    }
    public static MemorySegment szOID_COMMON_NAME() {
        return constants$1527.szOID_COMMON_NAME$SEGMENT;
    }
    public static MemorySegment szOID_SUR_NAME() {
        return constants$1528.szOID_SUR_NAME$SEGMENT;
    }
    public static MemorySegment szOID_DEVICE_SERIAL_NUMBER() {
        return constants$1528.szOID_DEVICE_SERIAL_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_COUNTRY_NAME() {
        return constants$1528.szOID_COUNTRY_NAME$SEGMENT;
    }
    public static MemorySegment szOID_LOCALITY_NAME() {
        return constants$1528.szOID_LOCALITY_NAME$SEGMENT;
    }
    public static MemorySegment szOID_STATE_OR_PROVINCE_NAME() {
        return constants$1528.szOID_STATE_OR_PROVINCE_NAME$SEGMENT;
    }
    public static MemorySegment szOID_STREET_ADDRESS() {
        return constants$1528.szOID_STREET_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_ORGANIZATION_NAME() {
        return constants$1529.szOID_ORGANIZATION_NAME$SEGMENT;
    }
    public static MemorySegment szOID_ORGANIZATIONAL_UNIT_NAME() {
        return constants$1529.szOID_ORGANIZATIONAL_UNIT_NAME$SEGMENT;
    }
    public static MemorySegment szOID_TITLE() {
        return constants$1529.szOID_TITLE$SEGMENT;
    }
    public static MemorySegment szOID_DESCRIPTION() {
        return constants$1529.szOID_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment szOID_SEARCH_GUIDE() {
        return constants$1529.szOID_SEARCH_GUIDE$SEGMENT;
    }
    public static MemorySegment szOID_BUSINESS_CATEGORY() {
        return constants$1529.szOID_BUSINESS_CATEGORY$SEGMENT;
    }
    public static MemorySegment szOID_POSTAL_ADDRESS() {
        return constants$1530.szOID_POSTAL_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_POSTAL_CODE() {
        return constants$1530.szOID_POSTAL_CODE$SEGMENT;
    }
    public static MemorySegment szOID_POST_OFFICE_BOX() {
        return constants$1530.szOID_POST_OFFICE_BOX$SEGMENT;
    }
    public static MemorySegment szOID_PHYSICAL_DELIVERY_OFFICE_NAME() {
        return constants$1530.szOID_PHYSICAL_DELIVERY_OFFICE_NAME$SEGMENT;
    }
    public static MemorySegment szOID_TELEPHONE_NUMBER() {
        return constants$1530.szOID_TELEPHONE_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_TELEX_NUMBER() {
        return constants$1530.szOID_TELEX_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_TELETEXT_TERMINAL_IDENTIFIER() {
        return constants$1531.szOID_TELETEXT_TERMINAL_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment szOID_FACSIMILE_TELEPHONE_NUMBER() {
        return constants$1531.szOID_FACSIMILE_TELEPHONE_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_X21_ADDRESS() {
        return constants$1531.szOID_X21_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_INTERNATIONAL_ISDN_NUMBER() {
        return constants$1531.szOID_INTERNATIONAL_ISDN_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_REGISTERED_ADDRESS() {
        return constants$1531.szOID_REGISTERED_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_DESTINATION_INDICATOR() {
        return constants$1531.szOID_DESTINATION_INDICATOR$SEGMENT;
    }
    public static MemorySegment szOID_PREFERRED_DELIVERY_METHOD() {
        return constants$1532.szOID_PREFERRED_DELIVERY_METHOD$SEGMENT;
    }
    public static MemorySegment szOID_PRESENTATION_ADDRESS() {
        return constants$1532.szOID_PRESENTATION_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_SUPPORTED_APPLICATION_CONTEXT() {
        return constants$1532.szOID_SUPPORTED_APPLICATION_CONTEXT$SEGMENT;
    }
    public static MemorySegment szOID_MEMBER() {
        return constants$1532.szOID_MEMBER$SEGMENT;
    }
    public static MemorySegment szOID_OWNER() {
        return constants$1532.szOID_OWNER$SEGMENT;
    }
    public static MemorySegment szOID_ROLE_OCCUPANT() {
        return constants$1532.szOID_ROLE_OCCUPANT$SEGMENT;
    }
    public static MemorySegment szOID_SEE_ALSO() {
        return constants$1533.szOID_SEE_ALSO$SEGMENT;
    }
    public static MemorySegment szOID_USER_PASSWORD() {
        return constants$1533.szOID_USER_PASSWORD$SEGMENT;
    }
    public static MemorySegment szOID_USER_CERTIFICATE() {
        return constants$1533.szOID_USER_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_CA_CERTIFICATE() {
        return constants$1533.szOID_CA_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_AUTHORITY_REVOCATION_LIST() {
        return constants$1533.szOID_AUTHORITY_REVOCATION_LIST$SEGMENT;
    }
    public static MemorySegment szOID_CERTIFICATE_REVOCATION_LIST() {
        return constants$1533.szOID_CERTIFICATE_REVOCATION_LIST$SEGMENT;
    }
    public static MemorySegment szOID_CROSS_CERTIFICATE_PAIR() {
        return constants$1534.szOID_CROSS_CERTIFICATE_PAIR$SEGMENT;
    }
    public static MemorySegment szOID_GIVEN_NAME() {
        return constants$1534.szOID_GIVEN_NAME$SEGMENT;
    }
    public static MemorySegment szOID_INITIALS() {
        return constants$1534.szOID_INITIALS$SEGMENT;
    }
    public static MemorySegment szOID_DN_QUALIFIER() {
        return constants$1534.szOID_DN_QUALIFIER$SEGMENT;
    }
    public static MemorySegment szOID_DOMAIN_COMPONENT() {
        return constants$1534.szOID_DOMAIN_COMPONENT$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_FRIENDLY_NAME_ATTR() {
        return constants$1534.szOID_PKCS_12_FRIENDLY_NAME_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_LOCAL_KEY_ID() {
        return constants$1535.szOID_PKCS_12_LOCAL_KEY_ID$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR() {
        return constants$1535.szOID_PKCS_12_KEY_PROVIDER_NAME_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_LOCAL_MACHINE_KEYSET() {
        return constants$1535.szOID_LOCAL_MACHINE_KEYSET$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_EXTENDED_ATTRIBUTES() {
        return constants$1535.szOID_PKCS_12_EXTENDED_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID() {
        return constants$1535.szOID_PKCS_12_PROTECTED_PASSWORD_SECRET_BAG_TYPE_ID$SEGMENT;
    }
    public static MemorySegment szOID_KEYID_RDN() {
        return constants$1535.szOID_KEYID_RDN$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_LOCALE() {
        return constants$1536.szOID_EV_RDN_LOCALE$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_STATE_OR_PROVINCE() {
        return constants$1536.szOID_EV_RDN_STATE_OR_PROVINCE$SEGMENT;
    }
    public static MemorySegment szOID_EV_RDN_COUNTRY() {
        return constants$1536.szOID_EV_RDN_COUNTRY$SEGMENT;
    }
    public static int CERT_RDN_FLAGS_MASK() {
        return (int)4278190080L;
    }
    public static int CERT_RDN_ENABLE_T61_UNICODE_FLAG() {
        return (int)2147483648L;
    }
    public static MemorySegment CERT_RSA_PUBLIC_KEY_OBJID() {
        return constants$1536.CERT_RSA_PUBLIC_KEY_OBJID$SEGMENT;
    }
    public static MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_SIGN() {
        return constants$1536.CERT_DEFAULT_OID_PUBLIC_KEY_SIGN$SEGMENT;
    }
    public static MemorySegment CERT_DEFAULT_OID_PUBLIC_KEY_XCHG() {
        return constants$1536.CERT_DEFAULT_OID_PUBLIC_KEY_XCHG$SEGMENT;
    }
    public static int CMSG_ENCODING_TYPE_MASK() {
        return (int)4294901760L;
    }
    public static int CRYPT_FORMAT_SEMICOLON() {
        return (int)256L;
    }
    public static int CRYPT_FORMAT_CRLF() {
        return (int)512L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_ENABLE_T61_UNICODE_FLAG() {
        return (int)2147483648L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_ENABLE_UTF8_UNICODE_FLAG() {
        return (int)536870912L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_FORCE_UTF8_UNICODE_FLAG() {
        return (int)268435456L;
    }
    public static int CRYPT_UNICODE_NAME_ENCODE_DISABLE_CHECK_TYPE_FLAG() {
        return (int)1073741824L;
    }
    public static int CRYPT_ENCODE_ENABLE_IA5CONVERSION_FLAG() {
        return (int)393216L;
    }
    public static int CRYPT_UNICODE_NAME_DECODE_DISABLE_IE4_UTF8_FLAG() {
        return (int)16777216L;
    }
    public static int CRYPT_DECODE_ENABLE_IA5CONVERSION_FLAG() {
        return (int)100663296L;
    }
    public static MemoryAddress X509_CERT() {
        return constants$1537.X509_CERT$ADDR;
    }
    public static MemoryAddress X509_CERT_TO_BE_SIGNED() {
        return constants$1537.X509_CERT_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_CERT_CRL_TO_BE_SIGNED() {
        return constants$1537.X509_CERT_CRL_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_CERT_REQUEST_TO_BE_SIGNED() {
        return constants$1537.X509_CERT_REQUEST_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress X509_EXTENSIONS() {
        return constants$1537.X509_EXTENSIONS$ADDR;
    }
    public static MemoryAddress X509_NAME_VALUE() {
        return constants$1537.X509_NAME_VALUE$ADDR;
    }
    public static MemoryAddress X509_NAME() {
        return constants$1538.X509_NAME$ADDR;
    }
    public static MemoryAddress X509_PUBLIC_KEY_INFO() {
        return constants$1538.X509_PUBLIC_KEY_INFO$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_KEY_ID() {
        return constants$1538.X509_AUTHORITY_KEY_ID$ADDR;
    }
    public static MemoryAddress X509_KEY_ATTRIBUTES() {
        return constants$1538.X509_KEY_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress X509_KEY_USAGE_RESTRICTION() {
        return constants$1538.X509_KEY_USAGE_RESTRICTION$ADDR;
    }
    public static MemoryAddress X509_ALTERNATE_NAME() {
        return constants$1538.X509_ALTERNATE_NAME$ADDR;
    }
    public static MemoryAddress X509_BASIC_CONSTRAINTS() {
        return constants$1539.X509_BASIC_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_KEY_USAGE() {
        return constants$1539.X509_KEY_USAGE$ADDR;
    }
    public static MemoryAddress X509_BASIC_CONSTRAINTS2() {
        return constants$1539.X509_BASIC_CONSTRAINTS2$ADDR;
    }
    public static MemoryAddress X509_CERT_POLICIES() {
        return constants$1539.X509_CERT_POLICIES$ADDR;
    }
    public static MemoryAddress PKCS_UTC_TIME() {
        return constants$1539.PKCS_UTC_TIME$ADDR;
    }
    public static MemoryAddress PKCS_TIME_REQUEST() {
        return constants$1539.PKCS_TIME_REQUEST$ADDR;
    }
    public static MemoryAddress RSA_CSP_PUBLICKEYBLOB() {
        return constants$1540.RSA_CSP_PUBLICKEYBLOB$ADDR;
    }
    public static MemoryAddress X509_UNICODE_NAME() {
        return constants$1540.X509_UNICODE_NAME$ADDR;
    }
    public static MemoryAddress X509_KEYGEN_REQUEST_TO_BE_SIGNED() {
        return constants$1540.X509_KEYGEN_REQUEST_TO_BE_SIGNED$ADDR;
    }
    public static MemoryAddress PKCS_ATTRIBUTE() {
        return constants$1540.PKCS_ATTRIBUTE$ADDR;
    }
    public static MemoryAddress PKCS_CONTENT_INFO_SEQUENCE_OF_ANY() {
        return constants$1540.PKCS_CONTENT_INFO_SEQUENCE_OF_ANY$ADDR;
    }
    public static MemoryAddress X509_UNICODE_NAME_VALUE() {
        return constants$1540.X509_UNICODE_NAME_VALUE$ADDR;
    }
    public static MemoryAddress X509_ANY_STRING() {
        return constants$1541.X509_ANY_STRING$ADDR;
    }
    public static MemoryAddress X509_UNICODE_ANY_STRING() {
        return constants$1541.X509_UNICODE_ANY_STRING$ADDR;
    }
    public static MemoryAddress X509_OCTET_STRING() {
        return constants$1541.X509_OCTET_STRING$ADDR;
    }
    public static MemoryAddress X509_BITS() {
        return constants$1541.X509_BITS$ADDR;
    }
    public static MemoryAddress X509_INTEGER() {
        return constants$1541.X509_INTEGER$ADDR;
    }
    public static MemoryAddress X509_MULTI_BYTE_INTEGER() {
        return constants$1541.X509_MULTI_BYTE_INTEGER$ADDR;
    }
    public static MemoryAddress X509_ENUMERATED() {
        return constants$1542.X509_ENUMERATED$ADDR;
    }
    public static MemoryAddress X509_CHOICE_OF_TIME() {
        return constants$1542.X509_CHOICE_OF_TIME$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_KEY_ID2() {
        return constants$1542.X509_AUTHORITY_KEY_ID2$ADDR;
    }
    public static MemoryAddress X509_AUTHORITY_INFO_ACCESS() {
        return constants$1542.X509_AUTHORITY_INFO_ACCESS$ADDR;
    }
    public static MemoryAddress X509_SUBJECT_INFO_ACCESS() {
        return constants$1542.X509_SUBJECT_INFO_ACCESS$ADDR;
    }
    public static MemoryAddress X509_CRL_REASON_CODE() {
        return constants$1542.X509_CRL_REASON_CODE$ADDR;
    }
    public static MemoryAddress PKCS_CONTENT_INFO() {
        return constants$1543.PKCS_CONTENT_INFO$ADDR;
    }
    public static MemoryAddress X509_SEQUENCE_OF_ANY() {
        return constants$1543.X509_SEQUENCE_OF_ANY$ADDR;
    }
    public static MemoryAddress X509_CRL_DIST_POINTS() {
        return constants$1543.X509_CRL_DIST_POINTS$ADDR;
    }
    public static MemoryAddress X509_ENHANCED_KEY_USAGE() {
        return constants$1543.X509_ENHANCED_KEY_USAGE$ADDR;
    }
    public static MemoryAddress PKCS_CTL() {
        return constants$1543.PKCS_CTL$ADDR;
    }
    public static MemoryAddress X509_MULTI_BYTE_UINT() {
        return constants$1543.X509_MULTI_BYTE_UINT$ADDR;
    }
    public static MemoryAddress X509_DSS_PUBLICKEY() {
        return constants$1544.X509_DSS_PUBLICKEY$ADDR;
    }
    public static MemoryAddress X509_DSS_PARAMETERS() {
        return constants$1544.X509_DSS_PARAMETERS$ADDR;
    }
    public static MemoryAddress X509_DSS_SIGNATURE() {
        return constants$1544.X509_DSS_SIGNATURE$ADDR;
    }
    public static MemoryAddress PKCS_RC2_CBC_PARAMETERS() {
        return constants$1544.PKCS_RC2_CBC_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_SMIME_CAPABILITIES() {
        return constants$1544.PKCS_SMIME_CAPABILITIES$ADDR;
    }
    public static MemoryAddress X509_QC_STATEMENTS_EXT() {
        return constants$1544.X509_QC_STATEMENTS_EXT$ADDR;
    }
    public static MemoryAddress PKCS_RSA_PRIVATE_KEY() {
        return constants$1545.PKCS_RSA_PRIVATE_KEY$ADDR;
    }
    public static MemoryAddress PKCS_PRIVATE_KEY_INFO() {
        return constants$1545.PKCS_PRIVATE_KEY_INFO$ADDR;
    }
    public static MemoryAddress PKCS_ENCRYPTED_PRIVATE_KEY_INFO() {
        return constants$1545.PKCS_ENCRYPTED_PRIVATE_KEY_INFO$ADDR;
    }
    public static MemoryAddress X509_PKIX_POLICY_QUALIFIER_USERNOTICE() {
        return constants$1545.X509_PKIX_POLICY_QUALIFIER_USERNOTICE$ADDR;
    }
    public static MemoryAddress X509_DH_PUBLICKEY() {
        return constants$1545.X509_DH_PUBLICKEY$ADDR;
    }
    public static MemoryAddress X509_DH_PARAMETERS() {
        return constants$1545.X509_DH_PARAMETERS$ADDR;
    }
    public static MemoryAddress X509_ECC_SIGNATURE() {
        return constants$1546.X509_ECC_SIGNATURE$ADDR;
    }
    public static MemoryAddress PKCS_ATTRIBUTES() {
        return constants$1546.PKCS_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress PKCS_SORTED_CTL() {
        return constants$1546.PKCS_SORTED_CTL$ADDR;
    }
    public static MemoryAddress X942_DH_PARAMETERS() {
        return constants$1546.X942_DH_PARAMETERS$ADDR;
    }
    public static MemoryAddress X509_BITS_WITHOUT_TRAILING_ZEROES() {
        return constants$1546.X509_BITS_WITHOUT_TRAILING_ZEROES$ADDR;
    }
    public static MemoryAddress X942_OTHER_INFO() {
        return constants$1546.X942_OTHER_INFO$ADDR;
    }
    public static MemoryAddress X509_CERT_PAIR() {
        return constants$1547.X509_CERT_PAIR$ADDR;
    }
    public static MemoryAddress X509_ISSUING_DIST_POINT() {
        return constants$1547.X509_ISSUING_DIST_POINT$ADDR;
    }
    public static MemoryAddress X509_NAME_CONSTRAINTS() {
        return constants$1547.X509_NAME_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_POLICY_MAPPINGS() {
        return constants$1547.X509_POLICY_MAPPINGS$ADDR;
    }
    public static MemoryAddress X509_POLICY_CONSTRAINTS() {
        return constants$1547.X509_POLICY_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress X509_CROSS_CERT_DIST_POINTS() {
        return constants$1547.X509_CROSS_CERT_DIST_POINTS$ADDR;
    }
    public static MemoryAddress CMC_DATA() {
        return constants$1548.CMC_DATA$ADDR;
    }
    public static MemoryAddress CMC_RESPONSE() {
        return constants$1548.CMC_RESPONSE$ADDR;
    }
    public static MemoryAddress CMC_STATUS() {
        return constants$1548.CMC_STATUS$ADDR;
    }
    public static MemoryAddress CMC_ADD_EXTENSIONS() {
        return constants$1548.CMC_ADD_EXTENSIONS$ADDR;
    }
    public static MemoryAddress CMC_ADD_ATTRIBUTES() {
        return constants$1548.CMC_ADD_ATTRIBUTES$ADDR;
    }
    public static MemoryAddress X509_CERTIFICATE_TEMPLATE() {
        return constants$1548.X509_CERTIFICATE_TEMPLATE$ADDR;
    }
    public static MemoryAddress OCSP_SIGNED_REQUEST() {
        return constants$1549.OCSP_SIGNED_REQUEST$ADDR;
    }
    public static MemoryAddress OCSP_REQUEST() {
        return constants$1549.OCSP_REQUEST$ADDR;
    }
    public static MemoryAddress OCSP_RESPONSE() {
        return constants$1549.OCSP_RESPONSE$ADDR;
    }
    public static MemoryAddress OCSP_BASIC_SIGNED_RESPONSE() {
        return constants$1549.OCSP_BASIC_SIGNED_RESPONSE$ADDR;
    }
    public static MemoryAddress OCSP_BASIC_RESPONSE() {
        return constants$1549.OCSP_BASIC_RESPONSE$ADDR;
    }
    public static MemoryAddress X509_LOGOTYPE_EXT() {
        return constants$1549.X509_LOGOTYPE_EXT$ADDR;
    }
    public static MemoryAddress X509_BIOMETRIC_EXT() {
        return constants$1550.X509_BIOMETRIC_EXT$ADDR;
    }
    public static MemoryAddress CNG_RSA_PUBLIC_KEY_BLOB() {
        return constants$1550.CNG_RSA_PUBLIC_KEY_BLOB$ADDR;
    }
    public static MemoryAddress X509_OBJECT_IDENTIFIER() {
        return constants$1550.X509_OBJECT_IDENTIFIER$ADDR;
    }
    public static MemoryAddress X509_ALGORITHM_IDENTIFIER() {
        return constants$1550.X509_ALGORITHM_IDENTIFIER$ADDR;
    }
    public static MemoryAddress PKCS_RSA_SSA_PSS_PARAMETERS() {
        return constants$1550.PKCS_RSA_SSA_PSS_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS_RSAES_OAEP_PARAMETERS() {
        return constants$1550.PKCS_RSAES_OAEP_PARAMETERS$ADDR;
    }
    public static MemoryAddress ECC_CMS_SHARED_INFO() {
        return constants$1551.ECC_CMS_SHARED_INFO$ADDR;
    }
    public static MemoryAddress TIMESTAMP_REQUEST() {
        return constants$1551.TIMESTAMP_REQUEST$ADDR;
    }
    public static MemoryAddress TIMESTAMP_RESPONSE() {
        return constants$1551.TIMESTAMP_RESPONSE$ADDR;
    }
    public static MemoryAddress TIMESTAMP_INFO() {
        return constants$1551.TIMESTAMP_INFO$ADDR;
    }
    public static MemoryAddress X509_CERT_BUNDLE() {
        return constants$1551.X509_CERT_BUNDLE$ADDR;
    }
    public static MemoryAddress X509_ECC_PRIVATE_KEY() {
        return constants$1551.X509_ECC_PRIVATE_KEY$ADDR;
    }
    public static MemoryAddress CNG_RSA_PRIVATE_KEY_BLOB() {
        return constants$1552.CNG_RSA_PRIVATE_KEY_BLOB$ADDR;
    }
    public static MemoryAddress X509_SUBJECT_DIR_ATTRS() {
        return constants$1552.X509_SUBJECT_DIR_ATTRS$ADDR;
    }
    public static MemoryAddress X509_ECC_PARAMETERS() {
        return constants$1552.X509_ECC_PARAMETERS$ADDR;
    }
    public static MemoryAddress PKCS7_SIGNER_INFO() {
        return constants$1552.PKCS7_SIGNER_INFO$ADDR;
    }
    public static MemoryAddress CMS_SIGNER_INFO() {
        return constants$1552.CMS_SIGNER_INFO$ADDR;
    }
    public static MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER() {
        return constants$1552.szOID_AUTHORITY_KEY_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment szOID_KEY_ATTRIBUTES() {
        return constants$1553.szOID_KEY_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment szOID_CERT_POLICIES_95() {
        return constants$1553.szOID_CERT_POLICIES_95$SEGMENT;
    }
    public static MemorySegment szOID_KEY_USAGE_RESTRICTION() {
        return constants$1553.szOID_KEY_USAGE_RESTRICTION$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_ALT_NAME() {
        return constants$1553.szOID_SUBJECT_ALT_NAME$SEGMENT;
    }
    public static MemorySegment szOID_ISSUER_ALT_NAME() {
        return constants$1553.szOID_ISSUER_ALT_NAME$SEGMENT;
    }
    public static MemorySegment szOID_BASIC_CONSTRAINTS() {
        return constants$1553.szOID_BASIC_CONSTRAINTS$SEGMENT;
    }
    public static MemorySegment szOID_KEY_USAGE() {
        return constants$1554.szOID_KEY_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_PRIVATEKEY_USAGE_PERIOD() {
        return constants$1554.szOID_PRIVATEKEY_USAGE_PERIOD$SEGMENT;
    }
    public static MemorySegment szOID_BASIC_CONSTRAINTS2() {
        return constants$1554.szOID_BASIC_CONSTRAINTS2$SEGMENT;
    }
    public static MemorySegment szOID_CERT_POLICIES() {
        return constants$1554.szOID_CERT_POLICIES$SEGMENT;
    }
    public static MemorySegment szOID_ANY_CERT_POLICY() {
        return constants$1554.szOID_ANY_CERT_POLICY$SEGMENT;
    }
    public static MemorySegment szOID_INHIBIT_ANY_POLICY() {
        return constants$1554.szOID_INHIBIT_ANY_POLICY$SEGMENT;
    }
    public static MemorySegment szOID_AUTHORITY_KEY_IDENTIFIER2() {
        return constants$1555.szOID_AUTHORITY_KEY_IDENTIFIER2$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_KEY_IDENTIFIER() {
        return constants$1555.szOID_SUBJECT_KEY_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_ALT_NAME2() {
        return constants$1555.szOID_SUBJECT_ALT_NAME2$SEGMENT;
    }
    public static MemorySegment szOID_ISSUER_ALT_NAME2() {
        return constants$1555.szOID_ISSUER_ALT_NAME2$SEGMENT;
    }
    public static MemorySegment szOID_CRL_REASON_CODE() {
        return constants$1555.szOID_CRL_REASON_CODE$SEGMENT;
    }
    public static MemorySegment szOID_REASON_CODE_HOLD() {
        return constants$1555.szOID_REASON_CODE_HOLD$SEGMENT;
    }
    public static MemorySegment szOID_CRL_DIST_POINTS() {
        return constants$1556.szOID_CRL_DIST_POINTS$SEGMENT;
    }
    public static MemorySegment szOID_ENHANCED_KEY_USAGE() {
        return constants$1556.szOID_ENHANCED_KEY_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_ANY_ENHANCED_KEY_USAGE() {
        return constants$1556.szOID_ANY_ENHANCED_KEY_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_CRL_NUMBER() {
        return constants$1556.szOID_CRL_NUMBER$SEGMENT;
    }
    public static MemorySegment szOID_DELTA_CRL_INDICATOR() {
        return constants$1556.szOID_DELTA_CRL_INDICATOR$SEGMENT;
    }
    public static MemorySegment szOID_ISSUING_DIST_POINT() {
        return constants$1556.szOID_ISSUING_DIST_POINT$SEGMENT;
    }
    public static MemorySegment szOID_FRESHEST_CRL() {
        return constants$1557.szOID_FRESHEST_CRL$SEGMENT;
    }
    public static MemorySegment szOID_NAME_CONSTRAINTS() {
        return constants$1557.szOID_NAME_CONSTRAINTS$SEGMENT;
    }
    public static MemorySegment szOID_POLICY_MAPPINGS() {
        return constants$1557.szOID_POLICY_MAPPINGS$SEGMENT;
    }
    public static MemorySegment szOID_LEGACY_POLICY_MAPPINGS() {
        return constants$1557.szOID_LEGACY_POLICY_MAPPINGS$SEGMENT;
    }
    public static MemorySegment szOID_POLICY_CONSTRAINTS() {
        return constants$1557.szOID_POLICY_CONSTRAINTS$SEGMENT;
    }
    public static MemorySegment szOID_RENEWAL_CERTIFICATE() {
        return constants$1557.szOID_RENEWAL_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLLMENT_NAME_VALUE_PAIR() {
        return constants$1558.szOID_ENROLLMENT_NAME_VALUE_PAIR$SEGMENT;
    }
    public static MemorySegment szOID_ENROLLMENT_CSP_PROVIDER() {
        return constants$1558.szOID_ENROLLMENT_CSP_PROVIDER$SEGMENT;
    }
    public static MemorySegment szOID_OS_VERSION() {
        return constants$1558.szOID_OS_VERSION$SEGMENT;
    }
    public static MemorySegment szOID_ENROLLMENT_AGENT() {
        return constants$1558.szOID_ENROLLMENT_AGENT$SEGMENT;
    }
    public static MemorySegment szOID_PKIX() {
        return constants$1558.szOID_PKIX$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_PE() {
        return constants$1558.szOID_PKIX_PE$SEGMENT;
    }
    public static MemorySegment szOID_AUTHORITY_INFO_ACCESS() {
        return constants$1559.szOID_AUTHORITY_INFO_ACCESS$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_INFO_ACCESS() {
        return constants$1559.szOID_SUBJECT_INFO_ACCESS$SEGMENT;
    }
    public static MemorySegment szOID_BIOMETRIC_EXT() {
        return constants$1559.szOID_BIOMETRIC_EXT$SEGMENT;
    }
    public static MemorySegment szOID_QC_STATEMENTS_EXT() {
        return constants$1559.szOID_QC_STATEMENTS_EXT$SEGMENT;
    }
    public static MemorySegment szOID_LOGOTYPE_EXT() {
        return constants$1559.szOID_LOGOTYPE_EXT$SEGMENT;
    }
    public static MemorySegment szOID_TLS_FEATURES_EXT() {
        return constants$1559.szOID_TLS_FEATURES_EXT$SEGMENT;
    }
    public static MemorySegment szOID_CERT_EXTENSIONS() {
        return constants$1560.szOID_CERT_EXTENSIONS$SEGMENT;
    }
    public static MemorySegment szOID_NEXT_UPDATE_LOCATION() {
        return constants$1560.szOID_NEXT_UPDATE_LOCATION$SEGMENT;
    }
    public static MemorySegment szOID_REMOVE_CERTIFICATE() {
        return constants$1560.szOID_REMOVE_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_CROSS_CERT_DIST_POINTS() {
        return constants$1560.szOID_CROSS_CERT_DIST_POINTS$SEGMENT;
    }
    public static MemorySegment szOID_CTL() {
        return constants$1560.szOID_CTL$SEGMENT;
    }
    public static MemorySegment szOID_SORTED_CTL() {
        return constants$1560.szOID_SORTED_CTL$SEGMENT;
    }
    public static MemorySegment szOID_SERIALIZED() {
        return constants$1561.szOID_SERIALIZED$SEGMENT;
    }
    public static MemorySegment szOID_NT_PRINCIPAL_NAME() {
        return constants$1561.szOID_NT_PRINCIPAL_NAME$SEGMENT;
    }
    public static MemorySegment szOID_INTERNATIONALIZED_EMAIL_ADDRESS() {
        return constants$1561.szOID_INTERNATIONALIZED_EMAIL_ADDRESS$SEGMENT;
    }
    public static MemorySegment szOID_PRODUCT_UPDATE() {
        return constants$1561.szOID_PRODUCT_UPDATE$SEGMENT;
    }
    public static MemorySegment szOID_ANY_APPLICATION_POLICY() {
        return constants$1561.szOID_ANY_APPLICATION_POLICY$SEGMENT;
    }
    public static MemorySegment szOID_AUTO_ENROLL_CTL_USAGE() {
        return constants$1561.szOID_AUTO_ENROLL_CTL_USAGE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_CERTTYPE_EXTENSION() {
        return constants$1562.szOID_ENROLL_CERTTYPE_EXTENSION$SEGMENT;
    }
    public static MemorySegment szOID_CERT_MANIFOLD() {
        return constants$1562.szOID_CERT_MANIFOLD$SEGMENT;
    }
    public static MemorySegment szOID_CERTSRV_CA_VERSION() {
        return constants$1562.szOID_CERTSRV_CA_VERSION$SEGMENT;
    }
    public static MemorySegment szOID_CERTSRV_PREVIOUS_CERT_HASH() {
        return constants$1562.szOID_CERTSRV_PREVIOUS_CERT_HASH$SEGMENT;
    }
    public static MemorySegment szOID_CRL_VIRTUAL_BASE() {
        return constants$1562.szOID_CRL_VIRTUAL_BASE$SEGMENT;
    }
    public static MemorySegment szOID_CRL_NEXT_PUBLISH() {
        return constants$1562.szOID_CRL_NEXT_PUBLISH$SEGMENT;
    }
    public static MemorySegment szOID_KP_CA_EXCHANGE() {
        return constants$1563.szOID_KP_CA_EXCHANGE$SEGMENT;
    }
    public static MemorySegment szOID_KP_KEY_RECOVERY_AGENT() {
        return constants$1563.szOID_KP_KEY_RECOVERY_AGENT$SEGMENT;
    }
    public static MemorySegment szOID_CERTIFICATE_TEMPLATE() {
        return constants$1563.szOID_CERTIFICATE_TEMPLATE$SEGMENT;
    }
    public static MemorySegment szOID_ENTERPRISE_OID_ROOT() {
        return constants$1563.szOID_ENTERPRISE_OID_ROOT$SEGMENT;
    }
    public static MemorySegment szOID_RDN_DUMMY_SIGNER() {
        return constants$1563.szOID_RDN_DUMMY_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_APPLICATION_CERT_POLICIES() {
        return constants$1563.szOID_APPLICATION_CERT_POLICIES$SEGMENT;
    }
    public static MemorySegment szOID_APPLICATION_POLICY_MAPPINGS() {
        return constants$1564.szOID_APPLICATION_POLICY_MAPPINGS$SEGMENT;
    }
    public static MemorySegment szOID_APPLICATION_POLICY_CONSTRAINTS() {
        return constants$1564.szOID_APPLICATION_POLICY_CONSTRAINTS$SEGMENT;
    }
    public static MemorySegment szOID_ARCHIVED_KEY_ATTR() {
        return constants$1564.szOID_ARCHIVED_KEY_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_CRL_SELF_CDP() {
        return constants$1564.szOID_CRL_SELF_CDP$SEGMENT;
    }
    public static MemorySegment szOID_REQUIRE_CERT_CHAIN_POLICY() {
        return constants$1564.szOID_REQUIRE_CERT_CHAIN_POLICY$SEGMENT;
    }
    public static MemorySegment szOID_ARCHIVED_KEY_CERT_HASH() {
        return constants$1564.szOID_ARCHIVED_KEY_CERT_HASH$SEGMENT;
    }
    public static MemorySegment szOID_ISSUED_CERT_HASH() {
        return constants$1565.szOID_ISSUED_CERT_HASH$SEGMENT;
    }
    public static MemorySegment szOID_DS_EMAIL_REPLICATION() {
        return constants$1565.szOID_DS_EMAIL_REPLICATION$SEGMENT;
    }
    public static MemorySegment szOID_REQUEST_CLIENT_INFO() {
        return constants$1565.szOID_REQUEST_CLIENT_INFO$SEGMENT;
    }
    public static MemorySegment szOID_ENCRYPTED_KEY_HASH() {
        return constants$1565.szOID_ENCRYPTED_KEY_HASH$SEGMENT;
    }
    public static MemorySegment szOID_CERTSRV_CROSSCA_VERSION() {
        return constants$1565.szOID_CERTSRV_CROSSCA_VERSION$SEGMENT;
    }
    public static MemorySegment szOID_NTDS_REPLICATION() {
        return constants$1565.szOID_NTDS_REPLICATION$SEGMENT;
    }
    public static MemorySegment szOID_SUBJECT_DIR_ATTRS() {
        return constants$1566.szOID_SUBJECT_DIR_ATTRS$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP() {
        return constants$1566.szOID_PKIX_KP$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_SERVER_AUTH() {
        return constants$1566.szOID_PKIX_KP_SERVER_AUTH$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_CLIENT_AUTH() {
        return constants$1566.szOID_PKIX_KP_CLIENT_AUTH$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_CODE_SIGNING() {
        return constants$1566.szOID_PKIX_KP_CODE_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_EMAIL_PROTECTION() {
        return constants$1566.szOID_PKIX_KP_EMAIL_PROTECTION$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_IPSEC_END_SYSTEM() {
        return constants$1567.szOID_PKIX_KP_IPSEC_END_SYSTEM$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_IPSEC_TUNNEL() {
        return constants$1567.szOID_PKIX_KP_IPSEC_TUNNEL$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_IPSEC_USER() {
        return constants$1567.szOID_PKIX_KP_IPSEC_USER$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_TIMESTAMP_SIGNING() {
        return constants$1567.szOID_PKIX_KP_TIMESTAMP_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_KP_OCSP_SIGNING() {
        return constants$1567.szOID_PKIX_KP_OCSP_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_OCSP_NONCE() {
        return constants$1567.szOID_PKIX_OCSP_NONCE$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_OCSP_NOCHECK() {
        return constants$1568.szOID_PKIX_OCSP_NOCHECK$SEGMENT;
    }
    public static MemorySegment szOID_IPSEC_KP_IKE_INTERMEDIATE() {
        return constants$1568.szOID_IPSEC_KP_IKE_INTERMEDIATE$SEGMENT;
    }
    public static MemorySegment szOID_PKINIT_KP_KDC() {
        return constants$1568.szOID_PKINIT_KP_KDC$SEGMENT;
    }
    public static MemorySegment szOID_KP_CTL_USAGE_SIGNING() {
        return constants$1568.szOID_KP_CTL_USAGE_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_KP_TIME_STAMP_SIGNING() {
        return constants$1568.szOID_KP_TIME_STAMP_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_SERVER_GATED_CRYPTO() {
        return constants$1568.szOID_SERVER_GATED_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOID_SGC_NETSCAPE() {
        return constants$1569.szOID_SGC_NETSCAPE$SEGMENT;
    }
    public static MemorySegment szOID_KP_EFS() {
        return constants$1569.szOID_KP_EFS$SEGMENT;
    }
    public static MemorySegment szOID_EFS_RECOVERY() {
        return constants$1569.szOID_EFS_RECOVERY$SEGMENT;
    }
    public static MemorySegment szOID_WHQL_CRYPTO() {
        return constants$1569.szOID_WHQL_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOID_ATTEST_WHQL_CRYPTO() {
        return constants$1569.szOID_ATTEST_WHQL_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOID_NT5_CRYPTO() {
        return constants$1569.szOID_NT5_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOID_OEM_WHQL_CRYPTO() {
        return constants$1570.szOID_OEM_WHQL_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOID_EMBEDDED_NT_CRYPTO() {
        return constants$1570.szOID_EMBEDDED_NT_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOID_ROOT_LIST_SIGNER() {
        return constants$1570.szOID_ROOT_LIST_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_KP_QUALIFIED_SUBORDINATION() {
        return constants$1570.szOID_KP_QUALIFIED_SUBORDINATION$SEGMENT;
    }
    public static MemorySegment szOID_KP_KEY_RECOVERY() {
        return constants$1570.szOID_KP_KEY_RECOVERY$SEGMENT;
    }
    public static MemorySegment szOID_KP_DOCUMENT_SIGNING() {
        return constants$1570.szOID_KP_DOCUMENT_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_KP_LIFETIME_SIGNING() {
        return constants$1571.szOID_KP_LIFETIME_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_KP_MOBILE_DEVICE_SOFTWARE() {
        return constants$1571.szOID_KP_MOBILE_DEVICE_SOFTWARE$SEGMENT;
    }
    public static MemorySegment szOID_KP_SMART_DISPLAY() {
        return constants$1571.szOID_KP_SMART_DISPLAY$SEGMENT;
    }
    public static MemorySegment szOID_KP_CSP_SIGNATURE() {
        return constants$1571.szOID_KP_CSP_SIGNATURE$SEGMENT;
    }
    public static MemorySegment szOID_KP_FLIGHT_SIGNING() {
        return constants$1571.szOID_KP_FLIGHT_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_PLATFORM_MANIFEST_BINARY_ID() {
        return constants$1571.szOID_PLATFORM_MANIFEST_BINARY_ID$SEGMENT;
    }
    public static MemorySegment szOID_DRM() {
        return constants$1572.szOID_DRM$SEGMENT;
    }
    public static MemorySegment szOID_DRM_INDIVIDUALIZATION() {
        return constants$1572.szOID_DRM_INDIVIDUALIZATION$SEGMENT;
    }
    public static MemorySegment szOID_LICENSES() {
        return constants$1572.szOID_LICENSES$SEGMENT;
    }
    public static MemorySegment szOID_LICENSE_SERVER() {
        return constants$1572.szOID_LICENSE_SERVER$SEGMENT;
    }
    public static MemorySegment szOID_KP_SMARTCARD_LOGON() {
        return constants$1572.szOID_KP_SMARTCARD_LOGON$SEGMENT;
    }
    public static MemorySegment szOID_KP_KERNEL_MODE_CODE_SIGNING() {
        return constants$1572.szOID_KP_KERNEL_MODE_CODE_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING() {
        return constants$1573.szOID_KP_KERNEL_MODE_TRUSTED_BOOT_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_REVOKED_LIST_SIGNER() {
        return constants$1573.szOID_REVOKED_LIST_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_WINDOWS_KITS_SIGNER() {
        return constants$1573.szOID_WINDOWS_KITS_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_WINDOWS_RT_SIGNER() {
        return constants$1573.szOID_WINDOWS_RT_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_PROTECTED_PROCESS_LIGHT_SIGNER() {
        return constants$1573.szOID_PROTECTED_PROCESS_LIGHT_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_WINDOWS_TCB_SIGNER() {
        return constants$1573.szOID_WINDOWS_TCB_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_PROTECTED_PROCESS_SIGNER() {
        return constants$1574.szOID_PROTECTED_PROCESS_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER() {
        return constants$1574.szOID_WINDOWS_THIRD_PARTY_COMPONENT_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER() {
        return constants$1574.szOID_WINDOWS_SOFTWARE_EXTENSION_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_DISALLOWED_LIST() {
        return constants$1574.szOID_DISALLOWED_LIST$SEGMENT;
    }
    public static MemorySegment szOID_PIN_RULES_SIGNER() {
        return constants$1574.szOID_PIN_RULES_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_PIN_RULES_CTL() {
        return constants$1574.szOID_PIN_RULES_CTL$SEGMENT;
    }
    public static MemorySegment szOID_PIN_RULES_EXT() {
        return constants$1575.szOID_PIN_RULES_EXT$SEGMENT;
    }
    public static MemorySegment szOID_PIN_RULES_DOMAIN_NAME() {
        return constants$1575.szOID_PIN_RULES_DOMAIN_NAME$SEGMENT;
    }
    public static MemorySegment szOID_PIN_RULES_LOG_END_DATE_EXT() {
        return constants$1575.szOID_PIN_RULES_LOG_END_DATE_EXT$SEGMENT;
    }
    public static MemorySegment szOID_IUM_SIGNING() {
        return constants$1575.szOID_IUM_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_EV_WHQL_CRYPTO() {
        return constants$1575.szOID_EV_WHQL_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOID_BIOMETRIC_SIGNING() {
        return constants$1575.szOID_BIOMETRIC_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_ENCLAVE_SIGNING() {
        return constants$1576.szOID_ENCLAVE_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_SYNC_ROOT_CTL_EXT() {
        return constants$1576.szOID_SYNC_ROOT_CTL_EXT$SEGMENT;
    }
    public static MemorySegment szOID_HPKP_DOMAIN_NAME_CTL() {
        return constants$1576.szOID_HPKP_DOMAIN_NAME_CTL$SEGMENT;
    }
    public static MemorySegment szOID_HPKP_HEADER_VALUE_CTL() {
        return constants$1576.szOID_HPKP_HEADER_VALUE_CTL$SEGMENT;
    }
    public static MemorySegment szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING() {
        return constants$1576.szOID_KP_KERNEL_MODE_HAL_EXTENSION_SIGNING$SEGMENT;
    }
    public static MemorySegment szOID_WINDOWS_STORE_SIGNER() {
        return constants$1576.szOID_WINDOWS_STORE_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_DYNAMIC_CODE_GEN_SIGNER() {
        return constants$1577.szOID_DYNAMIC_CODE_GEN_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_MICROSOFT_PUBLISHER_SIGNER() {
        return constants$1577.szOID_MICROSOFT_PUBLISHER_SIGNER$SEGMENT;
    }
    public static MemorySegment szOID_YESNO_TRUST_ATTR() {
        return constants$1577.szOID_YESNO_TRUST_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_SITE_PIN_RULES_INDEX_ATTR() {
        return constants$1577.szOID_SITE_PIN_RULES_INDEX_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_SITE_PIN_RULES_FLAGS_ATTR() {
        return constants$1577.szOID_SITE_PIN_RULES_FLAGS_ATTR$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_POLICY_QUALIFIER_CPS() {
        return constants$1577.szOID_PKIX_POLICY_QUALIFIER_CPS$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_POLICY_QUALIFIER_USERNOTICE() {
        return constants$1578.szOID_PKIX_POLICY_QUALIFIER_USERNOTICE$SEGMENT;
    }
    public static MemorySegment szOID_ROOT_PROGRAM_FLAGS() {
        return constants$1578.szOID_ROOT_PROGRAM_FLAGS$SEGMENT;
    }
    public static MemorySegment szOID_CERT_POLICIES_95_QUALIFIER1() {
        return constants$1578.szOID_CERT_POLICIES_95_QUALIFIER1$SEGMENT;
    }
    public static MemorySegment szOID_RDN_TPM_MANUFACTURER() {
        return constants$1578.szOID_RDN_TPM_MANUFACTURER$SEGMENT;
    }
    public static MemorySegment szOID_RDN_TPM_MODEL() {
        return constants$1578.szOID_RDN_TPM_MODEL$SEGMENT;
    }
    public static MemorySegment szOID_RDN_TPM_VERSION() {
        return constants$1578.szOID_RDN_TPM_VERSION$SEGMENT;
    }
    public static MemorySegment szOID_RDN_TCG_PLATFORM_MANUFACTURER() {
        return constants$1579.szOID_RDN_TCG_PLATFORM_MANUFACTURER$SEGMENT;
    }
    public static MemorySegment szOID_RDN_TCG_PLATFORM_MODEL() {
        return constants$1579.szOID_RDN_TCG_PLATFORM_MODEL$SEGMENT;
    }
    public static MemorySegment szOID_RDN_TCG_PLATFORM_VERSION() {
        return constants$1579.szOID_RDN_TCG_PLATFORM_VERSION$SEGMENT;
    }
    public static MemorySegment szOID_CT_CERT_SCTLIST() {
        return constants$1579.szOID_CT_CERT_SCTLIST$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_EK_INFO() {
        return constants$1579.szOID_ENROLL_EK_INFO$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_AIK_INFO() {
        return constants$1579.szOID_ENROLL_AIK_INFO$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_ATTESTATION_STATEMENT() {
        return constants$1580.szOID_ENROLL_ATTESTATION_STATEMENT$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_KSP_NAME() {
        return constants$1580.szOID_ENROLL_KSP_NAME$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_EKPUB_CHALLENGE() {
        return constants$1580.szOID_ENROLL_EKPUB_CHALLENGE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_CAXCHGCERT_HASH() {
        return constants$1580.szOID_ENROLL_CAXCHGCERT_HASH$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_ATTESTATION_CHALLENGE() {
        return constants$1580.szOID_ENROLL_ATTESTATION_CHALLENGE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_ENCRYPTION_ALGORITHM() {
        return constants$1580.szOID_ENROLL_ENCRYPTION_ALGORITHM$SEGMENT;
    }
    public static MemorySegment szOID_KP_TPM_EK_CERTIFICATE() {
        return constants$1581.szOID_KP_TPM_EK_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_KP_TPM_PLATFORM_CERTIFICATE() {
        return constants$1581.szOID_KP_TPM_PLATFORM_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_KP_TPM_AIK_CERTIFICATE() {
        return constants$1581.szOID_KP_TPM_AIK_CERTIFICATE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_EKVERIFYKEY() {
        return constants$1581.szOID_ENROLL_EKVERIFYKEY$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_EKVERIFYCERT() {
        return constants$1581.szOID_ENROLL_EKVERIFYCERT$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_EKVERIFYCREDS() {
        return constants$1581.szOID_ENROLL_EKVERIFYCREDS$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_SCEP_ERROR() {
        return constants$1582.szOID_ENROLL_SCEP_ERROR$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_SCEP_SERVER_STATE() {
        return constants$1582.szOID_ENROLL_SCEP_SERVER_STATE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_SCEP_CHALLENGE_ANSWER() {
        return constants$1582.szOID_ENROLL_SCEP_CHALLENGE_ANSWER$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_SCEP_CLIENT_REQUEST() {
        return constants$1582.szOID_ENROLL_SCEP_CLIENT_REQUEST$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_SCEP_SERVER_MESSAGE() {
        return constants$1582.szOID_ENROLL_SCEP_SERVER_MESSAGE$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_SCEP_SERVER_SECRET() {
        return constants$1582.szOID_ENROLL_SCEP_SERVER_SECRET$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_KEY_AFFINITY() {
        return constants$1583.szOID_ENROLL_KEY_AFFINITY$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_SCEP_SIGNER_HASH() {
        return constants$1583.szOID_ENROLL_SCEP_SIGNER_HASH$SEGMENT;
    }
    public static MemorySegment szOID_ENROLL_EK_CA_KEYID() {
        return constants$1583.szOID_ENROLL_EK_CA_KEYID$SEGMENT;
    }
    public static MemorySegment szOID_ATTR_SUPPORTED_ALGORITHMS() {
        return constants$1583.szOID_ATTR_SUPPORTED_ALGORITHMS$SEGMENT;
    }
    public static MemorySegment szOID_ATTR_TPM_SPECIFICATION() {
        return constants$1583.szOID_ATTR_TPM_SPECIFICATION$SEGMENT;
    }
    public static MemorySegment szOID_ATTR_PLATFORM_SPECIFICATION() {
        return constants$1583.szOID_ATTR_PLATFORM_SPECIFICATION$SEGMENT;
    }
    public static MemorySegment szOID_ATTR_TPM_SECURITY_ASSERTIONS() {
        return constants$1584.szOID_ATTR_TPM_SECURITY_ASSERTIONS$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_ACC_DESCR() {
        return constants$1584.szOID_PKIX_ACC_DESCR$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_OCSP() {
        return constants$1584.szOID_PKIX_OCSP$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_CA_ISSUERS() {
        return constants$1584.szOID_PKIX_CA_ISSUERS$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_TIME_STAMPING() {
        return constants$1584.szOID_PKIX_TIME_STAMPING$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_CA_REPOSITORY() {
        return constants$1584.szOID_PKIX_CA_REPOSITORY$SEGMENT;
    }
    public static int CRL_DIST_POINT_ERR_CRL_ISSUER_BIT() {
        return (int)2147483648L;
    }
    public static int CERT_EXCLUDED_SUBTREE_BIT() {
        return (int)2147483648L;
    }
    public static int SORTED_CTL_EXT_FLAGS_OFFSET() {
        return (int)0L;
    }
    public static int SORTED_CTL_EXT_COUNT_OFFSET() {
        return (int)4L;
    }
    public static int SORTED_CTL_EXT_MAX_COLLISION_OFFSET() {
        return (int)8L;
    }
    public static int SORTED_CTL_EXT_HASH_BUCKET_OFFSET() {
        return (int)12L;
    }
    public static int CERT_DSS_SIGNATURE_LEN() {
        return (int)40L;
    }
    public static int CERT_MAX_ASN_ENCODED_DSS_SIGNATURE_LEN() {
        return (int)48L;
    }
    public static int CRYPT_X942_PUB_INFO_BYTE_LENGTH() {
        return (int)64L;
    }
    public static MemorySegment szOID_QC_EU_COMPLIANCE() {
        return constants$1585.szOID_QC_EU_COMPLIANCE$SEGMENT;
    }
    public static MemorySegment szOID_QC_SSCD() {
        return constants$1585.szOID_QC_SSCD$SEGMENT;
    }
    public static MemorySegment szOID_VERISIGN_PRIVATE_6_9() {
        return constants$1585.szOID_VERISIGN_PRIVATE_6_9$SEGMENT;
    }
    public static MemorySegment szOID_VERISIGN_ONSITE_JURISDICTION_HASH() {
        return constants$1585.szOID_VERISIGN_ONSITE_JURISDICTION_HASH$SEGMENT;
    }
    public static MemorySegment szOID_VERISIGN_BITSTRING_6_13() {
        return constants$1585.szOID_VERISIGN_BITSTRING_6_13$SEGMENT;
    }
    public static MemorySegment szOID_VERISIGN_ISS_STRONG_CRYPTO() {
        return constants$1585.szOID_VERISIGN_ISS_STRONG_CRYPTO$SEGMENT;
    }
    public static MemorySegment szOIDVerisign_MessageType() {
        return constants$1586.szOIDVerisign_MessageType$SEGMENT;
    }
    public static MemorySegment szOIDVerisign_PkiStatus() {
        return constants$1586.szOIDVerisign_PkiStatus$SEGMENT;
    }
    public static MemorySegment szOIDVerisign_FailInfo() {
        return constants$1586.szOIDVerisign_FailInfo$SEGMENT;
    }
    public static MemorySegment szOIDVerisign_SenderNonce() {
        return constants$1586.szOIDVerisign_SenderNonce$SEGMENT;
    }
    public static MemorySegment szOIDVerisign_RecipientNonce() {
        return constants$1586.szOIDVerisign_RecipientNonce$SEGMENT;
    }
    public static MemorySegment szOIDVerisign_TransactionID() {
        return constants$1586.szOIDVerisign_TransactionID$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE() {
        return constants$1587.szOID_NETSCAPE$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_CERT_EXTENSION() {
        return constants$1587.szOID_NETSCAPE_CERT_EXTENSION$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_CERT_TYPE() {
        return constants$1587.szOID_NETSCAPE_CERT_TYPE$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_BASE_URL() {
        return constants$1587.szOID_NETSCAPE_BASE_URL$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_REVOCATION_URL() {
        return constants$1587.szOID_NETSCAPE_REVOCATION_URL$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_CA_REVOCATION_URL() {
        return constants$1587.szOID_NETSCAPE_CA_REVOCATION_URL$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_CERT_RENEWAL_URL() {
        return constants$1588.szOID_NETSCAPE_CERT_RENEWAL_URL$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_CA_POLICY_URL() {
        return constants$1588.szOID_NETSCAPE_CA_POLICY_URL$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_SSL_SERVER_NAME() {
        return constants$1588.szOID_NETSCAPE_SSL_SERVER_NAME$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_COMMENT() {
        return constants$1588.szOID_NETSCAPE_COMMENT$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_DATA_TYPE() {
        return constants$1588.szOID_NETSCAPE_DATA_TYPE$SEGMENT;
    }
    public static MemorySegment szOID_NETSCAPE_CERT_SEQUENCE() {
        return constants$1588.szOID_NETSCAPE_CERT_SEQUENCE$SEGMENT;
    }
    public static MemorySegment szOID_CT_PKI_DATA() {
        return constants$1589.szOID_CT_PKI_DATA$SEGMENT;
    }
    public static MemorySegment szOID_CT_PKI_RESPONSE() {
        return constants$1589.szOID_CT_PKI_RESPONSE$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_NO_SIGNATURE() {
        return constants$1589.szOID_PKIX_NO_SIGNATURE$SEGMENT;
    }
    public static MemorySegment szOID_CMC() {
        return constants$1589.szOID_CMC$SEGMENT;
    }
    public static MemorySegment szOID_CMC_STATUS_INFO() {
        return constants$1589.szOID_CMC_STATUS_INFO$SEGMENT;
    }
    public static MemorySegment szOID_CMC_IDENTIFICATION() {
        return constants$1589.szOID_CMC_IDENTIFICATION$SEGMENT;
    }
    public static MemorySegment szOID_CMC_IDENTITY_PROOF() {
        return constants$1590.szOID_CMC_IDENTITY_PROOF$SEGMENT;
    }
    public static MemorySegment szOID_CMC_DATA_RETURN() {
        return constants$1590.szOID_CMC_DATA_RETURN$SEGMENT;
    }
    public static MemorySegment szOID_CMC_TRANSACTION_ID() {
        return constants$1590.szOID_CMC_TRANSACTION_ID$SEGMENT;
    }
    public static MemorySegment szOID_CMC_SENDER_NONCE() {
        return constants$1590.szOID_CMC_SENDER_NONCE$SEGMENT;
    }
    public static MemorySegment szOID_CMC_RECIPIENT_NONCE() {
        return constants$1590.szOID_CMC_RECIPIENT_NONCE$SEGMENT;
    }
    public static MemorySegment szOID_CMC_ADD_EXTENSIONS() {
        return constants$1590.szOID_CMC_ADD_EXTENSIONS$SEGMENT;
    }
    public static MemorySegment szOID_CMC_ENCRYPTED_POP() {
        return constants$1591.szOID_CMC_ENCRYPTED_POP$SEGMENT;
    }
    public static MemorySegment szOID_CMC_DECRYPTED_POP() {
        return constants$1591.szOID_CMC_DECRYPTED_POP$SEGMENT;
    }
    public static MemorySegment szOID_CMC_LRA_POP_WITNESS() {
        return constants$1591.szOID_CMC_LRA_POP_WITNESS$SEGMENT;
    }
    public static MemorySegment szOID_CMC_GET_CERT() {
        return constants$1591.szOID_CMC_GET_CERT$SEGMENT;
    }
    public static MemorySegment szOID_CMC_GET_CRL() {
        return constants$1591.szOID_CMC_GET_CRL$SEGMENT;
    }
    public static MemorySegment szOID_CMC_REVOKE_REQUEST() {
        return constants$1591.szOID_CMC_REVOKE_REQUEST$SEGMENT;
    }
    public static MemorySegment szOID_CMC_REG_INFO() {
        return constants$1592.szOID_CMC_REG_INFO$SEGMENT;
    }
    public static MemorySegment szOID_CMC_RESPONSE_INFO() {
        return constants$1592.szOID_CMC_RESPONSE_INFO$SEGMENT;
    }
    public static MemorySegment szOID_CMC_QUERY_PENDING() {
        return constants$1592.szOID_CMC_QUERY_PENDING$SEGMENT;
    }
    public static MemorySegment szOID_CMC_ID_POP_LINK_RANDOM() {
        return constants$1592.szOID_CMC_ID_POP_LINK_RANDOM$SEGMENT;
    }
    public static MemorySegment szOID_CMC_ID_POP_LINK_WITNESS() {
        return constants$1592.szOID_CMC_ID_POP_LINK_WITNESS$SEGMENT;
    }
    public static MemorySegment szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE() {
        return constants$1592.szOID_CMC_ID_CONFIRM_CERT_ACCEPTANCE$SEGMENT;
    }
    public static MemorySegment szOID_CMC_ADD_ATTRIBUTES() {
        return constants$1593.szOID_CMC_ADD_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment szOID_LOYALTY_OTHER_LOGOTYPE() {
        return constants$1593.szOID_LOYALTY_OTHER_LOGOTYPE$SEGMENT;
    }
    public static MemorySegment szOID_BACKGROUND_OTHER_LOGOTYPE() {
        return constants$1593.szOID_BACKGROUND_OTHER_LOGOTYPE$SEGMENT;
    }
    public static MemorySegment szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE() {
        return constants$1593.szOID_PKIX_OCSP_BASIC_SIGNED_RESPONSE$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_ENCODE_OBJECT_FUNC() {
        return constants$1593.CRYPT_OID_ENCODE_OBJECT_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_DECODE_OBJECT_FUNC() {
        return constants$1593.CRYPT_OID_DECODE_OBJECT_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_ENCODE_OBJECT_EX_FUNC() {
        return constants$1594.CRYPT_OID_ENCODE_OBJECT_EX_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_DECODE_OBJECT_EX_FUNC() {
        return constants$1594.CRYPT_OID_DECODE_OBJECT_EX_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_CREATE_COM_OBJECT_FUNC() {
        return constants$1594.CRYPT_OID_CREATE_COM_OBJECT_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_VERIFY_REVOCATION_FUNC() {
        return constants$1594.CRYPT_OID_VERIFY_REVOCATION_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_VERIFY_CTL_USAGE_FUNC() {
        return constants$1594.CRYPT_OID_VERIFY_CTL_USAGE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_FORMAT_OBJECT_FUNC() {
        return constants$1594.CRYPT_OID_FORMAT_OBJECT_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_FIND_OID_INFO_FUNC() {
        return constants$1595.CRYPT_OID_FIND_OID_INFO_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_FIND_LOCALIZED_NAME_FUNC() {
        return constants$1595.CRYPT_OID_FIND_LOCALIZED_NAME_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REGPATH() {
        return constants$1595.CRYPT_OID_REGPATH$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REG_ENCODING_TYPE_PREFIX() {
        return constants$1595.CRYPT_OID_REG_ENCODING_TYPE_PREFIX$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REG_DLL_VALUE_NAME() {
        return constants$1595.CRYPT_OID_REG_DLL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REG_FUNC_NAME_VALUE_NAME() {
        return constants$1595.CRYPT_OID_REG_FUNC_NAME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A() {
        return constants$1596.CRYPT_OID_REG_FUNC_NAME_VALUE_NAME_A$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REG_FLAGS_VALUE_NAME() {
        return constants$1596.CRYPT_OID_REG_FLAGS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPT_DEFAULT_OID() {
        return constants$1596.CRYPT_DEFAULT_OID$SEGMENT;
    }
    public static int CRYPT_REGISTER_LAST_INDEX() {
        return (int)4294967295L;
    }
    public static int CRYPT_MATCH_ANY_ENCODING_TYPE() {
        return (int)4294967295L;
    }
    public static int CALG_OID_INFO_CNG_ONLY() {
        return (int)4294967295L;
    }
    public static int CALG_OID_INFO_PARAMETERS() {
        return (int)4294967294L;
    }
    public static MemorySegment CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM() {
        return constants$1596.CRYPT_OID_INFO_HASH_PARAMETERS_ALGORITHM$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM() {
        return constants$1596.CRYPT_OID_INFO_ECC_PARAMETERS_ALGORITHM$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM() {
        return constants$1596.CRYPT_OID_INFO_MGF1_PARAMETERS_ALGORITHM$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_INFO_NO_SIGN_ALGORITHM() {
        return constants$1597.CRYPT_OID_INFO_NO_SIGN_ALGORITHM$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM() {
        return constants$1597.CRYPT_OID_INFO_OAEP_PARAMETERS_ALGORITHM$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM() {
        return constants$1597.CRYPT_OID_INFO_ECC_WRAP_PARAMETERS_ALGORITHM$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM() {
        return constants$1597.CRYPT_OID_INFO_NO_PARAMETERS_ALGORITHM$SEGMENT;
    }
    public static int CRYPT_FIRST_ALG_OID_GROUP_ID() {
        return (int)1L;
    }
    public static int CRYPT_LAST_ALG_OID_GROUP_ID() {
        return (int)4L;
    }
    public static int CRYPT_OID_PUBKEY_SIGN_ONLY_FLAG() {
        return (int)2147483648L;
    }
    public static int CRYPT_OID_INFO_OID_KEY_FLAGS_MASK() {
        return (int)4294901760L;
    }
    public static int CRYPT_OID_INFO_PUBKEY_SIGN_KEY_FLAG() {
        return (int)2147483648L;
    }
    public static int CRYPT_OID_DISABLE_SEARCH_DS_FLAG() {
        return (int)2147483648L;
    }
    public static MemorySegment CRYPT_LOCALIZED_NAME_OID() {
        return constants$1597.CRYPT_LOCALIZED_NAME_OID$SEGMENT;
    }
    public static MemorySegment CERT_STRONG_SIGN_ECDSA_ALGORITHM() {
        return constants$1597.CERT_STRONG_SIGN_ECDSA_ALGORITHM$SEGMENT;
    }
    public static MemorySegment szOID_CERT_STRONG_SIGN_OS_PREFIX() {
        return constants$1598.szOID_CERT_STRONG_SIGN_OS_PREFIX$SEGMENT;
    }
    public static MemorySegment szOID_CERT_STRONG_SIGN_OS_1() {
        return constants$1598.szOID_CERT_STRONG_SIGN_OS_1$SEGMENT;
    }
    public static MemorySegment szOID_CERT_STRONG_SIGN_OS_CURRENT() {
        return constants$1598.szOID_CERT_STRONG_SIGN_OS_CURRENT$SEGMENT;
    }
    public static MemorySegment szOID_CERT_STRONG_KEY_OS_PREFIX() {
        return constants$1598.szOID_CERT_STRONG_KEY_OS_PREFIX$SEGMENT;
    }
    public static MemorySegment szOID_CERT_STRONG_KEY_OS_1() {
        return constants$1598.szOID_CERT_STRONG_KEY_OS_1$SEGMENT;
    }
    public static MemorySegment szOID_CERT_STRONG_KEY_OS_CURRENT() {
        return constants$1598.szOID_CERT_STRONG_KEY_OS_CURRENT$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7_DATA() {
        return constants$1599.szOID_PKCS_7_DATA$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7_SIGNED() {
        return constants$1599.szOID_PKCS_7_SIGNED$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7_ENVELOPED() {
        return constants$1599.szOID_PKCS_7_ENVELOPED$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7_SIGNEDANDENVELOPED() {
        return constants$1599.szOID_PKCS_7_SIGNEDANDENVELOPED$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7_DIGESTED() {
        return constants$1599.szOID_PKCS_7_DIGESTED$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_7_ENCRYPTED() {
        return constants$1599.szOID_PKCS_7_ENCRYPTED$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_9_CONTENT_TYPE() {
        return constants$1600.szOID_PKCS_9_CONTENT_TYPE$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_9_MESSAGE_DIGEST() {
        return constants$1600.szOID_PKCS_9_MESSAGE_DIGEST$SEGMENT;
    }
    public static int CMSG_ALL_FLAGS() {
        return (int)4294967295L;
    }
    public static int CMSG_DATA_FLAG() {
        return (int)2L;
    }
    public static int CMSG_SIGNED_FLAG() {
        return (int)4L;
    }
    public static int CMSG_ENVELOPED_FLAG() {
        return (int)8L;
    }
    public static int CMSG_SIGNED_AND_ENVELOPED_FLAG() {
        return (int)16L;
    }
    public static int CMSG_HASHED_FLAG() {
        return (int)32L;
    }
    public static int CMSG_ENCRYPTED_FLAG() {
        return (int)64L;
    }
    public static int CMSG_SP3_COMPATIBLE_ENCRYPT_FLAG() {
        return (int)2147483648L;
    }
    public static int CMSG_INDEFINITE_LENGTH() {
        return (int)4294967295L;
    }
    public static int CMSG_SIGNED_DATA_PKCS_1_5_VERSION() {
        return (int)1L;
    }
    public static int CMSG_SIGNED_DATA_CMS_VERSION() {
        return (int)3L;
    }
    public static int CMSG_SIGNER_INFO_PKCS_1_5_VERSION() {
        return (int)1L;
    }
    public static int CMSG_SIGNER_INFO_CMS_VERSION() {
        return (int)3L;
    }
    public static int CMSG_HASHED_DATA_PKCS_1_5_VERSION() {
        return (int)0L;
    }
    public static int CMSG_HASHED_DATA_CMS_VERSION() {
        return (int)2L;
    }
    public static int CMSG_ENVELOPED_DATA_PKCS_1_5_VERSION() {
        return (int)0L;
    }
    public static int CMSG_ENVELOPED_DATA_CMS_VERSION() {
        return (int)2L;
    }
    public static int CMSG_KEY_TRANS_PKCS_1_5_VERSION() {
        return (int)0L;
    }
    public static int CMSG_KEY_TRANS_CMS_VERSION() {
        return (int)2L;
    }
    public static int CMSG_KEY_AGREE_VERSION() {
        return (int)3L;
    }
    public static int CMSG_MAIL_LIST_VERSION() {
        return (int)4L;
    }
    public static MemorySegment CMSG_OID_GEN_ENCRYPT_KEY_FUNC() {
        return constants$1600.CMSG_OID_GEN_ENCRYPT_KEY_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC() {
        return constants$1600.CMSG_OID_EXPORT_ENCRYPT_KEY_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC() {
        return constants$1600.CMSG_OID_IMPORT_ENCRYPT_KEY_FUNC$SEGMENT;
    }
    public static MemoryAddress CMSG_DEFAULT_INSTALLABLE_FUNC_OID() {
        return constants$1600.CMSG_DEFAULT_INSTALLABLE_FUNC_OID$ADDR;
    }
    public static MemorySegment CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC() {
        return constants$1601.CMSG_OID_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC() {
        return constants$1601.CMSG_OID_CAPI1_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC() {
        return constants$1601.CMSG_OID_CNG_GEN_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_EXPORT_KEY_TRANS_FUNC() {
        return constants$1601.CMSG_OID_EXPORT_KEY_TRANS_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC() {
        return constants$1601.CMSG_OID_CAPI1_EXPORT_KEY_TRANS_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC() {
        return constants$1601.CMSG_OID_CNG_EXPORT_KEY_TRANS_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_EXPORT_KEY_AGREE_FUNC() {
        return constants$1602.CMSG_OID_EXPORT_KEY_AGREE_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC() {
        return constants$1602.CMSG_OID_CAPI1_EXPORT_KEY_AGREE_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC() {
        return constants$1602.CMSG_OID_CNG_EXPORT_KEY_AGREE_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_EXPORT_MAIL_LIST_FUNC() {
        return constants$1602.CMSG_OID_EXPORT_MAIL_LIST_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC() {
        return constants$1602.CMSG_OID_CAPI1_EXPORT_MAIL_LIST_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_IMPORT_KEY_TRANS_FUNC() {
        return constants$1602.CMSG_OID_IMPORT_KEY_TRANS_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC() {
        return constants$1603.CMSG_OID_CAPI1_IMPORT_KEY_TRANS_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_IMPORT_KEY_AGREE_FUNC() {
        return constants$1603.CMSG_OID_IMPORT_KEY_AGREE_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC() {
        return constants$1603.CMSG_OID_CAPI1_IMPORT_KEY_AGREE_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_IMPORT_MAIL_LIST_FUNC() {
        return constants$1603.CMSG_OID_IMPORT_MAIL_LIST_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC() {
        return constants$1603.CMSG_OID_CAPI1_IMPORT_MAIL_LIST_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC() {
        return constants$1603.CMSG_OID_CNG_IMPORT_KEY_TRANS_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC() {
        return constants$1604.CMSG_OID_CNG_IMPORT_KEY_AGREE_FUNC$SEGMENT;
    }
    public static MemorySegment CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC() {
        return constants$1604.CMSG_OID_CNG_IMPORT_CONTENT_ENCRYPT_KEY_FUNC$SEGMENT;
    }
    public static int CERT_HASH_PROP_ID() {
        return (int)3L;
    }
    public static int CERT_CTL_USAGE_PROP_ID() {
        return (int)9L;
    }
    public static MemorySegment szOID_CERT_PROP_ID_PREFIX() {
        return constants$1604.szOID_CERT_PROP_ID_PREFIX$SEGMENT;
    }
    public static MemorySegment szOID_CERT_KEY_IDENTIFIER_PROP_ID() {
        return constants$1604.szOID_CERT_KEY_IDENTIFIER_PROP_ID$SEGMENT;
    }
    public static MemorySegment szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID() {
        return constants$1604.szOID_CERT_ISSUER_SERIAL_NUMBER_MD5_HASH_PROP_ID$SEGMENT;
    }
    public static MemorySegment szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID() {
        return constants$1604.szOID_CERT_SUBJECT_NAME_MD5_HASH_PROP_ID$SEGMENT;
    }
    public static MemorySegment szOID_CERT_MD5_HASH_PROP_ID() {
        return constants$1605.szOID_CERT_MD5_HASH_PROP_ID$SEGMENT;
    }
    public static MemorySegment szOID_CERT_SIGNATURE_HASH_PROP_ID() {
        return constants$1605.szOID_CERT_SIGNATURE_HASH_PROP_ID$SEGMENT;
    }
    public static MemorySegment szOID_DISALLOWED_HASH() {
        return constants$1605.szOID_DISALLOWED_HASH$SEGMENT;
    }
    public static MemorySegment szOID_CERT_DISALLOWED_FILETIME_PROP_ID() {
        return constants$1605.szOID_CERT_DISALLOWED_FILETIME_PROP_ID$SEGMENT;
    }
    public static MemorySegment szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION() {
        return constants$1605.szOID_ROOT_PROGRAM_AUTO_UPDATE_CA_REVOCATION$SEGMENT;
    }
    public static MemorySegment szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION() {
        return constants$1605.szOID_ROOT_PROGRAM_AUTO_UPDATE_END_REVOCATION$SEGMENT;
    }
    public static MemorySegment szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL() {
        return constants$1606.szOID_ROOT_PROGRAM_NO_OCSP_FAILOVER_TO_CRL$SEGMENT;
    }
    public static int CERT_NCRYPT_KEY_SPEC() {
        return (int)4294967295L;
    }
    public static MemoryAddress CERT_STORE_PROV_MSG() {
        return constants$1606.CERT_STORE_PROV_MSG$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_MEMORY() {
        return constants$1606.CERT_STORE_PROV_MEMORY$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_FILE() {
        return constants$1606.CERT_STORE_PROV_FILE$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_REG() {
        return constants$1606.CERT_STORE_PROV_REG$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_PKCS7() {
        return constants$1606.CERT_STORE_PROV_PKCS7$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SERIALIZED() {
        return constants$1607.CERT_STORE_PROV_SERIALIZED$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_FILENAME_A() {
        return constants$1607.CERT_STORE_PROV_FILENAME_A$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_FILENAME_W() {
        return constants$1607.CERT_STORE_PROV_FILENAME_W$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_FILENAME() {
        return constants$1607.CERT_STORE_PROV_FILENAME$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SYSTEM_A() {
        return constants$1607.CERT_STORE_PROV_SYSTEM_A$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SYSTEM_W() {
        return constants$1607.CERT_STORE_PROV_SYSTEM_W$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SYSTEM() {
        return constants$1608.CERT_STORE_PROV_SYSTEM$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_COLLECTION() {
        return constants$1608.CERT_STORE_PROV_COLLECTION$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY_A() {
        return constants$1608.CERT_STORE_PROV_SYSTEM_REGISTRY_A$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY_W() {
        return constants$1608.CERT_STORE_PROV_SYSTEM_REGISTRY_W$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SYSTEM_REGISTRY() {
        return constants$1608.CERT_STORE_PROV_SYSTEM_REGISTRY$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_PHYSICAL_W() {
        return constants$1608.CERT_STORE_PROV_PHYSICAL_W$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_PHYSICAL() {
        return constants$1609.CERT_STORE_PROV_PHYSICAL$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SMART_CARD_W() {
        return constants$1609.CERT_STORE_PROV_SMART_CARD_W$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_SMART_CARD() {
        return constants$1609.CERT_STORE_PROV_SMART_CARD$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_LDAP_W() {
        return constants$1609.CERT_STORE_PROV_LDAP_W$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_LDAP() {
        return constants$1609.CERT_STORE_PROV_LDAP$ADDR;
    }
    public static MemoryAddress CERT_STORE_PROV_PKCS12() {
        return constants$1609.CERT_STORE_PROV_PKCS12$ADDR;
    }
    public static MemorySegment sz_CERT_STORE_PROV_MEMORY() {
        return constants$1610.sz_CERT_STORE_PROV_MEMORY$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_FILENAME_W() {
        return constants$1610.sz_CERT_STORE_PROV_FILENAME_W$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_FILENAME() {
        return constants$1610.sz_CERT_STORE_PROV_FILENAME$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_SYSTEM_W() {
        return constants$1610.sz_CERT_STORE_PROV_SYSTEM_W$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_SYSTEM() {
        return constants$1610.sz_CERT_STORE_PROV_SYSTEM$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_PKCS7() {
        return constants$1610.sz_CERT_STORE_PROV_PKCS7$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_PKCS12() {
        return constants$1611.sz_CERT_STORE_PROV_PKCS12$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_SERIALIZED() {
        return constants$1611.sz_CERT_STORE_PROV_SERIALIZED$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_COLLECTION() {
        return constants$1611.sz_CERT_STORE_PROV_COLLECTION$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W() {
        return constants$1611.sz_CERT_STORE_PROV_SYSTEM_REGISTRY_W$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_SYSTEM_REGISTRY() {
        return constants$1611.sz_CERT_STORE_PROV_SYSTEM_REGISTRY$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_PHYSICAL_W() {
        return constants$1611.sz_CERT_STORE_PROV_PHYSICAL_W$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_PHYSICAL() {
        return constants$1612.sz_CERT_STORE_PROV_PHYSICAL$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_SMART_CARD_W() {
        return constants$1612.sz_CERT_STORE_PROV_SMART_CARD_W$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_SMART_CARD() {
        return constants$1612.sz_CERT_STORE_PROV_SMART_CARD$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_LDAP_W() {
        return constants$1612.sz_CERT_STORE_PROV_LDAP_W$SEGMENT;
    }
    public static MemorySegment sz_CERT_STORE_PROV_LDAP() {
        return constants$1612.sz_CERT_STORE_PROV_LDAP$SEGMENT;
    }
    public static int CERT_SYSTEM_STORE_MASK() {
        return (int)4294901760L;
    }
    public static int CERT_SYSTEM_STORE_RELOCATE_FLAG() {
        return (int)2147483648L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_USER() {
        return (int)65536L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE() {
        return (int)131072L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_SERVICE() {
        return (int)262144L;
    }
    public static int CERT_SYSTEM_STORE_SERVICES() {
        return (int)327680L;
    }
    public static int CERT_SYSTEM_STORE_USERS() {
        return (int)393216L;
    }
    public static int CERT_SYSTEM_STORE_CURRENT_USER_GROUP_POLICY() {
        return (int)458752L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_GROUP_POLICY() {
        return (int)524288L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_ENTERPRISE() {
        return (int)589824L;
    }
    public static int CERT_SYSTEM_STORE_LOCAL_MACHINE_WCOS() {
        return (int)655360L;
    }
    public static MemorySegment CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH() {
        return constants$1612.CERT_GROUP_POLICY_SYSTEM_STORE_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_EFSBLOB_REGPATH() {
        return constants$1613.CERT_EFSBLOB_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_EFSBLOB_VALUE_NAME() {
        return constants$1613.CERT_EFSBLOB_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PROT_ROOT_FLAGS_REGPATH() {
        return constants$1613.CERT_PROT_ROOT_FLAGS_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_PROT_ROOT_FLAGS_VALUE_NAME() {
        return constants$1613.CERT_PROT_ROOT_FLAGS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME() {
        return constants$1613.CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A() {
        return constants$1613.CERT_PROT_ROOT_PEER_USAGES_VALUE_NAME_A$SEGMENT;
    }
    public static MemorySegment CERT_PROT_ROOT_PEER_USAGES_DEFAULT_A() {
        return constants$1614.CERT_PROT_ROOT_PEER_USAGES_DEFAULT_A$SEGMENT;
    }
    public static MemorySegment CERT_TRUST_PUB_SAFER_GROUP_POLICY_REGPATH() {
        return constants$1614.CERT_TRUST_PUB_SAFER_GROUP_POLICY_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH() {
        return constants$1614.CERT_LOCAL_MACHINE_SYSTEM_STORE_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_TRUST_PUB_SAFER_LOCAL_MACHINE_REGPATH() {
        return constants$1614.CERT_TRUST_PUB_SAFER_LOCAL_MACHINE_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME() {
        return constants$1614.CERT_TRUST_PUB_AUTHENTICODE_FLAGS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH() {
        return constants$1614.CERT_OCM_SUBCOMPONENTS_LOCAL_MACHINE_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME() {
        return constants$1615.CERT_OCM_SUBCOMPONENTS_ROOT_AUTO_UPDATE_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_DISABLE_ROOT_AUTO_UPDATE_REGPATH() {
        return constants$1615.CERT_DISABLE_ROOT_AUTO_UPDATE_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME() {
        return constants$1615.CERT_DISABLE_ROOT_AUTO_UPDATE_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME() {
        return constants$1615.CERT_ENABLE_DISALLOWED_CERT_AUTO_UPDATE_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME() {
        return constants$1615.CERT_DISABLE_PIN_RULES_AUTO_UPDATE_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH() {
        return constants$1615.CERT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME() {
        return constants$1616.CERT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME() {
        return constants$1616.CERT_AUTO_UPDATE_SYNC_FROM_DIR_URL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH() {
        return constants$1616.CERT_AUTH_ROOT_AUTO_UPDATE_LOCAL_MACHINE_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME() {
        return constants$1616.CERT_AUTH_ROOT_AUTO_UPDATE_ROOT_DIR_URL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME() {
        return constants$1616.CERT_AUTH_ROOT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME() {
        return constants$1616.CERT_AUTH_ROOT_AUTO_UPDATE_FLAGS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME() {
        return constants$1617.CERT_AUTH_ROOT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME() {
        return constants$1617.CERT_AUTH_ROOT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_CTL_FILENAME() {
        return constants$1617.CERT_AUTH_ROOT_CTL_FILENAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_CTL_FILENAME_A() {
        return constants$1617.CERT_AUTH_ROOT_CTL_FILENAME_A$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_CAB_FILENAME() {
        return constants$1617.CERT_AUTH_ROOT_CAB_FILENAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_SEQ_FILENAME() {
        return constants$1617.CERT_AUTH_ROOT_SEQ_FILENAME$SEGMENT;
    }
    public static MemorySegment CERT_AUTH_ROOT_CERT_EXT() {
        return constants$1618.CERT_AUTH_ROOT_CERT_EXT$SEGMENT;
    }
    public static MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME() {
        return constants$1618.CERT_DISALLOWED_CERT_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME() {
        return constants$1618.CERT_DISALLOWED_CERT_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME() {
        return constants$1618.CERT_DISALLOWED_CERT_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_DISALLOWED_CERT_CTL_FILENAME() {
        return constants$1618.CERT_DISALLOWED_CERT_CTL_FILENAME$SEGMENT;
    }
    public static MemorySegment CERT_DISALLOWED_CERT_CTL_FILENAME_A() {
        return constants$1618.CERT_DISALLOWED_CERT_CTL_FILENAME_A$SEGMENT;
    }
    public static MemorySegment CERT_DISALLOWED_CERT_CAB_FILENAME() {
        return constants$1619.CERT_DISALLOWED_CERT_CAB_FILENAME$SEGMENT;
    }
    public static MemorySegment CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER() {
        return constants$1619.CERT_DISALLOWED_CERT_AUTO_UPDATE_LIST_IDENTIFIER$SEGMENT;
    }
    public static MemorySegment CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME() {
        return constants$1619.CERT_PIN_RULES_AUTO_UPDATE_SYNC_DELTA_TIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME() {
        return constants$1619.CERT_PIN_RULES_AUTO_UPDATE_LAST_SYNC_TIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME() {
        return constants$1619.CERT_PIN_RULES_AUTO_UPDATE_ENCODED_CTL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PIN_RULES_CTL_FILENAME() {
        return constants$1619.CERT_PIN_RULES_CTL_FILENAME$SEGMENT;
    }
    public static MemorySegment CERT_PIN_RULES_CTL_FILENAME_A() {
        return constants$1620.CERT_PIN_RULES_CTL_FILENAME_A$SEGMENT;
    }
    public static MemorySegment CERT_PIN_RULES_CAB_FILENAME() {
        return constants$1620.CERT_PIN_RULES_CAB_FILENAME$SEGMENT;
    }
    public static MemorySegment CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER() {
        return constants$1620.CERT_PIN_RULES_AUTO_UPDATE_LIST_IDENTIFIER$SEGMENT;
    }
    public static int CERT_REGISTRY_STORE_CLIENT_GPT_FLAG() {
        return (int)2147483648L;
    }
    public static MemorySegment CERT_IE_DIRTY_FLAGS_REGPATH() {
        return constants$1620.CERT_IE_DIRTY_FLAGS_REGPATH$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_OPEN_STORE_PROV_FUNC() {
        return constants$1620.CRYPT_OID_OPEN_STORE_PROV_FUNC$SEGMENT;
    }
    public static int CERT_STORE_SAVE_TO_FILENAME() {
        return (int)4L;
    }
    public static int CERT_COMPARE_HASH() {
        return (int)1L;
    }
    public static int CERT_COMPARE_CTL_USAGE() {
        return (int)10L;
    }
    public static int CERT_FIND_ANY() {
        return (int)0L;
    }
    public static int CERT_FIND_SHA1_HASH() {
        return (int)65536L;
    }
    public static int CERT_FIND_MD5_HASH() {
        return (int)262144L;
    }
    public static int CERT_FIND_SIGNATURE_HASH() {
        return (int)917504L;
    }
    public static int CERT_FIND_KEY_IDENTIFIER() {
        return (int)983040L;
    }
    public static int CERT_FIND_HASH() {
        return (int)65536L;
    }
    public static int CERT_FIND_PROPERTY() {
        return (int)327680L;
    }
    public static int CERT_FIND_PUBLIC_KEY() {
        return (int)393216L;
    }
    public static int CERT_FIND_SUBJECT_NAME() {
        return (int)131079L;
    }
    public static int CERT_FIND_SUBJECT_ATTR() {
        return (int)196615L;
    }
    public static int CERT_FIND_ISSUER_NAME() {
        return (int)131076L;
    }
    public static int CERT_FIND_ISSUER_ATTR() {
        return (int)196612L;
    }
    public static int CERT_FIND_SUBJECT_STR_A() {
        return (int)458759L;
    }
    public static int CERT_FIND_SUBJECT_STR_W() {
        return (int)524295L;
    }
    public static int CERT_FIND_SUBJECT_STR() {
        return (int)524295L;
    }
    public static int CERT_FIND_ISSUER_STR_A() {
        return (int)458756L;
    }
    public static int CERT_FIND_ISSUER_STR_W() {
        return (int)524292L;
    }
    public static int CERT_FIND_ISSUER_STR() {
        return (int)524292L;
    }
    public static int CERT_FIND_KEY_SPEC() {
        return (int)589824L;
    }
    public static int CERT_FIND_ENHKEY_USAGE() {
        return (int)655360L;
    }
    public static int CERT_FIND_CTL_USAGE() {
        return (int)655360L;
    }
    public static int CERT_FIND_SUBJECT_CERT() {
        return (int)720896L;
    }
    public static int CERT_FIND_ISSUER_OF() {
        return (int)786432L;
    }
    public static int CERT_FIND_EXISTING() {
        return (int)851968L;
    }
    public static int CERT_FIND_CERT_ID() {
        return (int)1048576L;
    }
    public static int CERT_FIND_CROSS_CERT_DIST_POINTS() {
        return (int)1114112L;
    }
    public static int CERT_FIND_PUBKEY_MD5_HASH() {
        return (int)1179648L;
    }
    public static int CERT_FIND_SUBJECT_INFO_ACCESS() {
        return (int)1245184L;
    }
    public static int CERT_FIND_HASH_STR() {
        return (int)1310720L;
    }
    public static int CERT_FIND_HAS_PRIVATE_KEY() {
        return (int)1376256L;
    }
    public static int CERT_FIND_OPTIONAL_CTL_USAGE_FLAG() {
        return (int)1L;
    }
    public static int CERT_FIND_EXT_ONLY_CTL_USAGE_FLAG() {
        return (int)2L;
    }
    public static int CERT_FIND_PROP_ONLY_CTL_USAGE_FLAG() {
        return (int)4L;
    }
    public static int CERT_FIND_NO_CTL_USAGE_FLAG() {
        return (int)8L;
    }
    public static int CERT_FIND_OR_CTL_USAGE_FLAG() {
        return (int)16L;
    }
    public static int CERT_FIND_VALID_CTL_USAGE_FLAG() {
        return (int)32L;
    }
    public static int CERT_SET_PROPERTY_IGNORE_PERSIST_ERROR_FLAG() {
        return (int)2147483648L;
    }
    public static int CERT_STORE_ALL_CONTEXT_FLAG() {
        return (int)4294967295L;
    }
    public static int CERT_STORE_CERTIFICATE_CONTEXT_FLAG() {
        return (int)2L;
    }
    public static int CERT_STORE_CRL_CONTEXT_FLAG() {
        return (int)4L;
    }
    public static int CERT_STORE_CTL_CONTEXT_FLAG() {
        return (int)8L;
    }
    public static int CTL_FIND_NO_LIST_ID_CBDATA() {
        return (int)4294967295L;
    }
    public static MemoryAddress CTL_FIND_NO_SIGNER_PTR() {
        return constants$1620.CTL_FIND_NO_SIGNER_PTR$ADDR;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_DEFAULT_NAME() {
        return constants$1621.CERT_PHYSICAL_STORE_DEFAULT_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_GROUP_POLICY_NAME() {
        return constants$1621.CERT_PHYSICAL_STORE_GROUP_POLICY_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME() {
        return constants$1621.CERT_PHYSICAL_STORE_LOCAL_MACHINE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME() {
        return constants$1621.CERT_PHYSICAL_STORE_DS_USER_CERTIFICATE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME() {
        return constants$1621.CERT_PHYSICAL_STORE_LOCAL_MACHINE_GROUP_POLICY_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_ENTERPRISE_NAME() {
        return constants$1621.CERT_PHYSICAL_STORE_ENTERPRISE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_AUTH_ROOT_NAME() {
        return constants$1622.CERT_PHYSICAL_STORE_AUTH_ROOT_NAME$SEGMENT;
    }
    public static MemorySegment CERT_PHYSICAL_STORE_SMART_CARD_NAME() {
        return constants$1622.CERT_PHYSICAL_STORE_SMART_CARD_NAME$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC() {
        return constants$1622.CRYPT_OID_OPEN_SYSTEM_STORE_PROV_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC() {
        return constants$1622.CRYPT_OID_REGISTER_SYSTEM_STORE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC() {
        return constants$1622.CRYPT_OID_UNREGISTER_SYSTEM_STORE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_ENUM_SYSTEM_STORE_FUNC() {
        return constants$1622.CRYPT_OID_ENUM_SYSTEM_STORE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC() {
        return constants$1623.CRYPT_OID_REGISTER_PHYSICAL_STORE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC() {
        return constants$1623.CRYPT_OID_UNREGISTER_PHYSICAL_STORE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC() {
        return constants$1623.CRYPT_OID_ENUM_PHYSICAL_STORE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME() {
        return constants$1623.CRYPT_OID_SYSTEM_STORE_LOCATION_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC() {
        return constants$1623.CRYPT_OID_EXTRACT_ENCODED_SIGNATURE_PARAMETERS_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC() {
        return constants$1623.CRYPT_OID_SIGN_AND_ENCODE_HASH_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC() {
        return constants$1624.CRYPT_OID_VERIFY_ENCODED_SIGNATURE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC() {
        return constants$1624.CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC() {
        return constants$1624.CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_EX2_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC() {
        return constants$1624.CRYPT_OID_EXPORT_PUBLIC_KEY_INFO_FROM_BCRYPT_HANDLE_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC() {
        return constants$1624.CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC() {
        return constants$1624.CRYPT_OID_IMPORT_PRIVATE_KEY_INFO_FUNC$SEGMENT;
    }
    public static MemorySegment CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC() {
        return constants$1625.CRYPT_OID_EXPORT_PRIVATE_KEY_INFO_FUNC$SEGMENT;
    }
    public static int CRYPT_DELETE_KEYSET() {
        return (int)16L;
    }
    public static MemorySegment CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC() {
        return constants$1625.CRYPT_OID_IMPORT_PUBLIC_KEY_INFO_EX2_FUNC$SEGMENT;
    }
    public static int CERT_QUERY_CONTENT_FLAG_CERT() {
        return (int)2L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_CTL() {
        return (int)4L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_CRL() {
        return (int)8L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_SERIALIZED_STORE() {
        return (int)16L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_SERIALIZED_CERT() {
        return (int)32L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_SERIALIZED_CTL() {
        return (int)64L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_SERIALIZED_CRL() {
        return (int)128L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED() {
        return (int)256L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_PKCS7_UNSIGNED() {
        return (int)512L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_PKCS7_SIGNED_EMBED() {
        return (int)1024L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_PKCS10() {
        return (int)2048L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_PFX() {
        return (int)4096L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_CERT_PAIR() {
        return (int)8192L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_PFX_AND_LOAD() {
        return (int)16384L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_ALL() {
        return (int)16382L;
    }
    public static int CERT_QUERY_CONTENT_FLAG_ALL_ISSUER_CERT() {
        return (int)818L;
    }
    public static int CERT_QUERY_FORMAT_FLAG_BINARY() {
        return (int)2L;
    }
    public static int CERT_QUERY_FORMAT_FLAG_BASE64_ENCODED() {
        return (int)4L;
    }
    public static int CERT_QUERY_FORMAT_FLAG_ASN_ASCII_HEX_ENCODED() {
        return (int)8L;
    }
    public static int CERT_QUERY_FORMAT_FLAG_ALL() {
        return (int)14L;
    }
    public static MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS_A() {
        return constants$1625.CREDENTIAL_OID_PASSWORD_CREDENTIALS_A$ADDR;
    }
    public static MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS_W() {
        return constants$1625.CREDENTIAL_OID_PASSWORD_CREDENTIALS_W$ADDR;
    }
    public static MemoryAddress CREDENTIAL_OID_PASSWORD_CREDENTIALS() {
        return constants$1625.CREDENTIAL_OID_PASSWORD_CREDENTIALS$ADDR;
    }
    public static MemorySegment SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC() {
        return constants$1625.SCHEME_OID_RETRIEVE_ENCODED_OBJECT_FUNC$SEGMENT;
    }
    public static MemorySegment SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC() {
        return constants$1626.SCHEME_OID_RETRIEVE_ENCODED_OBJECTW_FUNC$SEGMENT;
    }
    public static MemorySegment CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC() {
        return constants$1626.CONTEXT_OID_CREATE_OBJECT_CONTEXT_FUNC$SEGMENT;
    }
    public static MemoryAddress CONTEXT_OID_CERTIFICATE() {
        return constants$1626.CONTEXT_OID_CERTIFICATE$ADDR;
    }
    public static MemoryAddress CONTEXT_OID_CRL() {
        return constants$1626.CONTEXT_OID_CRL$ADDR;
    }
    public static MemoryAddress CONTEXT_OID_CTL() {
        return constants$1626.CONTEXT_OID_CTL$ADDR;
    }
    public static MemoryAddress CONTEXT_OID_PKCS7() {
        return constants$1626.CONTEXT_OID_PKCS7$ADDR;
    }
    public static MemoryAddress CONTEXT_OID_CAPI2_ANY() {
        return constants$1627.CONTEXT_OID_CAPI2_ANY$ADDR;
    }
    public static MemoryAddress CONTEXT_OID_OCSP_RESP() {
        return constants$1627.CONTEXT_OID_OCSP_RESP$ADDR;
    }
    public static int CRYPTNET_URL_CACHE_DISABLE_FLUSH() {
        return (int)4294967295L;
    }
    public static MemoryAddress CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION() {
        return constants$1627.CRYPT_PARAM_ASYNC_RETRIEVAL_COMPLETION$ADDR;
    }
    public static MemoryAddress CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL() {
        return constants$1627.CRYPT_PARAM_CANCEL_ASYNC_RETRIEVAL$ADDR;
    }
    public static MemorySegment URL_OID_GET_OBJECT_URL_FUNC() {
        return constants$1627.URL_OID_GET_OBJECT_URL_FUNC$SEGMENT;
    }
    public static MemoryAddress URL_OID_CERTIFICATE_ISSUER() {
        return constants$1627.URL_OID_CERTIFICATE_ISSUER$ADDR;
    }
    public static MemoryAddress URL_OID_CERTIFICATE_CRL_DIST_POINT() {
        return constants$1628.URL_OID_CERTIFICATE_CRL_DIST_POINT$ADDR;
    }
    public static MemoryAddress URL_OID_CTL_ISSUER() {
        return constants$1628.URL_OID_CTL_ISSUER$ADDR;
    }
    public static MemoryAddress URL_OID_CTL_NEXT_UPDATE() {
        return constants$1628.URL_OID_CTL_NEXT_UPDATE$ADDR;
    }
    public static MemoryAddress URL_OID_CRL_ISSUER() {
        return constants$1628.URL_OID_CRL_ISSUER$ADDR;
    }
    public static MemoryAddress URL_OID_CERTIFICATE_FRESHEST_CRL() {
        return constants$1628.URL_OID_CERTIFICATE_FRESHEST_CRL$ADDR;
    }
    public static MemoryAddress URL_OID_CRL_FRESHEST_CRL() {
        return constants$1628.URL_OID_CRL_FRESHEST_CRL$ADDR;
    }
    public static MemoryAddress URL_OID_CROSS_CERT_DIST_POINT() {
        return constants$1629.URL_OID_CROSS_CERT_DIST_POINT$ADDR;
    }
    public static MemoryAddress URL_OID_CERTIFICATE_OCSP() {
        return constants$1629.URL_OID_CERTIFICATE_OCSP$ADDR;
    }
    public static MemoryAddress URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT() {
        return constants$1629.URL_OID_CERTIFICATE_OCSP_AND_CRL_DIST_POINT$ADDR;
    }
    public static MemoryAddress URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP() {
        return constants$1629.URL_OID_CERTIFICATE_CRL_DIST_POINT_AND_OCSP$ADDR;
    }
    public static MemoryAddress URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS() {
        return constants$1629.URL_OID_CROSS_CERT_SUBJECT_INFO_ACCESS$ADDR;
    }
    public static MemoryAddress URL_OID_CERTIFICATE_ONLY_OCSP() {
        return constants$1629.URL_OID_CERTIFICATE_ONLY_OCSP$ADDR;
    }
    public static MemorySegment TIME_VALID_OID_GET_OBJECT_FUNC() {
        return constants$1630.TIME_VALID_OID_GET_OBJECT_FUNC$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_CONFIG_REGPATH() {
        return constants$1630.CERT_CHAIN_CONFIG_REGPATH$SEGMENT;
    }
    public static MemoryAddress TIME_VALID_OID_GET_CTL() {
        return constants$1630.TIME_VALID_OID_GET_CTL$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_GET_CRL() {
        return constants$1630.TIME_VALID_OID_GET_CRL$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_GET_CRL_FROM_CERT() {
        return constants$1630.TIME_VALID_OID_GET_CRL_FROM_CERT$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT() {
        return constants$1630.TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CERT$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL() {
        return constants$1631.TIME_VALID_OID_GET_FRESHEST_CRL_FROM_CRL$ADDR;
    }
    public static MemorySegment TIME_VALID_OID_FLUSH_OBJECT_FUNC() {
        return constants$1631.TIME_VALID_OID_FLUSH_OBJECT_FUNC$SEGMENT;
    }
    public static MemoryAddress TIME_VALID_OID_FLUSH_CTL() {
        return constants$1631.TIME_VALID_OID_FLUSH_CTL$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_FLUSH_CRL() {
        return constants$1631.TIME_VALID_OID_FLUSH_CRL$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_FLUSH_CRL_FROM_CERT() {
        return constants$1631.TIME_VALID_OID_FLUSH_CRL_FROM_CERT$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT() {
        return constants$1631.TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CERT$ADDR;
    }
    public static MemoryAddress TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL() {
        return constants$1632.TIME_VALID_OID_FLUSH_FRESHEST_CRL_FROM_CRL$ADDR;
    }
    public static MemorySegment CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME() {
        return constants$1632.CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_MAX_URL_RETRIEVAL_BYTE_COUNT_DEFAULT() {
        return (int)104857600L;
    }
    public static MemorySegment CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME() {
        return constants$1632.CERT_CHAIN_CACHE_RESYNC_FILETIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME() {
        return constants$1632.CERT_CHAIN_DISABLE_MANDATORY_BASIC_CONSTRAINTS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME() {
        return constants$1632.CERT_CHAIN_DISABLE_CA_NAME_CONSTRAINTS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME() {
        return constants$1632.CERT_CHAIN_DISABLE_UNSUPPORTED_CRITICAL_EXTENSIONS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME() {
        return constants$1633.CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME() {
        return constants$1633.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME() {
        return constants$1633.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME() {
        return constants$1633.CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME() {
        return constants$1633.CERT_CHAIN_OCSP_VALIDITY_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_OCSP_VALIDITY_SECONDS_DEFAULT() {
        return (int)43200L;
    }
    public static MemorySegment CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME() {
        return constants$1633.CERT_CHAIN_DISABLE_SERIAL_CHAIN_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME() {
        return constants$1634.CERT_CHAIN_SERIAL_CHAIN_LOG_FILE_NAME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME() {
        return constants$1634.CERT_CHAIN_DISABLE_SYNC_WITH_SSL_TIME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME() {
        return constants$1634.CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DISABLE() {
        return (int)4294967295L;
    }
    public static MemorySegment CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME() {
        return constants$1634.CERT_CHAIN_SSL_HANDSHAKE_LOG_FILE_NAME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME() {
        return constants$1634.CERT_CHAIN_ENABLE_WEAK_SIGNATURE_FLAGS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME() {
        return constants$1634.CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DISABLE() {
        return (int)4294967295L;
    }
    public static MemorySegment CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME() {
        return constants$1635.CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_VALUE_NAME$SEGMENT;
    }
    public static long CERT_CHAIN_WEAK_RSA_PUB_KEY_TIME_DEFAULT() {
        return 129067776000000000L;
    }
    public static MemorySegment CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME() {
        return constants$1635.CERT_CHAIN_WEAK_SIGNATURE_LOG_DIR_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_DEFAULT_CONFIG_SUBDIR() {
        return constants$1635.CERT_CHAIN_DEFAULT_CONFIG_SUBDIR$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_PREFIX_NAME() {
        return constants$1635.CERT_CHAIN_WEAK_PREFIX_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME() {
        return constants$1635.CERT_CHAIN_WEAK_THIRD_PARTY_CONFIG_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_ALL_CONFIG_NAME() {
        return constants$1635.CERT_CHAIN_WEAK_ALL_CONFIG_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_FLAGS_NAME() {
        return constants$1636.CERT_CHAIN_WEAK_FLAGS_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_HYGIENE_NAME() {
        return constants$1636.CERT_CHAIN_WEAK_HYGIENE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_AFTER_TIME_NAME() {
        return constants$1636.CERT_CHAIN_WEAK_AFTER_TIME_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME() {
        return constants$1636.CERT_CHAIN_WEAK_FILE_HASH_AFTER_TIME_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME() {
        return constants$1636.CERT_CHAIN_WEAK_TIMESTAMP_HASH_AFTER_TIME_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME() {
        return constants$1636.CERT_CHAIN_WEAK_MIN_BIT_LENGTH_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_WEAK_SHA256_ALLOW_NAME() {
        return constants$1637.CERT_CHAIN_WEAK_SHA256_ALLOW_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_MIN_PUB_KEY_BIT_LENGTH_DISABLE() {
        return (int)4294967295L;
    }
    public static int CERT_CHAIN_ENABLE_WEAK_SETTINGS_FLAG() {
        return (int)2147483648L;
    }
    public static int CERT_CHAIN_DISABLE_WEAK_FLAGS() {
        return (int)215285760L;
    }
    public static int CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAGS() {
        return (int)12288L;
    }
    public static int CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAGS() {
        return (int)49152L;
    }
    public static int CERT_CHAIN_ENABLE_HYGIENE_FLAGS() {
        return (int)857866240L;
    }
    public static int CERT_CHAIN_MOTW_WEAK_FLAGS() {
        return (int)1786773504L;
    }
    public static int CERT_CHAIN_OPT_IN_WEAK_FLAGS() {
        return (int)262144L;
    }
    public static MemorySegment CERT_CHAIN_AUTO_FLAGS_VALUE_NAME() {
        return constants$1637.CERT_CHAIN_AUTO_FLAGS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_AUTO_LOG_FLAGS() {
        return (int)14L;
    }
    public static MemorySegment CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME() {
        return constants$1637.CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_AUTO_FLUSH_FIRST_DELTA_SECONDS_DEFAULT() {
        return (int)300L;
    }
    public static MemorySegment CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME() {
        return constants$1637.CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_AUTO_FLUSH_NEXT_DELTA_SECONDS_DEFAULT() {
        return (int)1800L;
    }
    public static MemorySegment CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME() {
        return constants$1637.CERT_CHAIN_AUTO_LOG_FILE_NAME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME() {
        return constants$1637.CERT_CHAIN_DISABLE_AUTO_FLUSH_PROCESS_NAME_LIST_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME() {
        return constants$1638.CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_SRV_OCSP_RESP_MIN_VALIDITY_SECONDS_DEFAULT() {
        return (int)600L;
    }
    public static MemorySegment CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME() {
        return constants$1638.CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_SRV_OCSP_RESP_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT() {
        return (int)15000L;
    }
    public static MemorySegment CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() {
        return constants$1638.CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_SRV_OCSP_RESP_MAX_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() {
        return (int)14400L;
    }
    public static MemorySegment CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() {
        return constants$1638.CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_SRV_OCSP_RESP_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() {
        return (int)120L;
    }
    public static MemorySegment CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME() {
        return constants$1638.CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_SRV_OCSP_RESP_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT() {
        return (int)60L;
    }
    public static MemorySegment CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME() {
        return constants$1638.CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME() {
        return constants$1639.CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_SRV_OCSP_RESP_MAX_SYNC_CERT_FILE_SECONDS_DEFAULT() {
        return (int)3600L;
    }
    public static MemorySegment CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME() {
        return constants$1639.CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_OCSP_AFTER_CRL_DISABLE() {
        return (int)4294967295L;
    }
    public static MemorySegment CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME() {
        return constants$1639.CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_URL_CACHE_DEFAULT_FLUSH_EXEMPT_SECONDS_DEFAULT() {
        return (int)2419200L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME() {
        return constants$1639.CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_MIN_MAX_AGE_SECONDS_DEFAULT() {
        return (int)3600L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME() {
        return constants$1639.CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_MAX_MAX_AGE_SECONDS_DEFAULT() {
        return (int)1209600L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME() {
        return constants$1639.CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_MIN_OCSP_VALIDITY_PERIOD_SECONDS_DEFAULT() {
        return (int)1209600L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME() {
        return constants$1640.CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME() {
        return constants$1640.CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() {
        return constants$1640.CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT() {
        return (int)3600L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME() {
        return constants$1640.CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() {
        return constants$1640.CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_MAX_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT() {
        return (int)14400L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() {
        return constants$1640.CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_PRE_FETCH_PERIOD_SECONDS_DEFAULT() {
        return (int)1800L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME() {
        return constants$1641.CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_AFTER_CURRENT_TIME_PRE_FETCH_PERIOD_SECONDS_DEFAULT() {
        return (int)1800L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME() {
        return constants$1641.CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_TRIGGER_PERIOD_SECONDS_DEFAULT() {
        return (int)600L;
    }
    public static int CRYPTNET_PRE_FETCH_TRIGGER_DISABLE() {
        return (int)4294967295L;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME() {
        return constants$1641.CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME() {
        return constants$1641.CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_PRE_FETCH_RETRIEVAL_TIMEOUT_SECONDS_DEFAULT() {
        return (int)300L;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_CONFIG_REGPATH() {
        return constants$1641.CRYPTNET_CRL_PRE_FETCH_CONFIG_REGPATH$SEGMENT;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME() {
        return constants$1641.CRYPTNET_CRL_PRE_FETCH_PROCESS_NAME_LIST_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME() {
        return constants$1642.CRYPTNET_CRL_PRE_FETCH_URL_LIST_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME() {
        return constants$1642.CRYPTNET_CRL_PRE_FETCH_DISABLE_INFORMATION_EVENTS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME() {
        return constants$1642.CRYPTNET_CRL_PRE_FETCH_LOG_FILE_NAME_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME() {
        return constants$1642.CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_CRL_PRE_FETCH_TIMEOUT_SECONDS_DEFAULT() {
        return (int)300L;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME() {
        return constants$1642.CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_DEFAULT() {
        return (int)7200L;
    }
    public static int CRYPTNET_CRL_PRE_FETCH_MAX_AGE_SECONDS_MIN() {
        return (int)300L;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() {
        return constants$1642.CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_CRL_PRE_FETCH_PUBLISH_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() {
        return (int)3600L;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME() {
        return constants$1643.CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_CRL_PRE_FETCH_PUBLISH_RANDOM_INTERVAL_SECONDS_DEFAULT() {
        return (int)300L;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME() {
        return constants$1643.CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_CRL_PRE_FETCH_MIN_BEFORE_NEXT_UPDATE_SECONDS_DEFAULT() {
        return (int)300L;
    }
    public static MemorySegment CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME() {
        return constants$1643.CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_CRL_PRE_FETCH_MIN_AFTER_NEXT_UPDATE_SECONDS_DEFAULT() {
        return (int)300L;
    }
    public static MemorySegment CERT_GROUP_POLICY_CHAIN_CONFIG_REGPATH() {
        return constants$1643.CERT_GROUP_POLICY_CHAIN_CONFIG_REGPATH$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME() {
        return constants$1643.CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT() {
        return (int)15000L;
    }
    public static MemorySegment CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME() {
        return constants$1643.CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_REV_ACCUMULATIVE_URL_RETRIEVAL_TIMEOUT_MILLISECONDS_DEFAULT() {
        return (int)20000L;
    }
    public static MemorySegment CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME() {
        return constants$1644.CERT_RETR_BEHAVIOR_INET_AUTH_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME() {
        return constants$1644.CERT_RETR_BEHAVIOR_INET_STATUS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_RETR_BEHAVIOR_FILE_VALUE_NAME() {
        return constants$1644.CERT_RETR_BEHAVIOR_FILE_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME() {
        return constants$1644.CERT_RETR_BEHAVIOR_LDAP_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME() {
        return constants$1644.CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_VALUE_NAME$SEGMENT;
    }
    public static int CRYPTNET_CRL_BEFORE_OCSP_ENABLE() {
        return (int)4294967295L;
    }
    public static MemorySegment CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME() {
        return constants$1644.CERT_CHAIN_DISABLE_AIA_URL_RETRIEVAL_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_OPTIONS_VALUE_NAME() {
        return constants$1645.CERT_CHAIN_OPTIONS_VALUE_NAME$SEGMENT;
    }
    public static MemorySegment CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME() {
        return constants$1645.CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_VALUE_NAME$SEGMENT;
    }
    public static int CERT_CHAIN_CROSS_CERT_DOWNLOAD_INTERVAL_HOURS_DEFAULT() {
        return (int)168L;
    }
    public static MemorySegment CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME() {
        return constants$1645.CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_VALUE_NAME$SEGMENT;
    }
    public static MemoryAddress HCCE_CURRENT_USER() {
        return constants$1645.HCCE_CURRENT_USER$ADDR;
    }
    public static MemoryAddress HCCE_LOCAL_MACHINE() {
        return constants$1645.HCCE_LOCAL_MACHINE$ADDR;
    }
    public static MemoryAddress HCCE_SERIAL_LOCAL_MACHINE() {
        return constants$1645.HCCE_SERIAL_LOCAL_MACHINE$ADDR;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_CACHE_ONLY() {
        return (int)2147483648L;
    }
    public static MemoryAddress REVOCATION_OID_CRL_REVOCATION() {
        return constants$1646.REVOCATION_OID_CRL_REVOCATION$ADDR;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_ALL_NOT_TIME_VALID_FLAGS() {
        return (int)7L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_ALL_REV_UNKNOWN_FLAGS() {
        return (int)3840L;
    }
    public static MemorySegment CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC() {
        return constants$1646.CRYPT_OID_VERIFY_CERTIFICATE_CHAIN_POLICY_FUNC$SEGMENT;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_BASE() {
        return constants$1646.CERT_CHAIN_POLICY_BASE$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_AUTHENTICODE() {
        return constants$1646.CERT_CHAIN_POLICY_AUTHENTICODE$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_AUTHENTICODE_TS() {
        return constants$1646.CERT_CHAIN_POLICY_AUTHENTICODE_TS$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_SSL() {
        return constants$1646.CERT_CHAIN_POLICY_SSL$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_BASIC_CONSTRAINTS() {
        return constants$1647.CERT_CHAIN_POLICY_BASIC_CONSTRAINTS$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_NT_AUTH() {
        return constants$1647.CERT_CHAIN_POLICY_NT_AUTH$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_MICROSOFT_ROOT() {
        return constants$1647.CERT_CHAIN_POLICY_MICROSOFT_ROOT$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_EV() {
        return constants$1647.CERT_CHAIN_POLICY_EV$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_SSL_F12() {
        return constants$1647.CERT_CHAIN_POLICY_SSL_F12$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_SSL_HPKP_HEADER() {
        return constants$1647.CERT_CHAIN_POLICY_SSL_HPKP_HEADER$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_THIRD_PARTY_ROOT() {
        return constants$1648.CERT_CHAIN_POLICY_THIRD_PARTY_ROOT$ADDR;
    }
    public static MemoryAddress CERT_CHAIN_POLICY_SSL_KEY_PIN() {
        return constants$1648.CERT_CHAIN_POLICY_SSL_KEY_PIN$ADDR;
    }
}


