// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$599 {

    static final FunctionDescriptor LoadAcceleratorsW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle LoadAcceleratorsW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LoadAcceleratorsW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$599.LoadAcceleratorsW$FUNC, false
    );
    static final FunctionDescriptor CreateAcceleratorTableA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle CreateAcceleratorTableA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateAcceleratorTableA",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$599.CreateAcceleratorTableA$FUNC, false
    );
    static final FunctionDescriptor CreateAcceleratorTableW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle CreateAcceleratorTableW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateAcceleratorTableW",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$599.CreateAcceleratorTableW$FUNC, false
    );
    static final FunctionDescriptor DestroyAcceleratorTable$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle DestroyAcceleratorTable$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DestroyAcceleratorTable",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$599.DestroyAcceleratorTable$FUNC, false
    );
    static final FunctionDescriptor CopyAcceleratorTableA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle CopyAcceleratorTableA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CopyAcceleratorTableA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$599.CopyAcceleratorTableA$FUNC, false
    );
    static final FunctionDescriptor CopyAcceleratorTableW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle CopyAcceleratorTableW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CopyAcceleratorTableW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$599.CopyAcceleratorTableW$FUNC, false
    );
}


