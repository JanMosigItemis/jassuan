// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$922 {

    static final FunctionDescriptor CryptProtectData$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle CryptProtectData$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptProtectData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$922.CryptProtectData$FUNC, false
    );
    static final FunctionDescriptor CryptUnprotectData$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle CryptUnprotectData$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptUnprotectData",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$922.CryptUnprotectData$FUNC, false
    );
    static final FunctionDescriptor CryptUpdateProtectedState$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptUpdateProtectedState$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptUpdateProtectedState",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$922.CryptUpdateProtectedState$FUNC, false
    );
    static final FunctionDescriptor CryptProtectMemory$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle CryptProtectMemory$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptProtectMemory",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$922.CryptProtectMemory$FUNC, false
    );
    static final FunctionDescriptor CryptUnprotectMemory$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle CryptUnprotectMemory$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptUnprotectMemory",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$922.CryptUnprotectMemory$FUNC, false
    );
    static final FunctionDescriptor QueryUsersOnEncryptedFile$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle QueryUsersOnEncryptedFile$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryUsersOnEncryptedFile",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$922.QueryUsersOnEncryptedFile$FUNC, false
    );
}


