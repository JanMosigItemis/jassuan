// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$491 {

    static final FunctionDescriptor EnumFontsA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle EnumFontsA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EnumFontsA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$491.EnumFontsA$FUNC, false
    );
    static final FunctionDescriptor EnumFontsW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle EnumFontsW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EnumFontsW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$491.EnumFontsW$FUNC, false
    );
    static final FunctionDescriptor EnumObjects$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle EnumObjects$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EnumObjects",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;J)I",
        constants$491.EnumObjects$FUNC, false
    );
    static final FunctionDescriptor EqualRgn$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle EqualRgn$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EqualRgn",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$491.EqualRgn$FUNC, false
    );
    static final FunctionDescriptor Escape$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle Escape$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Escape",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$491.Escape$FUNC, false
    );
    static final FunctionDescriptor ExtEscape$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle ExtEscape$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ExtEscape",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$491.ExtEscape$FUNC, false
    );
}


