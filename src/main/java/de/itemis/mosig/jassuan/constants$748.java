// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$748 {

    static final FunctionDescriptor waveOutGetErrorTextW$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutGetErrorTextW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetErrorTextW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$748.waveOutGetErrorTextW$FUNC, false
    );
    static final FunctionDescriptor waveOutOpen$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG
    );
    static final MethodHandle waveOutOpen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutOpen",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;JJI)I",
        constants$748.waveOutOpen$FUNC, false
    );
    static final FunctionDescriptor waveOutClose$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveOutClose$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutClose",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$748.waveOutClose$FUNC, false
    );
    static final FunctionDescriptor waveOutPrepareHeader$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutPrepareHeader$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutPrepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$748.waveOutPrepareHeader$FUNC, false
    );
    static final FunctionDescriptor waveOutUnprepareHeader$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutUnprepareHeader$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutUnprepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$748.waveOutUnprepareHeader$FUNC, false
    );
    static final FunctionDescriptor waveOutWrite$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutWrite$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutWrite",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$748.waveOutWrite$FUNC, false
    );
}


