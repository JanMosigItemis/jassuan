// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$968 {

    static final FunctionDescriptor NdrPartialIgnoreClientMarshall$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrPartialIgnoreClientMarshall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrPartialIgnoreClientMarshall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$968.NdrPartialIgnoreClientMarshall$FUNC, false
    );
    static final FunctionDescriptor NdrPartialIgnoreServerUnmarshall$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrPartialIgnoreServerUnmarshall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrPartialIgnoreServerUnmarshall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$968.NdrPartialIgnoreServerUnmarshall$FUNC, false
    );
    static final FunctionDescriptor NdrPartialIgnoreClientBufferSize$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrPartialIgnoreClientBufferSize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrPartialIgnoreClientBufferSize",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$968.NdrPartialIgnoreClientBufferSize$FUNC, false
    );
    static final FunctionDescriptor NdrPartialIgnoreServerInitialize$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrPartialIgnoreServerInitialize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrPartialIgnoreServerInitialize",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$968.NdrPartialIgnoreServerInitialize$FUNC, false
    );
    static final FunctionDescriptor RpcUserFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcUserFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcUserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$968.RpcUserFree$FUNC, false
    );
    static final MemoryLayout IWinTypesBase_v0_1_c_ifspec$LAYOUT = C_POINTER;
    static final VarHandle IWinTypesBase_v0_1_c_ifspec$VH = MemoryHandles.asAddressVarHandle(constants$968.IWinTypesBase_v0_1_c_ifspec$LAYOUT.varHandle(long.class));
    static final MemorySegment IWinTypesBase_v0_1_c_ifspec$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IWinTypesBase_v0_1_c_ifspec", constants$968.IWinTypesBase_v0_1_c_ifspec$LAYOUT);
}


