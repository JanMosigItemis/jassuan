// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$24 {

    static final FunctionDescriptor snwprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle snwprintf$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "snwprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$24.snwprintf$FUNC, true
    );
    static final FunctionDescriptor vsnwprintf$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle vsnwprintf$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "vsnwprintf",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$24.vsnwprintf$FUNC, false
    );
    static final FunctionDescriptor _wfsopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle _wfsopen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wfsopen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$24._wfsopen$FUNC, false
    );
    static final FunctionDescriptor fgetwc$FUNC = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final MethodHandle fgetwc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fgetwc",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        constants$24.fgetwc$FUNC, false
    );
    static final FunctionDescriptor _fgetwchar$FUNC = FunctionDescriptor.of(C_SHORT);
    static final MethodHandle _fgetwchar$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_fgetwchar",
        "()S",
        constants$24._fgetwchar$FUNC, false
    );
    static final FunctionDescriptor fputwc$FUNC = FunctionDescriptor.of(C_SHORT,
        C_SHORT,
        C_POINTER
    );
    static final MethodHandle fputwc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fputwc",
        "(SLjdk/incubator/foreign/MemoryAddress;)S",
        constants$24.fputwc$FUNC, false
    );
}


