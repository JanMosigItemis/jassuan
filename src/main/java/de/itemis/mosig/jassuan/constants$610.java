// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$610 {

    static final FunctionDescriptor GrayStringW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle GrayStringW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GrayStringW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JIIIII)I",
        constants$610.GrayStringW$FUNC, false
    );
    static final FunctionDescriptor DrawStateA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle DrawStateA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DrawStateA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJIIIII)I",
        constants$610.DrawStateA$FUNC, false
    );
    static final FunctionDescriptor DrawStateW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle DrawStateW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DrawStateW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJIIIII)I",
        constants$610.DrawStateW$FUNC, false
    );
    static final FunctionDescriptor TabbedTextOutA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle TabbedTextOutA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "TabbedTextOutA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$610.TabbedTextOutA$FUNC, false
    );
    static final FunctionDescriptor TabbedTextOutW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle TabbedTextOutW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "TabbedTextOutW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$610.TabbedTextOutW$FUNC, false
    );
    static final FunctionDescriptor GetTabbedTextExtentA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle GetTabbedTextExtentA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetTabbedTextExtentA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$610.GetTabbedTextExtentA$FUNC, false
    );
}


