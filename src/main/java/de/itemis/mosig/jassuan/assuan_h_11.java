// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_11 extends assuan_h_10 {

    public static int SO_SNDLOWAT() {
        return (int)4099L;
    }
    public static int SO_RCVLOWAT() {
        return (int)4100L;
    }
    public static int SO_SNDTIMEO() {
        return (int)4101L;
    }
    public static int SO_RCVTIMEO() {
        return (int)4102L;
    }
    public static int SO_ERROR() {
        return (int)4103L;
    }
    public static int SO_TYPE() {
        return (int)4104L;
    }
    public static int SO_GROUP_ID() {
        return (int)8193L;
    }
    public static int SO_GROUP_PRIORITY() {
        return (int)8194L;
    }
    public static int SO_MAX_MSG_SIZE() {
        return (int)8195L;
    }
    public static int SO_PROTOCOL_INFOA() {
        return (int)8196L;
    }
    public static int SO_PROTOCOL_INFOW() {
        return (int)8197L;
    }
    public static int PVD_CONFIG() {
        return (int)12289L;
    }
    public static int SO_CONDITIONAL_ACCEPT() {
        return (int)12290L;
    }
    public static int TCP_NODELAY() {
        return (int)1L;
    }
    public static int AF_UNSPEC() {
        return (int)0L;
    }
    public static int AF_UNIX() {
        return (int)1L;
    }
    public static int AF_INET() {
        return (int)2L;
    }
    public static int AF_IMPLINK() {
        return (int)3L;
    }
    public static int AF_PUP() {
        return (int)4L;
    }
    public static int AF_CHAOS() {
        return (int)5L;
    }
    public static int AF_NS() {
        return (int)6L;
    }
    public static int AF_ISO() {
        return (int)7L;
    }
    public static int AF_ECMA() {
        return (int)8L;
    }
    public static int AF_DATAKIT() {
        return (int)9L;
    }
    public static int AF_CCITT() {
        return (int)10L;
    }
    public static int AF_SNA() {
        return (int)11L;
    }
    public static int AF_DECnet() {
        return (int)12L;
    }
    public static int AF_DLI() {
        return (int)13L;
    }
    public static int AF_LAT() {
        return (int)14L;
    }
    public static int AF_HYLINK() {
        return (int)15L;
    }
    public static int AF_APPLETALK() {
        return (int)16L;
    }
    public static int AF_NETBIOS() {
        return (int)17L;
    }
    public static int AF_VOICEVIEW() {
        return (int)18L;
    }
    public static int AF_FIREFOX() {
        return (int)19L;
    }
    public static int AF_UNKNOWN1() {
        return (int)20L;
    }
    public static int AF_BAN() {
        return (int)21L;
    }
    public static int AF_ATM() {
        return (int)22L;
    }
    public static int AF_INET6() {
        return (int)23L;
    }
    public static int AF_CLUSTER() {
        return (int)24L;
    }
    public static int AF_12844() {
        return (int)25L;
    }
    public static int AF_IRDA() {
        return (int)26L;
    }
    public static int AF_NETDES() {
        return (int)28L;
    }
    public static int AF_TCNPROCESS() {
        return (int)29L;
    }
    public static int AF_TCNMESSAGE() {
        return (int)30L;
    }
    public static int AF_ICLFXBM() {
        return (int)31L;
    }
    public static int AF_BTH() {
        return (int)32L;
    }
    public static int AF_MAX() {
        return (int)33L;
    }
    public static int _SS_MAXSIZE() {
        return (int)128L;
    }
    public static int SOL_SOCKET() {
        return (int)65535L;
    }
    public static int SOMAXCONN() {
        return (int)2147483647L;
    }
    public static int MSG_OOB() {
        return (int)1L;
    }
    public static int MSG_PEEK() {
        return (int)2L;
    }
    public static int MSG_DONTROUTE() {
        return (int)4L;
    }
    public static int MSG_WAITALL() {
        return (int)8L;
    }
    public static int MSG_PARTIAL() {
        return (int)32768L;
    }
    public static int MSG_INTERRUPT() {
        return (int)16L;
    }
    public static int MSG_MAXIOVLEN() {
        return (int)16L;
    }
    public static int MAXGETHOSTSTRUCT() {
        return (int)1024L;
    }
    public static int FD_READ_BIT() {
        return (int)0L;
    }
    public static int FD_WRITE_BIT() {
        return (int)1L;
    }
    public static int FD_OOB_BIT() {
        return (int)2L;
    }
    public static int FD_ACCEPT_BIT() {
        return (int)3L;
    }
    public static int FD_CONNECT_BIT() {
        return (int)4L;
    }
    public static int FD_CLOSE_BIT() {
        return (int)5L;
    }
    public static int FD_QOS_BIT() {
        return (int)6L;
    }
    public static int FD_GROUP_QOS_BIT() {
        return (int)7L;
    }
    public static int FD_ROUTING_INTERFACE_CHANGE_BIT() {
        return (int)8L;
    }
    public static int FD_ADDRESS_LIST_CHANGE_BIT() {
        return (int)9L;
    }
    public static int FD_MAX_EVENTS() {
        return (int)10L;
    }
    public static int SERVICETYPE_NOTRAFFIC() {
        return (int)0L;
    }
    public static int SERVICETYPE_BESTEFFORT() {
        return (int)1L;
    }
    public static int SERVICETYPE_CONTROLLEDLOAD() {
        return (int)2L;
    }
    public static int SERVICETYPE_GUARANTEED() {
        return (int)3L;
    }
    public static int SERVICETYPE_NETWORK_UNAVAILABLE() {
        return (int)4L;
    }
    public static int SERVICETYPE_GENERAL_INFORMATION() {
        return (int)5L;
    }
    public static int SERVICETYPE_NOCHANGE() {
        return (int)6L;
    }
    public static int SERVICETYPE_NONCONFORMING() {
        return (int)9L;
    }
    public static int SERVICETYPE_NETWORK_CONTROL() {
        return (int)10L;
    }
    public static int SERVICETYPE_QUALITATIVE() {
        return (int)13L;
    }
    public static int SERVICE_NO_QOS_SIGNALING() {
        return (int)1073741824L;
    }
    public static int QOS_GENERAL_ID_BASE() {
        return (int)2000L;
    }
    public static int TC_NONCONF_BORROW() {
        return (int)0L;
    }
    public static int TC_NONCONF_SHAPE() {
        return (int)1L;
    }
    public static int TC_NONCONF_DISCARD() {
        return (int)2L;
    }
    public static int TC_NONCONF_BORROW_PLUS() {
        return (int)3L;
    }
    public static int CF_ACCEPT() {
        return (int)0L;
    }
    public static int CF_REJECT() {
        return (int)1L;
    }
    public static int CF_DEFER() {
        return (int)2L;
    }
    public static int SD_RECEIVE() {
        return (int)0L;
    }
    public static int SD_SEND() {
        return (int)1L;
    }
    public static int SD_BOTH() {
        return (int)2L;
    }
    public static int SG_UNCONSTRAINED_GROUP() {
        return (int)1L;
    }
    public static int SG_CONSTRAINED_GROUP() {
        return (int)2L;
    }
    public static int MAX_PROTOCOL_CHAIN() {
        return (int)7L;
    }
    public static int BASE_PROTOCOL() {
        return (int)1L;
    }
    public static int LAYERED_PROTOCOL() {
        return (int)0L;
    }
    public static int WSAPROTOCOL_LEN() {
        return (int)255L;
    }
    public static int PFL_MULTIPLE_PROTO_ENTRIES() {
        return (int)1L;
    }
    public static int PFL_RECOMMENDED_PROTO_ENTRY() {
        return (int)2L;
    }
    public static int PFL_HIDDEN() {
        return (int)4L;
    }
    public static int PFL_MATCHES_PROTOCOL_ZERO() {
        return (int)8L;
    }
    public static int PFL_NETWORKDIRECT_PROVIDER() {
        return (int)16L;
    }
    public static int XP1_CONNECTIONLESS() {
        return (int)1L;
    }
    public static int XP1_GUARANTEED_DELIVERY() {
        return (int)2L;
    }
    public static int XP1_GUARANTEED_ORDER() {
        return (int)4L;
    }
    public static int XP1_MESSAGE_ORIENTED() {
        return (int)8L;
    }
    public static int XP1_PSEUDO_STREAM() {
        return (int)16L;
    }
    public static int XP1_GRACEFUL_CLOSE() {
        return (int)32L;
    }
    public static int XP1_EXPEDITED_DATA() {
        return (int)64L;
    }
    public static int XP1_CONNECT_DATA() {
        return (int)128L;
    }
    public static int XP1_DISCONNECT_DATA() {
        return (int)256L;
    }
    public static int XP1_SUPPORT_BROADCAST() {
        return (int)512L;
    }
    public static int XP1_SUPPORT_MULTIPOINT() {
        return (int)1024L;
    }
    public static int XP1_MULTIPOINT_CONTROL_PLANE() {
        return (int)2048L;
    }
    public static int XP1_MULTIPOINT_DATA_PLANE() {
        return (int)4096L;
    }
    public static int XP1_QOS_SUPPORTED() {
        return (int)8192L;
    }
    public static int XP1_INTERRUPT() {
        return (int)16384L;
    }
    public static int XP1_UNI_SEND() {
        return (int)32768L;
    }
    public static int XP1_UNI_RECV() {
        return (int)65536L;
    }
    public static int XP1_IFS_HANDLES() {
        return (int)131072L;
    }
    public static int XP1_PARTIAL_MESSAGE() {
        return (int)262144L;
    }
    public static int XP1_SAN_SUPPORT_SDP() {
        return (int)524288L;
    }
    public static int BIGENDIAN() {
        return (int)0L;
    }
    public static int LITTLEENDIAN() {
        return (int)1L;
    }
    public static int SECURITY_PROTOCOL_NONE() {
        return (int)0L;
    }
    public static int JL_SENDER_ONLY() {
        return (int)1L;
    }
    public static int JL_RECEIVER_ONLY() {
        return (int)2L;
    }
    public static int JL_BOTH() {
        return (int)4L;
    }
    public static int WSA_FLAG_OVERLAPPED() {
        return (int)1L;
    }
    public static int WSA_FLAG_MULTIPOINT_C_ROOT() {
        return (int)2L;
    }
    public static int WSA_FLAG_MULTIPOINT_C_LEAF() {
        return (int)4L;
    }
    public static int WSA_FLAG_MULTIPOINT_D_ROOT() {
        return (int)8L;
    }
    public static int WSA_FLAG_MULTIPOINT_D_LEAF() {
        return (int)16L;
    }
    public static int WSA_FLAG_ACCESS_SYSTEM_SECURITY() {
        return (int)64L;
    }
    public static int WSA_FLAG_NO_HANDLE_INHERIT() {
        return (int)128L;
    }
    public static int WSA_FLAG_REGISTERED_IO() {
        return (int)256L;
    }
    public static int IOC_UNIX() {
        return (int)0L;
    }
    public static int IOC_WS2() {
        return (int)134217728L;
    }
    public static int IOC_PROTOCOL() {
        return (int)268435456L;
    }
    public static int IOC_VENDOR() {
        return (int)402653184L;
    }
    public static int TH_NETDEV() {
        return (int)1L;
    }
    public static int TH_TAPI() {
        return (int)2L;
    }
    public static int LUP_DEEP() {
        return (int)1L;
    }
    public static int LUP_CONTAINERS() {
        return (int)2L;
    }
    public static int LUP_NOCONTAINERS() {
        return (int)4L;
    }
    public static int LUP_NEAREST() {
        return (int)8L;
    }
    public static int LUP_RETURN_NAME() {
        return (int)16L;
    }
    public static int LUP_RETURN_TYPE() {
        return (int)32L;
    }
    public static int LUP_RETURN_VERSION() {
        return (int)64L;
    }
    public static int LUP_RETURN_COMMENT() {
        return (int)128L;
    }
    public static int LUP_RETURN_ADDR() {
        return (int)256L;
    }
    public static int LUP_RETURN_BLOB() {
        return (int)512L;
    }
    public static int LUP_RETURN_ALIASES() {
        return (int)1024L;
    }
    public static int LUP_RETURN_QUERY_STRING() {
        return (int)2048L;
    }
    public static int LUP_RETURN_ALL() {
        return (int)4080L;
    }
    public static int LUP_RES_SERVICE() {
        return (int)32768L;
    }
    public static int LUP_FLUSHCACHE() {
        return (int)4096L;
    }
    public static int LUP_FLUSHPREVIOUS() {
        return (int)8192L;
    }
    public static int LUP_NON_AUTHORITATIVE() {
        return (int)16384L;
    }
    public static int LUP_SECURE() {
        return (int)32768L;
    }
    public static int LUP_RETURN_PREFERRED_NAMES() {
        return (int)65536L;
    }
    public static int LUP_DNS_ONLY() {
        return (int)131072L;
    }
    public static int LUP_ADDRCONFIG() {
        return (int)1048576L;
    }
    public static int LUP_DUAL_ADDR() {
        return (int)2097152L;
    }
    public static int LUP_FILESERVER() {
        return (int)4194304L;
    }
    public static int LUP_DISABLE_IDN_ENCODING() {
        return (int)8388608L;
    }
    public static int LUP_API_ANSI() {
        return (int)16777216L;
    }
    public static int LUP_RES_RESERVICE() {
        return (int)32768L;
    }
    public static int RESULT_IS_ALIAS() {
        return (int)1L;
    }
    public static int RESULT_IS_ADDED() {
        return (int)16L;
    }
    public static int RESULT_IS_CHANGED() {
        return (int)32L;
    }
    public static int RESULT_IS_DELETED() {
        return (int)64L;
    }
    public static int POLLRDNORM() {
        return (int)256L;
    }
    public static int POLLRDBAND() {
        return (int)512L;
    }
    public static int POLLPRI() {
        return (int)1024L;
    }
    public static int POLLWRNORM() {
        return (int)16L;
    }
    public static int POLLWRBAND() {
        return (int)32L;
    }
    public static int POLLERR() {
        return (int)1L;
    }
    public static int POLLHUP() {
        return (int)2L;
    }
    public static int POLLNVAL() {
        return (int)4L;
    }
    public static int IP_OPTIONS() {
        return (int)1L;
    }
    public static int IP_HDRINCL() {
        return (int)2L;
    }
    public static int IP_TOS() {
        return (int)3L;
    }
    public static int IP_TTL() {
        return (int)4L;
    }
    public static int IP_MULTICAST_IF() {
        return (int)9L;
    }
    public static int IP_MULTICAST_TTL() {
        return (int)10L;
    }
    public static int IP_MULTICAST_LOOP() {
        return (int)11L;
    }
    public static int IP_ADD_MEMBERSHIP() {
        return (int)12L;
    }
    public static int IP_DROP_MEMBERSHIP() {
        return (int)13L;
    }
    public static int IP_DONTFRAGMENT() {
        return (int)14L;
    }
    public static int IP_ADD_SOURCE_MEMBERSHIP() {
        return (int)15L;
    }
    public static int IP_DROP_SOURCE_MEMBERSHIP() {
        return (int)16L;
    }
    public static int IP_BLOCK_SOURCE() {
        return (int)17L;
    }
    public static int IP_UNBLOCK_SOURCE() {
        return (int)18L;
    }
    public static int IP_PKTINFO() {
        return (int)19L;
    }
    public static int IP_HOPLIMIT() {
        return (int)21L;
    }
    public static int IP_RECVTTL() {
        return (int)21L;
    }
    public static int IP_RECEIVE_BROADCAST() {
        return (int)22L;
    }
    public static int IP_RECVIF() {
        return (int)24L;
    }
    public static int IP_RECVDSTADDR() {
        return (int)25L;
    }
    public static int IP_IFLIST() {
        return (int)28L;
    }
    public static int IP_ADD_IFLIST() {
        return (int)29L;
    }
    public static int IP_DEL_IFLIST() {
        return (int)30L;
    }
    public static int IP_UNICAST_IF() {
        return (int)31L;
    }
    public static int IP_RTHDR() {
        return (int)32L;
    }
    public static int IP_GET_IFLIST() {
        return (int)33L;
    }
    public static int IP_RECVRTHDR() {
        return (int)38L;
    }
    public static int IP_TCLASS() {
        return (int)39L;
    }
    public static int IP_RECVTCLASS() {
        return (int)40L;
    }
    public static int IP_RECVTOS() {
        return (int)40L;
    }
    public static int IP_ORIGINAL_ARRIVAL_IF() {
        return (int)47L;
    }
    public static int IP_ECN() {
        return (int)50L;
    }
    public static int IP_PKTINFO_EX() {
        return (int)51L;
    }
    public static int IP_WFP_REDIRECT_RECORDS() {
        return (int)60L;
    }
    public static int IP_WFP_REDIRECT_CONTEXT() {
        return (int)70L;
    }
    public static int IP_MTU_DISCOVER() {
        return (int)71L;
    }
    public static int IP_MTU() {
        return (int)73L;
    }
    public static int IP_NRT_INTERFACE() {
        return (int)74L;
    }
    public static int IP_RECVERR() {
        return (int)75L;
    }
    public static int IP_USER_MTU() {
        return (int)76L;
    }
    public static int IPV6_HOPOPTS() {
        return (int)1L;
    }
    public static int IPV6_HDRINCL() {
        return (int)2L;
    }
    public static int IPV6_UNICAST_HOPS() {
        return (int)4L;
    }
    public static int IPV6_MULTICAST_IF() {
        return (int)9L;
    }
    public static int IPV6_MULTICAST_HOPS() {
        return (int)10L;
    }
    public static int IPV6_MULTICAST_LOOP() {
        return (int)11L;
    }
    public static int IPV6_ADD_MEMBERSHIP() {
        return (int)12L;
    }
    public static int IPV6_DROP_MEMBERSHIP() {
        return (int)13L;
    }
    public static int IPV6_DONTFRAG() {
        return (int)14L;
    }
    public static int IPV6_PKTINFO() {
        return (int)19L;
    }
    public static int IPV6_HOPLIMIT() {
        return (int)21L;
    }
    public static int IPV6_PROTECTION_LEVEL() {
        return (int)23L;
    }
    public static int IPV6_RECVIF() {
        return (int)24L;
    }
    public static int IPV6_RECVDSTADDR() {
        return (int)25L;
    }
    public static int IPV6_CHECKSUM() {
        return (int)26L;
    }
    public static int IPV6_V6ONLY() {
        return (int)27L;
    }
    public static int IPV6_IFLIST() {
        return (int)28L;
    }
    public static int IPV6_ADD_IFLIST() {
        return (int)29L;
    }
    public static int IPV6_DEL_IFLIST() {
        return (int)30L;
    }
    public static int IPV6_UNICAST_IF() {
        return (int)31L;
    }
    public static int IPV6_RTHDR() {
        return (int)32L;
    }
    public static int IPV6_GET_IFLIST() {
        return (int)33L;
    }
    public static int IPV6_RECVRTHDR() {
        return (int)38L;
    }
    public static int IPV6_TCLASS() {
        return (int)39L;
    }
    public static int IPV6_RECVTCLASS() {
        return (int)40L;
    }
    public static int IPV6_ECN() {
        return (int)50L;
    }
    public static int IPV6_PKTINFO_EX() {
        return (int)51L;
    }
    public static int IPV6_WFP_REDIRECT_RECORDS() {
        return (int)60L;
    }
    public static int IPV6_WFP_REDIRECT_CONTEXT() {
        return (int)70L;
    }
    public static int IPV6_MTU_DISCOVER() {
        return (int)71L;
    }
    public static int IPV6_MTU() {
        return (int)72L;
    }
    public static int IPV6_NRT_INTERFACE() {
        return (int)74L;
    }
    public static int IPV6_RECVERR() {
        return (int)75L;
    }
    public static int IPV6_USER_MTU() {
        return (int)76L;
    }
    public static int PROTECTION_LEVEL_UNRESTRICTED() {
        return (int)10L;
    }
    public static int PROTECTION_LEVEL_EDGERESTRICTED() {
        return (int)20L;
    }
    public static int PROTECTION_LEVEL_RESTRICTED() {
        return (int)30L;
    }
    public static int IFF_UP() {
        return (int)1L;
    }
    public static int IFF_BROADCAST() {
        return (int)2L;
    }
    public static int IFF_LOOPBACK() {
        return (int)4L;
    }
    public static int IFF_POINTTOPOINT() {
        return (int)8L;
    }
    public static int IFF_MULTICAST() {
        return (int)16L;
    }
    public static int MCAST_JOIN_GROUP() {
        return (int)41L;
    }
    public static int MCAST_LEAVE_GROUP() {
        return (int)42L;
    }
    public static int MCAST_BLOCK_SOURCE() {
        return (int)43L;
    }
    public static int MCAST_UNBLOCK_SOURCE() {
        return (int)44L;
    }
    public static int MCAST_JOIN_SOURCE_GROUP() {
        return (int)45L;
    }
    public static int MCAST_LEAVE_SOURCE_GROUP() {
        return (int)46L;
    }
    public static int UDP_NOCHECKSUM() {
        return (int)1L;
    }
    public static int UDP_CHECKSUM_COVERAGE() {
        return (int)20L;
    }
    public static int TCP_EXPEDITED_1122() {
        return (int)2L;
    }
    public static int EAI_NODATA() {
        return (int)11004L;
    }
    public static int AI_PASSIVE() {
        return (int)1L;
    }
    public static int AI_CANONNAME() {
        return (int)2L;
    }
    public static int AI_NUMERICHOST() {
        return (int)4L;
    }
    public static int AI_NUMERICSERV() {
        return (int)8L;
    }
    public static int AI_ALL() {
        return (int)256L;
    }
    public static int AI_ADDRCONFIG() {
        return (int)1024L;
    }
    public static int AI_V4MAPPED() {
        return (int)2048L;
    }
    public static int AI_NON_AUTHORITATIVE() {
        return (int)16384L;
    }
    public static int AI_SECURE() {
        return (int)32768L;
    }
    public static int AI_RETURN_PREFERRED_NAMES() {
        return (int)65536L;
    }
    public static int AI_FQDN() {
        return (int)131072L;
    }
    public static int AI_FILESERVER() {
        return (int)262144L;
    }
    public static int GAI_STRERROR_BUFFER_SIZE() {
        return (int)1024L;
    }
    public static int NI_MAXHOST() {
        return (int)1025L;
    }
    public static int NI_MAXSERV() {
        return (int)32L;
    }
    public static int INET_ADDRSTRLEN() {
        return (int)22L;
    }
    public static int INET6_ADDRSTRLEN() {
        return (int)65L;
    }
    public static int NI_NOFQDN() {
        return (int)1L;
    }
    public static int NI_NUMERICHOST() {
        return (int)2L;
    }
    public static int NI_NAMEREQD() {
        return (int)4L;
    }
    public static int NI_NUMERICSERV() {
        return (int)8L;
    }
    public static int NI_DGRAM() {
        return (int)16L;
    }
    public static int RCVALL_OFF() {
        return (int)0L;
    }
    public static int RCVALL_ON() {
        return (int)1L;
    }
    public static int RCVALL_SOCKETLEVELONLY() {
        return (int)2L;
    }
    public static int RCVALL_IPLEVEL() {
        return (int)3L;
    }
    public static int SOCKET_SETTINGS_GUARANTEE_ENCRYPTION() {
        return (int)1L;
    }
    public static int SOCKET_SETTINGS_ALLOW_INSECURE() {
        return (int)2L;
    }
    public static int SOCKET_INFO_CONNECTION_SECURED() {
        return (int)1L;
    }
    public static int SOCKET_INFO_CONNECTION_ENCRYPTED() {
        return (int)2L;
    }
    public static int SOCKET_INFO_CONNECTION_IMPERSONATED() {
        return (int)4L;
    }
    public static int SOCKET_SETTINGS_IPSEC_SKIP_FILTER_INSTANTIATION() {
        return (int)1L;
    }
    public static int GPG_ERROR_H() {
        return (int)1L;
    }
    public static int GPGRT_H() {
        return (int)1L;
    }
    public static int GPG_ERROR_VERSION_NUMBER() {
        return (int)76032L;
    }
    public static int GPGRT_VERSION_NUMBER() {
        return (int)76032L;
    }
    public static int GPG_ERR_SOURCE_SHIFT() {
        return (int)24L;
    }
    public static int _GPG_ERR_GCC_VERSION() {
        return (int)0L;
    }
    public static int INT8_MAX() {
        return (int)127L;
    }
    public static int INT16_MAX() {
        return (int)32767L;
    }
    public static int INT32_MAX() {
        return (int)2147483647L;
    }
    public static int UINT8_MAX() {
        return (int)255L;
    }
    public static int UINT16_MAX() {
        return (int)65535L;
    }
    public static int GPGRT_LOG_WITH_PREFIX() {
        return (int)1L;
    }
    public static int GPGRT_LOG_WITH_TIME() {
        return (int)2L;
    }
    public static int GPGRT_LOG_WITH_PID() {
        return (int)4L;
    }
    public static int GPGRT_LOG_RUN_DETACHED() {
        return (int)256L;
    }
    public static int GPGRT_LOG_NO_REGISTRY() {
        return (int)512L;
    }
    public static int GPGRT_SPAWN_NONBLOCK() {
        return (int)16L;
    }
    public static int GPGRT_SPAWN_RUN_ASFW() {
        return (int)64L;
    }
    public static int GPGRT_SPAWN_DETACHED() {
        return (int)128L;
    }
    public static int GPGRT_CONFDIR_USER() {
        return (int)1L;
    }
    public static int GPGRT_CONFDIR_SYS() {
        return (int)2L;
    }
    public static int ASSUAN_VERSION_NUMBER() {
        return (int)132358L;
    }
    public static int ASSUAN_LINELENGTH() {
        return (int)1002L;
    }
    public static int ASSUAN_LOG_INIT() {
        return (int)1L;
    }
    public static int ASSUAN_LOG_CTX() {
        return (int)2L;
    }
    public static int ASSUAN_LOG_ENGINE() {
        return (int)3L;
    }
    public static int ASSUAN_LOG_DATA() {
        return (int)4L;
    }
    public static int ASSUAN_LOG_SYSIO() {
        return (int)5L;
    }
    public static int ASSUAN_LOG_CONTROL() {
        return (int)8L;
    }
    public static int ASSUAN_NO_WAITPID() {
        return (int)1L;
    }
    public static int ASSUAN_CONFIDENTIAL() {
        return (int)2L;
    }
    public static int ASSUAN_NO_FIXSIGNALS() {
        return (int)3L;
    }
    public static int ASSUAN_CONVEY_COMMENTS() {
        return (int)4L;
    }
    public static int ASSUAN_NO_LOGGING() {
        return (int)5L;
    }
    public static int ASSUAN_FORCE_CLOSE() {
        return (int)6L;
    }
    public static int ASSUAN_IO_FROM_PEER() {
        return (int)0L;
    }
    public static int ASSUAN_IO_TO_PEER() {
        return (int)1L;
    }
    public static int ASSUAN_IO_MONITOR_NOLOG() {
        return (int)1L;
    }
    public static int ASSUAN_IO_MONITOR_IGNORE() {
        return (int)2L;
    }
    public static int ASSUAN_SYSTEM_HOOKS_VERSION() {
        return (int)2L;
    }
    public static int ASSUAN_SPAWN_DETACHED() {
        return (int)128L;
    }
    public static int ASSUAN_SOCKET_SERVER_FDPASSING() {
        return (int)1L;
    }
    public static int ASSUAN_SOCKET_SERVER_ACCEPTED() {
        return (int)2L;
    }
    public static int ASSUAN_PIPE_CONNECT_FDPASSING() {
        return (int)1L;
    }
    public static int ASSUAN_PIPE_CONNECT_DETACHED() {
        return (int)128L;
    }
    public static int ASSUAN_SOCKET_CONNECT_FDPASSING() {
        return (int)1L;
    }
    public static int ASSUAN_RESPONSE_ERROR() {
        return (int)0L;
    }
    public static int ASSUAN_RESPONSE_OK() {
        return (int)1L;
    }
    public static int ASSUAN_RESPONSE_DATA() {
        return (int)2L;
    }
    public static int ASSUAN_RESPONSE_INQUIRE() {
        return (int)3L;
    }
    public static int ASSUAN_RESPONSE_STATUS() {
        return (int)4L;
    }
    public static int ASSUAN_RESPONSE_END() {
        return (int)5L;
    }
    public static int ASSUAN_RESPONSE_COMMENT() {
        return (int)6L;
    }
    public static int ASSUAN_SOCK_SOCKS() {
        return (int)1L;
    }
    public static int ASSUAN_SOCK_TOR() {
        return (int)2L;
    }
    public static MethodHandle __mingw_get_crt_info$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__mingw_get_crt_info$MH,"__mingw_get_crt_info");
    }
    public static MemoryAddress __mingw_get_crt_info () {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.__mingw_get_crt_info$MH, "__mingw_get_crt_info");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static ValueLayout ssize_t = C_LONG_LONG;
    public static ValueLayout intptr_t = C_LONG_LONG;
    public static ValueLayout ptrdiff_t = C_LONG_LONG;
    public static ValueLayout errno_t = C_INT;
    public static ValueLayout __time32_t = C_LONG;
    public static ValueLayout __time64_t = C_LONG_LONG;
    public static ValueLayout time_t = C_LONG_LONG;
    public static ValueLayout _off_t = C_LONG;
    public static ValueLayout off32_t = C_LONG;
    public static ValueLayout _off64_t = C_LONG_LONG;
    public static ValueLayout off64_t = C_LONG_LONG;
    public static ValueLayout off_t = C_LONG;
    public static MethodHandle __acrt_iob_func$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__acrt_iob_func$MH,"__acrt_iob_func");
    }
    public static MemoryAddress __acrt_iob_func ( int index) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.__acrt_iob_func$MH, "__acrt_iob_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(index);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __iob_func$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__iob_func$MH,"__iob_func");
    }
    public static MemoryAddress __iob_func () {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.__iob_func$MH, "__iob_func");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static ValueLayout fpos_t = C_LONG_LONG;
    public static MethodHandle __mingw_sscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__mingw_sscanf$MH,"__mingw_sscanf");
    }
    public static int __mingw_sscanf ( Addressable _Src,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.__mingw_sscanf$MH, "__mingw_sscanf");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__mingw_vsscanf$MH,"__mingw_vsscanf");
    }
    public static int __mingw_vsscanf ( Addressable _Str,  Addressable Format,  Addressable argp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.__mingw_vsscanf$MH, "__mingw_vsscanf");
        try {
            return (int)mh$.invokeExact(_Str.address(), Format.address(), argp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_scanf$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__mingw_scanf$MH,"__mingw_scanf");
    }
    public static int __mingw_scanf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.__mingw_scanf$MH, "__mingw_scanf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__mingw_vscanf$MH,"__mingw_vscanf");
    }
    public static int __mingw_vscanf ( Addressable Format,  Addressable argp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.__mingw_vscanf$MH, "__mingw_vscanf");
        try {
            return (int)mh$.invokeExact(Format.address(), argp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_fscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__mingw_fscanf$MH,"__mingw_fscanf");
    }
    public static int __mingw_fscanf ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.__mingw_fscanf$MH, "__mingw_fscanf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__mingw_vfscanf$MH,"__mingw_vfscanf");
    }
    public static int __mingw_vfscanf ( Addressable fp,  Addressable Format,  Addressable argp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.__mingw_vfscanf$MH, "__mingw_vfscanf");
        try {
            return (int)mh$.invokeExact(fp.address(), Format.address(), argp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__mingw_vsnprintf$MH,"__mingw_vsnprintf");
    }
    public static int __mingw_vsnprintf ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.__mingw_vsnprintf$MH, "__mingw_vsnprintf");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__mingw_snprintf$MH,"__mingw_snprintf");
    }
    public static int __mingw_snprintf ( Addressable s,  long n,  Addressable format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.__mingw_snprintf$MH, "__mingw_snprintf");
        try {
            return (int)mh$.invokeExact(s.address(), n, format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$1.__mingw_printf$MH,"__mingw_printf");
    }
    public static int __mingw_printf ( Addressable x0, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.__mingw_printf$MH, "__mingw_printf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__mingw_vprintf$MH,"__mingw_vprintf");
    }
    public static int __mingw_vprintf ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.__mingw_vprintf$MH, "__mingw_vprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__mingw_fprintf$MH,"__mingw_fprintf");
    }
    public static int __mingw_fprintf ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.__mingw_fprintf$MH, "__mingw_fprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__mingw_vfprintf$MH,"__mingw_vfprintf");
    }
    public static int __mingw_vfprintf ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.__mingw_vfprintf$MH, "__mingw_vfprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__mingw_sprintf$MH,"__mingw_sprintf");
    }
    public static int __mingw_sprintf ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.__mingw_sprintf$MH, "__mingw_sprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__mingw_vsprintf$MH,"__mingw_vsprintf");
    }
    public static int __mingw_vsprintf ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.__mingw_vsprintf$MH, "__mingw_vsprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_asprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$2.__mingw_asprintf$MH,"__mingw_asprintf");
    }
    public static int __mingw_asprintf ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.__mingw_asprintf$MH, "__mingw_asprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vasprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__mingw_vasprintf$MH,"__mingw_vasprintf");
    }
    public static int __mingw_vasprintf ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.__mingw_vasprintf$MH, "__mingw_vasprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_sscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__ms_sscanf$MH,"__ms_sscanf");
    }
    public static int __ms_sscanf ( Addressable _Src,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.__ms_sscanf$MH, "__ms_sscanf");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_scanf$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__ms_scanf$MH,"__ms_scanf");
    }
    public static int __ms_scanf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.__ms_scanf$MH, "__ms_scanf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_fscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__ms_fscanf$MH,"__ms_fscanf");
    }
    public static int __ms_fscanf ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.__ms_fscanf$MH, "__ms_fscanf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_printf$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__ms_printf$MH,"__ms_printf");
    }
    public static int __ms_printf ( Addressable x0, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.__ms_printf$MH, "__ms_printf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$3.__ms_vprintf$MH,"__ms_vprintf");
    }
    public static int __ms_vprintf ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.__ms_vprintf$MH, "__ms_vprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$4.__ms_fprintf$MH,"__ms_fprintf");
    }
    public static int __ms_fprintf ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.__ms_fprintf$MH, "__ms_fprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$4.__ms_vfprintf$MH,"__ms_vfprintf");
    }
    public static int __ms_vfprintf ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.__ms_vfprintf$MH, "__ms_vfprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$4.__ms_sprintf$MH,"__ms_sprintf");
    }
    public static int __ms_sprintf ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.__ms_sprintf$MH, "__ms_sprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$4.__ms_vsprintf$MH,"__ms_vsprintf");
    }
    public static int __ms_vsprintf ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.__ms_vsprintf$MH, "__ms_vsprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$4.sscanf$MH,"sscanf");
    }
    public static int sscanf ( Addressable __source,  Addressable __format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.sscanf$MH, "sscanf");
        try {
            return (int)mh$.invokeExact(__source.address(), __format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf$MH() {
        return RuntimeHelper.requireNonNull(constants$4.scanf$MH,"scanf");
    }
    public static int scanf ( Addressable __format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.scanf$MH, "scanf");
        try {
            return (int)mh$.invokeExact(__format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$5.fscanf$MH,"fscanf");
    }
    public static int fscanf ( Addressable __stream,  Addressable __format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.fscanf$MH, "fscanf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$5.vsscanf$MH,"vsscanf");
    }
    public static int vsscanf ( Addressable __source,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.vsscanf$MH, "vsscanf");
        try {
            return (int)mh$.invokeExact(__source.address(), __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$5.vscanf$MH,"vscanf");
    }
    public static int vscanf ( Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.vscanf$MH, "vscanf");
        try {
            return (int)mh$.invokeExact(__format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$5.vfscanf$MH,"vfscanf");
    }
    public static int vfscanf ( Addressable __stream,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.vfscanf$MH, "vfscanf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$5.fprintf$MH,"fprintf");
    }
    public static int fprintf ( Addressable __stream,  Addressable __format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.fprintf$MH, "fprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf$MH() {
        return RuntimeHelper.requireNonNull(constants$5.printf$MH,"printf");
    }
    public static int printf ( Addressable __format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.printf$MH, "printf");
        try {
            return (int)mh$.invokeExact(__format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$6.sprintf$MH,"sprintf");
    }
    public static int sprintf ( Addressable __stream,  Addressable __format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.sprintf$MH, "sprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$6.vfprintf$MH,"vfprintf");
    }
    public static int vfprintf ( Addressable __stream,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.vfprintf$MH, "vfprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$6.vprintf$MH,"vprintf");
    }
    public static int vprintf ( Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.vprintf$MH, "vprintf");
        try {
            return (int)mh$.invokeExact(__format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$6.vsprintf$MH,"vsprintf");
    }
    public static int vsprintf ( Addressable __stream,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.vsprintf$MH, "vsprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$6.snprintf$MH,"snprintf");
    }
    public static int snprintf ( Addressable __stream,  long __n,  Addressable __format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.snprintf$MH, "snprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __n, __format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$6.vsnprintf$MH,"vsnprintf");
    }
    public static int vsnprintf ( Addressable __stream,  long __n,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.vsnprintf$MH, "vsnprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __n, __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _filbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$7._filbuf$MH,"_filbuf");
    }
    public static int _filbuf ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7._filbuf$MH, "_filbuf");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _flsbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$7._flsbuf$MH,"_flsbuf");
    }
    public static int _flsbuf ( int _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7._flsbuf$MH, "_flsbuf");
        try {
            return (int)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fsopen$MH() {
        return RuntimeHelper.requireNonNull(constants$7._fsopen$MH,"_fsopen");
    }
    public static MemoryAddress _fsopen ( Addressable _Filename,  Addressable _Mode,  int _ShFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7._fsopen$MH, "_fsopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Filename.address(), _Mode.address(), _ShFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr$MH() {
        return RuntimeHelper.requireNonNull(constants$7.clearerr$MH,"clearerr");
    }
    public static void clearerr ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.clearerr$MH, "clearerr");
        try {
            mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fclose$MH() {
        return RuntimeHelper.requireNonNull(constants$7.fclose$MH,"fclose");
    }
    public static int fclose ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.fclose$MH, "fclose");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcloseall$MH() {
        return RuntimeHelper.requireNonNull(constants$7._fcloseall$MH,"_fcloseall");
    }
    public static int _fcloseall () {
        var mh$ = RuntimeHelper.requireNonNull(constants$7._fcloseall$MH, "_fcloseall");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$8._fdopen$MH,"_fdopen");
    }
    public static MemoryAddress _fdopen ( int _FileHandle,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8._fdopen$MH, "_fdopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle feof$MH() {
        return RuntimeHelper.requireNonNull(constants$8.feof$MH,"feof");
    }
    public static int feof ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.feof$MH, "feof");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ferror$MH() {
        return RuntimeHelper.requireNonNull(constants$8.ferror$MH,"ferror");
    }
    public static int ferror ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.ferror$MH, "ferror");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fflush$MH() {
        return RuntimeHelper.requireNonNull(constants$8.fflush$MH,"fflush");
    }
    public static int fflush ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.fflush$MH, "fflush");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetc$MH() {
        return RuntimeHelper.requireNonNull(constants$8.fgetc$MH,"fgetc");
    }
    public static int fgetc ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.fgetc$MH, "fgetc");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetchar$MH() {
        return RuntimeHelper.requireNonNull(constants$8._fgetchar$MH,"_fgetchar");
    }
    public static int _fgetchar () {
        var mh$ = RuntimeHelper.requireNonNull(constants$8._fgetchar$MH, "_fgetchar");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$9.fgetpos$MH,"fgetpos");
    }
    public static int fgetpos ( Addressable _File,  Addressable _Pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.fgetpos$MH, "fgetpos");
        try {
            return (int)mh$.invokeExact(_File.address(), _Pos.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetpos64$MH() {
        return RuntimeHelper.requireNonNull(constants$9.fgetpos64$MH,"fgetpos64");
    }
    public static int fgetpos64 ( Addressable _File,  Addressable _Pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.fgetpos64$MH, "fgetpos64");
        try {
            return (int)mh$.invokeExact(_File.address(), _Pos.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgets$MH() {
        return RuntimeHelper.requireNonNull(constants$9.fgets$MH,"fgets");
    }
    public static MemoryAddress fgets ( Addressable _Buf,  int _MaxCount,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.fgets$MH, "fgets");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Buf.address(), _MaxCount, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$9._fileno$MH,"_fileno");
    }
    public static int _fileno ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9._fileno$MH, "_fileno");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$9._tempnam$MH,"_tempnam");
    }
    public static MemoryAddress _tempnam ( Addressable _DirName,  Addressable _FilePrefix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9._tempnam$MH, "_tempnam");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_DirName.address(), _FilePrefix.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _flushall$MH() {
        return RuntimeHelper.requireNonNull(constants$9._flushall$MH,"_flushall");
    }
    public static int _flushall () {
        var mh$ = RuntimeHelper.requireNonNull(constants$9._flushall$MH, "_flushall");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen$MH() {
        return RuntimeHelper.requireNonNull(constants$10.fopen$MH,"fopen");
    }
    public static MemoryAddress fopen ( Addressable _Filename,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.fopen$MH, "fopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Filename.address(), _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen64$MH() {
        return RuntimeHelper.requireNonNull(constants$10.fopen64$MH,"fopen64");
    }
    public static MemoryAddress fopen64 ( Addressable filename,  Addressable mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.fopen64$MH, "fopen64");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(filename.address(), mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputc$MH() {
        return RuntimeHelper.requireNonNull(constants$10.fputc$MH,"fputc");
    }
    public static int fputc ( int _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.fputc$MH, "fputc");
        try {
            return (int)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputchar$MH() {
        return RuntimeHelper.requireNonNull(constants$10._fputchar$MH,"_fputchar");
    }
    public static int _fputchar ( int _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10._fputchar$MH, "_fputchar");
        try {
            return (int)mh$.invokeExact(_Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputs$MH() {
        return RuntimeHelper.requireNonNull(constants$10.fputs$MH,"fputs");
    }
    public static int fputs ( Addressable _Str,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.fputs$MH, "fputs");
        try {
            return (int)mh$.invokeExact(_Str.address(), _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread$MH() {
        return RuntimeHelper.requireNonNull(constants$10.fread$MH,"fread");
    }
    public static long fread ( Addressable _DstBuf,  long _ElementSize,  long _Count,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.fread$MH, "fread");
        try {
            return (long)mh$.invokeExact(_DstBuf.address(), _ElementSize, _Count, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen$MH() {
        return RuntimeHelper.requireNonNull(constants$11.freopen$MH,"freopen");
    }
    public static MemoryAddress freopen ( Addressable _Filename,  Addressable _Mode,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.freopen$MH, "freopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Filename.address(), _Mode.address(), _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsetpos$MH() {
        return RuntimeHelper.requireNonNull(constants$11.fsetpos$MH,"fsetpos");
    }
    public static int fsetpos ( Addressable _File,  Addressable _Pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.fsetpos$MH, "fsetpos");
        try {
            return (int)mh$.invokeExact(_File.address(), _Pos.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fsetpos64$MH() {
        return RuntimeHelper.requireNonNull(constants$11.fsetpos64$MH,"fsetpos64");
    }
    public static int fsetpos64 ( Addressable _File,  Addressable _Pos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.fsetpos64$MH, "fsetpos64");
        try {
            return (int)mh$.invokeExact(_File.address(), _Pos.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseek$MH() {
        return RuntimeHelper.requireNonNull(constants$11.fseek$MH,"fseek");
    }
    public static int fseek ( Addressable _File,  int _Offset,  int _Origin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.fseek$MH, "fseek");
        try {
            return (int)mh$.invokeExact(_File.address(), _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftell$MH() {
        return RuntimeHelper.requireNonNull(constants$11.ftell$MH,"ftell");
    }
    public static int ftell ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.ftell$MH, "ftell");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fseeki64$MH() {
        return RuntimeHelper.requireNonNull(constants$11._fseeki64$MH,"_fseeki64");
    }
    public static int _fseeki64 ( Addressable _File,  long _Offset,  int _Origin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11._fseeki64$MH, "_fseeki64");
        try {
            return (int)mh$.invokeExact(_File.address(), _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ftelli64$MH() {
        return RuntimeHelper.requireNonNull(constants$12._ftelli64$MH,"_ftelli64");
    }
    public static long _ftelli64 ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12._ftelli64$MH, "_ftelli64");
        try {
            return (long)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseeko64$MH() {
        return RuntimeHelper.requireNonNull(constants$12.fseeko64$MH,"fseeko64");
    }
    public static int fseeko64 ( Addressable stream,  long offset,  int whence) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.fseeko64$MH, "fseeko64");
        try {
            return (int)mh$.invokeExact(stream.address(), offset, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fseeko$MH() {
        return RuntimeHelper.requireNonNull(constants$12.fseeko$MH,"fseeko");
    }
    public static int fseeko ( Addressable stream,  int offset,  int whence) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.fseeko$MH, "fseeko");
        try {
            return (int)mh$.invokeExact(stream.address(), offset, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftello$MH() {
        return RuntimeHelper.requireNonNull(constants$12.ftello$MH,"ftello");
    }
    public static int ftello ( Addressable stream) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.ftello$MH, "ftello");
        try {
            return (int)mh$.invokeExact(stream.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ftello64$MH() {
        return RuntimeHelper.requireNonNull(constants$12.ftello64$MH,"ftello64");
    }
    public static long ftello64 ( Addressable stream) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.ftello64$MH, "ftello64");
        try {
            return (long)mh$.invokeExact(stream.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$12.fwrite$MH,"fwrite");
    }
    public static long fwrite ( Addressable _Str,  long _Size,  long _Count,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.fwrite$MH, "fwrite");
        try {
            return (long)mh$.invokeExact(_Str.address(), _Size, _Count, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getc$MH() {
        return RuntimeHelper.requireNonNull(constants$13.getc$MH,"getc");
    }
    public static int getc ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.getc$MH, "getc");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getchar$MH() {
        return RuntimeHelper.requireNonNull(constants$13.getchar$MH,"getchar");
    }
    public static int getchar () {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.getchar$MH, "getchar");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getmaxstdio$MH() {
        return RuntimeHelper.requireNonNull(constants$13._getmaxstdio$MH,"_getmaxstdio");
    }
    public static int _getmaxstdio () {
        var mh$ = RuntimeHelper.requireNonNull(constants$13._getmaxstdio$MH, "_getmaxstdio");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gets$MH() {
        return RuntimeHelper.requireNonNull(constants$13.gets$MH,"gets");
    }
    public static MemoryAddress gets ( Addressable _Buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.gets$MH, "gets");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Buffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getw$MH() {
        return RuntimeHelper.requireNonNull(constants$13._getw$MH,"_getw");
    }
    public static int _getw ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$13._getw$MH, "_getw");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$13.perror$MH,"perror");
    }
    public static void perror ( Addressable _ErrMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.perror$MH, "perror");
        try {
            mh$.invokeExact(_ErrMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _pclose$MH() {
        return RuntimeHelper.requireNonNull(constants$14._pclose$MH,"_pclose");
    }
    public static int _pclose ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14._pclose$MH, "_pclose");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _popen$MH() {
        return RuntimeHelper.requireNonNull(constants$14._popen$MH,"_popen");
    }
    public static MemoryAddress _popen ( Addressable _Command,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14._popen$MH, "_popen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Command.address(), _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putc$MH() {
        return RuntimeHelper.requireNonNull(constants$14.putc$MH,"putc");
    }
    public static int putc ( int _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.putc$MH, "putc");
        try {
            return (int)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putchar$MH() {
        return RuntimeHelper.requireNonNull(constants$14.putchar$MH,"putchar");
    }
    public static int putchar ( int _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.putchar$MH, "putchar");
        try {
            return (int)mh$.invokeExact(_Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle puts$MH() {
        return RuntimeHelper.requireNonNull(constants$14.puts$MH,"puts");
    }
    public static int puts ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.puts$MH, "puts");
        try {
            return (int)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putw$MH() {
        return RuntimeHelper.requireNonNull(constants$14._putw$MH,"_putw");
    }
    public static int _putw ( int _Word,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14._putw$MH, "_putw");
        try {
            return (int)mh$.invokeExact(_Word, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle remove$MH() {
        return RuntimeHelper.requireNonNull(constants$15.remove$MH,"remove");
    }
    public static int remove ( Addressable _Filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.remove$MH, "remove");
        try {
            return (int)mh$.invokeExact(_Filename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rename$MH() {
        return RuntimeHelper.requireNonNull(constants$15.rename$MH,"rename");
    }
    public static int rename ( Addressable _OldFilename,  Addressable _NewFilename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.rename$MH, "rename");
        try {
            return (int)mh$.invokeExact(_OldFilename.address(), _NewFilename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$15._unlink$MH,"_unlink");
    }
    public static int _unlink ( Addressable _Filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15._unlink$MH, "_unlink");
        try {
            return (int)mh$.invokeExact(_Filename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle unlink$MH() {
        return RuntimeHelper.requireNonNull(constants$15.unlink$MH,"unlink");
    }
    public static int unlink ( Addressable _Filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.unlink$MH, "unlink");
        try {
            return (int)mh$.invokeExact(_Filename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rewind$MH() {
        return RuntimeHelper.requireNonNull(constants$15.rewind$MH,"rewind");
    }
    public static void rewind ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.rewind$MH, "rewind");
        try {
            mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rmtmp$MH() {
        return RuntimeHelper.requireNonNull(constants$15._rmtmp$MH,"_rmtmp");
    }
    public static int _rmtmp () {
        var mh$ = RuntimeHelper.requireNonNull(constants$15._rmtmp$MH, "_rmtmp");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$16.setbuf$MH,"setbuf");
    }
    public static void setbuf ( Addressable _File,  Addressable _Buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.setbuf$MH, "setbuf");
        try {
            mh$.invokeExact(_File.address(), _Buffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _setmaxstdio$MH() {
        return RuntimeHelper.requireNonNull(constants$16._setmaxstdio$MH,"_setmaxstdio");
    }
    public static int _setmaxstdio ( int _Max) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16._setmaxstdio$MH, "_setmaxstdio");
        try {
            return (int)mh$.invokeExact(_Max);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_output_format$MH() {
        return RuntimeHelper.requireNonNull(constants$16._set_output_format$MH,"_set_output_format");
    }
    public static int _set_output_format ( int _Format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16._set_output_format$MH, "_set_output_format");
        try {
            return (int)mh$.invokeExact(_Format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_output_format$MH() {
        return RuntimeHelper.requireNonNull(constants$16._get_output_format$MH,"_get_output_format");
    }
    public static int _get_output_format () {
        var mh$ = RuntimeHelper.requireNonNull(constants$16._get_output_format$MH, "_get_output_format");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setvbuf$MH() {
        return RuntimeHelper.requireNonNull(constants$16.setvbuf$MH,"setvbuf");
    }
    public static int setvbuf ( Addressable _File,  Addressable _Buf,  int _Mode,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.setvbuf$MH, "setvbuf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Buf.address(), _Mode, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$16._scprintf$MH,"_scprintf");
    }
    public static int _scprintf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16._scprintf$MH, "_scprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$17._snscanf$MH,"_snscanf");
    }
    public static int _snscanf ( Addressable _Src,  long _MaxCount,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17._snscanf$MH, "_snscanf");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpfile$MH() {
        return RuntimeHelper.requireNonNull(constants$17.tmpfile$MH,"tmpfile");
    }
    public static MemoryAddress tmpfile () {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.tmpfile$MH, "tmpfile");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$17.tmpnam$MH,"tmpnam");
    }
    public static MemoryAddress tmpnam ( Addressable _Buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.tmpnam$MH, "tmpnam");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Buffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetc$MH() {
        return RuntimeHelper.requireNonNull(constants$17.ungetc$MH,"ungetc");
    }
    public static int ungetc ( int _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.ungetc$MH, "ungetc");
        try {
            return (int)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$17._snprintf$MH,"_snprintf");
    }
    public static int _snprintf ( Addressable _Dest,  long _Count,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17._snprintf$MH, "_snprintf");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Count, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$17._vsnprintf$MH,"_vsnprintf");
    }
    public static int _vsnprintf ( Addressable _Dest,  long _Count,  Addressable _Format,  Addressable _Args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17._vsnprintf$MH, "_vsnprintf");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Count, _Format.address(), _Args.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$18._vscprintf$MH,"_vscprintf");
    }
    public static int _vscprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$18._vscprintf$MH, "_vscprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_printf_count_output$MH() {
        return RuntimeHelper.requireNonNull(constants$18._set_printf_count_output$MH,"_set_printf_count_output");
    }
    public static int _set_printf_count_output ( int _Value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$18._set_printf_count_output$MH, "_set_printf_count_output");
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_printf_count_output$MH() {
        return RuntimeHelper.requireNonNull(constants$18._get_printf_count_output$MH,"_get_printf_count_output");
    }
    public static int _get_printf_count_output () {
        var mh$ = RuntimeHelper.requireNonNull(constants$18._get_printf_count_output$MH, "_get_printf_count_output");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_swscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$18.__mingw_swscanf$MH,"__mingw_swscanf");
    }
    public static int __mingw_swscanf ( Addressable _Src,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.__mingw_swscanf$MH, "__mingw_swscanf");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vswscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$18.__mingw_vswscanf$MH,"__mingw_vswscanf");
    }
    public static int __mingw_vswscanf ( Addressable _Str,  Addressable Format,  Addressable argp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.__mingw_vswscanf$MH, "__mingw_vswscanf");
        try {
            return (int)mh$.invokeExact(_Str.address(), Format.address(), argp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_wscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$18.__mingw_wscanf$MH,"__mingw_wscanf");
    }
    public static int __mingw_wscanf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.__mingw_wscanf$MH, "__mingw_wscanf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$19.__mingw_vwscanf$MH,"__mingw_vwscanf");
    }
    public static int __mingw_vwscanf ( Addressable Format,  Addressable argp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.__mingw_vwscanf$MH, "__mingw_vwscanf");
        try {
            return (int)mh$.invokeExact(Format.address(), argp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_fwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$19.__mingw_fwscanf$MH,"__mingw_fwscanf");
    }
    public static int __mingw_fwscanf ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.__mingw_fwscanf$MH, "__mingw_fwscanf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vfwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$19.__mingw_vfwscanf$MH,"__mingw_vfwscanf");
    }
    public static int __mingw_vfwscanf ( Addressable fp,  Addressable Format,  Addressable argp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.__mingw_vfwscanf$MH, "__mingw_vfwscanf");
        try {
            return (int)mh$.invokeExact(fp.address(), Format.address(), argp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_fwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$19.__mingw_fwprintf$MH,"__mingw_fwprintf");
    }
    public static int __mingw_fwprintf ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.__mingw_fwprintf$MH, "__mingw_fwprintf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_wprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$19.__mingw_wprintf$MH,"__mingw_wprintf");
    }
    public static int __mingw_wprintf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.__mingw_wprintf$MH, "__mingw_wprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vfwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$19.__mingw_vfwprintf$MH,"__mingw_vfwprintf");
    }
    public static int __mingw_vfwprintf ( Addressable _File,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.__mingw_vfwprintf$MH, "__mingw_vfwprintf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__mingw_vwprintf$MH,"__mingw_vwprintf");
    }
    public static int __mingw_vwprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.__mingw_vwprintf$MH, "__mingw_vwprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_snwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__mingw_snwprintf$MH,"__mingw_snwprintf");
    }
    public static int __mingw_snwprintf ( Addressable s,  long n,  Addressable format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.__mingw_snwprintf$MH, "__mingw_snwprintf");
        try {
            return (int)mh$.invokeExact(s.address(), n, format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vsnwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__mingw_vsnwprintf$MH,"__mingw_vsnwprintf");
    }
    public static int __mingw_vsnwprintf ( Addressable x0,  long x1,  Addressable x2,  Addressable x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.__mingw_vsnwprintf$MH, "__mingw_vsnwprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2.address(), x3.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__mingw_swprintf$MH,"__mingw_swprintf");
    }
    public static int __mingw_swprintf ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.__mingw_swprintf$MH, "__mingw_swprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__mingw_vswprintf$MH,"__mingw_vswprintf");
    }
    public static int __mingw_vswprintf ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.__mingw_vswprintf$MH, "__mingw_vswprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_swscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__ms_swscanf$MH,"__ms_swscanf");
    }
    public static int __ms_swscanf ( Addressable _Src,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.__ms_swscanf$MH, "__ms_swscanf");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_wscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__ms_wscanf$MH,"__ms_wscanf");
    }
    public static int __ms_wscanf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.__ms_wscanf$MH, "__ms_wscanf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_fwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__ms_fwscanf$MH,"__ms_fwscanf");
    }
    public static int __ms_fwscanf ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.__ms_fwscanf$MH, "__ms_fwscanf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_fwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__ms_fwprintf$MH,"__ms_fwprintf");
    }
    public static int __ms_fwprintf ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.__ms_fwprintf$MH, "__ms_fwprintf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_wprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__ms_wprintf$MH,"__ms_wprintf");
    }
    public static int __ms_wprintf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.__ms_wprintf$MH, "__ms_wprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_vfwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__ms_vfwprintf$MH,"__ms_vfwprintf");
    }
    public static int __ms_vfwprintf ( Addressable _File,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.__ms_vfwprintf$MH, "__ms_vfwprintf");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_vwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__ms_vwprintf$MH,"__ms_vwprintf");
    }
    public static int __ms_vwprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.__ms_vwprintf$MH, "__ms_vwprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$22.__ms_swprintf$MH,"__ms_swprintf");
    }
    public static int __ms_swprintf ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.__ms_swprintf$MH, "__ms_swprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __ms_vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$22.__ms_vswprintf$MH,"__ms_vswprintf");
    }
    public static int __ms_vswprintf ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.__ms_vswprintf$MH, "__ms_vswprintf");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$22.swscanf$MH,"swscanf");
    }
    public static int swscanf ( Addressable __source,  Addressable __format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.swscanf$MH, "swscanf");
        try {
            return (int)mh$.invokeExact(__source.address(), __format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$22.wscanf$MH,"wscanf");
    }
    public static int wscanf ( Addressable __format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.wscanf$MH, "wscanf");
        try {
            return (int)mh$.invokeExact(__format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$22.fwscanf$MH,"fwscanf");
    }
    public static int fwscanf ( Addressable __stream,  Addressable __format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.fwscanf$MH, "fwscanf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$22.vswscanf$MH,"vswscanf");
    }
    public static int vswscanf ( Addressable __source,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.vswscanf$MH, "vswscanf");
        try {
            return (int)mh$.invokeExact(__source.address(), __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$23.vwscanf$MH,"vwscanf");
    }
    public static int vwscanf ( Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.vwscanf$MH, "vwscanf");
        try {
            return (int)mh$.invokeExact(__format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$23.vfwscanf$MH,"vfwscanf");
    }
    public static int vfwscanf ( Addressable __stream,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.vfwscanf$MH, "vfwscanf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$23.fwprintf$MH,"fwprintf");
    }
    public static int fwprintf ( Addressable __stream,  Addressable __format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.fwprintf$MH, "fwprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$23.wprintf$MH,"wprintf");
    }
    public static int wprintf ( Addressable __format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.wprintf$MH, "wprintf");
        try {
            return (int)mh$.invokeExact(__format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$23.vfwprintf$MH,"vfwprintf");
    }
    public static int vfwprintf ( Addressable __stream,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.vfwprintf$MH, "vfwprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$23.vwprintf$MH,"vwprintf");
    }
    public static int vwprintf ( Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.vwprintf$MH, "vwprintf");
        try {
            return (int)mh$.invokeExact(__format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle snwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$24.snwprintf$MH,"snwprintf");
    }
    public static int snwprintf ( Addressable __stream,  long __n,  Addressable __format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.snwprintf$MH, "snwprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __n, __format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$24.vsnwprintf$MH,"vsnwprintf");
    }
    public static int vsnwprintf ( Addressable __stream,  long __n,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.vsnwprintf$MH, "vsnwprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __n, __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfsopen$MH() {
        return RuntimeHelper.requireNonNull(constants$24._wfsopen$MH,"_wfsopen");
    }
    public static MemoryAddress _wfsopen ( Addressable _Filename,  Addressable _Mode,  int _ShFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24._wfsopen$MH, "_wfsopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Filename.address(), _Mode.address(), _ShFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetwc$MH() {
        return RuntimeHelper.requireNonNull(constants$24.fgetwc$MH,"fgetwc");
    }
    public static short fgetwc ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.fgetwc$MH, "fgetwc");
        try {
            return (short)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fgetwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$24._fgetwchar$MH,"_fgetwchar");
    }
    public static short _fgetwchar () {
        var mh$ = RuntimeHelper.requireNonNull(constants$24._fgetwchar$MH, "_fgetwchar");
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputwc$MH() {
        return RuntimeHelper.requireNonNull(constants$24.fputwc$MH,"fputwc");
    }
    public static short fputwc ( short _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.fputwc$MH, "fputwc");
        try {
            return (short)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fputwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$25._fputwchar$MH,"_fputwchar");
    }
    public static short _fputwchar ( short _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$25._fputwchar$MH, "_fputwchar");
        try {
            return (short)mh$.invokeExact(_Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwc$MH() {
        return RuntimeHelper.requireNonNull(constants$25.getwc$MH,"getwc");
    }
    public static short getwc ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.getwc$MH, "getwc");
        try {
            return (short)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$25.getwchar$MH,"getwchar");
    }
    public static short getwchar () {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.getwchar$MH, "getwchar");
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putwc$MH() {
        return RuntimeHelper.requireNonNull(constants$25.putwc$MH,"putwc");
    }
    public static short putwc ( short _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.putwc$MH, "putwc");
        try {
            return (short)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putwchar$MH() {
        return RuntimeHelper.requireNonNull(constants$25.putwchar$MH,"putwchar");
    }
    public static short putwchar ( short _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.putwchar$MH, "putwchar");
        try {
            return (short)mh$.invokeExact(_Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ungetwc$MH() {
        return RuntimeHelper.requireNonNull(constants$25.ungetwc$MH,"ungetwc");
    }
    public static short ungetwc ( short _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.ungetwc$MH, "ungetwc");
        try {
            return (short)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetws$MH() {
        return RuntimeHelper.requireNonNull(constants$26.fgetws$MH,"fgetws");
    }
    public static MemoryAddress fgetws ( Addressable _Dst,  int _SizeInWords,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.fgetws$MH, "fgetws");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dst.address(), _SizeInWords, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputws$MH() {
        return RuntimeHelper.requireNonNull(constants$26.fputws$MH,"fputws");
    }
    public static int fputws ( Addressable _Str,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.fputws$MH, "fputws");
        try {
            return (int)mh$.invokeExact(_Str.address(), _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getws$MH() {
        return RuntimeHelper.requireNonNull(constants$26._getws$MH,"_getws");
    }
    public static MemoryAddress _getws ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26._getws$MH, "_getws");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putws$MH() {
        return RuntimeHelper.requireNonNull(constants$26._putws$MH,"_putws");
    }
    public static int _putws ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26._putws$MH, "_putws");
        try {
            return (int)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$26._scwprintf$MH,"_scwprintf");
    }
    public static int _scwprintf ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26._scwprintf$MH, "_scwprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$26._swprintf_c$MH,"_swprintf_c");
    }
    public static int _swprintf_c ( Addressable _DstBuf,  long _SizeInWords,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26._swprintf_c$MH, "_swprintf_c");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _SizeInWords, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$27._vswprintf_c$MH,"_vswprintf_c");
    }
    public static int _vswprintf_c ( Addressable _DstBuf,  long _SizeInWords,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$27._vswprintf_c$MH, "_vswprintf_c");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _SizeInWords, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$27._snwprintf$MH,"_snwprintf");
    }
    public static int _snwprintf ( Addressable _Dest,  long _Count,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$27._snwprintf$MH, "_snwprintf");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Count, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$27._vsnwprintf$MH,"_vsnwprintf");
    }
    public static int _vsnwprintf ( Addressable _Dest,  long _Count,  Addressable _Format,  Addressable _Args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$27._vsnwprintf$MH, "_vsnwprintf");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Count, _Format.address(), _Args.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$27._vscwprintf$MH,"_vscwprintf");
    }
    public static int _vscwprintf ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$27._vscwprintf$MH, "_vscwprintf");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$27._swprintf$MH,"_swprintf");
    }
    public static int _swprintf ( Addressable _Dest,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$27._swprintf$MH, "_swprintf");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$27._vswprintf$MH,"_vswprintf");
    }
    public static int _vswprintf ( Addressable _Dest,  Addressable _Format,  Addressable _Args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$27._vswprintf$MH, "_vswprintf");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Format.address(), _Args.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$28.vswprintf$MH,"vswprintf");
    }
    public static int vswprintf ( Addressable __stream,  long __count,  Addressable __format,  Addressable __local_argv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.vswprintf$MH, "vswprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __count, __format.address(), __local_argv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swprintf$MH() {
        return RuntimeHelper.requireNonNull(constants$28.swprintf$MH,"swprintf");
    }
    public static int swprintf ( Addressable __stream,  long __count,  Addressable __format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.swprintf$MH, "swprintf");
        try {
            return (int)mh$.invokeExact(__stream.address(), __count, __format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wtempnam$MH,"_wtempnam");
    }
    public static MemoryAddress _wtempnam ( Addressable _Directory,  Addressable _FilePrefix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$28._wtempnam$MH, "_wtempnam");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Directory.address(), _FilePrefix.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf$MH() {
        return RuntimeHelper.requireNonNull(constants$28._snwscanf$MH,"_snwscanf");
    }
    public static int _snwscanf ( Addressable _Src,  long _MaxCount,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$28._snwscanf$MH, "_snwscanf");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wfdopen$MH,"_wfdopen");
    }
    public static MemoryAddress _wfdopen ( int _FileHandle,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$28._wfdopen$MH, "_wfdopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfopen$MH() {
        return RuntimeHelper.requireNonNull(constants$28._wfopen$MH,"_wfopen");
    }
    public static MemoryAddress _wfopen ( Addressable _Filename,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$28._wfopen$MH, "_wfopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Filename.address(), _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfreopen$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wfreopen$MH,"_wfreopen");
    }
    public static MemoryAddress _wfreopen ( Addressable _Filename,  Addressable _Mode,  Addressable _OldFile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$29._wfreopen$MH, "_wfreopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Filename.address(), _Mode.address(), _OldFile.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wperror$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wperror$MH,"_wperror");
    }
    public static void _wperror ( Addressable _ErrMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$29._wperror$MH, "_wperror");
        try {
            mh$.invokeExact(_ErrMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wpopen$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wpopen$MH,"_wpopen");
    }
    public static MemoryAddress _wpopen ( Addressable _Command,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$29._wpopen$MH, "_wpopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Command.address(), _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wremove$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wremove$MH,"_wremove");
    }
    public static int _wremove ( Addressable _Filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$29._wremove$MH, "_wremove");
        try {
            return (int)mh$.invokeExact(_Filename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtmpnam$MH() {
        return RuntimeHelper.requireNonNull(constants$29._wtmpnam$MH,"_wtmpnam");
    }
    public static MemoryAddress _wtmpnam ( Addressable _Buffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$29._wtmpnam$MH, "_wtmpnam");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Buffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lock_file$MH() {
        return RuntimeHelper.requireNonNull(constants$29._lock_file$MH,"_lock_file");
    }
    public static void _lock_file ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$29._lock_file$MH, "_lock_file");
        try {
            mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unlock_file$MH() {
        return RuntimeHelper.requireNonNull(constants$30._unlock_file$MH,"_unlock_file");
    }
    public static void _unlock_file ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$30._unlock_file$MH, "_unlock_file");
        try {
            mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tempnam$MH() {
        return RuntimeHelper.requireNonNull(constants$30.tempnam$MH,"tempnam");
    }
    public static MemoryAddress tempnam ( Addressable _Directory,  Addressable _FilePrefix) {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.tempnam$MH, "tempnam");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Directory.address(), _FilePrefix.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcloseall$MH() {
        return RuntimeHelper.requireNonNull(constants$30.fcloseall$MH,"fcloseall");
    }
    public static int fcloseall () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.fcloseall$MH, "fcloseall");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fdopen$MH() {
        return RuntimeHelper.requireNonNull(constants$30.fdopen$MH,"fdopen");
    }
    public static MemoryAddress fdopen ( int _FileHandle,  Addressable _Format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.fdopen$MH, "fdopen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_FileHandle, _Format.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fgetchar$MH() {
        return RuntimeHelper.requireNonNull(constants$30.fgetchar$MH,"fgetchar");
    }
    public static int fgetchar () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.fgetchar$MH, "fgetchar");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fileno$MH() {
        return RuntimeHelper.requireNonNull(constants$30.fileno$MH,"fileno");
    }
    public static int fileno ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.fileno$MH, "fileno");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle flushall$MH() {
        return RuntimeHelper.requireNonNull(constants$31.flushall$MH,"flushall");
    }
    public static int flushall () {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.flushall$MH, "flushall");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fputchar$MH() {
        return RuntimeHelper.requireNonNull(constants$31.fputchar$MH,"fputchar");
    }
    public static int fputchar ( int _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.fputchar$MH, "fputchar");
        try {
            return (int)mh$.invokeExact(_Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getw$MH() {
        return RuntimeHelper.requireNonNull(constants$31.getw$MH,"getw");
    }
    public static int getw ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.getw$MH, "getw");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putw$MH() {
        return RuntimeHelper.requireNonNull(constants$31.putw$MH,"putw");
    }
    public static int putw ( int _Ch,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.putw$MH, "putw");
        try {
            return (int)mh$.invokeExact(_Ch, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rmtmp$MH() {
        return RuntimeHelper.requireNonNull(constants$31.rmtmp$MH,"rmtmp");
    }
    public static int rmtmp () {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.rmtmp$MH, "rmtmp");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_str_wide_utf8$MH() {
        return RuntimeHelper.requireNonNull(constants$31.__mingw_str_wide_utf8$MH,"__mingw_str_wide_utf8");
    }
    public static int __mingw_str_wide_utf8 ( Addressable wptr,  Addressable mbptr,  Addressable buflen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.__mingw_str_wide_utf8$MH, "__mingw_str_wide_utf8");
        try {
            return (int)mh$.invokeExact(wptr.address(), mbptr.address(), buflen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_str_utf8_wide$MH() {
        return RuntimeHelper.requireNonNull(constants$32.__mingw_str_utf8_wide$MH,"__mingw_str_utf8_wide");
    }
    public static int __mingw_str_utf8_wide ( Addressable mbptr,  Addressable wptr,  Addressable buflen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.__mingw_str_utf8_wide$MH, "__mingw_str_utf8_wide");
        try {
            return (int)mh$.invokeExact(mbptr.address(), wptr.address(), buflen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __mingw_str_free$MH() {
        return RuntimeHelper.requireNonNull(constants$32.__mingw_str_free$MH,"__mingw_str_free");
    }
    public static void __mingw_str_free ( Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.__mingw_str_free$MH, "__mingw_str_free");
        try {
            mh$.invokeExact(ptr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnl$MH() {
        return RuntimeHelper.requireNonNull(constants$32._wspawnl$MH,"_wspawnl");
    }
    public static long _wspawnl ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$32._wspawnl$MH, "_wspawnl");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnle$MH() {
        return RuntimeHelper.requireNonNull(constants$32._wspawnle$MH,"_wspawnle");
    }
    public static long _wspawnle ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$32._wspawnle$MH, "_wspawnle");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnlp$MH() {
        return RuntimeHelper.requireNonNull(constants$32._wspawnlp$MH,"_wspawnlp");
    }
    public static long _wspawnlp ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$32._wspawnlp$MH, "_wspawnlp");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnlpe$MH() {
        return RuntimeHelper.requireNonNull(constants$32._wspawnlpe$MH,"_wspawnlpe");
    }
    public static long _wspawnlpe ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$32._wspawnlpe$MH, "_wspawnlpe");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnv$MH() {
        return RuntimeHelper.requireNonNull(constants$33._wspawnv$MH,"_wspawnv");
    }
    public static long _wspawnv ( int _Mode,  Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33._wspawnv$MH, "_wspawnv");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnve$MH() {
        return RuntimeHelper.requireNonNull(constants$33._wspawnve$MH,"_wspawnve");
    }
    public static long _wspawnve ( int _Mode,  Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33._wspawnve$MH, "_wspawnve");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnvp$MH() {
        return RuntimeHelper.requireNonNull(constants$33._wspawnvp$MH,"_wspawnvp");
    }
    public static long _wspawnvp ( int _Mode,  Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33._wspawnvp$MH, "_wspawnvp");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wspawnvpe$MH() {
        return RuntimeHelper.requireNonNull(constants$33._wspawnvpe$MH,"_wspawnvpe");
    }
    public static long _wspawnvpe ( int _Mode,  Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33._wspawnvpe$MH, "_wspawnvpe");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnv$MH() {
        return RuntimeHelper.requireNonNull(constants$33._spawnv$MH,"_spawnv");
    }
    public static long _spawnv ( int _Mode,  Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33._spawnv$MH, "_spawnv");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnve$MH() {
        return RuntimeHelper.requireNonNull(constants$33._spawnve$MH,"_spawnve");
    }
    public static long _spawnve ( int _Mode,  Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33._spawnve$MH, "_spawnve");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnvp$MH() {
        return RuntimeHelper.requireNonNull(constants$34._spawnvp$MH,"_spawnvp");
    }
    public static long _spawnvp ( int _Mode,  Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34._spawnvp$MH, "_spawnvp");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnvpe$MH() {
        return RuntimeHelper.requireNonNull(constants$34._spawnvpe$MH,"_spawnvpe");
    }
    public static long _spawnvpe ( int _Mode,  Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34._spawnvpe$MH, "_spawnvpe");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle clearerr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$34.clearerr_s$MH,"clearerr_s");
    }
    public static int clearerr_s ( Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.clearerr_s$MH, "clearerr_s");
        try {
            return (int)mh$.invokeExact(_File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fread_s$MH() {
        return RuntimeHelper.requireNonNull(constants$34.fread_s$MH,"fread_s");
    }
    public static long fread_s ( Addressable _DstBuf,  long _DstSize,  long _ElementSize,  long _Count,  Addressable _File) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.fread_s$MH, "fread_s");
        try {
            return (long)mh$.invokeExact(_DstBuf.address(), _DstSize, _ElementSize, _Count, _File.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$34.fprintf_s$MH,"fprintf_s");
    }
    public static int fprintf_s ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.fprintf_s$MH, "fprintf_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$34._fscanf_s_l$MH,"_fscanf_s_l");
    }
    public static int _fscanf_s_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34._fscanf_s_l$MH, "_fscanf_s_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$35.fscanf_s$MH,"fscanf_s");
    }
    public static int fscanf_s ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.fscanf_s$MH, "fscanf_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle printf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$35.printf_s$MH,"printf_s");
    }
    public static int printf_s ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.printf_s$MH, "printf_s");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$35._scanf_l$MH,"_scanf_l");
    }
    public static int _scanf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$35._scanf_l$MH, "_scanf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$35._scanf_s_l$MH,"_scanf_s_l");
    }
    public static int _scanf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$35._scanf_s_l$MH, "_scanf_s_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle scanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$35.scanf_s$MH,"scanf_s");
    }
    public static int scanf_s ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.scanf_s$MH, "scanf_s");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$35._snprintf_c$MH,"_snprintf_c");
    }
    public static int _snprintf_c ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$35._snprintf_c$MH, "_snprintf_c");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_c$MH() {
        return RuntimeHelper.requireNonNull(constants$36._vsnprintf_c$MH,"_vsnprintf_c");
    }
    public static int _vsnprintf_c ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36._vsnprintf_c$MH, "_vsnprintf_c");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._fscanf_l$MH,"_fscanf_l");
    }
    public static int _fscanf_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36._fscanf_l$MH, "_fscanf_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._sscanf_l$MH,"_sscanf_l");
    }
    public static int _sscanf_l ( Addressable _Src,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36._sscanf_l$MH, "_sscanf_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._sscanf_s_l$MH,"_sscanf_s_l");
    }
    public static int _sscanf_s_l ( Addressable _Src,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36._sscanf_s_l$MH, "_sscanf_s_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36.sscanf_s$MH,"sscanf_s");
    }
    public static int sscanf_s ( Addressable _Src,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36.sscanf_s$MH, "sscanf_s");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36._snscanf_s$MH,"_snscanf_s");
    }
    public static int _snscanf_s ( Addressable _Src,  long _MaxCount,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36._snscanf_s$MH, "_snscanf_s");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._snscanf_l$MH,"_snscanf_l");
    }
    public static int _snscanf_l ( Addressable _Src,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37._snscanf_l$MH, "_snscanf_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._snscanf_s_l$MH,"_snscanf_s_l");
    }
    public static int _snscanf_s_l ( Addressable _Src,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37._snscanf_s_l$MH, "_snscanf_s_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$37.vfprintf_s$MH,"vfprintf_s");
    }
    public static int vfprintf_s ( Addressable _File,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.vfprintf_s$MH, "vfprintf_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$37.vprintf_s$MH,"vprintf_s");
    }
    public static int vprintf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.vprintf_s$MH, "vprintf_s");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$37.vsnprintf_s$MH,"vsnprintf_s");
    }
    public static int vsnprintf_s ( Addressable _DstBuf,  long _DstSize,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.vsnprintf_s$MH, "vsnprintf_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _MaxCount, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$37._vsnprintf_s$MH,"_vsnprintf_s");
    }
    public static int _vsnprintf_s ( Addressable _DstBuf,  long _DstSize,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37._vsnprintf_s$MH, "_vsnprintf_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _MaxCount, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vsprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38.vsprintf_s$MH,"vsprintf_s");
    }
    public static int vsprintf_s ( Addressable _DstBuf,  long _Size,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.vsprintf_s$MH, "vsprintf_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _Size, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38.sprintf_s$MH,"sprintf_s");
    }
    public static int sprintf_s ( Addressable _DstBuf,  long _DstSize,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.sprintf_s$MH, "sprintf_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38._snprintf_s$MH,"_snprintf_s");
    }
    public static int _snprintf_s ( Addressable _DstBuf,  long _DstSize,  long _MaxCount,  Addressable _Format, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38._snprintf_s$MH, "_snprintf_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _MaxCount, _Format.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$38._fprintf_p$MH,"_fprintf_p");
    }
    public static int _fprintf_p ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38._fprintf_p$MH, "_fprintf_p");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$38._printf_p$MH,"_printf_p");
    }
    public static int _printf_p ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38._printf_p$MH, "_printf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$38._sprintf_p$MH,"_sprintf_p");
    }
    public static int _sprintf_p ( Addressable _Dst,  long _MaxCount,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38._sprintf_p$MH, "_sprintf_p");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _MaxCount, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vfprintf_p$MH,"_vfprintf_p");
    }
    public static int _vfprintf_p ( Addressable _File,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39._vfprintf_p$MH, "_vfprintf_p");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vprintf_p$MH,"_vprintf_p");
    }
    public static int _vprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39._vprintf_p$MH, "_vprintf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vsprintf_p$MH,"_vsprintf_p");
    }
    public static int _vsprintf_p ( Addressable _Dst,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39._vsprintf_p$MH, "_vsprintf_p");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _MaxCount, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$39._scprintf_p$MH,"_scprintf_p");
    }
    public static int _scprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39._scprintf_p$MH, "_scprintf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$39._vscprintf_p$MH,"_vscprintf_p");
    }
    public static int _vscprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39._vscprintf_p$MH, "_vscprintf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$39._printf_l$MH,"_printf_l");
    }
    public static int _printf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39._printf_l$MH, "_printf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._printf_p_l$MH,"_printf_p_l");
    }
    public static int _printf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40._printf_p_l$MH, "_printf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vprintf_l$MH,"_vprintf_l");
    }
    public static int _vprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40._vprintf_l$MH, "_vprintf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vprintf_p_l$MH,"_vprintf_p_l");
    }
    public static int _vprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40._vprintf_p_l$MH, "_vprintf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._fprintf_l$MH,"_fprintf_l");
    }
    public static int _fprintf_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40._fprintf_l$MH, "_fprintf_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._fprintf_p_l$MH,"_fprintf_p_l");
    }
    public static int _fprintf_p_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40._fprintf_p_l$MH, "_fprintf_p_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$40._vfprintf_l$MH,"_vfprintf_l");
    }
    public static int _vfprintf_l ( Addressable _File,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40._vfprintf_l$MH, "_vfprintf_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vfprintf_p_l$MH,"_vfprintf_p_l");
    }
    public static int _vfprintf_p_l ( Addressable _File,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41._vfprintf_p_l$MH, "_vfprintf_p_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._sprintf_l$MH,"_sprintf_l");
    }
    public static int _sprintf_l ( Addressable _DstBuf,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41._sprintf_l$MH, "_sprintf_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._sprintf_p_l$MH,"_sprintf_p_l");
    }
    public static int _sprintf_p_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41._sprintf_p_l$MH, "_sprintf_p_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vsprintf_l$MH,"_vsprintf_l");
    }
    public static int _vsprintf_l ( Addressable _DstBuf,  Addressable _Format,  Addressable x2,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41._vsprintf_l$MH, "_vsprintf_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _Format.address(), x2.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._vsprintf_p_l$MH,"_vsprintf_p_l");
    }
    public static int _vsprintf_p_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41._vsprintf_p_l$MH, "_vsprintf_p_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$41._scprintf_l$MH,"_scprintf_l");
    }
    public static int _scprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41._scprintf_l$MH, "_scprintf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._scprintf_p_l$MH,"_scprintf_p_l");
    }
    public static int _scprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$42._scprintf_p_l$MH, "_scprintf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._vscprintf_l$MH,"_vscprintf_l");
    }
    public static int _vscprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$42._vscprintf_l$MH, "_vscprintf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._vscprintf_p_l$MH,"_vscprintf_p_l");
    }
    public static int _vscprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$42._vscprintf_p_l$MH, "_vscprintf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _printf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._printf_s_l$MH,"_printf_s_l");
    }
    public static int _printf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$42._printf_s_l$MH, "_printf_s_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._vprintf_s_l$MH,"_vprintf_s_l");
    }
    public static int _vprintf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$42._vprintf_s_l$MH, "_vprintf_s_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$42._fprintf_s_l$MH,"_fprintf_s_l");
    }
    public static int _fprintf_s_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$42._fprintf_s_l$MH, "_fprintf_s_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._vfprintf_s_l$MH,"_vfprintf_s_l");
    }
    public static int _vfprintf_s_l ( Addressable _File,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$43._vfprintf_s_l$MH, "_vfprintf_s_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._sprintf_s_l$MH,"_sprintf_s_l");
    }
    public static int _sprintf_s_l ( Addressable _DstBuf,  long _DstSize,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$43._sprintf_s_l$MH, "_sprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._vsprintf_s_l$MH,"_vsprintf_s_l");
    }
    public static int _vsprintf_s_l ( Addressable _DstBuf,  long _DstSize,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$43._vsprintf_s_l$MH, "_vsprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._snprintf_s_l$MH,"_snprintf_s_l");
    }
    public static int _snprintf_s_l ( Addressable _DstBuf,  long _DstSize,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$43._snprintf_s_l$MH, "_snprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _MaxCount, _Format.address(), _Locale.address(), x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._vsnprintf_s_l$MH,"_vsnprintf_s_l");
    }
    public static int _vsnprintf_s_l ( Addressable _DstBuf,  long _DstSize,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$43._vsnprintf_s_l$MH, "_vsnprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _MaxCount, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$43._snprintf_l$MH,"_snprintf_l");
    }
    public static int _snprintf_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$43._snprintf_l$MH, "_snprintf_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._snprintf_c_l$MH,"_snprintf_c_l");
    }
    public static int _snprintf_c_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44._snprintf_c_l$MH, "_snprintf_c_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._vsnprintf_l$MH,"_vsnprintf_l");
    }
    public static int _vsnprintf_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44._vsnprintf_l$MH, "_vsnprintf_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$44._vsnprintf_c_l$MH,"_vsnprintf_c_l");
    }
    public static int _vsnprintf_c_l ( Addressable _DstBuf,  long _MaxCount,  Addressable x2,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44._vsnprintf_c_l$MH, "_vsnprintf_c_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, x2.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$44.fopen_s$MH,"fopen_s");
    }
    public static int fopen_s ( Addressable _File,  Addressable _Filename,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.fopen_s$MH, "fopen_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Filename.address(), _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle freopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$44.freopen_s$MH,"freopen_s");
    }
    public static int freopen_s ( Addressable _File,  Addressable _Filename,  Addressable _Mode,  Addressable _Stream) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.freopen_s$MH, "freopen_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Filename.address(), _Mode.address(), _Stream.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gets_s$MH() {
        return RuntimeHelper.requireNonNull(constants$44.gets_s$MH,"gets_s");
    }
    public static MemoryAddress gets_s ( Addressable x0,  long x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.gets_s$MH, "gets_s");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tmpnam_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45.tmpnam_s$MH,"tmpnam_s");
    }
    public static int tmpnam_s ( Addressable x0,  long x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.tmpnam_s$MH, "tmpnam_s");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getws_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45._getws_s$MH,"_getws_s");
    }
    public static MemoryAddress _getws_s ( Addressable _Str,  long _SizeInWords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$45._getws_s$MH, "_getws_s");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _SizeInWords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45.fwprintf_s$MH,"fwprintf_s");
    }
    public static int fwprintf_s ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.fwprintf_s$MH, "fwprintf_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45.wprintf_s$MH,"wprintf_s");
    }
    public static int wprintf_s ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.wprintf_s$MH, "wprintf_s");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vfwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vfwprintf_s$MH,"vfwprintf_s");
    }
    public static int vfwprintf_s ( Addressable _File,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.vfwprintf_s$MH, "vfwprintf_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$45.vwprintf_s$MH,"vwprintf_s");
    }
    public static int vwprintf_s ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.vwprintf_s$MH, "vwprintf_s");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle vswprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$46.vswprintf_s$MH,"vswprintf_s");
    }
    public static int vswprintf_s ( Addressable _Dst,  long _SizeInWords,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.vswprintf_s$MH, "vswprintf_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _SizeInWords, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$46.swprintf_s$MH,"swprintf_s");
    }
    public static int swprintf_s ( Addressable _Dst,  long _SizeInWords,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.swprintf_s$MH, "swprintf_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _SizeInWords, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vsnwprintf_s$MH,"_vsnwprintf_s");
    }
    public static int _vsnwprintf_s ( Addressable _DstBuf,  long _DstSizeInWords,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$46._vsnwprintf_s$MH, "_vsnwprintf_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSizeInWords, _MaxCount, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$46._snwprintf_s$MH,"_snwprintf_s");
    }
    public static int _snwprintf_s ( Addressable _DstBuf,  long _DstSizeInWords,  long _MaxCount,  Addressable _Format, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$46._snwprintf_s$MH, "_snwprintf_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSizeInWords, _MaxCount, _Format.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._wprintf_s_l$MH,"_wprintf_s_l");
    }
    public static int _wprintf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$46._wprintf_s_l$MH, "_wprintf_s_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$46._vwprintf_s_l$MH,"_vwprintf_s_l");
    }
    public static int _vwprintf_s_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$46._vwprintf_s_l$MH, "_vwprintf_s_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._fwprintf_s_l$MH,"_fwprintf_s_l");
    }
    public static int _fwprintf_s_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$47._fwprintf_s_l$MH, "_fwprintf_s_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._vfwprintf_s_l$MH,"_vfwprintf_s_l");
    }
    public static int _vfwprintf_s_l ( Addressable _File,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$47._vfwprintf_s_l$MH, "_vfwprintf_s_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._swprintf_s_l$MH,"_swprintf_s_l");
    }
    public static int _swprintf_s_l ( Addressable _DstBuf,  long _DstSize,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$47._swprintf_s_l$MH, "_swprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._vswprintf_s_l$MH,"_vswprintf_s_l");
    }
    public static int _vswprintf_s_l ( Addressable _DstBuf,  long _DstSize,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$47._vswprintf_s_l$MH, "_vswprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._snwprintf_s_l$MH,"_snwprintf_s_l");
    }
    public static int _snwprintf_s_l ( Addressable _DstBuf,  long _DstSize,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$47._snwprintf_s_l$MH, "_snwprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _MaxCount, _Format.address(), _Locale.address(), x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$47._vsnwprintf_s_l$MH,"_vsnwprintf_s_l");
    }
    public static int _vsnwprintf_s_l ( Addressable _DstBuf,  long _DstSize,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$47._vsnwprintf_s_l$MH, "_vsnwprintf_s_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _DstSize, _MaxCount, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$48._fwscanf_s_l$MH,"_fwscanf_s_l");
    }
    public static int _fwscanf_s_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48._fwscanf_s_l$MH, "_fwscanf_s_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48.fwscanf_s$MH,"fwscanf_s");
    }
    public static int fwscanf_s ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.fwscanf_s$MH, "fwscanf_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$48._swscanf_s_l$MH,"_swscanf_s_l");
    }
    public static int _swscanf_s_l ( Addressable _Src,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48._swscanf_s_l$MH, "_swscanf_s_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48.swscanf_s$MH,"swscanf_s");
    }
    public static int swscanf_s ( Addressable _Src,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.swscanf_s$MH, "swscanf_s");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$48._snwscanf_s$MH,"_snwscanf_s");
    }
    public static int _snwscanf_s ( Addressable _Src,  long _MaxCount,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48._snwscanf_s$MH, "_snwscanf_s");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$48._snwscanf_s_l$MH,"_snwscanf_s_l");
    }
    public static int _snwscanf_s_l ( Addressable _Src,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48._snwscanf_s_l$MH, "_snwscanf_s_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wscanf_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$49._wscanf_s_l$MH,"_wscanf_s_l");
    }
    public static int _wscanf_s_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$49._wscanf_s_l$MH, "_wscanf_s_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wscanf_s$MH() {
        return RuntimeHelper.requireNonNull(constants$49.wscanf_s$MH,"wscanf_s");
    }
    public static int wscanf_s ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$49.wscanf_s$MH, "wscanf_s");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$49._wfopen_s$MH,"_wfopen_s");
    }
    public static int _wfopen_s ( Addressable _File,  Addressable _Filename,  Addressable _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$49._wfopen_s$MH, "_wfopen_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Filename.address(), _Mode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfreopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$49._wfreopen_s$MH,"_wfreopen_s");
    }
    public static int _wfreopen_s ( Addressable _File,  Addressable _Filename,  Addressable _Mode,  Addressable _OldFile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$49._wfreopen_s$MH, "_wfreopen_s");
        try {
            return (int)mh$.invokeExact(_File.address(), _Filename.address(), _Mode.address(), _OldFile.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtmpnam_s$MH() {
        return RuntimeHelper.requireNonNull(constants$49._wtmpnam_s$MH,"_wtmpnam_s");
    }
    public static int _wtmpnam_s ( Addressable _DstBuf,  long _SizeInWords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$49._wtmpnam_s$MH, "_wtmpnam_s");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _SizeInWords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$49._fwprintf_p$MH,"_fwprintf_p");
    }
    public static int _fwprintf_p ( Addressable _File,  Addressable _Format, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$49._fwprintf_p$MH, "_fwprintf_p");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$50._wprintf_p$MH,"_wprintf_p");
    }
    public static int _wprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$50._wprintf_p$MH, "_wprintf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$50._vfwprintf_p$MH,"_vfwprintf_p");
    }
    public static int _vfwprintf_p ( Addressable _File,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$50._vfwprintf_p$MH, "_vfwprintf_p");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$50._vwprintf_p$MH,"_vwprintf_p");
    }
    public static int _vwprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$50._vwprintf_p$MH, "_vwprintf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$50._swprintf_p$MH,"_swprintf_p");
    }
    public static int _swprintf_p ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$50._swprintf_p$MH, "_swprintf_p");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$50._vswprintf_p$MH,"_vswprintf_p");
    }
    public static int _vswprintf_p ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$50._vswprintf_p$MH, "_vswprintf_p");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$50._scwprintf_p$MH,"_scwprintf_p");
    }
    public static int _scwprintf_p ( Addressable _Format, Object... x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$50._scwprintf_p$MH, "_scwprintf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_p$MH() {
        return RuntimeHelper.requireNonNull(constants$51._vscwprintf_p$MH,"_vscwprintf_p");
    }
    public static int _vscwprintf_p ( Addressable _Format,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$51._vscwprintf_p$MH, "_vscwprintf_p");
        try {
            return (int)mh$.invokeExact(_Format.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._wprintf_l$MH,"_wprintf_l");
    }
    public static int _wprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$51._wprintf_l$MH, "_wprintf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._wprintf_p_l$MH,"_wprintf_p_l");
    }
    public static int _wprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$51._wprintf_p_l$MH, "_wprintf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._vwprintf_l$MH,"_vwprintf_l");
    }
    public static int _vwprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$51._vwprintf_l$MH, "_vwprintf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._vwprintf_p_l$MH,"_vwprintf_p_l");
    }
    public static int _vwprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$51._vwprintf_p_l$MH, "_vwprintf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$51._fwprintf_l$MH,"_fwprintf_l");
    }
    public static int _fwprintf_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$51._fwprintf_l$MH, "_fwprintf_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$52._fwprintf_p_l$MH,"_fwprintf_p_l");
    }
    public static int _fwprintf_p_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52._fwprintf_p_l$MH, "_fwprintf_p_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$52._vfwprintf_l$MH,"_vfwprintf_l");
    }
    public static int _vfwprintf_l ( Addressable _File,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52._vfwprintf_l$MH, "_vfwprintf_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vfwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$52._vfwprintf_p_l$MH,"_vfwprintf_p_l");
    }
    public static int _vfwprintf_p_l ( Addressable _File,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52._vfwprintf_p_l$MH, "_vfwprintf_p_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$52._swprintf_c_l$MH,"_swprintf_c_l");
    }
    public static int _swprintf_c_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52._swprintf_c_l$MH, "_swprintf_c_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$52._swprintf_p_l$MH,"_swprintf_p_l");
    }
    public static int _swprintf_p_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52._swprintf_p_l$MH, "_swprintf_p_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_c_l$MH() {
        return RuntimeHelper.requireNonNull(constants$52._vswprintf_c_l$MH,"_vswprintf_c_l");
    }
    public static int _vswprintf_c_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52._vswprintf_c_l$MH, "_vswprintf_c_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vswprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$53._vswprintf_p_l$MH,"_vswprintf_p_l");
    }
    public static int _vswprintf_p_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53._vswprintf_p_l$MH, "_vswprintf_p_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$53._scwprintf_l$MH,"_scwprintf_l");
    }
    public static int _scwprintf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53._scwprintf_l$MH, "_scwprintf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _scwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$53._scwprintf_p_l$MH,"_scwprintf_p_l");
    }
    public static int _scwprintf_p_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53._scwprintf_p_l$MH, "_scwprintf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_p_l$MH() {
        return RuntimeHelper.requireNonNull(constants$53._vscwprintf_p_l$MH,"_vscwprintf_p_l");
    }
    public static int _vscwprintf_p_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53._vscwprintf_p_l$MH, "_vscwprintf_p_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$53._snwprintf_l$MH,"_snwprintf_l");
    }
    public static int _snwprintf_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53._snwprintf_l$MH, "_snwprintf_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vsnwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$53._vsnwprintf_l$MH,"_vsnwprintf_l");
    }
    public static int _vsnwprintf_l ( Addressable _DstBuf,  long _MaxCount,  Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53._vsnwprintf_l$MH, "_vsnwprintf_l");
        try {
            return (int)mh$.invokeExact(_DstBuf.address(), _MaxCount, _Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __swprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$54.__swprintf_l$MH,"__swprintf_l");
    }
    public static int __swprintf_l ( Addressable _Dest,  Addressable _Format,  Addressable _Plocinfo, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.__swprintf_l$MH, "__swprintf_l");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Format.address(), _Plocinfo.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __vswprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$54.__vswprintf_l$MH,"__vswprintf_l");
    }
    public static int __vswprintf_l ( Addressable _Dest,  Addressable _Format,  Addressable _Plocinfo,  Addressable _Args) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.__vswprintf_l$MH, "__vswprintf_l");
        try {
            return (int)mh$.invokeExact(_Dest.address(), _Format.address(), _Plocinfo.address(), _Args.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _vscwprintf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$54._vscwprintf_l$MH,"_vscwprintf_l");
    }
    public static int _vscwprintf_l ( Addressable _Format,  Addressable _Locale,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54._vscwprintf_l$MH, "_vscwprintf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$54._fwscanf_l$MH,"_fwscanf_l");
    }
    public static int _fwscanf_l ( Addressable _File,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54._fwscanf_l$MH, "_fwscanf_l");
        try {
            return (int)mh$.invokeExact(_File.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$54._swscanf_l$MH,"_swscanf_l");
    }
    public static int _swscanf_l ( Addressable _Src,  Addressable _Format,  Addressable _Locale, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54._swscanf_l$MH, "_swscanf_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _Format.address(), _Locale.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _snwscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$54._snwscanf_l$MH,"_snwscanf_l");
    }
    public static int _snwscanf_l ( Addressable _Src,  long _MaxCount,  Addressable _Format,  Addressable _Locale, Object... x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54._snwscanf_l$MH, "_snwscanf_l");
        try {
            return (int)mh$.invokeExact(_Src.address(), _MaxCount, _Format.address(), _Locale.address(), x4);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wscanf_l$MH() {
        return RuntimeHelper.requireNonNull(constants$55._wscanf_l$MH,"_wscanf_l");
    }
    public static int _wscanf_l ( Addressable _Format,  Addressable _Locale, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55._wscanf_l$MH, "_wscanf_l");
        try {
            return (int)mh$.invokeExact(_Format.address(), _Locale.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static ValueLayout _pid_t = C_LONG_LONG;
    public static ValueLayout pid_t = C_LONG_LONG;
    public static MethodHandle _memccpy$MH() {
        return RuntimeHelper.requireNonNull(constants$55._memccpy$MH,"_memccpy");
    }
    public static MemoryAddress _memccpy ( Addressable _Dst,  Addressable _Src,  int _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55._memccpy$MH, "_memccpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dst.address(), _Src.address(), _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memchr$MH() {
        return RuntimeHelper.requireNonNull(constants$55.memchr$MH,"memchr");
    }
    public static MemoryAddress memchr ( Addressable _Buf,  int _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.memchr$MH, "memchr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Buf.address(), _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _memicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$55._memicmp$MH,"_memicmp");
    }
    public static int _memicmp ( Addressable _Buf1,  Addressable _Buf2,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55._memicmp$MH, "_memicmp");
        try {
            return (int)mh$.invokeExact(_Buf1.address(), _Buf2.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _memicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$55._memicmp_l$MH,"_memicmp_l");
    }
    public static int _memicmp_l ( Addressable _Buf1,  Addressable _Buf2,  long _Size,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55._memicmp_l$MH, "_memicmp_l");
        try {
            return (int)mh$.invokeExact(_Buf1.address(), _Buf2.address(), _Size, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$55.memcmp$MH,"memcmp");
    }
    public static int memcmp ( Addressable _Buf1,  Addressable _Buf2,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.memcmp$MH, "memcmp");
        try {
            return (int)mh$.invokeExact(_Buf1.address(), _Buf2.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$56.memcpy$MH,"memcpy");
    }
    public static MemoryAddress memcpy ( Addressable _Dst,  Addressable _Src,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.memcpy$MH, "memcpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dst.address(), _Src.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memcpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$56.memcpy_s$MH,"memcpy_s");
    }
    public static int memcpy_s ( Addressable _dest,  long _numberOfElements,  Addressable _src,  long _count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.memcpy_s$MH, "memcpy_s");
        try {
            return (int)mh$.invokeExact(_dest.address(), _numberOfElements, _src.address(), _count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mempcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$56.mempcpy$MH,"mempcpy");
    }
    public static MemoryAddress mempcpy ( Addressable _Dst,  Addressable _Src,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.mempcpy$MH, "mempcpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dst.address(), _Src.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memset$MH() {
        return RuntimeHelper.requireNonNull(constants$56.memset$MH,"memset");
    }
    public static MemoryAddress memset ( Addressable _Dst,  int _Val,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.memset$MH, "memset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dst.address(), _Val, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memccpy$MH() {
        return RuntimeHelper.requireNonNull(constants$56.memccpy$MH,"memccpy");
    }
    public static MemoryAddress memccpy ( Addressable _Dst,  Addressable _Src,  int _Val,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.memccpy$MH, "memccpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dst.address(), _Src.address(), _Val, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$56.memicmp$MH,"memicmp");
    }
    public static int memicmp ( Addressable _Buf1,  Addressable _Buf2,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.memicmp$MH, "memicmp");
        try {
            return (int)mh$.invokeExact(_Buf1.address(), _Buf2.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strset$MH() {
        return RuntimeHelper.requireNonNull(constants$57._strset$MH,"_strset");
    }
    public static MemoryAddress _strset ( Addressable _Str,  int _Val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57._strset$MH, "_strset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strset_l$MH() {
        return RuntimeHelper.requireNonNull(constants$57._strset_l$MH,"_strset_l");
    }
    public static MemoryAddress _strset_l ( Addressable _Str,  int _Val,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57._strset_l$MH, "_strset_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcpy$MH() {
        return RuntimeHelper.requireNonNull(constants$57.strcpy$MH,"strcpy");
    }
    public static MemoryAddress strcpy ( Addressable _Dest,  Addressable _Source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.strcpy$MH, "strcpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcat$MH() {
        return RuntimeHelper.requireNonNull(constants$57.strcat$MH,"strcat");
    }
    public static MemoryAddress strcat ( Addressable _Dest,  Addressable _Source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.strcat$MH, "strcat");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$57.strcmp$MH,"strcmp");
    }
    public static int strcmp ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.strcmp$MH, "strcmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlen$MH() {
        return RuntimeHelper.requireNonNull(constants$57.strlen$MH,"strlen");
    }
    public static long strlen ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.strlen$MH, "strlen");
        try {
            return (long)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$58.strnlen$MH,"strnlen");
    }
    public static long strnlen ( Addressable _Str,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.strnlen$MH, "strnlen");
        try {
            return (long)mh$.invokeExact(_Str.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memmove$MH() {
        return RuntimeHelper.requireNonNull(constants$58.memmove$MH,"memmove");
    }
    public static MemoryAddress memmove ( Addressable _Dst,  Addressable _Src,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.memmove$MH, "memmove");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dst.address(), _Src.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$58._strdup$MH,"_strdup");
    }
    public static MemoryAddress _strdup ( Addressable _Src) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58._strdup$MH, "_strdup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Src.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strchr$MH() {
        return RuntimeHelper.requireNonNull(constants$58.strchr$MH,"strchr");
    }
    public static MemoryAddress strchr ( Addressable _Str,  int _Val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.strchr$MH, "strchr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricmp$MH() {
        return RuntimeHelper.requireNonNull(constants$58._stricmp$MH,"_stricmp");
    }
    public static int _stricmp ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58._stricmp$MH, "_stricmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strcmpi$MH() {
        return RuntimeHelper.requireNonNull(constants$58._strcmpi$MH,"_strcmpi");
    }
    public static int _strcmpi ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58._strcmpi$MH, "_strcmpi");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$59._stricmp_l$MH,"_stricmp_l");
    }
    public static int _stricmp_l ( Addressable _Str1,  Addressable _Str2,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59._stricmp_l$MH, "_stricmp_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcoll$MH() {
        return RuntimeHelper.requireNonNull(constants$59.strcoll$MH,"strcoll");
    }
    public static int strcoll ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59.strcoll$MH, "strcoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strcoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$59._strcoll_l$MH,"_strcoll_l");
    }
    public static int _strcoll_l ( Addressable _Str1,  Addressable _Str2,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59._strcoll_l$MH, "_strcoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricoll$MH() {
        return RuntimeHelper.requireNonNull(constants$59._stricoll$MH,"_stricoll");
    }
    public static int _stricoll ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59._stricoll$MH, "_stricoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _stricoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$59._stricoll_l$MH,"_stricoll_l");
    }
    public static int _stricoll_l ( Addressable _Str1,  Addressable _Str2,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59._stricoll_l$MH, "_stricoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strncoll$MH() {
        return RuntimeHelper.requireNonNull(constants$59._strncoll$MH,"_strncoll");
    }
    public static int _strncoll ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59._strncoll$MH, "_strncoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strncoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$60._strncoll_l$MH,"_strncoll_l");
    }
    public static int _strncoll_l ( Addressable _Str1,  Addressable _Str2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60._strncoll_l$MH, "_strncoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$60._strnicoll$MH,"_strnicoll");
    }
    public static int _strnicoll ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60._strnicoll$MH, "_strnicoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$60._strnicoll_l$MH,"_strnicoll_l");
    }
    public static int _strnicoll_l ( Addressable _Str1,  Addressable _Str2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60._strnicoll_l$MH, "_strnicoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcspn$MH() {
        return RuntimeHelper.requireNonNull(constants$60.strcspn$MH,"strcspn");
    }
    public static long strcspn ( Addressable _Str,  Addressable _Control) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.strcspn$MH, "strcspn");
        try {
            return (long)mh$.invokeExact(_Str.address(), _Control.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$60._strerror$MH,"_strerror");
    }
    public static MemoryAddress _strerror ( Addressable _ErrMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60._strerror$MH, "_strerror");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_ErrMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strerror$MH() {
        return RuntimeHelper.requireNonNull(constants$60.strerror$MH,"strerror");
    }
    public static MemoryAddress strerror ( int x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.strerror$MH, "strerror");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strlwr$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strlwr$MH,"_strlwr");
    }
    public static MemoryAddress _strlwr ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$61._strlwr$MH, "_strlwr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlwr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$61.strlwr_l$MH,"strlwr_l");
    }
    public static MemoryAddress strlwr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.strlwr_l$MH, "strlwr_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncat$MH() {
        return RuntimeHelper.requireNonNull(constants$61.strncat$MH,"strncat");
    }
    public static MemoryAddress strncat ( Addressable _Dest,  Addressable _Source,  long _Count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.strncat$MH, "strncat");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address(), _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncmp$MH() {
        return RuntimeHelper.requireNonNull(constants$61.strncmp$MH,"strncmp");
    }
    public static int strncmp ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.strncmp$MH, "strncmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strnicmp$MH,"_strnicmp");
    }
    public static int _strnicmp ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$61._strnicmp$MH, "_strnicmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$61._strnicmp_l$MH,"_strnicmp_l");
    }
    public static int _strnicmp_l ( Addressable _Str1,  Addressable _Str2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$61._strnicmp_l$MH, "_strnicmp_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$62.strncpy$MH,"strncpy");
    }
    public static MemoryAddress strncpy ( Addressable _Dest,  Addressable _Source,  long _Count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.strncpy$MH, "strncpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address(), _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnset$MH() {
        return RuntimeHelper.requireNonNull(constants$62._strnset$MH,"_strnset");
    }
    public static MemoryAddress _strnset ( Addressable _Str,  int _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62._strnset$MH, "_strnset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnset_l$MH() {
        return RuntimeHelper.requireNonNull(constants$62._strnset_l$MH,"_strnset_l");
    }
    public static MemoryAddress _strnset_l ( Addressable str,  int c,  long count,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62._strnset_l$MH, "_strnset_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(str.address(), c, count, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strpbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$62.strpbrk$MH,"strpbrk");
    }
    public static MemoryAddress strpbrk ( Addressable _Str,  Addressable _Control) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.strpbrk$MH, "strpbrk");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Control.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$62.strrchr$MH,"strrchr");
    }
    public static MemoryAddress strrchr ( Addressable _Str,  int _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.strrchr$MH, "strrchr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strrev$MH() {
        return RuntimeHelper.requireNonNull(constants$62._strrev$MH,"_strrev");
    }
    public static MemoryAddress _strrev ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62._strrev$MH, "_strrev");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strspn$MH() {
        return RuntimeHelper.requireNonNull(constants$63.strspn$MH,"strspn");
    }
    public static long strspn ( Addressable _Str,  Addressable _Control) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.strspn$MH, "strspn");
        try {
            return (long)mh$.invokeExact(_Str.address(), _Control.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strstr$MH() {
        return RuntimeHelper.requireNonNull(constants$63.strstr$MH,"strstr");
    }
    public static MemoryAddress strstr ( Addressable _Str,  Addressable _SubStr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.strstr$MH, "strstr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _SubStr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtok$MH() {
        return RuntimeHelper.requireNonNull(constants$63.strtok$MH,"strtok");
    }
    public static MemoryAddress strtok ( Addressable _Str,  Addressable _Delim) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.strtok$MH, "strtok");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Delim.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtok_r$MH() {
        return RuntimeHelper.requireNonNull(constants$63.strtok_r$MH,"strtok_r");
    }
    public static MemoryAddress strtok_r ( Addressable _Str,  Addressable _Delim,  Addressable __last) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.strtok_r$MH, "strtok_r");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Delim.address(), __last.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr$MH() {
        return RuntimeHelper.requireNonNull(constants$63._strupr$MH,"_strupr");
    }
    public static MemoryAddress _strupr ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63._strupr$MH, "_strupr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$63._strupr_l$MH,"_strupr_l");
    }
    public static MemoryAddress _strupr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63._strupr_l$MH, "_strupr_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strxfrm$MH() {
        return RuntimeHelper.requireNonNull(constants$64.strxfrm$MH,"strxfrm");
    }
    public static long strxfrm ( Addressable _Dst,  Addressable _Src,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.strxfrm$MH, "strxfrm");
        try {
            return (long)mh$.invokeExact(_Dst.address(), _Src.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strxfrm_l$MH() {
        return RuntimeHelper.requireNonNull(constants$64._strxfrm_l$MH,"_strxfrm_l");
    }
    public static long _strxfrm_l ( Addressable _Dst,  Addressable _Src,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64._strxfrm_l$MH, "_strxfrm_l");
        try {
            return (long)mh$.invokeExact(_Dst.address(), _Src.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strdup$MH() {
        return RuntimeHelper.requireNonNull(constants$64.strdup$MH,"strdup");
    }
    public static MemoryAddress strdup ( Addressable _Src) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.strdup$MH, "strdup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Src.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcmpi$MH() {
        return RuntimeHelper.requireNonNull(constants$64.strcmpi$MH,"strcmpi");
    }
    public static int strcmpi ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.strcmpi$MH, "strcmpi");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle stricmp$MH() {
        return RuntimeHelper.requireNonNull(constants$64.stricmp$MH,"stricmp");
    }
    public static int stricmp ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.stricmp$MH, "stricmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strlwr$MH() {
        return RuntimeHelper.requireNonNull(constants$64.strlwr$MH,"strlwr");
    }
    public static MemoryAddress strlwr ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.strlwr$MH, "strlwr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$65.strnicmp$MH,"strnicmp");
    }
    public static int strnicmp ( Addressable _Str1,  Addressable _Str,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.strnicmp$MH, "strnicmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$65.strncasecmp$MH,"strncasecmp");
    }
    public static int strncasecmp ( Addressable x0,  Addressable x1,  long x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.strncasecmp$MH, "strncasecmp");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcasecmp$MH() {
        return RuntimeHelper.requireNonNull(constants$65.strcasecmp$MH,"strcasecmp");
    }
    public static int strcasecmp ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.strcasecmp$MH, "strcasecmp");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnset$MH() {
        return RuntimeHelper.requireNonNull(constants$65.strnset$MH,"strnset");
    }
    public static MemoryAddress strnset ( Addressable _Str,  int _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.strnset$MH, "strnset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strrev$MH() {
        return RuntimeHelper.requireNonNull(constants$65.strrev$MH,"strrev");
    }
    public static MemoryAddress strrev ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.strrev$MH, "strrev");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strset$MH() {
        return RuntimeHelper.requireNonNull(constants$65.strset$MH,"strset");
    }
    public static MemoryAddress strset ( Addressable _Str,  int _Val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.strset$MH, "strset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strupr$MH() {
        return RuntimeHelper.requireNonNull(constants$66.strupr$MH,"strupr");
    }
    public static MemoryAddress strupr ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.strupr$MH, "strupr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsdup$MH() {
        return RuntimeHelper.requireNonNull(constants$66._wcsdup$MH,"_wcsdup");
    }
    public static MemoryAddress _wcsdup ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66._wcsdup$MH, "_wcsdup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscat$MH() {
        return RuntimeHelper.requireNonNull(constants$66.wcscat$MH,"wcscat");
    }
    public static MemoryAddress wcscat ( Addressable _Dest,  Addressable _Source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.wcscat$MH, "wcscat");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcschr$MH() {
        return RuntimeHelper.requireNonNull(constants$66.wcschr$MH,"wcschr");
    }
    public static MemoryAddress wcschr ( Addressable _Str,  short _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.wcschr$MH, "wcschr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscmp$MH() {
        return RuntimeHelper.requireNonNull(constants$66.wcscmp$MH,"wcscmp");
    }
    public static int wcscmp ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.wcscmp$MH, "wcscmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscpy$MH() {
        return RuntimeHelper.requireNonNull(constants$66.wcscpy$MH,"wcscpy");
    }
    public static MemoryAddress wcscpy ( Addressable _Dest,  Addressable _Source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.wcscpy$MH, "wcscpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscspn$MH() {
        return RuntimeHelper.requireNonNull(constants$67.wcscspn$MH,"wcscspn");
    }
    public static long wcscspn ( Addressable _Str,  Addressable _Control) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.wcscspn$MH, "wcscspn");
        try {
            return (long)mh$.invokeExact(_Str.address(), _Control.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcslen$MH() {
        return RuntimeHelper.requireNonNull(constants$67.wcslen$MH,"wcslen");
    }
    public static long wcslen ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.wcslen$MH, "wcslen");
        try {
            return (long)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$67.wcsnlen$MH,"wcsnlen");
    }
    public static long wcsnlen ( Addressable _Src,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.wcsnlen$MH, "wcsnlen");
        try {
            return (long)mh$.invokeExact(_Src.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncat$MH() {
        return RuntimeHelper.requireNonNull(constants$67.wcsncat$MH,"wcsncat");
    }
    public static MemoryAddress wcsncat ( Addressable _Dest,  Addressable _Source,  long _Count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.wcsncat$MH, "wcsncat");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address(), _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncmp$MH() {
        return RuntimeHelper.requireNonNull(constants$67.wcsncmp$MH,"wcsncmp");
    }
    public static int wcsncmp ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.wcsncmp$MH, "wcsncmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncpy$MH() {
        return RuntimeHelper.requireNonNull(constants$67.wcsncpy$MH,"wcsncpy");
    }
    public static MemoryAddress wcsncpy ( Addressable _Dest,  Addressable _Source,  long _Count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.wcsncpy$MH, "wcsncpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address(), _Count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsncpy_l$MH() {
        return RuntimeHelper.requireNonNull(constants$68._wcsncpy_l$MH,"_wcsncpy_l");
    }
    public static MemoryAddress _wcsncpy_l ( Addressable _Dest,  Addressable _Source,  long _Count,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68._wcsncpy_l$MH, "_wcsncpy_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Dest.address(), _Source.address(), _Count, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcspbrk$MH() {
        return RuntimeHelper.requireNonNull(constants$68.wcspbrk$MH,"wcspbrk");
    }
    public static MemoryAddress wcspbrk ( Addressable _Str,  Addressable _Control) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.wcspbrk$MH, "wcspbrk");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Control.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$68.wcsrchr$MH,"wcsrchr");
    }
    public static MemoryAddress wcsrchr ( Addressable _Str,  short _Ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.wcsrchr$MH, "wcsrchr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsspn$MH() {
        return RuntimeHelper.requireNonNull(constants$68.wcsspn$MH,"wcsspn");
    }
    public static long wcsspn ( Addressable _Str,  Addressable _Control) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.wcsspn$MH, "wcsspn");
        try {
            return (long)mh$.invokeExact(_Str.address(), _Control.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsstr$MH() {
        return RuntimeHelper.requireNonNull(constants$68.wcsstr$MH,"wcsstr");
    }
    public static MemoryAddress wcsstr ( Addressable _Str,  Addressable _SubStr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.wcsstr$MH, "wcsstr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _SubStr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstok$MH() {
        return RuntimeHelper.requireNonNull(constants$68.wcstok$MH,"wcstok");
    }
    public static MemoryAddress wcstok ( Addressable _Str,  Addressable _Delim) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.wcstok$MH, "wcstok");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Delim.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcserror$MH() {
        return RuntimeHelper.requireNonNull(constants$69._wcserror$MH,"_wcserror");
    }
    public static MemoryAddress _wcserror ( int _ErrNum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69._wcserror$MH, "_wcserror");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_ErrNum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __wcserror$MH() {
        return RuntimeHelper.requireNonNull(constants$69.__wcserror$MH,"__wcserror");
    }
    public static MemoryAddress __wcserror ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69.__wcserror$MH, "__wcserror");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$69._wcsicmp$MH,"_wcsicmp");
    }
    public static int _wcsicmp ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69._wcsicmp$MH, "_wcsicmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._wcsicmp_l$MH,"_wcsicmp_l");
    }
    public static int _wcsicmp_l ( Addressable _Str1,  Addressable _Str2,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69._wcsicmp_l$MH, "_wcsicmp_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$69._wcsnicmp$MH,"_wcsnicmp");
    }
    public static int _wcsnicmp ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69._wcsnicmp$MH, "_wcsnicmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicmp_l$MH() {
        return RuntimeHelper.requireNonNull(constants$69._wcsnicmp_l$MH,"_wcsnicmp_l");
    }
    public static int _wcsnicmp_l ( Addressable _Str1,  Addressable _Str2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69._wcsnicmp_l$MH, "_wcsnicmp_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnset$MH() {
        return RuntimeHelper.requireNonNull(constants$70._wcsnset$MH,"_wcsnset");
    }
    public static MemoryAddress _wcsnset ( Addressable _Str,  short _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70._wcsnset$MH, "_wcsnset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsrev$MH() {
        return RuntimeHelper.requireNonNull(constants$70._wcsrev$MH,"_wcsrev");
    }
    public static MemoryAddress _wcsrev ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70._wcsrev$MH, "_wcsrev");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsset$MH() {
        return RuntimeHelper.requireNonNull(constants$70._wcsset$MH,"_wcsset");
    }
    public static MemoryAddress _wcsset ( Addressable _Str,  short _Val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70._wcsset$MH, "_wcsset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr$MH() {
        return RuntimeHelper.requireNonNull(constants$70._wcslwr$MH,"_wcslwr");
    }
    public static MemoryAddress _wcslwr ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70._wcslwr$MH, "_wcslwr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$70._wcslwr_l$MH,"_wcslwr_l");
    }
    public static MemoryAddress _wcslwr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70._wcslwr_l$MH, "_wcslwr_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr$MH() {
        return RuntimeHelper.requireNonNull(constants$70._wcsupr$MH,"_wcsupr");
    }
    public static MemoryAddress _wcsupr ( Addressable _String) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70._wcsupr$MH, "_wcsupr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._wcsupr_l$MH,"_wcsupr_l");
    }
    public static MemoryAddress _wcsupr_l ( Addressable _String,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71._wcsupr_l$MH, "_wcsupr_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_String.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsxfrm$MH() {
        return RuntimeHelper.requireNonNull(constants$71.wcsxfrm$MH,"wcsxfrm");
    }
    public static long wcsxfrm ( Addressable _Dst,  Addressable _Src,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.wcsxfrm$MH, "wcsxfrm");
        try {
            return (long)mh$.invokeExact(_Dst.address(), _Src.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsxfrm_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._wcsxfrm_l$MH,"_wcsxfrm_l");
    }
    public static long _wcsxfrm_l ( Addressable _Dst,  Addressable _Src,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71._wcsxfrm_l$MH, "_wcsxfrm_l");
        try {
            return (long)mh$.invokeExact(_Dst.address(), _Src.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscoll$MH() {
        return RuntimeHelper.requireNonNull(constants$71.wcscoll$MH,"wcscoll");
    }
    public static int wcscoll ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.wcscoll$MH, "wcscoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcscoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$71._wcscoll_l$MH,"_wcscoll_l");
    }
    public static int _wcscoll_l ( Addressable _Str1,  Addressable _Str2,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71._wcscoll_l$MH, "_wcscoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$71._wcsicoll$MH,"_wcsicoll");
    }
    public static int _wcsicoll ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71._wcsicoll$MH, "_wcsicoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsicoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._wcsicoll_l$MH,"_wcsicoll_l");
    }
    public static int _wcsicoll_l ( Addressable _Str1,  Addressable _Str2,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72._wcsicoll_l$MH, "_wcsicoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsncoll$MH() {
        return RuntimeHelper.requireNonNull(constants$72._wcsncoll$MH,"_wcsncoll");
    }
    public static int _wcsncoll ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72._wcsncoll$MH, "_wcsncoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsncoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._wcsncoll_l$MH,"_wcsncoll_l");
    }
    public static int _wcsncoll_l ( Addressable _Str1,  Addressable _Str2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72._wcsncoll_l$MH, "_wcsncoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$72._wcsnicoll$MH,"_wcsnicoll");
    }
    public static int _wcsnicoll ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72._wcsnicoll$MH, "_wcsnicoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnicoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$72._wcsnicoll_l$MH,"_wcsnicoll_l");
    }
    public static int _wcsnicoll_l ( Addressable _Str1,  Addressable _Str2,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72._wcsnicoll_l$MH, "_wcsnicoll_l");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsdup$MH() {
        return RuntimeHelper.requireNonNull(constants$72.wcsdup$MH,"wcsdup");
    }
    public static MemoryAddress wcsdup ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72.wcsdup$MH, "wcsdup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$73.wcsicmp$MH,"wcsicmp");
    }
    public static int wcsicmp ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.wcsicmp$MH, "wcsicmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$73.wcsnicmp$MH,"wcsnicmp");
    }
    public static int wcsnicmp ( Addressable _Str1,  Addressable _Str2,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.wcsnicmp$MH, "wcsnicmp");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnset$MH() {
        return RuntimeHelper.requireNonNull(constants$73.wcsnset$MH,"wcsnset");
    }
    public static MemoryAddress wcsnset ( Addressable _Str,  short _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.wcsnset$MH, "wcsnset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsrev$MH() {
        return RuntimeHelper.requireNonNull(constants$73.wcsrev$MH,"wcsrev");
    }
    public static MemoryAddress wcsrev ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.wcsrev$MH, "wcsrev");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsset$MH() {
        return RuntimeHelper.requireNonNull(constants$73.wcsset$MH,"wcsset");
    }
    public static MemoryAddress wcsset ( Addressable _Str,  short _Val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.wcsset$MH, "wcsset");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcslwr$MH() {
        return RuntimeHelper.requireNonNull(constants$73.wcslwr$MH,"wcslwr");
    }
    public static MemoryAddress wcslwr ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.wcslwr$MH, "wcslwr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsupr$MH() {
        return RuntimeHelper.requireNonNull(constants$74.wcsupr$MH,"wcsupr");
    }
    public static MemoryAddress wcsupr ( Addressable _Str) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.wcsupr$MH, "wcsupr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsicoll$MH() {
        return RuntimeHelper.requireNonNull(constants$74.wcsicoll$MH,"wcsicoll");
    }
    public static int wcsicoll ( Addressable _Str1,  Addressable _Str2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.wcsicoll$MH, "wcsicoll");
        try {
            return (int)mh$.invokeExact(_Str1.address(), _Str2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$74._strset_s$MH,"_strset_s");
    }
    public static int _strset_s ( Addressable _Dst,  long _DstSize,  int _Value) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74._strset_s$MH, "_strset_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSize, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strerror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$74._strerror_s$MH,"_strerror_s");
    }
    public static int _strerror_s ( Addressable _Buf,  long _SizeInBytes,  Addressable _ErrMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74._strerror_s$MH, "_strerror_s");
        try {
            return (int)mh$.invokeExact(_Buf.address(), _SizeInBytes, _ErrMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strerror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$74.strerror_s$MH,"strerror_s");
    }
    public static int strerror_s ( Addressable _Buf,  long _SizeInBytes,  int _ErrNum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.strerror_s$MH, "strerror_s");
        try {
            return (int)mh$.invokeExact(_Buf.address(), _SizeInBytes, _ErrNum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strlwr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$74._strlwr_s$MH,"_strlwr_s");
    }
    public static int _strlwr_s ( Addressable _Str,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74._strlwr_s$MH, "_strlwr_s");
        try {
            return (int)mh$.invokeExact(_Str.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strlwr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._strlwr_s_l$MH,"_strlwr_s_l");
    }
    public static int _strlwr_s_l ( Addressable _Str,  long _Size,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75._strlwr_s_l$MH, "_strlwr_s_l");
        try {
            return (int)mh$.invokeExact(_Str.address(), _Size, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strnset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$75._strnset_s$MH,"_strnset_s");
    }
    public static int _strnset_s ( Addressable _Str,  long _Size,  int _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75._strnset_s$MH, "_strnset_s");
        try {
            return (int)mh$.invokeExact(_Str.address(), _Size, _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$75._strupr_s$MH,"_strupr_s");
    }
    public static int _strupr_s ( Addressable _Str,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75._strupr_s$MH, "_strupr_s");
        try {
            return (int)mh$.invokeExact(_Str.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strupr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._strupr_s_l$MH,"_strupr_s_l");
    }
    public static int _strupr_s_l ( Addressable _Str,  long _Size,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75._strupr_s_l$MH, "_strupr_s_l");
        try {
            return (int)mh$.invokeExact(_Str.address(), _Size, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$75.strncat_s$MH,"strncat_s");
    }
    public static int strncat_s ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75.strncat_s$MH, "strncat_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strncat_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$75._strncat_s_l$MH,"_strncat_s_l");
    }
    public static int _strncat_s_l ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75._strncat_s_l$MH, "_strncat_s_l");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$76.strcpy_s$MH,"strcpy_s");
    }
    public static int strcpy_s ( Addressable _Dst,  long _SizeInBytes,  Addressable _Src) {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.strcpy_s$MH, "strcpy_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _SizeInBytes, _Src.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strncpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$76.strncpy_s$MH,"strncpy_s");
    }
    public static int strncpy_s ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.strncpy_s$MH, "strncpy_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strncpy_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$76._strncpy_s_l$MH,"_strncpy_s_l");
    }
    public static int _strncpy_s_l ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$76._strncpy_s_l$MH, "_strncpy_s_l");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtok_s$MH() {
        return RuntimeHelper.requireNonNull(constants$76.strtok_s$MH,"strtok_s");
    }
    public static MemoryAddress strtok_s ( Addressable _Str,  Addressable _Delim,  Addressable _Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.strtok_s$MH, "strtok_s");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Delim.address(), _Context.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtok_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$76._strtok_s_l$MH,"_strtok_s_l");
    }
    public static MemoryAddress _strtok_s_l ( Addressable _Str,  Addressable _Delim,  Addressable _Context,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$76._strtok_s_l$MH, "_strtok_s_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Delim.address(), _Context.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strcat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$76.strcat_s$MH,"strcat_s");
    }
    public static int strcat_s ( Addressable _Dst,  long _SizeInBytes,  Addressable _Src) {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.strcat_s$MH, "strcat_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _SizeInBytes, _Src.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strnlen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$77.strnlen_s$MH,"strnlen_s");
    }
    public static long strnlen_s ( Addressable _src,  long _count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.strnlen_s$MH, "strnlen_s");
        try {
            return (long)mh$.invokeExact(_src.address(), _count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle memmove_s$MH() {
        return RuntimeHelper.requireNonNull(constants$77.memmove_s$MH,"memmove_s");
    }
    public static int memmove_s ( Addressable _dest,  long _numberOfElements,  Addressable _src,  long _count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.memmove_s$MH, "memmove_s");
        try {
            return (int)mh$.invokeExact(_dest.address(), _numberOfElements, _src.address(), _count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstok_s$MH() {
        return RuntimeHelper.requireNonNull(constants$77.wcstok_s$MH,"wcstok_s");
    }
    public static MemoryAddress wcstok_s ( Addressable _Str,  Addressable _Delim,  Addressable _Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.wcstok_s$MH, "wcstok_s");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Delim.address(), _Context.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcserror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$77._wcserror_s$MH,"_wcserror_s");
    }
    public static int _wcserror_s ( Addressable _Buf,  long _SizeInWords,  int _ErrNum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$77._wcserror_s$MH, "_wcserror_s");
        try {
            return (int)mh$.invokeExact(_Buf.address(), _SizeInWords, _ErrNum);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __wcserror_s$MH() {
        return RuntimeHelper.requireNonNull(constants$77.__wcserror_s$MH,"__wcserror_s");
    }
    public static int __wcserror_s ( Addressable _Buffer,  long _SizeInWords,  Addressable _ErrMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.__wcserror_s$MH, "__wcserror_s");
        try {
            return (int)mh$.invokeExact(_Buffer.address(), _SizeInWords, _ErrMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$77._wcsnset_s$MH,"_wcsnset_s");
    }
    public static int _wcsnset_s ( Addressable _Dst,  long _DstSizeInWords,  short _Val,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$77._wcsnset_s$MH, "_wcsnset_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInWords, _Val, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsset_s$MH() {
        return RuntimeHelper.requireNonNull(constants$78._wcsset_s$MH,"_wcsset_s");
    }
    public static int _wcsset_s ( Addressable _Str,  long _SizeInWords,  short _Val) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78._wcsset_s$MH, "_wcsset_s");
        try {
            return (int)mh$.invokeExact(_Str.address(), _SizeInWords, _Val);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$78._wcslwr_s$MH,"_wcslwr_s");
    }
    public static int _wcslwr_s ( Addressable _Str,  long _SizeInWords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78._wcslwr_s$MH, "_wcslwr_s");
        try {
            return (int)mh$.invokeExact(_Str.address(), _SizeInWords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcslwr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$78._wcslwr_s_l$MH,"_wcslwr_s_l");
    }
    public static int _wcslwr_s_l ( Addressable _Str,  long _SizeInWords,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78._wcslwr_s_l$MH, "_wcslwr_s_l");
        try {
            return (int)mh$.invokeExact(_Str.address(), _SizeInWords, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr_s$MH() {
        return RuntimeHelper.requireNonNull(constants$78._wcsupr_s$MH,"_wcsupr_s");
    }
    public static int _wcsupr_s ( Addressable _Str,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78._wcsupr_s$MH, "_wcsupr_s");
        try {
            return (int)mh$.invokeExact(_Str.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsupr_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$78._wcsupr_s_l$MH,"_wcsupr_s_l");
    }
    public static int _wcsupr_s_l ( Addressable _Str,  long _Size,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78._wcsupr_s_l$MH, "_wcsupr_s_l");
        try {
            return (int)mh$.invokeExact(_Str.address(), _Size, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$78.wcscpy_s$MH,"wcscpy_s");
    }
    public static int wcscpy_s ( Addressable _Dst,  long _SizeInWords,  Addressable _Src) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78.wcscpy_s$MH, "wcscpy_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _SizeInWords, _Src.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcscat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$79.wcscat_s$MH,"wcscat_s");
    }
    public static int wcscat_s ( Addressable _Dst,  long _SizeInWords,  Addressable _Src) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.wcscat_s$MH, "wcscat_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _SizeInWords, _Src.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncat_s$MH() {
        return RuntimeHelper.requireNonNull(constants$79.wcsncat_s$MH,"wcsncat_s");
    }
    public static int wcsncat_s ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.wcsncat_s$MH, "wcsncat_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsncat_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$79._wcsncat_s_l$MH,"_wcsncat_s_l");
    }
    public static int _wcsncat_s_l ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79._wcsncat_s_l$MH, "_wcsncat_s_l");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsncpy_s$MH() {
        return RuntimeHelper.requireNonNull(constants$79.wcsncpy_s$MH,"wcsncpy_s");
    }
    public static int wcsncpy_s ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.wcsncpy_s$MH, "wcsncpy_s");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsncpy_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$79._wcsncpy_s_l$MH,"_wcsncpy_s_l");
    }
    public static int _wcsncpy_s_l ( Addressable _Dst,  long _DstSizeInChars,  Addressable _Src,  long _MaxCount,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79._wcsncpy_s_l$MH, "_wcsncpy_s_l");
        try {
            return (int)mh$.invokeExact(_Dst.address(), _DstSizeInChars, _Src.address(), _MaxCount, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstok_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$79._wcstok_s_l$MH,"_wcstok_s_l");
    }
    public static MemoryAddress _wcstok_s_l ( Addressable _Str,  Addressable _Delim,  Addressable _Context,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79._wcstok_s_l$MH, "_wcstok_s_l");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Str.address(), _Delim.address(), _Context.address(), _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsset_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$80._wcsset_s_l$MH,"_wcsset_s_l");
    }
    public static int _wcsset_s_l ( Addressable _Str,  long _SizeInChars,  int _Val,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80._wcsset_s_l$MH, "_wcsset_s_l");
        try {
            return (int)mh$.invokeExact(_Str.address(), _SizeInChars, _Val, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcsnset_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$80._wcsnset_s_l$MH,"_wcsnset_s_l");
    }
    public static int _wcsnset_s_l ( Addressable _Str,  long _SizeInChars,  int _Val,  long _Count,  Addressable _Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80._wcsnset_s_l$MH, "_wcsnset_s_l");
        try {
            return (int)mh$.invokeExact(_Str.address(), _SizeInChars, _Val, _Count, _Locale.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcsnlen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$80.wcsnlen_s$MH,"wcsnlen_s");
    }
    public static long wcsnlen_s ( Addressable _src,  long _count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80.wcsnlen_s$MH, "wcsnlen_s");
        try {
            return (long)mh$.invokeExact(_src.address(), _count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getcwd$MH() {
        return RuntimeHelper.requireNonNull(constants$80._getcwd$MH,"_getcwd");
    }
    public static MemoryAddress _getcwd ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80._getcwd$MH, "_getcwd");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _access$MH() {
        return RuntimeHelper.requireNonNull(constants$80._access$MH,"_access");
    }
    public static int _access ( Addressable _Filename,  int _AccessMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80._access$MH, "_access");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _AccessMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _access_s$MH() {
        return RuntimeHelper.requireNonNull(constants$80._access_s$MH,"_access_s");
    }
    public static int _access_s ( Addressable _Filename,  int _AccessMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80._access_s$MH, "_access_s");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _AccessMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _chmod$MH() {
        return RuntimeHelper.requireNonNull(constants$81._chmod$MH,"_chmod");
    }
    public static int _chmod ( Addressable _Filename,  int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81._chmod$MH, "_chmod");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _chsize$MH() {
        return RuntimeHelper.requireNonNull(constants$81._chsize$MH,"_chsize");
    }
    public static int _chsize ( int _FileHandle,  int _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81._chsize$MH, "_chsize");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _chsize_s$MH() {
        return RuntimeHelper.requireNonNull(constants$81._chsize_s$MH,"_chsize_s");
    }
    public static int _chsize_s ( int _FileHandle,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81._chsize_s$MH, "_chsize_s");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _close$MH() {
        return RuntimeHelper.requireNonNull(constants$81._close$MH,"_close");
    }
    public static int _close ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81._close$MH, "_close");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _commit$MH() {
        return RuntimeHelper.requireNonNull(constants$81._commit$MH,"_commit");
    }
    public static int _commit ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81._commit$MH, "_commit");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _creat$MH() {
        return RuntimeHelper.requireNonNull(constants$81._creat$MH,"_creat");
    }
    public static int _creat ( Addressable _Filename,  int _PermissionMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81._creat$MH, "_creat");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _PermissionMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _dup$MH() {
        return RuntimeHelper.requireNonNull(constants$82._dup$MH,"_dup");
    }
    public static int _dup ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82._dup$MH, "_dup");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _dup2$MH() {
        return RuntimeHelper.requireNonNull(constants$82._dup2$MH,"_dup2");
    }
    public static int _dup2 ( int _FileHandleSrc,  int _FileHandleDst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82._dup2$MH, "_dup2");
        try {
            return (int)mh$.invokeExact(_FileHandleSrc, _FileHandleDst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _eof$MH() {
        return RuntimeHelper.requireNonNull(constants$82._eof$MH,"_eof");
    }
    public static int _eof ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82._eof$MH, "_eof");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _filelength$MH() {
        return RuntimeHelper.requireNonNull(constants$82._filelength$MH,"_filelength");
    }
    public static int _filelength ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82._filelength$MH, "_filelength");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findfirst32$MH() {
        return RuntimeHelper.requireNonNull(constants$82._findfirst32$MH,"_findfirst32");
    }
    public static long _findfirst32 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82._findfirst32$MH, "_findfirst32");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findnext32$MH() {
        return RuntimeHelper.requireNonNull(constants$82._findnext32$MH,"_findnext32");
    }
    public static int _findnext32 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82._findnext32$MH, "_findnext32");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findclose$MH() {
        return RuntimeHelper.requireNonNull(constants$83._findclose$MH,"_findclose");
    }
    public static int _findclose ( long _FindHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83._findclose$MH, "_findclose");
        try {
            return (int)mh$.invokeExact(_FindHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _isatty$MH() {
        return RuntimeHelper.requireNonNull(constants$83._isatty$MH,"_isatty");
    }
    public static int _isatty ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83._isatty$MH, "_isatty");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _locking$MH() {
        return RuntimeHelper.requireNonNull(constants$83._locking$MH,"_locking");
    }
    public static int _locking ( int _FileHandle,  int _LockMode,  int _NumOfBytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83._locking$MH, "_locking");
        try {
            return (int)mh$.invokeExact(_FileHandle, _LockMode, _NumOfBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lseek$MH() {
        return RuntimeHelper.requireNonNull(constants$83._lseek$MH,"_lseek");
    }
    public static int _lseek ( int _FileHandle,  int _Offset,  int _Origin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83._lseek$MH, "_lseek");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lseek64$MH() {
        return RuntimeHelper.requireNonNull(constants$83.lseek64$MH,"lseek64");
    }
    public static long lseek64 ( int fd,  long offset,  int whence) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.lseek64$MH, "lseek64");
        try {
            return (long)mh$.invokeExact(fd, offset, whence);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mktemp$MH() {
        return RuntimeHelper.requireNonNull(constants$83._mktemp$MH,"_mktemp");
    }
    public static MemoryAddress _mktemp ( Addressable _TemplateName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83._mktemp$MH, "_mktemp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_TemplateName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mktemp_s$MH() {
        return RuntimeHelper.requireNonNull(constants$84._mktemp_s$MH,"_mktemp_s");
    }
    public static int _mktemp_s ( Addressable _TemplateName,  long _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84._mktemp_s$MH, "_mktemp_s");
        try {
            return (int)mh$.invokeExact(_TemplateName.address(), _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _pipe$MH() {
        return RuntimeHelper.requireNonNull(constants$84._pipe$MH,"_pipe");
    }
    public static int _pipe ( Addressable _PtHandles,  int _PipeSize,  int _TextMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84._pipe$MH, "_pipe");
        try {
            return (int)mh$.invokeExact(_PtHandles.address(), _PipeSize, _TextMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _read$MH() {
        return RuntimeHelper.requireNonNull(constants$84._read$MH,"_read");
    }
    public static int _read ( int _FileHandle,  Addressable _DstBuf,  int _MaxCharCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84._read$MH, "_read");
        try {
            return (int)mh$.invokeExact(_FileHandle, _DstBuf.address(), _MaxCharCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _setmode$MH() {
        return RuntimeHelper.requireNonNull(constants$84._setmode$MH,"_setmode");
    }
    public static int _setmode ( int _FileHandle,  int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84._setmode$MH, "_setmode");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _tell$MH() {
        return RuntimeHelper.requireNonNull(constants$84._tell$MH,"_tell");
    }
    public static int _tell ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84._tell$MH, "_tell");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _umask$MH() {
        return RuntimeHelper.requireNonNull(constants$84._umask$MH,"_umask");
    }
    public static int _umask ( int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$84._umask$MH, "_umask");
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _umask_s$MH() {
        return RuntimeHelper.requireNonNull(constants$85._umask_s$MH,"_umask_s");
    }
    public static int _umask_s ( int _NewMode,  Addressable _OldMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85._umask_s$MH, "_umask_s");
        try {
            return (int)mh$.invokeExact(_NewMode, _OldMode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _write$MH() {
        return RuntimeHelper.requireNonNull(constants$85._write$MH,"_write");
    }
    public static int _write ( int _FileHandle,  Addressable _Buf,  int _MaxCharCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85._write$MH, "_write");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Buf.address(), _MaxCharCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _filelengthi64$MH() {
        return RuntimeHelper.requireNonNull(constants$85._filelengthi64$MH,"_filelengthi64");
    }
    public static long _filelengthi64 ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85._filelengthi64$MH, "_filelengthi64");
        try {
            return (long)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findfirst32i64$MH() {
        return RuntimeHelper.requireNonNull(constants$85._findfirst32i64$MH,"_findfirst32i64");
    }
    public static long _findfirst32i64 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85._findfirst32i64$MH, "_findfirst32i64");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findfirst64$MH() {
        return RuntimeHelper.requireNonNull(constants$85._findfirst64$MH,"_findfirst64");
    }
    public static long _findfirst64 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85._findfirst64$MH, "_findfirst64");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findfirst64i32$MH() {
        return RuntimeHelper.requireNonNull(constants$85._findfirst64i32$MH,"_findfirst64i32");
    }
    public static long _findfirst64i32 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85._findfirst64i32$MH, "_findfirst64i32");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findnext32i64$MH() {
        return RuntimeHelper.requireNonNull(constants$86._findnext32i64$MH,"_findnext32i64");
    }
    public static int _findnext32i64 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86._findnext32i64$MH, "_findnext32i64");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findnext64$MH() {
        return RuntimeHelper.requireNonNull(constants$86._findnext64$MH,"_findnext64");
    }
    public static int _findnext64 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86._findnext64$MH, "_findnext64");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _findnext64i32$MH() {
        return RuntimeHelper.requireNonNull(constants$86._findnext64i32$MH,"_findnext64i32");
    }
    public static int _findnext64i32 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86._findnext64i32$MH, "_findnext64i32");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lseeki64$MH() {
        return RuntimeHelper.requireNonNull(constants$86._lseeki64$MH,"_lseeki64");
    }
    public static long _lseeki64 ( int _FileHandle,  long _Offset,  int _Origin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86._lseeki64$MH, "_lseeki64");
        try {
            return (long)mh$.invokeExact(_FileHandle, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _telli64$MH() {
        return RuntimeHelper.requireNonNull(constants$86._telli64$MH,"_telli64");
    }
    public static long _telli64 ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86._telli64$MH, "_telli64");
        try {
            return (long)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chdir$MH() {
        return RuntimeHelper.requireNonNull(constants$86.chdir$MH,"chdir");
    }
    public static int chdir ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.chdir$MH, "chdir");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getcwd$MH() {
        return RuntimeHelper.requireNonNull(constants$87.getcwd$MH,"getcwd");
    }
    public static MemoryAddress getcwd ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.getcwd$MH, "getcwd");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mkdir$MH() {
        return RuntimeHelper.requireNonNull(constants$87.mkdir$MH,"mkdir");
    }
    public static int mkdir ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.mkdir$MH, "mkdir");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mktemp$MH() {
        return RuntimeHelper.requireNonNull(constants$87.mktemp$MH,"mktemp");
    }
    public static MemoryAddress mktemp ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.mktemp$MH, "mktemp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rmdir$MH() {
        return RuntimeHelper.requireNonNull(constants$87.rmdir$MH,"rmdir");
    }
    public static int rmdir ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.rmdir$MH, "rmdir");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chmod$MH() {
        return RuntimeHelper.requireNonNull(constants$87.chmod$MH,"chmod");
    }
    public static int chmod ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.chmod$MH, "chmod");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$87._sopen_s$MH,"_sopen_s");
    }
    public static int _sopen_s ( Addressable _FileHandle,  Addressable _Filename,  int _OpenFlag,  int _ShareFlag,  int _PermissionMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87._sopen_s$MH, "_sopen_s");
        try {
            return (int)mh$.invokeExact(_FileHandle.address(), _Filename.address(), _OpenFlag, _ShareFlag, _PermissionMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _open$MH() {
        return RuntimeHelper.requireNonNull(constants$88._open$MH,"_open");
    }
    public static int _open ( Addressable _Filename,  int _OpenFlag, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88._open$MH, "_open");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _OpenFlag, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sopen$MH() {
        return RuntimeHelper.requireNonNull(constants$88._sopen$MH,"_sopen");
    }
    public static int _sopen ( Addressable _Filename,  int _OpenFlag,  int _ShareFlag, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88._sopen$MH, "_sopen");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _OpenFlag, _ShareFlag, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _waccess$MH() {
        return RuntimeHelper.requireNonNull(constants$88._waccess$MH,"_waccess");
    }
    public static int _waccess ( Addressable _Filename,  int _AccessMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88._waccess$MH, "_waccess");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _AccessMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _waccess_s$MH() {
        return RuntimeHelper.requireNonNull(constants$88._waccess_s$MH,"_waccess_s");
    }
    public static int _waccess_s ( Addressable _Filename,  int _AccessMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88._waccess_s$MH, "_waccess_s");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _AccessMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wchmod$MH() {
        return RuntimeHelper.requireNonNull(constants$88._wchmod$MH,"_wchmod");
    }
    public static int _wchmod ( Addressable _Filename,  int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88._wchmod$MH, "_wchmod");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcreat$MH() {
        return RuntimeHelper.requireNonNull(constants$88._wcreat$MH,"_wcreat");
    }
    public static int _wcreat ( Addressable _Filename,  int _PermissionMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88._wcreat$MH, "_wcreat");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _PermissionMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindfirst32$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wfindfirst32$MH,"_wfindfirst32");
    }
    public static long _wfindfirst32 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89._wfindfirst32$MH, "_wfindfirst32");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindnext32$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wfindnext32$MH,"_wfindnext32");
    }
    public static int _wfindnext32 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89._wfindnext32$MH, "_wfindnext32");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wunlink$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wunlink$MH,"_wunlink");
    }
    public static int _wunlink ( Addressable _Filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89._wunlink$MH, "_wunlink");
        try {
            return (int)mh$.invokeExact(_Filename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wrename$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wrename$MH,"_wrename");
    }
    public static int _wrename ( Addressable _OldFilename,  Addressable _NewFilename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89._wrename$MH, "_wrename");
        try {
            return (int)mh$.invokeExact(_OldFilename.address(), _NewFilename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmktemp$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wmktemp$MH,"_wmktemp");
    }
    public static MemoryAddress _wmktemp ( Addressable _TemplateName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89._wmktemp$MH, "_wmktemp");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_TemplateName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmktemp_s$MH() {
        return RuntimeHelper.requireNonNull(constants$89._wmktemp_s$MH,"_wmktemp_s");
    }
    public static int _wmktemp_s ( Addressable _TemplateName,  long _SizeInWords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89._wmktemp_s$MH, "_wmktemp_s");
        try {
            return (int)mh$.invokeExact(_TemplateName.address(), _SizeInWords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindfirst32i64$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wfindfirst32i64$MH,"_wfindfirst32i64");
    }
    public static long _wfindfirst32i64 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90._wfindfirst32i64$MH, "_wfindfirst32i64");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindfirst64i32$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wfindfirst64i32$MH,"_wfindfirst64i32");
    }
    public static long _wfindfirst64i32 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90._wfindfirst64i32$MH, "_wfindfirst64i32");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindfirst64$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wfindfirst64$MH,"_wfindfirst64");
    }
    public static long _wfindfirst64 ( Addressable _Filename,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90._wfindfirst64$MH, "_wfindfirst64");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindnext32i64$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wfindnext32i64$MH,"_wfindnext32i64");
    }
    public static int _wfindnext32i64 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90._wfindnext32i64$MH, "_wfindnext32i64");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindnext64i32$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wfindnext64i32$MH,"_wfindnext64i32");
    }
    public static int _wfindnext64i32 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90._wfindnext64i32$MH, "_wfindnext64i32");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfindnext64$MH() {
        return RuntimeHelper.requireNonNull(constants$90._wfindnext64$MH,"_wfindnext64");
    }
    public static int _wfindnext64 ( long _FindHandle,  Addressable _FindData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90._wfindnext64$MH, "_wfindnext64");
        try {
            return (int)mh$.invokeExact(_FindHandle, _FindData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsopen_s$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wsopen_s$MH,"_wsopen_s");
    }
    public static int _wsopen_s ( Addressable _FileHandle,  Addressable _Filename,  int _OpenFlag,  int _ShareFlag,  int _PermissionFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91._wsopen_s$MH, "_wsopen_s");
        try {
            return (int)mh$.invokeExact(_FileHandle.address(), _Filename.address(), _OpenFlag, _ShareFlag, _PermissionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wopen$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wopen$MH,"_wopen");
    }
    public static int _wopen ( Addressable _Filename,  int _OpenFlag, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91._wopen$MH, "_wopen");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _OpenFlag, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsopen$MH() {
        return RuntimeHelper.requireNonNull(constants$91._wsopen$MH,"_wsopen");
    }
    public static int _wsopen ( Addressable _Filename,  int _OpenFlag,  int _ShareFlag, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91._wsopen$MH, "_wsopen");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _OpenFlag, _ShareFlag, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __lock_fhandle$MH() {
        return RuntimeHelper.requireNonNull(constants$91.__lock_fhandle$MH,"__lock_fhandle");
    }
    public static int __lock_fhandle ( int _Filehandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.__lock_fhandle$MH, "__lock_fhandle");
        try {
            return (int)mh$.invokeExact(_Filehandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unlock_fhandle$MH() {
        return RuntimeHelper.requireNonNull(constants$91._unlock_fhandle$MH,"_unlock_fhandle");
    }
    public static void _unlock_fhandle ( int _Filehandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91._unlock_fhandle$MH, "_unlock_fhandle");
        try {
            mh$.invokeExact(_Filehandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_osfhandle$MH() {
        return RuntimeHelper.requireNonNull(constants$91._get_osfhandle$MH,"_get_osfhandle");
    }
    public static long _get_osfhandle ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91._get_osfhandle$MH, "_get_osfhandle");
        try {
            return (long)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _open_osfhandle$MH() {
        return RuntimeHelper.requireNonNull(constants$92._open_osfhandle$MH,"_open_osfhandle");
    }
    public static int _open_osfhandle ( long _OSFileHandle,  int _Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92._open_osfhandle$MH, "_open_osfhandle");
        try {
            return (int)mh$.invokeExact(_OSFileHandle, _Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle access$MH() {
        return RuntimeHelper.requireNonNull(constants$92.access$MH,"access");
    }
    public static int access ( Addressable _Filename,  int _AccessMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.access$MH, "access");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _AccessMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle chsize$MH() {
        return RuntimeHelper.requireNonNull(constants$92.chsize$MH,"chsize");
    }
    public static int chsize ( int _FileHandle,  int _Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.chsize$MH, "chsize");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle close$MH() {
        return RuntimeHelper.requireNonNull(constants$92.close$MH,"close");
    }
    public static int close ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.close$MH, "close");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle creat$MH() {
        return RuntimeHelper.requireNonNull(constants$92.creat$MH,"creat");
    }
    public static int creat ( Addressable _Filename,  int _PermissionMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.creat$MH, "creat");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _PermissionMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dup$MH() {
        return RuntimeHelper.requireNonNull(constants$92.dup$MH,"dup");
    }
    public static int dup ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.dup$MH, "dup");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle dup2$MH() {
        return RuntimeHelper.requireNonNull(constants$93.dup2$MH,"dup2");
    }
    public static int dup2 ( int _FileHandleSrc,  int _FileHandleDst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.dup2$MH, "dup2");
        try {
            return (int)mh$.invokeExact(_FileHandleSrc, _FileHandleDst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle eof$MH() {
        return RuntimeHelper.requireNonNull(constants$93.eof$MH,"eof");
    }
    public static int eof ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.eof$MH, "eof");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle filelength$MH() {
        return RuntimeHelper.requireNonNull(constants$93.filelength$MH,"filelength");
    }
    public static int filelength ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.filelength$MH, "filelength");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle isatty$MH() {
        return RuntimeHelper.requireNonNull(constants$93.isatty$MH,"isatty");
    }
    public static int isatty ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.isatty$MH, "isatty");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle locking$MH() {
        return RuntimeHelper.requireNonNull(constants$93.locking$MH,"locking");
    }
    public static int locking ( int _FileHandle,  int _LockMode,  int _NumOfBytes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.locking$MH, "locking");
        try {
            return (int)mh$.invokeExact(_FileHandle, _LockMode, _NumOfBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lseek$MH() {
        return RuntimeHelper.requireNonNull(constants$93.lseek$MH,"lseek");
    }
    public static int lseek ( int _FileHandle,  int _Offset,  int _Origin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.lseek$MH, "lseek");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Offset, _Origin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle open$MH() {
        return RuntimeHelper.requireNonNull(constants$94.open$MH,"open");
    }
    public static int open ( Addressable _Filename,  int _OpenFlag, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.open$MH, "open");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _OpenFlag, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle read$MH() {
        return RuntimeHelper.requireNonNull(constants$94.read$MH,"read");
    }
    public static int read ( int _FileHandle,  Addressable _DstBuf,  int _MaxCharCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.read$MH, "read");
        try {
            return (int)mh$.invokeExact(_FileHandle, _DstBuf.address(), _MaxCharCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle setmode$MH() {
        return RuntimeHelper.requireNonNull(constants$94.setmode$MH,"setmode");
    }
    public static int setmode ( int _FileHandle,  int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.setmode$MH, "setmode");
        try {
            return (int)mh$.invokeExact(_FileHandle, _Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sopen$MH() {
        return RuntimeHelper.requireNonNull(constants$94.sopen$MH,"sopen");
    }
    public static int sopen ( Addressable _Filename,  int _OpenFlag,  int _ShareFlag, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.sopen$MH, "sopen");
        try {
            return (int)mh$.invokeExact(_Filename.address(), _OpenFlag, _ShareFlag, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle tell$MH() {
        return RuntimeHelper.requireNonNull(constants$94.tell$MH,"tell");
    }
    public static int tell ( int _FileHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.tell$MH, "tell");
        try {
            return (int)mh$.invokeExact(_FileHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle umask$MH() {
        return RuntimeHelper.requireNonNull(constants$94.umask$MH,"umask");
    }
    public static int umask ( int _Mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.umask$MH, "umask");
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle write$MH() {
        return RuntimeHelper.requireNonNull(constants$95.write$MH,"write");
    }
    public static int write ( int _Filehandle,  Addressable _Buf,  int _MaxCharCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.write$MH, "write");
        try {
            return (int)mh$.invokeExact(_Filehandle, _Buf.address(), _MaxCharCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__acmdln$MH() {
        return RuntimeHelper.requireNonNull(constants$95.__p__acmdln$MH,"__p__acmdln");
    }
    public static MemoryAddress __p__acmdln () {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.__p__acmdln$MH, "__p__acmdln");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wcmdln$MH() {
        return RuntimeHelper.requireNonNull(constants$95.__p__wcmdln$MH,"__p__wcmdln");
    }
    public static MemoryAddress __p__wcmdln () {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.__p__wcmdln$MH, "__p__wcmdln");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _initialize_onexit_table$MH() {
        return RuntimeHelper.requireNonNull(constants$96._initialize_onexit_table$MH,"_initialize_onexit_table");
    }
    public static int _initialize_onexit_table ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96._initialize_onexit_table$MH, "_initialize_onexit_table");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _register_onexit_function$MH() {
        return RuntimeHelper.requireNonNull(constants$97._register_onexit_function$MH,"_register_onexit_function");
    }
    public static int _register_onexit_function ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97._register_onexit_function$MH, "_register_onexit_function");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execute_onexit_table$MH() {
        return RuntimeHelper.requireNonNull(constants$97._execute_onexit_table$MH,"_execute_onexit_table");
    }
    public static int _execute_onexit_table ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97._execute_onexit_table$MH, "_execute_onexit_table");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _crt_atexit$MH() {
        return RuntimeHelper.requireNonNull(constants$97._crt_atexit$MH,"_crt_atexit");
    }
    public static int _crt_atexit ( Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97._crt_atexit$MH, "_crt_atexit");
        try {
            return (int)mh$.invokeExact(func.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _crt_at_quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$97._crt_at_quick_exit$MH,"_crt_at_quick_exit");
    }
    public static int _crt_at_quick_exit ( Addressable func) {
        var mh$ = RuntimeHelper.requireNonNull(constants$97._crt_at_quick_exit$MH, "_crt_at_quick_exit");
        try {
            return (int)mh$.invokeExact(func.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _beginthread$MH() {
        return RuntimeHelper.requireNonNull(constants$98._beginthread$MH,"_beginthread");
    }
    public static long _beginthread ( Addressable _StartAddress,  int _StackSize,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$98._beginthread$MH, "_beginthread");
        try {
            return (long)mh$.invokeExact(_StartAddress.address(), _StackSize, _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _beginthreadex$MH() {
        return RuntimeHelper.requireNonNull(constants$98._beginthreadex$MH,"_beginthreadex");
    }
    public static long _beginthreadex ( Addressable _Security,  int _StackSize,  Addressable _StartAddress,  Addressable _ArgList,  int _InitFlag,  Addressable _ThrdAddr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$98._beginthreadex$MH, "_beginthreadex");
        try {
            return (long)mh$.invokeExact(_Security.address(), _StackSize, _StartAddress.address(), _ArgList.address(), _InitFlag, _ThrdAddr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abort$MH() {
        return RuntimeHelper.requireNonNull(constants$98.abort$MH,"abort");
    }
    public static void abort () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.abort$MH, "abort");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _register_thread_local_exe_atexit_callback$MH() {
        return RuntimeHelper.requireNonNull(constants$99._register_thread_local_exe_atexit_callback$MH,"_register_thread_local_exe_atexit_callback");
    }
    public static void _register_thread_local_exe_atexit_callback ( Addressable callback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99._register_thread_local_exe_atexit_callback$MH, "_register_thread_local_exe_atexit_callback");
        try {
            mh$.invokeExact(callback.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _cexit$MH() {
        return RuntimeHelper.requireNonNull(constants$99._cexit$MH,"_cexit");
    }
    public static void _cexit () {
        var mh$ = RuntimeHelper.requireNonNull(constants$99._cexit$MH, "_cexit");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _c_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$99._c_exit$MH,"_c_exit");
    }
    public static void _c_exit () {
        var mh$ = RuntimeHelper.requireNonNull(constants$99._c_exit$MH, "_c_exit");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getpid$MH() {
        return RuntimeHelper.requireNonNull(constants$99._getpid$MH,"_getpid");
    }
    public static int _getpid () {
        var mh$ = RuntimeHelper.requireNonNull(constants$99._getpid$MH, "_getpid");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _cwait$MH() {
        return RuntimeHelper.requireNonNull(constants$99._cwait$MH,"_cwait");
    }
    public static long _cwait ( Addressable _TermStat,  long _ProcHandle,  int _Action) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99._cwait$MH, "_cwait");
        try {
            return (long)mh$.invokeExact(_TermStat.address(), _ProcHandle, _Action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execl$MH() {
        return RuntimeHelper.requireNonNull(constants$100._execl$MH,"_execl");
    }
    public static long _execl ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100._execl$MH, "_execl");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execle$MH() {
        return RuntimeHelper.requireNonNull(constants$100._execle$MH,"_execle");
    }
    public static long _execle ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100._execle$MH, "_execle");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execlp$MH() {
        return RuntimeHelper.requireNonNull(constants$100._execlp$MH,"_execlp");
    }
    public static long _execlp ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100._execlp$MH, "_execlp");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execlpe$MH() {
        return RuntimeHelper.requireNonNull(constants$100._execlpe$MH,"_execlpe");
    }
    public static long _execlpe ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100._execlpe$MH, "_execlpe");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execv$MH() {
        return RuntimeHelper.requireNonNull(constants$100._execv$MH,"_execv");
    }
    public static long _execv ( Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100._execv$MH, "_execv");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execve$MH() {
        return RuntimeHelper.requireNonNull(constants$100._execve$MH,"_execve");
    }
    public static long _execve ( Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100._execve$MH, "_execve");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execvp$MH() {
        return RuntimeHelper.requireNonNull(constants$101._execvp$MH,"_execvp");
    }
    public static long _execvp ( Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101._execvp$MH, "_execvp");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _execvpe$MH() {
        return RuntimeHelper.requireNonNull(constants$101._execvpe$MH,"_execvpe");
    }
    public static long _execvpe ( Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101._execvpe$MH, "_execvpe");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnl$MH() {
        return RuntimeHelper.requireNonNull(constants$101._spawnl$MH,"_spawnl");
    }
    public static long _spawnl ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101._spawnl$MH, "_spawnl");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnle$MH() {
        return RuntimeHelper.requireNonNull(constants$101._spawnle$MH,"_spawnle");
    }
    public static long _spawnle ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101._spawnle$MH, "_spawnle");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnlp$MH() {
        return RuntimeHelper.requireNonNull(constants$101._spawnlp$MH,"_spawnlp");
    }
    public static long _spawnlp ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101._spawnlp$MH, "_spawnlp");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _spawnlpe$MH() {
        return RuntimeHelper.requireNonNull(constants$101._spawnlpe$MH,"_spawnlpe");
    }
    public static long _spawnlpe ( int _Mode,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101._spawnlpe$MH, "_spawnlpe");
        try {
            return (long)mh$.invokeExact(_Mode, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle system$MH() {
        return RuntimeHelper.requireNonNull(constants$102.system$MH,"system");
    }
    public static int system ( Addressable _Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102.system$MH, "system");
        try {
            return (int)mh$.invokeExact(_Command.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexecl$MH() {
        return RuntimeHelper.requireNonNull(constants$102._wexecl$MH,"_wexecl");
    }
    public static long _wexecl ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102._wexecl$MH, "_wexecl");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexecle$MH() {
        return RuntimeHelper.requireNonNull(constants$102._wexecle$MH,"_wexecle");
    }
    public static long _wexecle ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102._wexecle$MH, "_wexecle");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexeclp$MH() {
        return RuntimeHelper.requireNonNull(constants$102._wexeclp$MH,"_wexeclp");
    }
    public static long _wexeclp ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102._wexeclp$MH, "_wexeclp");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexeclpe$MH() {
        return RuntimeHelper.requireNonNull(constants$102._wexeclpe$MH,"_wexeclpe");
    }
    public static long _wexeclpe ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102._wexeclpe$MH, "_wexeclpe");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexecv$MH() {
        return RuntimeHelper.requireNonNull(constants$102._wexecv$MH,"_wexecv");
    }
    public static long _wexecv ( Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$102._wexecv$MH, "_wexecv");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexecve$MH() {
        return RuntimeHelper.requireNonNull(constants$103._wexecve$MH,"_wexecve");
    }
    public static long _wexecve ( Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103._wexecve$MH, "_wexecve");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexecvp$MH() {
        return RuntimeHelper.requireNonNull(constants$103._wexecvp$MH,"_wexecvp");
    }
    public static long _wexecvp ( Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103._wexecvp$MH, "_wexecvp");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wexecvpe$MH() {
        return RuntimeHelper.requireNonNull(constants$103._wexecvpe$MH,"_wexecvpe");
    }
    public static long _wexecvpe ( Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103._wexecvpe$MH, "_wexecvpe");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsystem$MH() {
        return RuntimeHelper.requireNonNull(constants$103._wsystem$MH,"_wsystem");
    }
    public static int _wsystem ( Addressable _Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103._wsystem$MH, "_wsystem");
        try {
            return (int)mh$.invokeExact(_Command.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _loaddll$MH() {
        return RuntimeHelper.requireNonNull(constants$103._loaddll$MH,"_loaddll");
    }
    public static long _loaddll ( Addressable _Filename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103._loaddll$MH, "_loaddll");
        try {
            return (long)mh$.invokeExact(_Filename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _unloaddll$MH() {
        return RuntimeHelper.requireNonNull(constants$103._unloaddll$MH,"_unloaddll");
    }
    public static int _unloaddll ( long _Handle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$103._unloaddll$MH, "_unloaddll");
        try {
            return (int)mh$.invokeExact(_Handle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _getdllprocaddr$MH() {
        return RuntimeHelper.requireNonNull(constants$104._getdllprocaddr$MH,"_getdllprocaddr");
    }
    public static MemoryAddress _getdllprocaddr ( long _Handle,  Addressable _ProcedureName,  long _Ordinal) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104._getdllprocaddr$MH, "_getdllprocaddr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(_Handle, _ProcedureName.address(), _Ordinal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getpid$MH() {
        return RuntimeHelper.requireNonNull(constants$104.getpid$MH,"getpid");
    }
    public static int getpid () {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.getpid$MH, "getpid");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle cwait$MH() {
        return RuntimeHelper.requireNonNull(constants$104.cwait$MH,"cwait");
    }
    public static long cwait ( Addressable _TermStat,  long _ProcHandle,  int _Action) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.cwait$MH, "cwait");
        try {
            return (long)mh$.invokeExact(_TermStat.address(), _ProcHandle, _Action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execl$MH() {
        return RuntimeHelper.requireNonNull(constants$104.execl$MH,"execl");
    }
    public static long execl ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.execl$MH, "execl");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execle$MH() {
        return RuntimeHelper.requireNonNull(constants$104.execle$MH,"execle");
    }
    public static long execle ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.execle$MH, "execle");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execlp$MH() {
        return RuntimeHelper.requireNonNull(constants$104.execlp$MH,"execlp");
    }
    public static long execlp ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$104.execlp$MH, "execlp");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execlpe$MH() {
        return RuntimeHelper.requireNonNull(constants$105.execlpe$MH,"execlpe");
    }
    public static long execlpe ( Addressable _Filename,  Addressable _ArgList, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.execlpe$MH, "execlpe");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle spawnl$MH() {
        return RuntimeHelper.requireNonNull(constants$105.spawnl$MH,"spawnl");
    }
    public static long spawnl ( int x0,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.spawnl$MH, "spawnl");
        try {
            return (long)mh$.invokeExact(x0, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle spawnle$MH() {
        return RuntimeHelper.requireNonNull(constants$105.spawnle$MH,"spawnle");
    }
    public static long spawnle ( int x0,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.spawnle$MH, "spawnle");
        try {
            return (long)mh$.invokeExact(x0, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle spawnlp$MH() {
        return RuntimeHelper.requireNonNull(constants$105.spawnlp$MH,"spawnlp");
    }
    public static long spawnlp ( int x0,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.spawnlp$MH, "spawnlp");
        try {
            return (long)mh$.invokeExact(x0, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle spawnlpe$MH() {
        return RuntimeHelper.requireNonNull(constants$105.spawnlpe$MH,"spawnlpe");
    }
    public static long spawnlpe ( int x0,  Addressable _Filename,  Addressable _ArgList, Object... x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.spawnlpe$MH, "spawnlpe");
        try {
            return (long)mh$.invokeExact(x0, _Filename.address(), _ArgList.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execv$MH() {
        return RuntimeHelper.requireNonNull(constants$105.execv$MH,"execv");
    }
    public static long execv ( Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$105.execv$MH, "execv");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execve$MH() {
        return RuntimeHelper.requireNonNull(constants$106.execve$MH,"execve");
    }
    public static long execve ( Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.execve$MH, "execve");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execvp$MH() {
        return RuntimeHelper.requireNonNull(constants$106.execvp$MH,"execvp");
    }
    public static long execvp ( Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.execvp$MH, "execvp");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle execvpe$MH() {
        return RuntimeHelper.requireNonNull(constants$106.execvpe$MH,"execvpe");
    }
    public static long execvpe ( Addressable _Filename,  Addressable _ArgList,  Addressable _Env) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.execvpe$MH, "execvpe");
        try {
            return (long)mh$.invokeExact(_Filename.address(), _ArgList.address(), _Env.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle spawnv$MH() {
        return RuntimeHelper.requireNonNull(constants$106.spawnv$MH,"spawnv");
    }
    public static long spawnv ( int x0,  Addressable _Filename,  Addressable _ArgList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$106.spawnv$MH, "spawnv");
        try {
            return (long)mh$.invokeExact(x0, _Filename.address(), _ArgList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


