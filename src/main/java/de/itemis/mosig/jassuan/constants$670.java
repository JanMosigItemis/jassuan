// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$670 {

    static final FunctionDescriptor GetStringTypeW$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle GetStringTypeW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetStringTypeW",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$670.GetStringTypeW$FUNC, false
    );
    static final FunctionDescriptor MultiByteToWideChar$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle MultiByteToWideChar$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MultiByteToWideChar",
        "(IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$670.MultiByteToWideChar$FUNC, false
    );
    static final FunctionDescriptor WideCharToMultiByte$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WideCharToMultiByte$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WideCharToMultiByte",
        "(IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$670.WideCharToMultiByte$FUNC, false
    );
    static final FunctionDescriptor IsValidCodePage$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle IsValidCodePage$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsValidCodePage",
        "(I)I",
        constants$670.IsValidCodePage$FUNC, false
    );
    static final FunctionDescriptor GetACP$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle GetACP$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetACP",
        "()I",
        constants$670.GetACP$FUNC, false
    );
    static final FunctionDescriptor IsDBCSLeadByte$FUNC = FunctionDescriptor.of(C_INT,
        C_CHAR
    );
    static final MethodHandle IsDBCSLeadByte$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsDBCSLeadByte",
        "(B)I",
        constants$670.IsDBCSLeadByte$FUNC, false
    );
}


