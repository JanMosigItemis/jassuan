// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$29 {

    static final FunctionDescriptor _wfreopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle _wfreopen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wfreopen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$29._wfreopen$FUNC, false
    );
    static final FunctionDescriptor _wperror$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle _wperror$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wperror",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$29._wperror$FUNC, false
    );
    static final FunctionDescriptor _wpopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle _wpopen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wpopen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$29._wpopen$FUNC, false
    );
    static final FunctionDescriptor _wremove$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _wremove$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wremove",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$29._wremove$FUNC, false
    );
    static final FunctionDescriptor _wtmpnam$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle _wtmpnam$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wtmpnam",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$29._wtmpnam$FUNC, false
    );
    static final FunctionDescriptor _lock_file$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle _lock_file$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_lock_file",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$29._lock_file$FUNC, false
    );
}


