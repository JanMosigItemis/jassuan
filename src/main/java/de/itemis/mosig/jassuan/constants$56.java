// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$56 {

    static final FunctionDescriptor memcpy$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle memcpy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "memcpy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$56.memcpy$FUNC, false
    );
    static final FunctionDescriptor memcpy_s$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle memcpy_s$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "memcpy_s",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        constants$56.memcpy_s$FUNC, false
    );
    static final FunctionDescriptor mempcpy$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle mempcpy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mempcpy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$56.mempcpy$FUNC, false
    );
    static final FunctionDescriptor memset$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final MethodHandle memset$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "memset",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)Ljdk/incubator/foreign/MemoryAddress;",
        constants$56.memset$FUNC, false
    );
    static final FunctionDescriptor memccpy$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final MethodHandle memccpy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "memccpy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IJ)Ljdk/incubator/foreign/MemoryAddress;",
        constants$56.memccpy$FUNC, false
    );
    static final FunctionDescriptor memicmp$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle memicmp$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "memicmp",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$56.memicmp$FUNC, false
    );
}


