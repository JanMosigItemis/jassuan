// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$330 {

    static final FunctionDescriptor WaitNamedPipeW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle WaitNamedPipeW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WaitNamedPipeW",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$330.WaitNamedPipeW$FUNC, false
    );
    static final FunctionDescriptor GetNamedPipeClientComputerNameW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle GetNamedPipeClientComputerNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetNamedPipeClientComputerNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$330.GetNamedPipeClientComputerNameW$FUNC, false
    );
    static final FunctionDescriptor CreatePrivateNamespaceW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CreatePrivateNamespaceW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreatePrivateNamespaceW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$330.CreatePrivateNamespaceW$FUNC, false
    );
    static final FunctionDescriptor OpenPrivateNamespaceW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle OpenPrivateNamespaceW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenPrivateNamespaceW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$330.OpenPrivateNamespaceW$FUNC, false
    );
    static final FunctionDescriptor ClosePrivateNamespace$FUNC = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle ClosePrivateNamespace$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ClosePrivateNamespace",
        "(Ljdk/incubator/foreign/MemoryAddress;I)B",
        constants$330.ClosePrivateNamespace$FUNC, false
    );
    static final FunctionDescriptor CreateBoundaryDescriptorW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle CreateBoundaryDescriptorW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateBoundaryDescriptorW",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$330.CreateBoundaryDescriptorW$FUNC, false
    );
}


