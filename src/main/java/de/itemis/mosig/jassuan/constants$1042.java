// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1042 {

    static final FunctionDescriptor CoLoadLibrary$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle CoLoadLibrary$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoLoadLibrary",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1042.CoLoadLibrary$FUNC, false
    );
    static final FunctionDescriptor CoFreeLibrary$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle CoFreeLibrary$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoFreeLibrary",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1042.CoFreeLibrary$FUNC, false
    );
    static final FunctionDescriptor CoFreeAllLibraries$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle CoFreeAllLibraries$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoFreeAllLibraries",
        "()V",
        constants$1042.CoFreeAllLibraries$FUNC, false
    );
    static final FunctionDescriptor CoGetInstanceFromFile$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle CoGetInstanceFromFile$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoGetInstanceFromFile",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1042.CoGetInstanceFromFile$FUNC, false
    );
    static final FunctionDescriptor CoGetInstanceFromIStorage$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle CoGetInstanceFromIStorage$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoGetInstanceFromIStorage",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1042.CoGetInstanceFromIStorage$FUNC, false
    );
    static final FunctionDescriptor CoAllowSetForegroundWindow$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CoAllowSetForegroundWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoAllowSetForegroundWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1042.CoAllowSetForegroundWindow$FUNC, false
    );
}


