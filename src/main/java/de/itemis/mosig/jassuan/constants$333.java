// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$333 {

    static final FunctionDescriptor NeedCurrentDirectoryForExePathW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle NeedCurrentDirectoryForExePathW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NeedCurrentDirectoryForExePathW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$333.NeedCurrentDirectoryForExePathW$FUNC, false
    );
    static final FunctionDescriptor GetEnvironmentStrings$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetEnvironmentStrings$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetEnvironmentStrings",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$333.GetEnvironmentStrings$FUNC, false
    );
    static final FunctionDescriptor GetEnvironmentStringsW$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetEnvironmentStringsW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetEnvironmentStringsW",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$333.GetEnvironmentStringsW$FUNC, false
    );
    static final FunctionDescriptor GetStdHandle$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG
    );
    static final MethodHandle GetStdHandle$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetStdHandle",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$333.GetStdHandle$FUNC, false
    );
    static final FunctionDescriptor ExpandEnvironmentStringsA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle ExpandEnvironmentStringsA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ExpandEnvironmentStringsA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$333.ExpandEnvironmentStringsA$FUNC, false
    );
    static final FunctionDescriptor ExpandEnvironmentStringsW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle ExpandEnvironmentStringsW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ExpandEnvironmentStringsW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$333.ExpandEnvironmentStringsW$FUNC, false
    );
}


