// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$109 {

    static final FunctionDescriptor swab$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle swab$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "swab",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$109.swab$FUNC, false
    );
    static final FunctionDescriptor __C_specific_handler$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle __C_specific_handler$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__C_specific_handler",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$109.__C_specific_handler$FUNC, false
    );
    static final FunctionDescriptor _exception_code$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle _exception_code$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_exception_code",
        "()I",
        constants$109._exception_code$FUNC, false
    );
    static final FunctionDescriptor _exception_info$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle _exception_info$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_exception_info",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$109._exception_info$FUNC, false
    );
    static final FunctionDescriptor _abnormal_termination$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle _abnormal_termination$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_abnormal_termination",
        "()I",
        constants$109._abnormal_termination$FUNC, false
    );
    static final FunctionDescriptor _PHNDLR$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
}


