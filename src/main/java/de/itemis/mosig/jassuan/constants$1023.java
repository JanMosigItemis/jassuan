// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1023 {

    static final FunctionDescriptor IAdviseSink_RemoteOnDataChange_Proxy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IAdviseSink_RemoteOnDataChange_Proxy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IAdviseSink_RemoteOnDataChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1023.IAdviseSink_RemoteOnDataChange_Proxy$FUNC, false
    );
    static final FunctionDescriptor IAdviseSink_RemoteOnDataChange_Stub$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IAdviseSink_RemoteOnDataChange_Stub$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IAdviseSink_RemoteOnDataChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1023.IAdviseSink_RemoteOnDataChange_Stub$FUNC, false
    );
    static final FunctionDescriptor IAdviseSink_RemoteOnViewChange_Proxy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle IAdviseSink_RemoteOnViewChange_Proxy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IAdviseSink_RemoteOnViewChange_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$1023.IAdviseSink_RemoteOnViewChange_Proxy$FUNC, false
    );
    static final FunctionDescriptor IAdviseSink_RemoteOnViewChange_Stub$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IAdviseSink_RemoteOnViewChange_Stub$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IAdviseSink_RemoteOnViewChange_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1023.IAdviseSink_RemoteOnViewChange_Stub$FUNC, false
    );
    static final FunctionDescriptor IAdviseSink_RemoteOnRename_Proxy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IAdviseSink_RemoteOnRename_Proxy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IAdviseSink_RemoteOnRename_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1023.IAdviseSink_RemoteOnRename_Proxy$FUNC, false
    );
    static final FunctionDescriptor IAdviseSink_RemoteOnRename_Stub$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IAdviseSink_RemoteOnRename_Stub$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IAdviseSink_RemoteOnRename_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1023.IAdviseSink_RemoteOnRename_Stub$FUNC, false
    );
}


