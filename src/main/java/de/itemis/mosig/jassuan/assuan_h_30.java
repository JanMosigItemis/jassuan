// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_30 extends assuan_h_29 {

    public static int BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_CA_FLAG() {
        return (int)2147483648L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_ERROR() {
        return (int)-2L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_ERROR() {
        return (int)-1L;
    }
    public static int CRYPT_STRING_NOCR() {
        return (int)2147483648L;
    }
    public static MemorySegment szOID_PKCS_12_PbeIds() {
        return constants$1648.szOID_PKCS_12_PbeIds$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_pbeWithSHA1And128BitRC4() {
        return constants$1648.szOID_PKCS_12_pbeWithSHA1And128BitRC4$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_pbeWithSHA1And40BitRC4() {
        return constants$1648.szOID_PKCS_12_pbeWithSHA1And40BitRC4$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES() {
        return constants$1648.szOID_PKCS_12_pbeWithSHA1And3KeyTripleDES$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES() {
        return constants$1649.szOID_PKCS_12_pbeWithSHA1And2KeyTripleDES$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_pbeWithSHA1And128BitRC2() {
        return constants$1649.szOID_PKCS_12_pbeWithSHA1And128BitRC2$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_12_pbeWithSHA1And40BitRC2() {
        return constants$1649.szOID_PKCS_12_pbeWithSHA1And40BitRC2$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_5_PBKDF2() {
        return constants$1649.szOID_PKCS_5_PBKDF2$SEGMENT;
    }
    public static MemorySegment szOID_PKCS_5_PBES2() {
        return constants$1649.szOID_PKCS_5_PBES2$SEGMENT;
    }
    public static int PKCS12_IMPORT_RESERVED_MASK() {
        return (int)4294901760L;
    }
    public static int PKCS12_OBJECT_LOCATOR_ALL_IMPORT_FLAGS() {
        return (int)33360L;
    }
    public static MemorySegment PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME() {
        return constants$1649.PKCS12_ONLY_CERTIFICATES_PROVIDER_NAME$SEGMENT;
    }
    public static MemorySegment PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME() {
        return constants$1650.PKCS12_ONLY_CERTIFICATES_CONTAINER_NAME$SEGMENT;
    }
    public static int PKCS12_EXPORT_RESERVED_MASK() {
        return (int)4294901760L;
    }
    public static MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA1() {
        return constants$1650.PKCS12_PBKDF2_ID_HMAC_SHA1$SEGMENT;
    }
    public static MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA256() {
        return constants$1650.PKCS12_PBKDF2_ID_HMAC_SHA256$SEGMENT;
    }
    public static MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA384() {
        return constants$1650.PKCS12_PBKDF2_ID_HMAC_SHA384$SEGMENT;
    }
    public static MemorySegment PKCS12_PBKDF2_ID_HMAC_SHA512() {
        return constants$1650.PKCS12_PBKDF2_ID_HMAC_SHA512$SEGMENT;
    }
    public static MemorySegment PKCS12_PBES2_ALG_AES256_SHA256() {
        return constants$1650.PKCS12_PBES2_ALG_AES256_SHA256$SEGMENT;
    }
    public static MemorySegment PKCS12_CONFIG_REGPATH() {
        return constants$1651.PKCS12_CONFIG_REGPATH$SEGMENT;
    }
    public static MemorySegment PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME() {
        return constants$1651.PKCS12_ENCRYPT_CERTIFICATES_VALUE_NAME$SEGMENT;
    }
    public static MemoryAddress CERT_RETRIEVE_ISSUER_LOGO() {
        return constants$1651.CERT_RETRIEVE_ISSUER_LOGO$ADDR;
    }
    public static MemoryAddress CERT_RETRIEVE_SUBJECT_LOGO() {
        return constants$1651.CERT_RETRIEVE_SUBJECT_LOGO$ADDR;
    }
    public static MemoryAddress CERT_RETRIEVE_COMMUNITY_LOGO() {
        return constants$1651.CERT_RETRIEVE_COMMUNITY_LOGO$ADDR;
    }
    public static MemoryAddress CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE() {
        return constants$1651.CERT_RETRIEVE_BIOMETRIC_PREDEFINED_BASE_TYPE$ADDR;
    }
    public static MemoryAddress CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE() {
        return constants$1652.CERT_RETRIEVE_BIOMETRIC_PICTURE_TYPE$ADDR;
    }
    public static MemoryAddress CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE() {
        return constants$1652.CERT_RETRIEVE_BIOMETRIC_SIGNATURE_TYPE$ADDR;
    }
    public static int CERT_SELECT_LAST() {
        return (int)11L;
    }
    public static int CERT_SELECT_MAX() {
        return (int)33L;
    }
    public static MemorySegment szFORCE_KEY_PROTECTION() {
        return constants$1652.szFORCE_KEY_PROTECTION$SEGMENT;
    }
    public static int CRYPTPROTECT_LAST_RESERVED_FLAGVAL() {
        return (int)4294967295L;
    }
    public static int __RPCNDR_H_VERSION__() {
        return (int)475L;
    }
    public static int NDR_CHAR_REP_MASK() {
        return (int)15L;
    }
    public static int NDR_INT_REP_MASK() {
        return (int)240L;
    }
    public static int NDR_FLOAT_REP_MASK() {
        return (int)65280L;
    }
    public static int NDR_LITTLE_ENDIAN() {
        return (int)16L;
    }
    public static int NDR_BIG_ENDIAN() {
        return (int)0L;
    }
    public static int NDR_IEEE_FLOAT() {
        return (int)0L;
    }
    public static int NDR_VAX_FLOAT() {
        return (int)256L;
    }
    public static int NDR_IBM_FLOAT() {
        return (int)768L;
    }
    public static int NDR_ASCII_CHAR() {
        return (int)0L;
    }
    public static int NDR_EBCDIC_CHAR() {
        return (int)1L;
    }
    public static int NDR_LOCAL_DATA_REPRESENTATION() {
        return (int)16L;
    }
    public static int NDR_LOCAL_ENDIAN() {
        return (int)16L;
    }
    public static int USER_MARSHAL_CB_SIGNATURE() {
        return (int)1431523907L;
    }
    public static int CLSCTX_INPROC() {
        return (int)3L;
    }
    public static int CLSCTX_ALL() {
        return (int)23L;
    }
    public static int CLSCTX_SERVER() {
        return (int)21L;
    }
    public static int CLSCTX_VALID_MASK() {
        return (int)-2132806625L;
    }
    public static MemoryAddress COLE_DEFAULT_PRINCIPAL() {
        return constants$1652.COLE_DEFAULT_PRINCIPAL$ADDR;
    }
    public static MemoryAddress COLE_DEFAULT_AUTHINFO() {
        return constants$1652.COLE_DEFAULT_AUTHINFO$ADDR;
    }
    public static int STGM_DIRECT() {
        return (int)0L;
    }
    public static int STGM_TRANSACTED() {
        return (int)65536L;
    }
    public static int STGM_SIMPLE() {
        return (int)134217728L;
    }
    public static int STGM_READ() {
        return (int)0L;
    }
    public static int STGM_WRITE() {
        return (int)1L;
    }
    public static int STGM_READWRITE() {
        return (int)2L;
    }
    public static int STGM_SHARE_DENY_NONE() {
        return (int)64L;
    }
    public static int STGM_SHARE_DENY_READ() {
        return (int)48L;
    }
    public static int STGM_SHARE_DENY_WRITE() {
        return (int)32L;
    }
    public static int STGM_SHARE_EXCLUSIVE() {
        return (int)16L;
    }
    public static int STGM_PRIORITY() {
        return (int)262144L;
    }
    public static int STGM_DELETEONRELEASE() {
        return (int)67108864L;
    }
    public static int STGM_NOSCRATCH() {
        return (int)1048576L;
    }
    public static int STGM_CREATE() {
        return (int)4096L;
    }
    public static int STGM_CONVERT() {
        return (int)131072L;
    }
    public static int STGM_FAILIFTHERE() {
        return (int)0L;
    }
    public static int STGM_NOSNAPSHOT() {
        return (int)2097152L;
    }
    public static int STGM_DIRECT_SWMR() {
        return (int)4194304L;
    }
    public static int ASYNC_MODE_COMPATIBILITY() {
        return (int)1L;
    }
    public static int ASYNC_MODE_DEFAULT() {
        return (int)0L;
    }
    public static int STGTY_REPEAT() {
        return (int)256L;
    }
    public static int STG_TOEND() {
        return (int)4294967295L;
    }
    public static int STG_LAYOUT_SEQUENTIAL() {
        return (int)0L;
    }
    public static int STG_LAYOUT_INTERLEAVED() {
        return (int)1L;
    }
    public static int WDT_INPROC_CALL() {
        return (int)1215587415L;
    }
    public static int WDT_REMOTE_CALL() {
        return (int)1383359575L;
    }
    public static int WDT_INPROC64_CALL() {
        return (int)1349805143L;
    }
    public static byte DECIMAL_NEG() {
        return (byte)128L;
    }
    public static short VARIANT_TRUE() {
        return (short)-1L;
    }
    public static short VARIANT_FALSE() {
        return (short)0L;
    }
    public static int UPDFCACHE_NODATACACHE() {
        return (int)1L;
    }
    public static int UPDFCACHE_ONSAVECACHE() {
        return (int)2L;
    }
    public static int UPDFCACHE_ONSTOPCACHE() {
        return (int)4L;
    }
    public static int UPDFCACHE_NORMALCACHE() {
        return (int)8L;
    }
    public static int UPDFCACHE_IFBLANK() {
        return (int)16L;
    }
    public static int UPDFCACHE_ONLYIFBLANK() {
        return (int)2147483648L;
    }
    public static int UPDFCACHE_IFBLANKORONSAVECACHE() {
        return (int)18L;
    }
    public static int UPDFCACHE_ALL() {
        return (int)2147483647L;
    }
    public static int UPDFCACHE_ALLBUTNODATACACHE() {
        return (int)2147483646L;
    }
    public static int MK_ALT() {
        return (int)32L;
    }
    public static int DROPEFFECT_NONE() {
        return (int)0L;
    }
    public static int DROPEFFECT_COPY() {
        return (int)1L;
    }
    public static int DROPEFFECT_MOVE() {
        return (int)2L;
    }
    public static int DROPEFFECT_LINK() {
        return (int)4L;
    }
    public static int DROPEFFECT_SCROLL() {
        return (int)2147483648L;
    }
    public static int DD_DEFSCROLLINSET() {
        return (int)11L;
    }
    public static int DD_DEFSCROLLDELAY() {
        return (int)50L;
    }
    public static int DD_DEFSCROLLINTERVAL() {
        return (int)50L;
    }
    public static int DD_DEFDRAGDELAY() {
        return (int)200L;
    }
    public static int DD_DEFDRAGMINDIST() {
        return (int)2L;
    }
    public static int FADF_AUTO() {
        return (int)1L;
    }
    public static int FADF_STATIC() {
        return (int)2L;
    }
    public static int FADF_EMBEDDED() {
        return (int)4L;
    }
    public static int FADF_FIXEDSIZE() {
        return (int)16L;
    }
    public static int FADF_RECORD() {
        return (int)32L;
    }
    public static int FADF_HAVEIID() {
        return (int)64L;
    }
    public static int FADF_HAVEVARTYPE() {
        return (int)128L;
    }
    public static int FADF_BSTR() {
        return (int)256L;
    }
    public static int FADF_UNKNOWN() {
        return (int)512L;
    }
    public static int FADF_DISPATCH() {
        return (int)1024L;
    }
    public static int FADF_VARIANT() {
        return (int)2048L;
    }
    public static int FADF_RESERVED() {
        return (int)61448L;
    }
    public static int PARAMFLAG_NONE() {
        return (int)0L;
    }
    public static int PARAMFLAG_FIN() {
        return (int)1L;
    }
    public static int PARAMFLAG_FOUT() {
        return (int)2L;
    }
    public static int PARAMFLAG_FLCID() {
        return (int)4L;
    }
    public static int PARAMFLAG_FRETVAL() {
        return (int)8L;
    }
    public static int PARAMFLAG_FOPT() {
        return (int)16L;
    }
    public static int PARAMFLAG_FHASDEFAULT() {
        return (int)32L;
    }
    public static int PARAMFLAG_FHASCUSTDATA() {
        return (int)64L;
    }
    public static int IDLFLAG_NONE() {
        return (int)0L;
    }
    public static int IDLFLAG_FIN() {
        return (int)1L;
    }
    public static int IDLFLAG_FOUT() {
        return (int)2L;
    }
    public static int IDLFLAG_FLCID() {
        return (int)4L;
    }
    public static int IDLFLAG_FRETVAL() {
        return (int)8L;
    }
    public static int IMPLTYPEFLAG_FDEFAULT() {
        return (int)1L;
    }
    public static int IMPLTYPEFLAG_FSOURCE() {
        return (int)2L;
    }
    public static int IMPLTYPEFLAG_FRESTRICTED() {
        return (int)4L;
    }
    public static int IMPLTYPEFLAG_FDEFAULTVTABLE() {
        return (int)8L;
    }
    public static int DISPID_UNKNOWN() {
        return (int)-1L;
    }
    public static int DISPID_VALUE() {
        return (int)0L;
    }
    public static int DISPID_PROPERTYPUT() {
        return (int)-3L;
    }
    public static int DISPID_NEWENUM() {
        return (int)-4L;
    }
    public static int DISPID_EVALUATE() {
        return (int)-5L;
    }
    public static int DISPID_CONSTRUCTOR() {
        return (int)-6L;
    }
    public static int DISPID_DESTRUCTOR() {
        return (int)-7L;
    }
    public static int DISPID_COLLECT() {
        return (int)-8L;
    }
    public static int BINDF_DONTUSECACHE() {
        return (int)16L;
    }
    public static int BINDF_DONTPUTINCACHE() {
        return (int)32L;
    }
    public static int BINDF_NOCOPYDATA() {
        return (int)128L;
    }
    public static MemoryAddress INVALID_P_ROOT_SECURITY_ID() {
        return constants$1652.INVALID_P_ROOT_SECURITY_ID$ADDR;
    }
    public static int PI_DOCFILECLSIDLOOKUP() {
        return (int)32L;
    }
    public static MemorySegment SZ_URLCONTEXT() {
        return constants$1653.SZ_URLCONTEXT$SEGMENT;
    }
    public static MemorySegment SZ_ASYNC_CALLEE() {
        return constants$1653.SZ_ASYNC_CALLEE$SEGMENT;
    }
    public static MemoryAddress CFSTR_MIME_NULL() {
        return constants$1653.CFSTR_MIME_NULL$ADDR;
    }
    public static int MK_S_ASYNCHRONOUS() {
        return (int)262632L;
    }
    public static int S_ASYNCHRONOUS() {
        return (int)262632L;
    }
    public static int INET_E_INVALID_URL() {
        return (int)-2146697214L;
    }
    public static int INET_E_NO_SESSION() {
        return (int)-2146697213L;
    }
    public static int INET_E_CANNOT_CONNECT() {
        return (int)-2146697212L;
    }
    public static int INET_E_RESOURCE_NOT_FOUND() {
        return (int)-2146697211L;
    }
    public static int INET_E_OBJECT_NOT_FOUND() {
        return (int)-2146697210L;
    }
    public static int INET_E_DATA_NOT_AVAILABLE() {
        return (int)-2146697209L;
    }
    public static int INET_E_DOWNLOAD_FAILURE() {
        return (int)-2146697208L;
    }
    public static int INET_E_AUTHENTICATION_REQUIRED() {
        return (int)-2146697207L;
    }
    public static int INET_E_NO_VALID_MEDIA() {
        return (int)-2146697206L;
    }
    public static int INET_E_CONNECTION_TIMEOUT() {
        return (int)-2146697205L;
    }
    public static int INET_E_INVALID_REQUEST() {
        return (int)-2146697204L;
    }
    public static int INET_E_UNKNOWN_PROTOCOL() {
        return (int)-2146697203L;
    }
    public static int INET_E_SECURITY_PROBLEM() {
        return (int)-2146697202L;
    }
    public static int INET_E_CANNOT_LOAD_DATA() {
        return (int)-2146697201L;
    }
    public static int INET_E_CANNOT_INSTANTIATE_OBJECT() {
        return (int)-2146697200L;
    }
    public static int INET_E_INVALID_CERTIFICATE() {
        return (int)-2146697191L;
    }
    public static int INET_E_REDIRECT_FAILED() {
        return (int)-2146697196L;
    }
    public static int INET_E_REDIRECT_TO_DIR() {
        return (int)-2146697195L;
    }
    public static int INET_E_CANNOT_LOCK_REQUEST() {
        return (int)-2146697194L;
    }
    public static int INET_E_USE_EXTEND_BINDING() {
        return (int)-2146697193L;
    }
    public static int INET_E_TERMINATED_BIND() {
        return (int)-2146697192L;
    }
    public static int INET_E_RESERVED_1() {
        return (int)-2146697190L;
    }
    public static int INET_E_BLOCKED_REDIRECT_XSECURITYID() {
        return (int)-2146697189L;
    }
    public static int INET_E_DOMINJECTIONVALIDATION() {
        return (int)-2146697188L;
    }
    public static int INET_E_ERROR_FIRST() {
        return (int)-2146697214L;
    }
    public static int INET_E_CODE_DOWNLOAD_DECLINED() {
        return (int)-2146696960L;
    }
    public static int INET_E_RESULT_DISPATCHED() {
        return (int)-2146696704L;
    }
    public static int INET_E_CANNOT_REPLACE_SFP_FILE() {
        return (int)-2146696448L;
    }
    public static int INET_E_CODE_INSTALL_SUPPRESSED() {
        return (int)-2146696192L;
    }
    public static int INET_E_CODE_INSTALL_BLOCKED_BY_HASH_POLICY() {
        return (int)-2146695936L;
    }
    public static int INET_E_DOWNLOAD_BLOCKED_BY_INPRIVATE() {
        return (int)-2146695935L;
    }
    public static int INET_E_CODE_INSTALL_BLOCKED_IMMERSIVE() {
        return (int)-2146695934L;
    }
    public static int INET_E_FORBIDFRAMING() {
        return (int)-2146695933L;
    }
    public static int INET_E_CODE_INSTALL_BLOCKED_ARM() {
        return (int)-2146695932L;
    }
    public static int INET_E_BLOCKED_PLUGGABLE_PROTOCOL() {
        return (int)-2146695931L;
    }
    public static int INET_E_ERROR_LAST() {
        return (int)-2146695931L;
    }
    public static int Uri_HAS_ABSOLUTE_URI() {
        return (int)1L;
    }
    public static int Uri_HAS_AUTHORITY() {
        return (int)2L;
    }
    public static int Uri_HAS_DISPLAY_URI() {
        return (int)4L;
    }
    public static int Uri_HAS_DOMAIN() {
        return (int)8L;
    }
    public static int Uri_HAS_EXTENSION() {
        return (int)16L;
    }
    public static int Uri_HAS_FRAGMENT() {
        return (int)32L;
    }
    public static int Uri_HAS_HOST() {
        return (int)64L;
    }
    public static int Uri_HAS_PASSWORD() {
        return (int)128L;
    }
    public static int Uri_HAS_PATH() {
        return (int)256L;
    }
    public static int Uri_HAS_QUERY() {
        return (int)1024L;
    }
    public static int Uri_HAS_RAW_URI() {
        return (int)2048L;
    }
    public static int Uri_HAS_SCHEME_NAME() {
        return (int)4096L;
    }
    public static int Uri_HAS_USER_NAME() {
        return (int)16384L;
    }
    public static int Uri_HAS_PATH_AND_QUERY() {
        return (int)512L;
    }
    public static int Uri_HAS_USER_INFO() {
        return (int)8192L;
    }
    public static int Uri_HAS_HOST_TYPE() {
        return (int)32768L;
    }
    public static int Uri_HAS_PORT() {
        return (int)65536L;
    }
    public static int Uri_HAS_SCHEME() {
        return (int)131072L;
    }
    public static int Uri_HAS_ZONE() {
        return (int)262144L;
    }
    public static int Uri_ENCODING_RFC() {
        return (int)41L;
    }
    public static int PARSE_ENCODE() {
        return (int)7L;
    }
    public static int PARSE_DECODE() {
        return (int)8L;
    }
    public static int INET_E_USE_DEFAULT_PROTOCOLHANDLER() {
        return (int)-2146697199L;
    }
    public static int INET_E_USE_DEFAULT_SETTING() {
        return (int)-2146697198L;
    }
    public static int INET_E_DEFAULT_ACTION() {
        return (int)-2146697199L;
    }
    public static int INET_E_QUERYOPTION_UNKNOWN() {
        return (int)-2146697197L;
    }
    public static int INET_E_REDIRECTING() {
        return (int)-2146697196L;
    }
    public static int PROPSETFLAG_DEFAULT() {
        return (int)0L;
    }
    public static int PROPSETFLAG_NONSIMPLE() {
        return (int)1L;
    }
    public static int PROPSETFLAG_ANSI() {
        return (int)2L;
    }
    public static int PROPSETFLAG_UNBUFFERED() {
        return (int)4L;
    }
    public static int PROPSETFLAG_CASE_SENSITIVE() {
        return (int)8L;
    }
    public static int PROPSET_BEHAVIOR_CASE_SENSITIVE() {
        return (int)1L;
    }
    public static int PID_DICTIONARY() {
        return (int)0L;
    }
    public static int PID_CODEPAGE() {
        return (int)1L;
    }
    public static int PID_FIRST_USABLE() {
        return (int)2L;
    }
    public static int PID_FIRST_NAME_DEFAULT() {
        return (int)4095L;
    }
    public static int PID_LOCALE() {
        return (int)2147483648L;
    }
    public static int PID_MODIFY_TIME() {
        return (int)2147483649L;
    }
    public static int PID_SECURITY() {
        return (int)2147483650L;
    }
    public static int PID_BEHAVIOR() {
        return (int)2147483651L;
    }
    public static int PID_ILLEGAL() {
        return (int)4294967295L;
    }
    public static int PID_MIN_READONLY() {
        return (int)2147483648L;
    }
    public static int PID_MAX_READONLY() {
        return (int)3221225471L;
    }
    public static int PIDDI_THUMBNAIL() {
        return (int)2L;
    }
    public static int PIDSI_TITLE() {
        return (int)2L;
    }
    public static int PIDSI_SUBJECT() {
        return (int)3L;
    }
    public static int PIDSI_AUTHOR() {
        return (int)4L;
    }
    public static int PIDSI_KEYWORDS() {
        return (int)5L;
    }
    public static int PIDSI_COMMENTS() {
        return (int)6L;
    }
    public static int PIDSI_TEMPLATE() {
        return (int)7L;
    }
    public static int PIDSI_LASTAUTHOR() {
        return (int)8L;
    }
    public static int PIDSI_REVNUMBER() {
        return (int)9L;
    }
    public static int PIDSI_EDITTIME() {
        return (int)10L;
    }
    public static int PIDSI_LASTPRINTED() {
        return (int)11L;
    }
    public static int PIDSI_CREATE_DTM() {
        return (int)12L;
    }
    public static int PIDSI_LASTSAVE_DTM() {
        return (int)13L;
    }
    public static int PIDSI_PAGECOUNT() {
        return (int)14L;
    }
    public static int PIDSI_WORDCOUNT() {
        return (int)15L;
    }
    public static int PIDSI_CHARCOUNT() {
        return (int)16L;
    }
    public static int PIDSI_THUMBNAIL() {
        return (int)17L;
    }
    public static int PIDSI_APPNAME() {
        return (int)18L;
    }
    public static int PIDSI_DOC_SECURITY() {
        return (int)19L;
    }
    public static int PIDMSI_EDITOR() {
        return (int)2L;
    }
    public static int PIDMSI_SUPPLIER() {
        return (int)3L;
    }
    public static int PIDMSI_SOURCE() {
        return (int)4L;
    }
    public static int PIDMSI_SEQUENCE_NO() {
        return (int)5L;
    }
    public static int PIDMSI_PROJECT() {
        return (int)6L;
    }
    public static int PIDMSI_STATUS() {
        return (int)7L;
    }
    public static int PIDMSI_OWNER() {
        return (int)8L;
    }
    public static int PIDMSI_RATING() {
        return (int)9L;
    }
    public static int PIDMSI_PRODUCTION() {
        return (int)10L;
    }
    public static int PIDMSI_COPYRIGHT() {
        return (int)11L;
    }
    public static int PRSPEC_INVALID() {
        return (int)4294967295L;
    }
    public static int PRSPEC_LPWSTR() {
        return (int)0L;
    }
    public static int PRSPEC_PROPID() {
        return (int)1L;
    }
    public static int PROPSETHDR_OSVERSION_UNKNOWN() {
        return (int)4294967295L;
    }
    public static int VAR_TIMEVALUEONLY() {
        return (int)1L;
    }
    public static int VAR_DATEVALUEONLY() {
        return (int)2L;
    }
    public static int VAR_VALIDDATE() {
        return (int)4L;
    }
    public static int VAR_CALENDAR_HIJRI() {
        return (int)8L;
    }
    public static int VAR_LOCALBOOL() {
        return (int)16L;
    }
    public static int VAR_FORMAT_NOSUBSTITUTE() {
        return (int)32L;
    }
    public static int VAR_FOURDIGITYEARS() {
        return (int)64L;
    }
    public static int VAR_CALENDAR_THAI() {
        return (int)128L;
    }
    public static int VAR_CALENDAR_GREGORIAN() {
        return (int)256L;
    }
    public static int VTDATEGRE_MIN() {
        return (int)-657434L;
    }
    public static int VTBIT_I1() {
        return (int)65536L;
    }
    public static int VTBIT_UI1() {
        return (int)131072L;
    }
    public static int VTBIT_I2() {
        return (int)4L;
    }
    public static int VTBIT_UI2() {
        return (int)262144L;
    }
    public static int VTBIT_I4() {
        return (int)8L;
    }
    public static int VTBIT_UI4() {
        return (int)524288L;
    }
    public static int VTBIT_I8() {
        return (int)1048576L;
    }
    public static int VTBIT_UI8() {
        return (int)2097152L;
    }
    public static int VTBIT_R4() {
        return (int)16L;
    }
    public static int VTBIT_R8() {
        return (int)32L;
    }
    public static int VTBIT_CY() {
        return (int)64L;
    }
    public static int VTBIT_DECIMAL() {
        return (int)16384L;
    }
    public static int VT_HARDTYPE() {
        return (int)32768L;
    }
    public static int MEMBERID_NIL() {
        return (int)-1L;
    }
    public static int ID_DEFAULTINST() {
        return (int)-2L;
    }
    public static int MASK_TO_RESET_TLB_BITS() {
        return (int)-97L;
    }
    public static int E_DRAW() {
        return (int)-2147221184L;
    }
    public static int DATA_E_FORMATETC() {
        return (int)-2147221404L;
    }
    public static int OLEIVERB_PRIMARY() {
        return (int)0L;
    }
    public static int OLEIVERB_SHOW() {
        return (int)-1L;
    }
    public static int OLEIVERB_OPEN() {
        return (int)-2L;
    }
    public static int OLEIVERB_HIDE() {
        return (int)-3L;
    }
    public static int OLEIVERB_UIACTIVATE() {
        return (int)-4L;
    }
    public static int OLEIVERB_INPLACEACTIVATE() {
        return (int)-5L;
    }
    public static int OLEIVERB_DISCARDUNDOSTATE() {
        return (int)-6L;
    }
    public static int EMBDHLP_INPROC_HANDLER() {
        return (int)0L;
    }
    public static int EMBDHLP_INPROC_SERVER() {
        return (int)1L;
    }
    public static int EMBDHLP_CREATENOW() {
        return (int)0L;
    }
    public static int EMBDHLP_DELAYCREATE() {
        return (int)65536L;
    }
    public static int METHOD_DIRECT_TO_HARDWARE() {
        return (int)1L;
    }
    public static int METHOD_DIRECT_FROM_HARDWARE() {
        return (int)2L;
    }
    public static int FILE_SPECIAL_ACCESS() {
        return (int)0L;
    }
    public static int FILE_READ_ACCESS() {
        return (int)1L;
    }
    public static int FILE_WRITE_ACCESS() {
        return (int)2L;
    }
    public static int IOCTL_STORAGE_BASE() {
        return (int)45L;
    }
    public static int IOCTL_STORAGE_CHECK_VERIFY() {
        return (int)2967552L;
    }
    public static int IOCTL_STORAGE_CHECK_VERIFY2() {
        return (int)2951168L;
    }
    public static int IOCTL_STORAGE_MEDIA_REMOVAL() {
        return (int)2967556L;
    }
    public static int IOCTL_STORAGE_EJECT_MEDIA() {
        return (int)2967560L;
    }
    public static int IOCTL_STORAGE_LOAD_MEDIA() {
        return (int)2967564L;
    }
    public static int IOCTL_STORAGE_LOAD_MEDIA2() {
        return (int)2951180L;
    }
    public static int IOCTL_STORAGE_RESERVE() {
        return (int)2967568L;
    }
    public static int IOCTL_STORAGE_RELEASE() {
        return (int)2967572L;
    }
    public static int IOCTL_STORAGE_FIND_NEW_DEVICES() {
        return (int)2967576L;
    }
    public static int IOCTL_STORAGE_EJECTION_CONTROL() {
        return (int)2951488L;
    }
    public static int IOCTL_STORAGE_MCN_CONTROL() {
        return (int)2951492L;
    }
    public static int IOCTL_STORAGE_GET_MEDIA_TYPES() {
        return (int)2952192L;
    }
    public static int IOCTL_STORAGE_GET_MEDIA_TYPES_EX() {
        return (int)2952196L;
    }
    public static int IOCTL_STORAGE_GET_MEDIA_SERIAL_NUMBER() {
        return (int)2952208L;
    }
    public static int IOCTL_STORAGE_GET_HOTPLUG_INFO() {
        return (int)2952212L;
    }
    public static int IOCTL_STORAGE_SET_HOTPLUG_INFO() {
        return (int)3001368L;
    }
    public static int IOCTL_STORAGE_RESET_BUS() {
        return (int)2969600L;
    }
    public static int IOCTL_STORAGE_RESET_DEVICE() {
        return (int)2969604L;
    }
    public static int IOCTL_STORAGE_BREAK_RESERVATION() {
        return (int)2969620L;
    }
    public static int IOCTL_STORAGE_PERSISTENT_RESERVE_IN() {
        return (int)2969624L;
    }
    public static int IOCTL_STORAGE_PERSISTENT_RESERVE_OUT() {
        return (int)3002396L;
    }
    public static int IOCTL_STORAGE_GET_DEVICE_NUMBER() {
        return (int)2953344L;
    }
    public static int IOCTL_STORAGE_PREDICT_FAILURE() {
        return (int)2953472L;
    }
    public static int IOCTL_STORAGE_READ_CAPACITY() {
        return (int)2969920L;
    }
    public static int IOCTL_STORAGE_GET_BC_PROPERTIES() {
        return (int)2971648L;
    }
    public static int IOCTL_STORAGE_ALLOCATE_BC_STREAM() {
        return (int)3004420L;
    }
    public static int IOCTL_STORAGE_FREE_BC_STREAM() {
        return (int)3004424L;
    }
    public static int IOCTL_STORAGE_CHECK_PRIORITY_HINT_SUPPORT() {
        return (int)2955392L;
    }
    public static int OBSOLETE_IOCTL_STORAGE_RESET_BUS() {
        return (int)3002368L;
    }
    public static int OBSOLETE_IOCTL_STORAGE_RESET_DEVICE() {
        return (int)3002372L;
    }
    public static int IOCTL_STORAGE_MANAGE_DATA_SET_ATTRIBUTES() {
        return (int)2987012L;
    }
    public static int DeviceDsmActionFlag_NonDestructive() {
        return (int)2147483648L;
    }
    public static int DeviceDsmAction_Notification() {
        return (int)2147483650L;
    }
    public static int DEVICE_DSM_FLAG_ENTIRE_DATA_SET_RANGE() {
        return (int)1L;
    }
    public static int TAPE_RETURN_STATISTICS() {
        return (int)0L;
    }
    public static int TAPE_RETURN_ENV_INFO() {
        return (int)1L;
    }
    public static int TAPE_RESET_STATISTICS() {
        return (int)2L;
    }
    public static int MEDIA_CURRENTLY_MOUNTED() {
        return (int)2147483648L;
    }
    public static int IOCTL_DISK_BASE() {
        return (int)7L;
    }
    public static int IOCTL_DISK_GET_DRIVE_GEOMETRY() {
        return (int)458752L;
    }
    public static int IOCTL_DISK_GET_PARTITION_INFO() {
        return (int)475140L;
    }
    public static int IOCTL_DISK_SET_PARTITION_INFO() {
        return (int)507912L;
    }
    public static int IOCTL_DISK_GET_DRIVE_LAYOUT() {
        return (int)475148L;
    }
    public static int IOCTL_DISK_SET_DRIVE_LAYOUT() {
        return (int)507920L;
    }
    public static int IOCTL_DISK_VERIFY() {
        return (int)458772L;
    }
    public static int IOCTL_DISK_FORMAT_TRACKS() {
        return (int)507928L;
    }
    public static int IOCTL_DISK_REASSIGN_BLOCKS() {
        return (int)507932L;
    }
    public static int IOCTL_DISK_PERFORMANCE() {
        return (int)458784L;
    }
    public static int IOCTL_DISK_IS_WRITABLE() {
        return (int)458788L;
    }
    public static int IOCTL_DISK_LOGGING() {
        return (int)458792L;
    }
    public static int IOCTL_DISK_FORMAT_TRACKS_EX() {
        return (int)507948L;
    }
    public static int IOCTL_DISK_HISTOGRAM_STRUCTURE() {
        return (int)458800L;
    }
    public static int IOCTL_DISK_HISTOGRAM_DATA() {
        return (int)458804L;
    }
    public static int IOCTL_DISK_HISTOGRAM_RESET() {
        return (int)458808L;
    }
    public static int IOCTL_DISK_REQUEST_STRUCTURE() {
        return (int)458812L;
    }
    public static int IOCTL_DISK_REQUEST_DATA() {
        return (int)458816L;
    }
    public static int IOCTL_DISK_PERFORMANCE_OFF() {
        return (int)458848L;
    }
    public static int IOCTL_DISK_CONTROLLER_NUMBER() {
        return (int)458820L;
    }
    public static int SMART_GET_VERSION() {
        return (int)475264L;
    }
    public static int SMART_SEND_DRIVE_COMMAND() {
        return (int)508036L;
    }
    public static int SMART_RCV_DRIVE_DATA() {
        return (int)508040L;
    }
    public static int IOCTL_DISK_GET_PARTITION_INFO_EX() {
        return (int)458824L;
    }
    public static int IOCTL_DISK_SET_PARTITION_INFO_EX() {
        return (int)507980L;
    }
    public static int IOCTL_DISK_GET_DRIVE_LAYOUT_EX() {
        return (int)458832L;
    }
    public static int IOCTL_DISK_SET_DRIVE_LAYOUT_EX() {
        return (int)507988L;
    }
    public static int IOCTL_DISK_CREATE_DISK() {
        return (int)507992L;
    }
    public static int IOCTL_DISK_GET_LENGTH_INFO() {
        return (int)475228L;
    }
    public static int IOCTL_DISK_GET_DRIVE_GEOMETRY_EX() {
        return (int)458912L;
    }
    public static int IOCTL_DISK_REASSIGN_BLOCKS_EX() {
        return (int)508068L;
    }
    public static int IOCTL_DISK_UPDATE_DRIVE_SIZE() {
        return (int)508104L;
    }
    public static int IOCTL_DISK_GROW_PARTITION() {
        return (int)508112L;
    }
    public static int IOCTL_DISK_GET_CACHE_INFORMATION() {
        return (int)475348L;
    }
    public static int IOCTL_DISK_SET_CACHE_INFORMATION() {
        return (int)508120L;
    }
    public static int OBSOLETE_DISK_GET_WRITE_CACHE_STATE() {
        return (int)475356L;
    }
    public static int IOCTL_DISK_DELETE_DRIVE_LAYOUT() {
        return (int)508160L;
    }
    public static int IOCTL_DISK_UPDATE_PROPERTIES() {
        return (int)459072L;
    }
    public static int IOCTL_DISK_RESET_SNAPSHOT_INFO() {
        return (int)508432L;
    }
    public static int IOCTL_DISK_FORMAT_DRIVE() {
        return (int)508876L;
    }
    public static int IOCTL_DISK_SENSE_DEVICE() {
        return (int)459744L;
    }
    public static int IOCTL_DISK_CHECK_VERIFY() {
        return (int)477184L;
    }
    public static int IOCTL_DISK_MEDIA_REMOVAL() {
        return (int)477188L;
    }
    public static int IOCTL_DISK_EJECT_MEDIA() {
        return (int)477192L;
    }
    public static int IOCTL_DISK_LOAD_MEDIA() {
        return (int)477196L;
    }
    public static int IOCTL_DISK_RESERVE() {
        return (int)477200L;
    }
    public static int IOCTL_DISK_RELEASE() {
        return (int)477204L;
    }
    public static int IOCTL_DISK_FIND_NEW_DEVICES() {
        return (int)477208L;
    }
    public static int IOCTL_DISK_GET_MEDIA_TYPES() {
        return (int)461824L;
    }
    public static int IOCTL_STORAGE_QUERY_PROPERTY() {
        return (int)2954240L;
    }
    public static int GPT_ATTRIBUTE_PLATFORM_REQUIRED() {
        return (int)1L;
    }
    public static long GPT_BASIC_DATA_ATTRIBUTE_NO_DRIVE_LETTER() {
        return -9223372036854775808L;
    }
    public static long GPT_BASIC_DATA_ATTRIBUTE_HIDDEN() {
        return 4611686018427387904L;
    }
    public static long GPT_BASIC_DATA_ATTRIBUTE_SHADOW_COPY() {
        return 2305843009213693952L;
    }
    public static long GPT_BASIC_DATA_ATTRIBUTE_READ_ONLY() {
        return 1152921504606846976L;
    }
    public static long HISTOGRAM_BUCKET_SIZE() {
        return 8L;
    }
    public static long DISK_HISTOGRAM_SIZE() {
        return 72L;
    }
    public static int IOCTL_CHANGER_BASE() {
        return (int)48L;
    }
    public static int IOCTL_CHANGER_GET_PARAMETERS() {
        return (int)3162112L;
    }
    public static int IOCTL_CHANGER_GET_STATUS() {
        return (int)3162116L;
    }
    public static int IOCTL_CHANGER_GET_PRODUCT_DATA() {
        return (int)3162120L;
    }
    public static int IOCTL_CHANGER_SET_ACCESS() {
        return (int)3194896L;
    }
    public static int IOCTL_CHANGER_GET_ELEMENT_STATUS() {
        return (int)3194900L;
    }
    public static int IOCTL_CHANGER_INITIALIZE_ELEMENT_STATUS() {
        return (int)3162136L;
    }
    public static int IOCTL_CHANGER_SET_POSITION() {
        return (int)3162140L;
    }
    public static int IOCTL_CHANGER_EXCHANGE_MEDIUM() {
        return (int)3162144L;
    }
    public static int IOCTL_CHANGER_MOVE_MEDIUM() {
        return (int)3162148L;
    }
    public static int IOCTL_CHANGER_REINITIALIZE_TRANSPORT() {
        return (int)3162152L;
    }
    public static int IOCTL_CHANGER_QUERY_VOLUME_TAGS() {
        return (int)3194924L;
    }
    public static int CHANGER_RESERVED_BIT() {
        return (int)2147483648L;
    }
    public static int CHANGER_PREDISMOUNT_ALIGN_TO_SLOT() {
        return (int)2147483649L;
    }
    public static int CHANGER_PREDISMOUNT_ALIGN_TO_DRIVE() {
        return (int)2147483650L;
    }
    public static int CHANGER_CLEANER_AUTODISMOUNT() {
        return (int)2147483652L;
    }
    public static int CHANGER_TRUE_EXCHANGE_CAPABLE() {
        return (int)2147483656L;
    }
    public static int CHANGER_SLOTS_USE_TRAYS() {
        return (int)2147483664L;
    }
    public static int CHANGER_RTN_MEDIA_TO_ORIGINAL_ADDR() {
        return (int)2147483680L;
    }
    public static int CHANGER_CLEANER_OPS_NOT_SUPPORTED() {
        return (int)2147483712L;
    }
    public static int CHANGER_IEPORT_USER_CONTROL_OPEN() {
        return (int)2147483776L;
    }
    public static int CHANGER_IEPORT_USER_CONTROL_CLOSE() {
        return (int)2147483904L;
    }
    public static int CHANGER_MOVE_EXTENDS_IEPORT() {
        return (int)2147484160L;
    }
    public static int CHANGER_MOVE_RETRACTS_IEPORT() {
        return (int)2147484672L;
    }
    public static int ERROR_UNHANDLED_ERROR() {
        return (int)4294967295L;
    }
    public static int IOCTL_SERIAL_LSRMST_INSERT() {
        return (int)1769596L;
    }
    public static int IOCTL_SERENUM_EXPOSE_HARDWARE() {
        return (int)3604992L;
    }
    public static int IOCTL_SERENUM_REMOVE_HARDWARE() {
        return (int)3604996L;
    }
    public static int IOCTL_SERENUM_PORT_DESC() {
        return (int)3605000L;
    }
    public static int IOCTL_SERENUM_GET_PORT_NAME() {
        return (int)3605004L;
    }
    public static byte SERIAL_LSRMST_ESCAPE() {
        return (byte)0L;
    }
    public static byte SERIAL_LSRMST_LSR_DATA() {
        return (byte)1L;
    }
    public static byte SERIAL_LSRMST_LSR_NODATA() {
        return (byte)2L;
    }
    public static byte SERIAL_LSRMST_MST() {
        return (byte)3L;
    }
    public static int SERIAL_IOC_FCR_FIFO_ENABLE() {
        return (int)1L;
    }
    public static int SERIAL_IOC_FCR_RCVR_RESET() {
        return (int)2L;
    }
    public static int SERIAL_IOC_FCR_XMIT_RESET() {
        return (int)4L;
    }
    public static int SERIAL_IOC_FCR_DMA_MODE() {
        return (int)8L;
    }
    public static int SERIAL_IOC_FCR_RES1() {
        return (int)16L;
    }
    public static int SERIAL_IOC_FCR_RES2() {
        return (int)32L;
    }
    public static int SERIAL_IOC_FCR_RCVR_TRIGGER_LSB() {
        return (int)64L;
    }
    public static int SERIAL_IOC_FCR_RCVR_TRIGGER_MSB() {
        return (int)128L;
    }
    public static int SERIAL_IOC_MCR_DTR() {
        return (int)1L;
    }
    public static int SERIAL_IOC_MCR_RTS() {
        return (int)2L;
    }
    public static int SERIAL_IOC_MCR_OUT1() {
        return (int)4L;
    }
    public static int SERIAL_IOC_MCR_OUT2() {
        return (int)8L;
    }
    public static int SERIAL_IOC_MCR_LOOP() {
        return (int)16L;
    }
    public static int FSCTL_REQUEST_OPLOCK_LEVEL_1() {
        return (int)589824L;
    }
    public static int FSCTL_REQUEST_OPLOCK_LEVEL_2() {
        return (int)589828L;
    }
    public static int FSCTL_REQUEST_BATCH_OPLOCK() {
        return (int)589832L;
    }
    public static int FSCTL_OPLOCK_BREAK_ACKNOWLEDGE() {
        return (int)589836L;
    }
    public static int FSCTL_OPBATCH_ACK_CLOSE_PENDING() {
        return (int)589840L;
    }
    public static int FSCTL_OPLOCK_BREAK_NOTIFY() {
        return (int)589844L;
    }
    public static int FSCTL_LOCK_VOLUME() {
        return (int)589848L;
    }
    public static int FSCTL_UNLOCK_VOLUME() {
        return (int)589852L;
    }
    public static int FSCTL_DISMOUNT_VOLUME() {
        return (int)589856L;
    }
    public static int FSCTL_IS_VOLUME_MOUNTED() {
        return (int)589864L;
    }
    public static int FSCTL_IS_PATHNAME_VALID() {
        return (int)589868L;
    }
    public static int FSCTL_MARK_VOLUME_DIRTY() {
        return (int)589872L;
    }
    public static int FSCTL_QUERY_RETRIEVAL_POINTERS() {
        return (int)589883L;
    }
    public static int FSCTL_GET_COMPRESSION() {
        return (int)589884L;
    }
    public static int FSCTL_SET_COMPRESSION() {
        return (int)639040L;
    }
    public static int FSCTL_SET_BOOTLOADER_ACCESSED() {
        return (int)589903L;
    }
    public static int FSCTL_MARK_AS_SYSTEM_HIVE() {
        return (int)589903L;
    }
    public static int FSCTL_OPLOCK_BREAK_ACK_NO_2() {
        return (int)589904L;
    }
    public static int FSCTL_INVALIDATE_VOLUMES() {
        return (int)589908L;
    }
    public static int FSCTL_QUERY_FAT_BPB() {
        return (int)589912L;
    }
    public static int FSCTL_REQUEST_FILTER_OPLOCK() {
        return (int)589916L;
    }
    public static int FSCTL_FILESYSTEM_GET_STATISTICS() {
        return (int)589920L;
    }
    public static int FSCTL_GET_NTFS_VOLUME_DATA() {
        return (int)589924L;
    }
    public static int FSCTL_GET_NTFS_FILE_RECORD() {
        return (int)589928L;
    }
    public static int FSCTL_GET_VOLUME_BITMAP() {
        return (int)589935L;
    }
    public static int FSCTL_GET_RETRIEVAL_POINTERS() {
        return (int)589939L;
    }
    public static int FSCTL_MOVE_FILE() {
        return (int)589940L;
    }
    public static int FSCTL_IS_VOLUME_DIRTY() {
        return (int)589944L;
    }
    public static int FSCTL_ALLOW_EXTENDED_DASD_IO() {
        return (int)589955L;
    }
    public static int FSCTL_FIND_FILES_BY_SID() {
        return (int)589967L;
    }
    public static int FSCTL_SET_OBJECT_ID() {
        return (int)589976L;
    }
    public static int FSCTL_GET_OBJECT_ID() {
        return (int)589980L;
    }
    public static int FSCTL_DELETE_OBJECT_ID() {
        return (int)589984L;
    }
    public static int FSCTL_SET_REPARSE_POINT() {
        return (int)589988L;
    }
    public static int FSCTL_GET_REPARSE_POINT() {
        return (int)589992L;
    }
    public static int FSCTL_DELETE_REPARSE_POINT() {
        return (int)589996L;
    }
    public static int FSCTL_ENUM_USN_DATA() {
        return (int)590003L;
    }
    public static int FSCTL_SECURITY_ID_CHECK() {
        return (int)606391L;
    }
    public static int FSCTL_READ_USN_JOURNAL() {
        return (int)590011L;
    }
    public static int FSCTL_SET_OBJECT_ID_EXTENDED() {
        return (int)590012L;
    }
    public static int FSCTL_CREATE_OR_GET_OBJECT_ID() {
        return (int)590016L;
    }
    public static int FSCTL_SET_SPARSE() {
        return (int)590020L;
    }
    public static int FSCTL_SET_ZERO_DATA() {
        return (int)622792L;
    }
    public static int FSCTL_QUERY_ALLOCATED_RANGES() {
        return (int)606415L;
    }
    public static int FSCTL_ENABLE_UPGRADE() {
        return (int)622800L;
    }
    public static int FSCTL_SET_ENCRYPTION() {
        return (int)590039L;
    }
    public static int FSCTL_ENCRYPTION_FSCTL_IO() {
        return (int)590043L;
    }
    public static int FSCTL_WRITE_RAW_ENCRYPTED() {
        return (int)590047L;
    }
    public static int FSCTL_READ_RAW_ENCRYPTED() {
        return (int)590051L;
    }
    public static int FSCTL_CREATE_USN_JOURNAL() {
        return (int)590055L;
    }
    public static int FSCTL_READ_FILE_USN_DATA() {
        return (int)590059L;
    }
    public static int FSCTL_WRITE_USN_CLOSE_RECORD() {
        return (int)590063L;
    }
    public static int FSCTL_EXTEND_VOLUME() {
        return (int)590064L;
    }
    public static int FSCTL_QUERY_USN_JOURNAL() {
        return (int)590068L;
    }
    public static int FSCTL_DELETE_USN_JOURNAL() {
        return (int)590072L;
    }
    public static int FSCTL_MARK_HANDLE() {
        return (int)590076L;
    }
    public static int FSCTL_SIS_COPYFILE() {
        return (int)590080L;
    }
    public static int FSCTL_SIS_LINK_FILES() {
        return (int)639236L;
    }
    public static int FSCTL_HSM_MSG() {
        return (int)639240L;
    }
    public static int FSCTL_HSM_DATA() {
        return (int)639251L;
    }
    public static int FSCTL_RECALL_FILE() {
        return (int)590103L;
    }
    public static int FSCTL_READ_FROM_PLEX() {
        return (int)606494L;
    }
    public static int FSCTL_FILE_PREFETCH() {
        return (int)590112L;
    }
    public static int USN_PAGE_SIZE() {
        return (int)4096L;
    }
    public static int USN_REASON_DATA_OVERWRITE() {
        return (int)1L;
    }
    public static int USN_REASON_DATA_EXTEND() {
        return (int)2L;
    }
    public static int USN_REASON_DATA_TRUNCATION() {
        return (int)4L;
    }
    public static int USN_REASON_NAMED_DATA_OVERWRITE() {
        return (int)16L;
    }
    public static int USN_REASON_NAMED_DATA_EXTEND() {
        return (int)32L;
    }
    public static int USN_REASON_NAMED_DATA_TRUNCATION() {
        return (int)64L;
    }
    public static int USN_REASON_FILE_CREATE() {
        return (int)256L;
    }
    public static int USN_REASON_FILE_DELETE() {
        return (int)512L;
    }
    public static int USN_REASON_EA_CHANGE() {
        return (int)1024L;
    }
    public static int USN_REASON_SECURITY_CHANGE() {
        return (int)2048L;
    }
    public static int USN_REASON_RENAME_OLD_NAME() {
        return (int)4096L;
    }
    public static int USN_REASON_RENAME_NEW_NAME() {
        return (int)8192L;
    }
    public static int USN_REASON_INDEXABLE_CHANGE() {
        return (int)16384L;
    }
    public static int USN_REASON_BASIC_INFO_CHANGE() {
        return (int)32768L;
    }
    public static int USN_REASON_HARD_LINK_CHANGE() {
        return (int)65536L;
    }
    public static int USN_REASON_COMPRESSION_CHANGE() {
        return (int)131072L;
    }
    public static int USN_REASON_ENCRYPTION_CHANGE() {
        return (int)262144L;
    }
    public static int USN_REASON_OBJECT_ID_CHANGE() {
        return (int)524288L;
    }
    public static int USN_REASON_REPARSE_POINT_CHANGE() {
        return (int)1048576L;
    }
    public static int USN_REASON_STREAM_CHANGE() {
        return (int)2097152L;
    }
    public static int USN_REASON_TRANSACTED_CHANGE() {
        return (int)4194304L;
    }
    public static int USN_REASON_CLOSE() {
        return (int)2147483648L;
    }
    public static int USN_DELETE_FLAG_DELETE() {
        return (int)1L;
    }
    public static int USN_DELETE_FLAG_NOTIFY() {
        return (int)2L;
    }
    public static int USN_DELETE_VALID_FLAGS() {
        return (int)3L;
    }
    public static int USN_SOURCE_DATA_MANAGEMENT() {
        return (int)1L;
    }
    public static int USN_SOURCE_AUXILIARY_DATA() {
        return (int)2L;
    }
    public static int USN_SOURCE_REPLICATION_MANAGEMENT() {
        return (int)4L;
    }
    public static int MARK_HANDLE_PROTECT_CLUSTERS() {
        return (int)1L;
    }
    public static int MARK_HANDLE_TXF_SYSTEM_LOG() {
        return (int)4L;
    }
    public static int MARK_HANDLE_NOT_TXF_SYSTEM_LOG() {
        return (int)8L;
    }
    public static int MARK_HANDLE_REALTIME() {
        return (int)32L;
    }
    public static int MARK_HANDLE_NOT_REALTIME() {
        return (int)64L;
    }
    public static int VOLUME_IS_DIRTY() {
        return (int)1L;
    }
    public static int VOLUME_UPGRADE_SCHEDULED() {
        return (int)2L;
    }
    public static int VOLUME_SESSION_OPEN() {
        return (int)4L;
    }
    public static int ENCRYPTION_FORMAT_DEFAULT() {
        return (int)1L;
    }
    public static int COMPRESSION_FORMAT_SPARSE() {
        return (int)16384L;
    }
    public static int FSCTL_MAKE_MEDIA_COMPATIBLE() {
        return (int)622896L;
    }
    public static int FSCTL_SET_DEFECT_MANAGEMENT() {
        return (int)622900L;
    }
    public static int FSCTL_QUERY_SPARING_INFO() {
        return (int)590136L;
    }
    public static int FSCTL_QUERY_ON_DISK_VOLUME_INFO() {
        return (int)590140L;
    }
    public static int FSCTL_SET_VOLUME_COMPRESSION_STATE() {
        return (int)590144L;
    }
    public static int FSCTL_TXFS_MODIFY_RM() {
        return (int)622916L;
    }
    public static int FSCTL_TXFS_QUERY_RM_INFORMATION() {
        return (int)606536L;
    }
    public static int FSCTL_TXFS_ROLLFORWARD_REDO() {
        return (int)622928L;
    }
    public static int FSCTL_TXFS_ROLLFORWARD_UNDO() {
        return (int)622932L;
    }
    public static int FSCTL_TXFS_START_RM() {
        return (int)622936L;
    }
    public static int FSCTL_TXFS_SHUTDOWN_RM() {
        return (int)622940L;
    }
    public static int FSCTL_TXFS_READ_BACKUP_INFORMATION() {
        return (int)606560L;
    }
    public static int FSCTL_TXFS_WRITE_BACKUP_INFORMATION() {
        return (int)622948L;
    }
    public static int FSCTL_TXFS_CREATE_SECONDARY_RM() {
        return (int)622952L;
    }
    public static int FSCTL_TXFS_GET_METADATA_INFO() {
        return (int)606572L;
    }
    public static int FSCTL_TXFS_GET_TRANSACTED_VERSION() {
        return (int)606576L;
    }
    public static int FSCTL_TXFS_SAVEPOINT_INFORMATION() {
        return (int)622968L;
    }
    public static int FSCTL_TXFS_CREATE_MINIVERSION() {
        return (int)622972L;
    }
    public static int FSCTL_TXFS_TRANSACTION_ACTIVE() {
        return (int)606604L;
    }
    public static int FSCTL_SET_ZERO_ON_DEALLOCATION() {
        return (int)590228L;
    }
    public static int FSCTL_SET_REPAIR() {
        return (int)590232L;
    }
    public static int FSCTL_GET_REPAIR() {
        return (int)590236L;
    }
    public static int FSCTL_WAIT_FOR_REPAIR() {
        return (int)590240L;
    }
    public static int FSCTL_INITIATE_REPAIR() {
        return (int)590248L;
    }
    public static int FSCTL_CSC_INTERNAL() {
        return (int)590255L;
    }
    public static int FSCTL_SHRINK_VOLUME() {
        return (int)590256L;
    }
    public static int FSCTL_SET_SHORT_NAME_BEHAVIOR() {
        return (int)590260L;
    }
    public static int FSCTL_DFSR_SET_GHOST_HANDLE_STATE() {
        return (int)590264L;
    }
    public static int FSCTL_TXFS_LIST_TRANSACTION_LOCKED_FILES() {
        return (int)606688L;
    }
    public static int FSCTL_TXFS_LIST_TRANSACTIONS() {
        return (int)606692L;
    }
    public static int FSCTL_QUERY_PAGEFILE_ENCRYPTION() {
        return (int)590312L;
    }
    public static int FSCTL_RESET_VOLUME_ALLOCATION_HINTS() {
        return (int)590316L;
    }
    public static int FSCTL_TXFS_READ_BACKUP_INFORMATION2() {
        return (int)590328L;
    }
    public static int TXFS_MODIFY_RM_VALID_FLAGS() {
        return (int)261631L;
    }
    public static int TXFS_QUERY_RM_INFORMATION_VALID_FLAGS() {
        return (int)246192L;
    }
    public static int TXFS_ROLLFORWARD_REDO_VALID_FLAGS() {
        return (int)3L;
    }
    public static int TXFS_START_RM_VALID_FLAGS() {
        return (int)15999L;
    }
    public static int TXFS_TRANSACTED_VERSION_NONTRANSACTED() {
        return (int)4294967294L;
    }
    public static int TXFS_TRANSACTED_VERSION_UNCOMMITTED() {
        return (int)4294967295L;
    }
    public static int StorageIdTypeNAA() {
        return (int)3L;
    }
    public static int PERSISTENT_VOLUME_STATE_SHORT_NAME_CREATION_DISABLED() {
        return (int)1L;
    }
    public static int OPLOCK_LEVEL_CACHE_READ() {
        return (int)1L;
    }
    public static int OPLOCK_LEVEL_CACHE_HANDLE() {
        return (int)2L;
    }
    public static int OPLOCK_LEVEL_CACHE_WRITE() {
        return (int)4L;
    }
    public static int REQUEST_OPLOCK_INPUT_FLAG_REQUEST() {
        return (int)1L;
    }
    public static int REQUEST_OPLOCK_INPUT_FLAG_ACK() {
        return (int)2L;
    }
    public static int REQUEST_OPLOCK_INPUT_FLAG_COMPLETE_ACK_ON_CLOSE() {
        return (int)4L;
    }
    public static int REQUEST_OPLOCK_OUTPUT_FLAG_ACK_REQUIRED() {
        return (int)1L;
    }
    public static int REQUEST_OPLOCK_OUTPUT_FLAG_MODES_PROVIDED() {
        return (int)2L;
    }
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_ATTRIBUTE_MASK() {
        return (int)4278190080L;
    }
    public static int FSCTL_QUERY_DEPENDENT_VOLUME() {
        return (int)590320L;
    }
    public static int FSCTL_SD_GLOBAL_CHANGE() {
        return (int)590324L;
    }
    public static int FSCTL_LOOKUP_STREAM_FROM_CLUSTER() {
        return (int)590332L;
    }
    public static int FSCTL_TXFS_WRITE_BACKUP_INFORMATION2() {
        return (int)590336L;
    }
    public static int FSCTL_FILE_TYPE_NOTIFICATION() {
        return (int)590340L;
    }
    public static int FSCTL_GET_BOOT_AREA_INFO() {
        return (int)590384L;
    }
    public static int FSCTL_GET_RETRIEVAL_POINTER_BASE() {
        return (int)590388L;
    }
    public static int FSCTL_SET_PERSISTENT_VOLUME_STATE() {
        return (int)590392L;
    }
    public static int FSCTL_QUERY_PERSISTENT_VOLUME_STATE() {
        return (int)590396L;
    }
    public static int FSCTL_REQUEST_OPLOCK() {
        return (int)590400L;
    }
    public static int FSCTL_CSV_TUNNEL_REQUEST() {
        return (int)590404L;
    }
    public static int FSCTL_IS_CSV_FILE() {
        return (int)590408L;
    }
    public static int FSCTL_QUERY_FILE_SYSTEM_RECOGNITION() {
        return (int)590412L;
    }
    public static int FSCTL_CSV_GET_VOLUME_PATH_NAME() {
        return (int)590416L;
    }
    public static int FSCTL_CSV_GET_VOLUME_NAME_FOR_VOLUME_MOUNT_POINT() {
        return (int)590420L;
    }
    public static int FSCTL_CSV_GET_VOLUME_PATH_NAMES_FOR_VOLUME_NAME() {
        return (int)590424L;
    }
    public static int FSCTL_IS_FILE_ON_CSV_VOLUME() {
        return (int)590428L;
    }
    public static long CSV_NAMESPACE_INFO_V1() {
        return 24L;
    }
    public static int CSV_INVALID_DEVICE_NUMBER() {
        return (int)4294967295L;
    }
    public static int IOCTL_VOLUME_BASE() {
        return (int)86L;
    }
    public static int IOCTL_VOLUME_GET_VOLUME_DISK_EXTENTS() {
        return (int)5636096L;
    }
    public static int IOCTL_VOLUME_SUPPORTS_ONLINE_OFFLINE() {
        return (int)5636100L;
    }
    public static int IOCTL_VOLUME_ONLINE() {
        return (int)5685256L;
    }
    public static int IOCTL_VOLUME_OFFLINE() {
        return (int)5685260L;
    }
    public static int IOCTL_VOLUME_IS_OFFLINE() {
        return (int)5636112L;
    }
    public static int IOCTL_VOLUME_IS_IO_CAPABLE() {
        return (int)5636116L;
    }
    public static int IOCTL_VOLUME_QUERY_FAILOVER_SET() {
        return (int)5636120L;
    }
    public static int IOCTL_VOLUME_QUERY_VOLUME_NUMBER() {
        return (int)5636124L;
    }
    public static int IOCTL_VOLUME_LOGICAL_TO_PHYSICAL() {
        return (int)5636128L;
    }
    public static int IOCTL_VOLUME_PHYSICAL_TO_LOGICAL() {
        return (int)5636132L;
    }
    public static int IOCTL_VOLUME_IS_CLUSTERED() {
        return (int)5636144L;
    }
    public static int IOCTL_VOLUME_GET_GPT_ATTRIBUTES() {
        return (int)5636152L;
    }
    public static int SCARD_PROTOCOL_Tx() {
        return (int)3L;
    }
    public static int SCARD_PROTOCOL_DEFAULT() {
        return (int)2147483648L;
    }
    public static int IOCTL_SMARTCARD_POWER() {
        return (int)3211268L;
    }
    public static int IOCTL_SMARTCARD_GET_ATTRIBUTE() {
        return (int)3211272L;
    }
    public static int IOCTL_SMARTCARD_SET_ATTRIBUTE() {
        return (int)3211276L;
    }
    public static int IOCTL_SMARTCARD_CONFISCATE() {
        return (int)3211280L;
    }
    public static int IOCTL_SMARTCARD_TRANSMIT() {
        return (int)3211284L;
    }
    public static int IOCTL_SMARTCARD_EJECT() {
        return (int)3211288L;
    }
    public static int IOCTL_SMARTCARD_SWALLOW() {
        return (int)3211292L;
    }
    public static int IOCTL_SMARTCARD_IS_PRESENT() {
        return (int)3211304L;
    }
    public static int IOCTL_SMARTCARD_IS_ABSENT() {
        return (int)3211308L;
    }
    public static int IOCTL_SMARTCARD_SET_PROTOCOL() {
        return (int)3211312L;
    }
    public static int IOCTL_SMARTCARD_GET_STATE() {
        return (int)3211320L;
    }
    public static int IOCTL_SMARTCARD_GET_LAST_ERROR() {
        return (int)3211324L;
    }
    public static int IOCTL_SMARTCARD_GET_PERF_CNTR() {
        return (int)3211328L;
    }
    public static int SCARD_ATTR_VENDOR_NAME() {
        return (int)65792L;
    }
    public static int SCARD_ATTR_VENDOR_IFD_TYPE() {
        return (int)65793L;
    }
    public static int SCARD_ATTR_VENDOR_IFD_VERSION() {
        return (int)65794L;
    }
    public static int SCARD_ATTR_VENDOR_IFD_SERIAL_NO() {
        return (int)65795L;
    }
    public static int SCARD_ATTR_CHANNEL_ID() {
        return (int)131344L;
    }
    public static int SCARD_ATTR_PROTOCOL_TYPES() {
        return (int)196896L;
    }
    public static int SCARD_ATTR_DEFAULT_CLK() {
        return (int)196897L;
    }
    public static int SCARD_ATTR_MAX_CLK() {
        return (int)196898L;
    }
    public static int SCARD_ATTR_DEFAULT_DATA_RATE() {
        return (int)196899L;
    }
    public static int SCARD_ATTR_MAX_DATA_RATE() {
        return (int)196900L;
    }
    public static int SCARD_ATTR_MAX_IFSD() {
        return (int)196901L;
    }
    public static int SCARD_ATTR_POWER_MGMT_SUPPORT() {
        return (int)262449L;
    }
    public static int SCARD_ATTR_USER_TO_CARD_AUTH_DEVICE() {
        return (int)328000L;
    }
    public static int SCARD_ATTR_USER_AUTH_INPUT_DEVICE() {
        return (int)328002L;
    }
    public static int SCARD_ATTR_CHARACTERISTICS() {
        return (int)393552L;
    }
    public static int SCARD_ATTR_CURRENT_PROTOCOL_TYPE() {
        return (int)524801L;
    }
    public static int SCARD_ATTR_CURRENT_CLK() {
        return (int)524802L;
    }
    public static int SCARD_ATTR_CURRENT_F() {
        return (int)524803L;
    }
    public static int SCARD_ATTR_CURRENT_D() {
        return (int)524804L;
    }
    public static int SCARD_ATTR_CURRENT_N() {
        return (int)524805L;
    }
    public static int SCARD_ATTR_CURRENT_W() {
        return (int)524806L;
    }
    public static int SCARD_ATTR_CURRENT_IFSC() {
        return (int)524807L;
    }
    public static int SCARD_ATTR_CURRENT_IFSD() {
        return (int)524808L;
    }
    public static int SCARD_ATTR_CURRENT_BWT() {
        return (int)524809L;
    }
    public static int SCARD_ATTR_CURRENT_CWT() {
        return (int)524810L;
    }
    public static int SCARD_ATTR_CURRENT_EBC_ENCODING() {
        return (int)524811L;
    }
    public static int SCARD_ATTR_EXTENDED_BWT() {
        return (int)524812L;
    }
    public static int SCARD_ATTR_ICC_PRESENCE() {
        return (int)590592L;
    }
    public static int SCARD_ATTR_ICC_INTERFACE_STATUS() {
        return (int)590593L;
    }
    public static int SCARD_ATTR_CURRENT_IO_STATE() {
        return (int)590594L;
    }
    public static int SCARD_ATTR_ATR_STRING() {
        return (int)590595L;
    }
    public static int SCARD_ATTR_ICC_TYPE_PER_ATR() {
        return (int)590596L;
    }
    public static int SCARD_ATTR_ESC_RESET() {
        return (int)499712L;
    }
    public static int SCARD_ATTR_ESC_CANCEL() {
        return (int)499715L;
    }
    public static int SCARD_ATTR_ESC_AUTHREQUEST() {
        return (int)499717L;
    }
    public static int SCARD_ATTR_MAXINPUT() {
        return (int)499719L;
    }
    public static int SCARD_ATTR_DEVICE_UNIT() {
        return (int)2147418113L;
    }
    public static int SCARD_ATTR_DEVICE_IN_USE() {
        return (int)2147418114L;
    }
    public static int SCARD_ATTR_DEVICE_FRIENDLY_NAME_A() {
        return (int)2147418115L;
    }
    public static int SCARD_ATTR_DEVICE_SYSTEM_NAME_A() {
        return (int)2147418116L;
    }
    public static int SCARD_ATTR_DEVICE_FRIENDLY_NAME_W() {
        return (int)2147418117L;
    }
    public static int SCARD_ATTR_DEVICE_SYSTEM_NAME_W() {
        return (int)2147418118L;
    }
    public static int SCARD_ATTR_SUPRESS_T1_IFS_REQUEST() {
        return (int)2147418119L;
    }
    public static int SCARD_PERF_NUM_TRANSMISSIONS() {
        return (int)2147352577L;
    }
    public static int SCARD_PERF_BYTES_TRANSMITTED() {
        return (int)2147352578L;
    }
    public static int SCARD_PERF_TRANSMISSION_TIME() {
        return (int)2147352579L;
    }
    public static int SCARD_ATTR_DEVICE_FRIENDLY_NAME() {
        return (int)2147418115L;
    }
    public static int SCARD_ATTR_DEVICE_SYSTEM_NAME() {
        return (int)2147418116L;
    }
    public static int SCARD_AUTOALLOCATE() {
        return (int)4294967295L;
    }
    public static MemorySegment SCARD_ALL_READERS() {
        return constants$1653.SCARD_ALL_READERS$SEGMENT;
    }
    public static MemorySegment SCARD_DEFAULT_READERS() {
        return constants$1653.SCARD_DEFAULT_READERS$SEGMENT;
    }
    public static MemorySegment SCARD_LOCAL_READERS() {
        return constants$1653.SCARD_LOCAL_READERS$SEGMENT;
    }
    public static MemorySegment SCARD_SYSTEM_READERS() {
        return constants$1654.SCARD_SYSTEM_READERS$SEGMENT;
    }
    public static long PROPSHEETPAGEA_V1_SIZE() {
        return 72L;
    }
    public static long PROPSHEETPAGEW_V1_SIZE() {
        return 72L;
    }
    public static long PROPSHEETPAGEA_V2_SIZE() {
        return 88L;
    }
    public static long PROPSHEETPAGEW_V2_SIZE() {
        return 88L;
    }
    public static long PROPSHEETPAGE_V1_SIZE() {
        return 72L;
    }
    public static long PROPSHEETPAGE_V2_SIZE() {
        return 88L;
    }
    public static long PROPSHEETHEADERA_V1_SIZE() {
        return 72L;
    }
    public static long PROPSHEETHEADERW_V1_SIZE() {
        return 72L;
    }
    public static long PROPSHEETHEADER_V1_SIZE() {
        return 72L;
    }
    public static int PSN_FIRST() {
        return (int)4294967096L;
    }
    public static int PSN_LAST() {
        return (int)4294966997L;
    }
    public static int PSN_SETACTIVE() {
        return (int)4294967096L;
    }
    public static int PSN_KILLACTIVE() {
        return (int)4294967095L;
    }
    public static int PSN_APPLY() {
        return (int)4294967094L;
    }
    public static int PSN_RESET() {
        return (int)4294967093L;
    }
    public static int PSN_HELP() {
        return (int)4294967091L;
    }
    public static int PSN_WIZBACK() {
        return (int)4294967090L;
    }
    public static int PSN_WIZNEXT() {
        return (int)4294967089L;
    }
    public static int PSN_WIZFINISH() {
        return (int)4294967088L;
    }
    public static int PSN_QUERYCANCEL() {
        return (int)4294967087L;
    }
    public static int PSN_GETOBJECT() {
        return (int)4294967086L;
    }
    public static int PSN_TRANSLATEACCELERATOR() {
        return (int)4294967084L;
    }
    public static int PSN_QUERYINITIALFOCUS() {
        return (int)4294967083L;
    }
    public static int PSM_SETCURSEL() {
        return (int)1125L;
    }
    public static int PSM_REMOVEPAGE() {
        return (int)1126L;
    }
    public static int PSM_ADDPAGE() {
        return (int)1127L;
    }
    public static int PSM_CHANGED() {
        return (int)1128L;
    }
    public static int PSM_RESTARTWINDOWS() {
        return (int)1129L;
    }
    public static int PSM_REBOOTSYSTEM() {
        return (int)1130L;
    }
    public static int PSM_CANCELTOCLOSE() {
        return (int)1131L;
    }
    public static int PSM_QUERYSIBLINGS() {
        return (int)1132L;
    }
    public static int PSM_UNCHANGED() {
        return (int)1133L;
    }
    public static int PSM_APPLY() {
        return (int)1134L;
    }
    public static int PSM_SETTITLEA() {
        return (int)1135L;
    }
    public static int PSM_SETTITLEW() {
        return (int)1144L;
    }
    public static int PSM_SETTITLE() {
        return (int)1135L;
    }
    public static int PSM_SETWIZBUTTONS() {
        return (int)1136L;
    }
    public static int PSM_PRESSBUTTON() {
        return (int)1137L;
    }
    public static int PSM_SETCURSELID() {
        return (int)1138L;
    }
    public static int PSM_SETFINISHTEXTA() {
        return (int)1139L;
    }
    public static int PSM_SETFINISHTEXTW() {
        return (int)1145L;
    }
    public static int PSM_SETFINISHTEXT() {
        return (int)1139L;
    }
    public static int PSM_GETTABCONTROL() {
        return (int)1140L;
    }
    public static int PSM_ISDIALOGMESSAGE() {
        return (int)1141L;
    }
    public static int PSM_GETCURRENTPAGEHWND() {
        return (int)1142L;
    }
    public static int PSM_INSERTPAGE() {
        return (int)1143L;
    }
    public static int PSM_SETHEADERTITLEA() {
        return (int)1149L;
    }
    public static int PSM_SETHEADERTITLEW() {
        return (int)1150L;
    }
    public static int PSM_SETHEADERTITLE() {
        return (int)1149L;
    }
    public static int PSM_SETHEADERSUBTITLEA() {
        return (int)1151L;
    }
    public static int PSM_SETHEADERSUBTITLEW() {
        return (int)1152L;
    }
    public static int PSM_SETHEADERSUBTITLE() {
        return (int)1151L;
    }
    public static int PSM_HWNDTOINDEX() {
        return (int)1153L;
    }
    public static int PSM_INDEXTOHWND() {
        return (int)1154L;
    }
    public static int PSM_PAGETOINDEX() {
        return (int)1155L;
    }
    public static int PSM_INDEXTOPAGE() {
        return (int)1156L;
    }
    public static int PSM_IDTOINDEX() {
        return (int)1157L;
    }
    public static int PSM_INDEXTOID() {
        return (int)1158L;
    }
    public static int PSM_GETRESULT() {
        return (int)1159L;
    }
    public static int PSM_RECALCPAGESIZES() {
        return (int)1160L;
    }
    public static int ID_PSREBOOTSYSTEM() {
        return (int)3L;
    }
    public static int DSPRINT_PENDING() {
        return (int)2147483648L;
    }
    public static MemorySegment BIDI_ACTION_ENUM_SCHEMA() {
        return constants$1654.BIDI_ACTION_ENUM_SCHEMA$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET() {
        return constants$1654.BIDI_ACTION_GET$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_SET() {
        return constants$1654.BIDI_ACTION_SET$SEGMENT;
    }
    public static MemorySegment BIDI_ACTION_GET_ALL() {
        return constants$1654.BIDI_ACTION_GET_ALL$SEGMENT;
    }
    public static int ERROR_BIDI_NOT_SUPPORTED() {
        return (int)50L;
    }
    public static int ERROR_BIDI_STATUS_WARNING() {
        return (int)13001L;
    }
    public static int ERROR_BIDI_SCHEMA_READ_ONLY() {
        return (int)13002L;
    }
    public static int ERROR_BIDI_SERVER_OFFLINE() {
        return (int)13003L;
    }
    public static int ERROR_BIDI_DEVICE_OFFLINE() {
        return (int)13004L;
    }
    public static int ERROR_BIDI_SCHEMA_NOT_SUPPORTED() {
        return (int)13005L;
    }
    public static int PRINTER_CHANGE_TIMEOUT() {
        return (int)2147483648L;
    }
    public static int PRINTER_ERROR_INFORMATION() {
        return (int)2147483648L;
    }
    public static MemorySegment SPLREG_DEFAULT_SPOOL_DIRECTORY() {
        return constants$1654.SPLREG_DEFAULT_SPOOL_DIRECTORY$SEGMENT;
    }
    public static MemorySegment SPLREG_PORT_THREAD_PRIORITY_DEFAULT() {
        return constants$1655.SPLREG_PORT_THREAD_PRIORITY_DEFAULT$SEGMENT;
    }
    public static MemorySegment SPLREG_PORT_THREAD_PRIORITY() {
        return constants$1655.SPLREG_PORT_THREAD_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT() {
        return constants$1655.SPLREG_SCHEDULER_THREAD_PRIORITY_DEFAULT$SEGMENT;
    }
    public static MemorySegment SPLREG_SCHEDULER_THREAD_PRIORITY() {
        return constants$1655.SPLREG_SCHEDULER_THREAD_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLREG_BEEP_ENABLED() {
        return constants$1655.SPLREG_BEEP_ENABLED$SEGMENT;
    }
    public static MemorySegment SPLREG_NET_POPUP() {
        return constants$1655.SPLREG_NET_POPUP$SEGMENT;
    }
    public static MemorySegment SPLREG_RETRY_POPUP() {
        return constants$1656.SPLREG_RETRY_POPUP$SEGMENT;
    }
    public static MemorySegment SPLREG_NET_POPUP_TO_COMPUTER() {
        return constants$1656.SPLREG_NET_POPUP_TO_COMPUTER$SEGMENT;
    }
    public static MemorySegment SPLREG_EVENT_LOG() {
        return constants$1656.SPLREG_EVENT_LOG$SEGMENT;
    }
    public static MemorySegment SPLREG_MAJOR_VERSION() {
        return constants$1656.SPLREG_MAJOR_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_MINOR_VERSION() {
        return constants$1656.SPLREG_MINOR_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_ARCHITECTURE() {
        return constants$1656.SPLREG_ARCHITECTURE$SEGMENT;
    }
    public static MemorySegment SPLREG_OS_VERSION() {
        return constants$1657.SPLREG_OS_VERSION$SEGMENT;
    }
    public static MemorySegment SPLREG_OS_VERSIONEX() {
        return constants$1657.SPLREG_OS_VERSIONEX$SEGMENT;
    }
    public static MemorySegment SPLREG_DS_PRESENT() {
        return constants$1657.SPLREG_DS_PRESENT$SEGMENT;
    }
    public static MemorySegment SPLREG_DS_PRESENT_FOR_USER() {
        return constants$1657.SPLREG_DS_PRESENT_FOR_USER$SEGMENT;
    }
    public static MemorySegment SPLREG_REMOTE_FAX() {
        return constants$1657.SPLREG_REMOTE_FAX$SEGMENT;
    }
    public static MemorySegment SPLREG_RESTART_JOB_ON_POOL_ERROR() {
        return constants$1657.SPLREG_RESTART_JOB_ON_POOL_ERROR$SEGMENT;
    }
    public static MemorySegment SPLREG_RESTART_JOB_ON_POOL_ENABLED() {
        return constants$1658.SPLREG_RESTART_JOB_ON_POOL_ENABLED$SEGMENT;
    }
    public static MemorySegment SPLREG_DNS_MACHINE_NAME() {
        return constants$1658.SPLREG_DNS_MACHINE_NAME$SEGMENT;
    }
    public static MemorySegment SPLREG_ALLOW_USER_MANAGEFORMS() {
        return constants$1658.SPLREG_ALLOW_USER_MANAGEFORMS$SEGMENT;
    }
    public static MemorySegment SPLREG_WEBSHAREMGMT() {
        return constants$1658.SPLREG_WEBSHAREMGMT$SEGMENT;
    }
    public static int SERVER_ALL_ACCESS() {
        return (int)983043L;
    }
    public static int SERVER_READ() {
        return (int)131074L;
    }
    public static int SERVER_WRITE() {
        return (int)131075L;
    }
    public static int SERVER_EXECUTE() {
        return (int)131074L;
    }
    public static int PRINTER_ALL_ACCESS() {
        return (int)983052L;
    }
    public static int PRINTER_READ() {
        return (int)131080L;
    }
    public static int PRINTER_WRITE() {
        return (int)131080L;
    }
    public static int PRINTER_EXECUTE() {
        return (int)131080L;
    }
    public static int JOB_ALL_ACCESS() {
        return (int)983088L;
    }
    public static int JOB_READ() {
        return (int)131104L;
    }
    public static int JOB_WRITE() {
        return (int)131088L;
    }
    public static int JOB_EXECUTE() {
        return (int)131088L;
    }
    public static MemorySegment SPLDS_SPOOLER_KEY() {
        return constants$1658.SPLDS_SPOOLER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_KEY() {
        return constants$1658.SPLDS_DRIVER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_USER_KEY() {
        return constants$1659.SPLDS_USER_KEY$SEGMENT;
    }
    public static MemorySegment SPLDS_ASSET_NUMBER() {
        return constants$1659.SPLDS_ASSET_NUMBER$SEGMENT;
    }
    public static MemorySegment SPLDS_BYTES_PER_MINUTE() {
        return constants$1659.SPLDS_BYTES_PER_MINUTE$SEGMENT;
    }
    public static MemorySegment SPLDS_DESCRIPTION() {
        return constants$1659.SPLDS_DESCRIPTION$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_NAME() {
        return constants$1659.SPLDS_DRIVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_DRIVER_VERSION() {
        return constants$1659.SPLDS_DRIVER_VERSION$SEGMENT;
    }
    public static MemorySegment SPLDS_LOCATION() {
        return constants$1660.SPLDS_LOCATION$SEGMENT;
    }
    public static MemorySegment SPLDS_PORT_NAME() {
        return constants$1660.SPLDS_PORT_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_ATTRIBUTES() {
        return constants$1660.SPLDS_PRINT_ATTRIBUTES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_BIN_NAMES() {
        return constants$1660.SPLDS_PRINT_BIN_NAMES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_COLLATE() {
        return constants$1660.SPLDS_PRINT_COLLATE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_COLOR() {
        return constants$1660.SPLDS_PRINT_COLOR$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_DUPLEX_SUPPORTED() {
        return constants$1661.SPLDS_PRINT_DUPLEX_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_END_TIME() {
        return constants$1661.SPLDS_PRINT_END_TIME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_CLASS() {
        return constants$1661.SPLDS_PRINTER_CLASS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_NAME() {
        return constants$1661.SPLDS_PRINTER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_KEEP_PRINTED_JOBS() {
        return constants$1661.SPLDS_PRINT_KEEP_PRINTED_JOBS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_LANGUAGE() {
        return constants$1661.SPLDS_PRINT_LANGUAGE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAC_ADDRESS() {
        return constants$1662.SPLDS_PRINT_MAC_ADDRESS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_X_EXTENT() {
        return constants$1662.SPLDS_PRINT_MAX_X_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_Y_EXTENT() {
        return constants$1662.SPLDS_PRINT_MAX_Y_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED() {
        return constants$1662.SPLDS_PRINT_MAX_RESOLUTION_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEDIA_READY() {
        return constants$1662.SPLDS_PRINT_MEDIA_READY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEDIA_SUPPORTED() {
        return constants$1662.SPLDS_PRINT_MEDIA_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MEMORY() {
        return constants$1663.SPLDS_PRINT_MEMORY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MIN_X_EXTENT() {
        return constants$1663.SPLDS_PRINT_MIN_X_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_MIN_Y_EXTENT() {
        return constants$1663.SPLDS_PRINT_MIN_Y_EXTENT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NETWORK_ADDRESS() {
        return constants$1663.SPLDS_PRINT_NETWORK_ADDRESS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NOTIFY() {
        return constants$1663.SPLDS_PRINT_NOTIFY$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_NUMBER_UP() {
        return constants$1663.SPLDS_PRINT_NUMBER_UP$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_ORIENTATIONS_SUPPORTED() {
        return constants$1664.SPLDS_PRINT_ORIENTATIONS_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_OWNER() {
        return constants$1664.SPLDS_PRINT_OWNER$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_PAGES_PER_MINUTE() {
        return constants$1664.SPLDS_PRINT_PAGES_PER_MINUTE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_RATE() {
        return constants$1664.SPLDS_PRINT_RATE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_RATE_UNIT() {
        return constants$1664.SPLDS_PRINT_RATE_UNIT$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SEPARATOR_FILE() {
        return constants$1664.SPLDS_PRINT_SEPARATOR_FILE$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SHARE_NAME() {
        return constants$1665.SPLDS_PRINT_SHARE_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_SPOOLING() {
        return constants$1665.SPLDS_PRINT_SPOOLING$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_STAPLING_SUPPORTED() {
        return constants$1665.SPLDS_PRINT_STAPLING_SUPPORTED$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_START_TIME() {
        return constants$1665.SPLDS_PRINT_START_TIME$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINT_STATUS() {
        return constants$1665.SPLDS_PRINT_STATUS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRIORITY() {
        return constants$1665.SPLDS_PRIORITY$SEGMENT;
    }
    public static MemorySegment SPLDS_SERVER_NAME() {
        return constants$1666.SPLDS_SERVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_SHORT_SERVER_NAME() {
        return constants$1666.SPLDS_SHORT_SERVER_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_UNC_NAME() {
        return constants$1666.SPLDS_UNC_NAME$SEGMENT;
    }
    public static MemorySegment SPLDS_URL() {
        return constants$1666.SPLDS_URL$SEGMENT;
    }
    public static MemorySegment SPLDS_FLAGS() {
        return constants$1666.SPLDS_FLAGS$SEGMENT;
    }
    public static MemorySegment SPLDS_VERSION_NUMBER() {
        return constants$1666.SPLDS_VERSION_NUMBER$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_NAME_ALIASES() {
        return constants$1667.SPLDS_PRINTER_NAME_ALIASES$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_LOCATIONS() {
        return constants$1667.SPLDS_PRINTER_LOCATIONS$SEGMENT;
    }
    public static MemorySegment SPLDS_PRINTER_MODEL() {
        return constants$1667.SPLDS_PRINTER_MODEL$SEGMENT;
    }
    public static long OPENFILENAME_SIZE_VERSION_400A() {
        return 136L;
    }
    public static long OPENFILENAME_SIZE_VERSION_400W() {
        return 136L;
    }
    public static long OPENFILENAME_SIZE_VERSION_400() {
        return 136L;
    }
    public static int CDN_FIRST() {
        return (int)4294966695L;
    }
    public static int CDN_LAST() {
        return (int)4294966597L;
    }
    public static int CDN_INITDONE() {
        return (int)4294966695L;
    }
    public static int CDN_SELCHANGE() {
        return (int)4294966694L;
    }
    public static int CDN_FOLDERCHANGE() {
        return (int)4294966693L;
    }
    public static int CDN_SHAREVIOLATION() {
        return (int)4294966692L;
    }
    public static int CDN_HELP() {
        return (int)4294966691L;
    }
    public static int CDN_FILEOK() {
        return (int)4294966690L;
    }
    public static int CDN_TYPECHANGE() {
        return (int)4294966689L;
    }
    public static int CDN_INCLUDEITEM() {
        return (int)4294966688L;
    }
    public static int CDM_FIRST() {
        return (int)1124L;
    }
    public static int CDM_LAST() {
        return (int)1224L;
    }
    public static int CDM_GETSPEC() {
        return (int)1124L;
    }
    public static int CDM_GETFILEPATH() {
        return (int)1125L;
    }
    public static int CDM_GETFOLDERPATH() {
        return (int)1126L;
    }
    public static int CDM_GETFOLDERIDLIST() {
        return (int)1127L;
    }
    public static int CDM_SETCONTROLTEXT() {
        return (int)1128L;
    }
    public static int CDM_HIDECONTROL() {
        return (int)1129L;
    }
    public static int CDM_SETDEFEXT() {
        return (int)1130L;
    }
    public static int FR_MATCHALEFHAMZA() {
        return (int)2147483648L;
    }
    public static int CF_BOTH() {
        return (int)3L;
    }
    public static int CF_SHOWHELP() {
        return (int)4L;
    }
    public static int CF_ENABLEHOOK() {
        return (int)8L;
    }
    public static int CF_ENABLETEMPLATE() {
        return (int)16L;
    }
    public static int CF_ENABLETEMPLATEHANDLE() {
        return (int)32L;
    }
    public static int CF_INITTOLOGFONTSTRUCT() {
        return (int)64L;
    }
    public static int CF_USESTYLE() {
        return (int)128L;
    }
    public static int CF_EFFECTS() {
        return (int)256L;
    }
    public static int CF_APPLY() {
        return (int)512L;
    }
    public static int CF_ANSIONLY() {
        return (int)1024L;
    }
    public static int CF_SCRIPTSONLY() {
        return (int)1024L;
    }
    public static int CF_NOVECTORFONTS() {
        return (int)2048L;
    }
    public static int CF_NOOEMFONTS() {
        return (int)2048L;
    }
    public static int CF_NOSIMULATIONS() {
        return (int)4096L;
    }
    public static int CF_LIMITSIZE() {
        return (int)8192L;
    }
    public static int CF_FIXEDPITCHONLY() {
        return (int)16384L;
    }
    public static int CF_WYSIWYG() {
        return (int)32768L;
    }
    public static int CF_FORCEFONTEXIST() {
        return (int)65536L;
    }
    public static int CF_SCALABLEONLY() {
        return (int)131072L;
    }
    public static int CF_TTONLY() {
        return (int)262144L;
    }
    public static int CF_NOFACESEL() {
        return (int)524288L;
    }
    public static int CF_NOSTYLESEL() {
        return (int)1048576L;
    }
    public static int CF_NOSIZESEL() {
        return (int)2097152L;
    }
    public static int CF_SELECTSCRIPT() {
        return (int)4194304L;
    }
    public static int CF_NOSCRIPTSEL() {
        return (int)8388608L;
    }
    public static int CF_NOVERTFONTS() {
        return (int)16777216L;
    }
    public static int CF_INACTIVEFONTS() {
        return (int)33554432L;
    }
    public static int WM_CHOOSEFONT_GETLOGFONT() {
        return (int)1025L;
    }
    public static int WM_CHOOSEFONT_SETLOGFONT() {
        return (int)1125L;
    }
    public static int WM_CHOOSEFONT_SETFLAGS() {
        return (int)1126L;
    }
    public static MemorySegment LBSELCHSTRINGA() {
        return constants$1667.LBSELCHSTRINGA$SEGMENT;
    }
    public static MemorySegment SHAREVISTRINGA() {
        return constants$1667.SHAREVISTRINGA$SEGMENT;
    }
    public static MemorySegment FILEOKSTRINGA() {
        return constants$1667.FILEOKSTRINGA$SEGMENT;
    }
    public static MemorySegment COLOROKSTRINGA() {
        return constants$1668.COLOROKSTRINGA$SEGMENT;
    }
    public static MemorySegment SETRGBSTRINGA() {
        return constants$1668.SETRGBSTRINGA$SEGMENT;
    }
    public static MemorySegment HELPMSGSTRINGA() {
        return constants$1668.HELPMSGSTRINGA$SEGMENT;
    }
    public static MemorySegment FINDMSGSTRINGA() {
        return constants$1668.FINDMSGSTRINGA$SEGMENT;
    }
    public static MemorySegment LBSELCHSTRINGW() {
        return constants$1668.LBSELCHSTRINGW$SEGMENT;
    }
    public static MemorySegment SHAREVISTRINGW() {
        return constants$1668.SHAREVISTRINGW$SEGMENT;
    }
    public static MemorySegment FILEOKSTRINGW() {
        return constants$1669.FILEOKSTRINGW$SEGMENT;
    }
    public static MemorySegment COLOROKSTRINGW() {
        return constants$1669.COLOROKSTRINGW$SEGMENT;
    }
    public static MemorySegment SETRGBSTRINGW() {
        return constants$1669.SETRGBSTRINGW$SEGMENT;
    }
    public static MemorySegment HELPMSGSTRINGW() {
        return constants$1669.HELPMSGSTRINGW$SEGMENT;
    }
    public static MemorySegment FINDMSGSTRINGW() {
        return constants$1669.FINDMSGSTRINGW$SEGMENT;
    }
    public static MemorySegment LBSELCHSTRING() {
        return constants$1669.LBSELCHSTRING$SEGMENT;
    }
    public static MemorySegment SHAREVISTRING() {
        return constants$1670.SHAREVISTRING$SEGMENT;
    }
    public static MemorySegment FILEOKSTRING() {
        return constants$1670.FILEOKSTRING$SEGMENT;
    }
    public static MemorySegment COLOROKSTRING() {
        return constants$1670.COLOROKSTRING$SEGMENT;
    }
    public static MemorySegment SETRGBSTRING() {
        return constants$1670.SETRGBSTRING$SEGMENT;
    }
    public static MemorySegment HELPMSGSTRING() {
        return constants$1670.HELPMSGSTRING$SEGMENT;
    }
    public static MemorySegment FINDMSGSTRING() {
        return constants$1670.FINDMSGSTRING$SEGMENT;
    }
    public static int CD_LBSELNOITEMS() {
        return (int)-1L;
    }
    public static int PD_EXCL_COPIESANDCOLLATE() {
        return (int)33024L;
    }
    public static int START_PAGE_GENERAL() {
        return (int)4294967295L;
    }
    public static int WM_PSD_PAGESETUPDLG() {
        return (int)1024L;
    }
    public static int WM_PSD_FULLPAGERECT() {
        return (int)1025L;
    }
    public static int WM_PSD_MINMARGINRECT() {
        return (int)1026L;
    }
    public static int WM_PSD_MARGINRECT() {
        return (int)1027L;
    }
    public static int WM_PSD_GREEKTEXTRECT() {
        return (int)1028L;
    }
    public static int WM_PSD_ENVSTAMPRECT() {
        return (int)1029L;
    }
    public static int WM_PSD_YAFULLPAGERECT() {
        return (int)1030L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEW() {
        return constants$1671.SERVICES_ACTIVE_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEW() {
        return constants$1671.SERVICES_FAILED_DATABASEW$SEGMENT;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASEA() {
        return constants$1671.SERVICES_ACTIVE_DATABASEA$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASEA() {
        return constants$1671.SERVICES_FAILED_DATABASEA$SEGMENT;
    }
    public static short SC_GROUP_IDENTIFIERW() {
        return (short)43L;
    }
    public static int SC_GROUP_IDENTIFIERA() {
        return (int)43L;
    }
    public static MemorySegment SERVICES_ACTIVE_DATABASE() {
        return constants$1671.SERVICES_ACTIVE_DATABASE$SEGMENT;
    }
    public static MemorySegment SERVICES_FAILED_DATABASE() {
        return constants$1671.SERVICES_FAILED_DATABASE$SEGMENT;
    }
    public static int SC_GROUP_IDENTIFIER() {
        return (int)43L;
    }
    public static int SERVICE_NO_CHANGE() {
        return (int)4294967295L;
    }
    public static int SERVICE_STATE_ALL() {
        return (int)3L;
    }
    public static int SC_MANAGER_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int SERVICE_ALL_ACCESS() {
        return (int)983551L;
    }
    public static int MDM_MASK_PROTOCOLINFO() {
        return (int)268369920L;
    }
    public static int MDM_SHIFT_PROTOCOLINFO() {
        return (int)16L;
    }
    public static int MDM_MASK_EXTENDEDINFO() {
        return (int)268431360L;
    }
    public static int MDM_SHIFT_EXTENDEDINFO() {
        return (int)12L;
    }
    public static int MDM_MASK_HDLCPPP_AUTH() {
        return (int)56L;
    }
    public static int MDM_MASK_HDLCPPP_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_64K() {
        return (int)1114112L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_56K() {
        return (int)2162688L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K() {
        return (int)136380416L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_PAP() {
        return (int)153157632L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_CHAP() {
        return (int)161546240L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_112K_MSCHAP() {
        return (int)169934848L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K() {
        return (int)135331840L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_PAP() {
        return (int)152109056L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_CHAP() {
        return (int)160497664L;
    }
    public static int MDM_PROTOCOL_HDLCPPP_128K_MSCHAP() {
        return (int)168886272L;
    }
    public static int MDM_MASK_V120_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_V120_64K() {
        return (int)68485120L;
    }
    public static int MDM_PROTOCOL_V120_56K() {
        return (int)69533696L;
    }
    public static int MDM_PROTOCOL_V120_112K() {
        return (int)136642560L;
    }
    public static int MDM_PROTOCOL_V120_128K() {
        return (int)135593984L;
    }
    public static int MDM_PROTOCOL_X75_64K() {
        return (int)1245184L;
    }
    public static int MDM_PROTOCOL_X75_128K() {
        return (int)2293760L;
    }
    public static int MDM_PROTOCOL_X75_T_70() {
        return (int)3342336L;
    }
    public static int MDM_PROTOCOL_X75_BTX() {
        return (int)4390912L;
    }
    public static int MDM_PROTOCOL_V110_1DOT2K() {
        return (int)1310720L;
    }
    public static int MDM_PROTOCOL_V110_2DOT4K() {
        return (int)2359296L;
    }
    public static int MDM_PROTOCOL_V110_4DOT8K() {
        return (int)3407872L;
    }
    public static int MDM_PROTOCOL_V110_9DOT6K() {
        return (int)4456448L;
    }
    public static int MDM_PROTOCOL_V110_12DOT0K() {
        return (int)5505024L;
    }
    public static int MDM_PROTOCOL_V110_14DOT4K() {
        return (int)6553600L;
    }
    public static int MDM_PROTOCOL_V110_19DOT2K() {
        return (int)7602176L;
    }
    public static int MDM_PROTOCOL_V110_28DOT8K() {
        return (int)8650752L;
    }
    public static int MDM_PROTOCOL_V110_38DOT4K() {
        return (int)9699328L;
    }
    public static int MDM_PROTOCOL_V110_57DOT6K() {
        return (int)10747904L;
    }
    public static int MDM_MASK_AUTO_ML() {
        return (int)192L;
    }
    public static int MDM_PROTOCOL_AUTO_1CH() {
        return (int)67502080L;
    }
}


