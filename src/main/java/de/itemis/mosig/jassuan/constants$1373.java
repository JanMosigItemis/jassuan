// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1373 {

    static final FunctionDescriptor GetAddrInfoExA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetAddrInfoExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetAddrInfoExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1373.GetAddrInfoExA$FUNC, false
    );
    static final FunctionDescriptor GetAddrInfoExW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetAddrInfoExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetAddrInfoExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1373.GetAddrInfoExW$FUNC, false
    );
    static final FunctionDescriptor SetAddrInfoExA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetAddrInfoExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetAddrInfoExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1373.SetAddrInfoExA$FUNC, false
    );
    static final FunctionDescriptor SetAddrInfoExW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetAddrInfoExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetAddrInfoExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1373.SetAddrInfoExW$FUNC, false
    );
    static final FunctionDescriptor FreeAddrInfoEx$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle FreeAddrInfoEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FreeAddrInfoEx",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1373.FreeAddrInfoEx$FUNC, false
    );
    static final FunctionDescriptor FreeAddrInfoExW$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle FreeAddrInfoExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FreeAddrInfoExW",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1373.FreeAddrInfoExW$FUNC, false
    );
}


