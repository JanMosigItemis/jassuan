// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$375 {

    static final FunctionDescriptor GetTickCount64$FUNC = FunctionDescriptor.of(C_LONG_LONG);
    static final MethodHandle GetTickCount64$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetTickCount64",
        "()J",
        constants$375.GetTickCount64$FUNC, false
    );
    static final FunctionDescriptor GetSystemInfo$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle GetSystemInfo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetSystemInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$375.GetSystemInfo$FUNC, false
    );
    static final FunctionDescriptor GlobalMemoryStatusEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle GlobalMemoryStatusEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GlobalMemoryStatusEx",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$375.GlobalMemoryStatusEx$FUNC, false
    );
    static final FunctionDescriptor GetTickCount$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle GetTickCount$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetTickCount",
        "()I",
        constants$375.GetTickCount$FUNC, false
    );
    static final FunctionDescriptor GetSystemTimePreciseAsFileTime$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle GetSystemTimePreciseAsFileTime$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetSystemTimePreciseAsFileTime",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$375.GetSystemTimePreciseAsFileTime$FUNC, false
    );
    static final FunctionDescriptor GetVersionExA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle GetVersionExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetVersionExA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$375.GetVersionExA$FUNC, false
    );
}


