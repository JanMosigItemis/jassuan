// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$276 {

    static final FunctionDescriptor PRTL_RUN_ONCE_INIT_FN$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PRTL_RUN_ONCE_INIT_FN$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$276.PRTL_RUN_ONCE_INIT_FN$FUNC, false
    );
    static final FunctionDescriptor RtlSecureZeroMemory$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle RtlSecureZeroMemory$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlSecureZeroMemory",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$276.RtlSecureZeroMemory$FUNC, false
    );
    static final FunctionDescriptor VerSetConditionMask$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_LONG_LONG,
        C_LONG,
        C_CHAR
    );
    static final MethodHandle VerSetConditionMask$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "VerSetConditionMask",
        "(JIB)J",
        constants$276.VerSetConditionMask$FUNC, false
    );
    static final FunctionDescriptor RtlGetProductInfo$FUNC = FunctionDescriptor.of(C_CHAR,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RtlGetProductInfo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlGetProductInfo",
        "(IIIILjdk/incubator/foreign/MemoryAddress;)B",
        constants$276.RtlGetProductInfo$FUNC, false
    );
    static final FunctionDescriptor RTL_UMS_SCHEDULER_ENTRY_POINT$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle RTL_UMS_SCHEDULER_ENTRY_POINT$MH = RuntimeHelper.downcallHandle(
        "(IJLjdk/incubator/foreign/MemoryAddress;)V",
        constants$276.RTL_UMS_SCHEDULER_ENTRY_POINT$FUNC, false
    );
}


