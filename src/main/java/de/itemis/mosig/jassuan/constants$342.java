// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$342 {

    static final FunctionDescriptor GetThreadIdealProcessorEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetThreadIdealProcessorEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetThreadIdealProcessorEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$342.GetThreadIdealProcessorEx$FUNC, false
    );
    static final FunctionDescriptor GetCurrentProcessorNumberEx$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle GetCurrentProcessorNumberEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCurrentProcessorNumberEx",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$342.GetCurrentProcessorNumberEx$FUNC, false
    );
    static final FunctionDescriptor GetCurrentProcess$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetCurrentProcess$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCurrentProcess",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$342.GetCurrentProcess$FUNC, false
    );
    static final FunctionDescriptor GetCurrentProcessId$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle GetCurrentProcessId$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCurrentProcessId",
        "()I",
        constants$342.GetCurrentProcessId$FUNC, false
    );
    static final FunctionDescriptor GetCurrentThread$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetCurrentThread$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCurrentThread",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$342.GetCurrentThread$FUNC, false
    );
    static final FunctionDescriptor GetCurrentThreadId$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle GetCurrentThreadId$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCurrentThreadId",
        "()I",
        constants$342.GetCurrentThreadId$FUNC, false
    );
}


