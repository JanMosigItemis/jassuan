// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1052 {

    static final MemoryLayout IID_IOleWindow$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IOleWindow$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IOleWindow", constants$1052.IID_IOleWindow$LAYOUT);
    static final MemoryLayout IID_IOleLink$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IOleLink$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IOleLink", constants$1052.IID_IOleLink$LAYOUT);
    static final MemoryLayout IID_IOleItemContainer$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IOleItemContainer$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IOleItemContainer", constants$1052.IID_IOleItemContainer$LAYOUT);
    static final MemoryLayout IID_IOleInPlaceUIWindow$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IOleInPlaceUIWindow$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IOleInPlaceUIWindow", constants$1052.IID_IOleInPlaceUIWindow$LAYOUT);
    static final MemoryLayout IID_IOleInPlaceActiveObject$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IOleInPlaceActiveObject$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IOleInPlaceActiveObject", constants$1052.IID_IOleInPlaceActiveObject$LAYOUT);
    static final FunctionDescriptor IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1052.IOleInPlaceActiveObject_RemoteTranslateAccelerator_Proxy$FUNC, false
    );
}


