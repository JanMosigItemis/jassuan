// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$636 {

    static final FunctionDescriptor GetClassNameW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle GetClassNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetClassNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$636.GetClassNameW$FUNC, false
    );
    static final FunctionDescriptor GetTopWindow$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetTopWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetTopWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$636.GetTopWindow$FUNC, false
    );
    static final FunctionDescriptor GetWindowThreadProcessId$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetWindowThreadProcessId$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetWindowThreadProcessId",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$636.GetWindowThreadProcessId$FUNC, false
    );
    static final FunctionDescriptor IsGUIThread$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle IsGUIThread$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsGUIThread",
        "(I)I",
        constants$636.IsGUIThread$FUNC, false
    );
    static final FunctionDescriptor GetLastActivePopup$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetLastActivePopup$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetLastActivePopup",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$636.GetLastActivePopup$FUNC, false
    );
    static final FunctionDescriptor GetWindow$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle GetWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetWindow",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$636.GetWindow$FUNC, false
    );
}


