// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$161 {

    static final FunctionDescriptor mbstowcs$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle mbstowcs$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mbstowcs",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
        constants$161.mbstowcs$FUNC, false
    );
    static final FunctionDescriptor _mbstowcs_l$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle _mbstowcs_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_mbstowcs_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)J",
        constants$161._mbstowcs_l$FUNC, false
    );
    static final FunctionDescriptor mkstemp$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle mkstemp$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mkstemp",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$161.mkstemp$FUNC, false
    );
    static final FunctionDescriptor rand$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle rand$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "rand",
        "()I",
        constants$161.rand$FUNC, false
    );
    static final FunctionDescriptor _set_error_mode$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle _set_error_mode$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_set_error_mode",
        "(I)I",
        constants$161._set_error_mode$FUNC, false
    );
    static final FunctionDescriptor srand$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle srand$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "srand",
        "(I)V",
        constants$161.srand$FUNC, false
    );
}


