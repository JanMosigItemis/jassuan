// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$8 {

    static final FunctionDescriptor _fdopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle _fdopen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_fdopen",
        "(ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$8._fdopen$FUNC, false
    );
    static final FunctionDescriptor feof$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle feof$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "feof",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$8.feof$FUNC, false
    );
    static final FunctionDescriptor ferror$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ferror$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ferror",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$8.ferror$FUNC, false
    );
    static final FunctionDescriptor fflush$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fflush$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fflush",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$8.fflush$FUNC, false
    );
    static final FunctionDescriptor fgetc$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fgetc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fgetc",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$8.fgetc$FUNC, false
    );
    static final FunctionDescriptor _fgetchar$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle _fgetchar$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_fgetchar",
        "()I",
        constants$8._fgetchar$FUNC, false
    );
}


