// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$576 {

    static final FunctionDescriptor DeferWindowPos$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle DeferWindowPos$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DeferWindowPos",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIIII)Ljdk/incubator/foreign/MemoryAddress;",
        constants$576.DeferWindowPos$FUNC, false
    );
    static final FunctionDescriptor EndDeferWindowPos$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle EndDeferWindowPos$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EndDeferWindowPos",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$576.EndDeferWindowPos$FUNC, false
    );
    static final FunctionDescriptor IsWindowVisible$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle IsWindowVisible$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsWindowVisible",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$576.IsWindowVisible$FUNC, false
    );
    static final FunctionDescriptor IsIconic$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle IsIconic$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsIconic",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$576.IsIconic$FUNC, false
    );
    static final FunctionDescriptor AnyPopup$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle AnyPopup$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AnyPopup",
        "()I",
        constants$576.AnyPopup$FUNC, false
    );
    static final FunctionDescriptor BringWindowToTop$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle BringWindowToTop$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "BringWindowToTop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$576.BringWindowToTop$FUNC, false
    );
}


