// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$626 {

    static final FunctionDescriptor ChildWindowFromPointEx$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        MemoryLayout.structLayout(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("tagPOINT"),
        C_INT
    );
    static final MethodHandle ChildWindowFromPointEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ChildWindowFromPointEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$626.ChildWindowFromPointEx$FUNC, false
    );
    static final FunctionDescriptor SetPhysicalCursorPos$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle SetPhysicalCursorPos$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetPhysicalCursorPos",
        "(II)I",
        constants$626.SetPhysicalCursorPos$FUNC, false
    );
    static final FunctionDescriptor GetPhysicalCursorPos$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle GetPhysicalCursorPos$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetPhysicalCursorPos",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$626.GetPhysicalCursorPos$FUNC, false
    );
    static final FunctionDescriptor LogicalToPhysicalPoint$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle LogicalToPhysicalPoint$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LogicalToPhysicalPoint",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$626.LogicalToPhysicalPoint$FUNC, false
    );
    static final FunctionDescriptor PhysicalToLogicalPoint$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PhysicalToLogicalPoint$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PhysicalToLogicalPoint",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$626.PhysicalToLogicalPoint$FUNC, false
    );
    static final FunctionDescriptor WindowFromPhysicalPoint$FUNC = FunctionDescriptor.of(C_POINTER,
        MemoryLayout.structLayout(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("tagPOINT")
    );
    static final MethodHandle WindowFromPhysicalPoint$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WindowFromPhysicalPoint",
        "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$626.WindowFromPhysicalPoint$FUNC, false
    );
}


