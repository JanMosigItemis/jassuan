// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class _SOCKET_SECURITY_SETTINGS_IPSEC {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        C_INT.withName("SecurityProtocol"),
        C_LONG.withName("SecurityFlags"),
        C_LONG.withName("IpsecFlags"),
        MemoryLayout.structLayout(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
        ).withName("AuthipMMPolicyKey"),
        MemoryLayout.structLayout(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
        ).withName("AuthipQMPolicyKey"),
        MemoryLayout.structLayout(
            C_LONG.withName("Data1"),
            C_SHORT.withName("Data2"),
            C_SHORT.withName("Data3"),
            MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
        ).withName("Reserved"),
        MemoryLayout.paddingLayout(32),
        C_LONG_LONG.withName("Reserved2"),
        C_LONG.withName("UserNameStringLen"),
        C_LONG.withName("DomainNameStringLen"),
        C_LONG.withName("PasswordStringLen"),
        MemoryLayout.sequenceLayout(C_SHORT).withName("AllStrings"),
        MemoryLayout.paddingLayout(32)
    ).withName("_SOCKET_SECURITY_SETTINGS_IPSEC");
    public static MemoryLayout $LAYOUT() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.$struct$LAYOUT;
    }
    static final VarHandle SecurityProtocol$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("SecurityProtocol"));
    public static VarHandle SecurityProtocol$VH() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.SecurityProtocol$VH;
    }
    public static int SecurityProtocol$get(MemorySegment seg) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.SecurityProtocol$VH.get(seg);
    }
    public static void SecurityProtocol$set( MemorySegment seg, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.SecurityProtocol$VH.set(seg, x);
    }
    public static int SecurityProtocol$get(MemorySegment seg, long index) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.SecurityProtocol$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SecurityProtocol$set(MemorySegment seg, long index, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.SecurityProtocol$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle SecurityFlags$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("SecurityFlags"));
    public static VarHandle SecurityFlags$VH() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.SecurityFlags$VH;
    }
    public static int SecurityFlags$get(MemorySegment seg) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.SecurityFlags$VH.get(seg);
    }
    public static void SecurityFlags$set( MemorySegment seg, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.SecurityFlags$VH.set(seg, x);
    }
    public static int SecurityFlags$get(MemorySegment seg, long index) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.SecurityFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void SecurityFlags$set(MemorySegment seg, long index, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.SecurityFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle IpsecFlags$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("IpsecFlags"));
    public static VarHandle IpsecFlags$VH() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.IpsecFlags$VH;
    }
    public static int IpsecFlags$get(MemorySegment seg) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.IpsecFlags$VH.get(seg);
    }
    public static void IpsecFlags$set( MemorySegment seg, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.IpsecFlags$VH.set(seg, x);
    }
    public static int IpsecFlags$get(MemorySegment seg, long index) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.IpsecFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void IpsecFlags$set(MemorySegment seg, long index, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.IpsecFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment AuthipMMPolicyKey$slice(MemorySegment seg) {
        return seg.asSlice(12, 16);
    }
    public static MemorySegment AuthipQMPolicyKey$slice(MemorySegment seg) {
        return seg.asSlice(28, 16);
    }
    public static MemorySegment Reserved$slice(MemorySegment seg) {
        return seg.asSlice(44, 16);
    }
    static final VarHandle Reserved2$VH = $struct$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("Reserved2"));
    public static VarHandle Reserved2$VH() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.Reserved2$VH;
    }
    public static long Reserved2$get(MemorySegment seg) {
        return (long)_SOCKET_SECURITY_SETTINGS_IPSEC.Reserved2$VH.get(seg);
    }
    public static void Reserved2$set( MemorySegment seg, long x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.Reserved2$VH.set(seg, x);
    }
    public static long Reserved2$get(MemorySegment seg, long index) {
        return (long)_SOCKET_SECURITY_SETTINGS_IPSEC.Reserved2$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Reserved2$set(MemorySegment seg, long index, long x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.Reserved2$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle UserNameStringLen$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("UserNameStringLen"));
    public static VarHandle UserNameStringLen$VH() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.UserNameStringLen$VH;
    }
    public static int UserNameStringLen$get(MemorySegment seg) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.UserNameStringLen$VH.get(seg);
    }
    public static void UserNameStringLen$set( MemorySegment seg, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.UserNameStringLen$VH.set(seg, x);
    }
    public static int UserNameStringLen$get(MemorySegment seg, long index) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.UserNameStringLen$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void UserNameStringLen$set(MemorySegment seg, long index, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.UserNameStringLen$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DomainNameStringLen$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("DomainNameStringLen"));
    public static VarHandle DomainNameStringLen$VH() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.DomainNameStringLen$VH;
    }
    public static int DomainNameStringLen$get(MemorySegment seg) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.DomainNameStringLen$VH.get(seg);
    }
    public static void DomainNameStringLen$set( MemorySegment seg, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.DomainNameStringLen$VH.set(seg, x);
    }
    public static int DomainNameStringLen$get(MemorySegment seg, long index) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.DomainNameStringLen$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DomainNameStringLen$set(MemorySegment seg, long index, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.DomainNameStringLen$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle PasswordStringLen$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("PasswordStringLen"));
    public static VarHandle PasswordStringLen$VH() {
        return _SOCKET_SECURITY_SETTINGS_IPSEC.PasswordStringLen$VH;
    }
    public static int PasswordStringLen$get(MemorySegment seg) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.PasswordStringLen$VH.get(seg);
    }
    public static void PasswordStringLen$set( MemorySegment seg, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.PasswordStringLen$VH.set(seg, x);
    }
    public static int PasswordStringLen$get(MemorySegment seg, long index) {
        return (int)_SOCKET_SECURITY_SETTINGS_IPSEC.PasswordStringLen$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void PasswordStringLen$set(MemorySegment seg, long index, int x) {
        _SOCKET_SECURITY_SETTINGS_IPSEC.PasswordStringLen$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


