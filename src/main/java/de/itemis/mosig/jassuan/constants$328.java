// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$328 {

    static final FunctionDescriptor SetProcessWorkingSetSizeEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG
    );
    static final MethodHandle SetProcessWorkingSetSizeEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetProcessWorkingSetSizeEx",
        "(Ljdk/incubator/foreign/MemoryAddress;JJI)I",
        constants$328.SetProcessWorkingSetSizeEx$FUNC, false
    );
    static final FunctionDescriptor GetWriteWatch$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetWriteWatch$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetWriteWatch",
        "(ILjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$328.GetWriteWatch$FUNC, false
    );
    static final FunctionDescriptor ResetWriteWatch$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle ResetWriteWatch$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ResetWriteWatch",
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$328.ResetWriteWatch$FUNC, false
    );
    static final FunctionDescriptor VirtualFreeEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG
    );
    static final MethodHandle VirtualFreeEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "VirtualFreeEx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$328.VirtualFreeEx$FUNC, false
    );
    static final FunctionDescriptor ImpersonateNamedPipeClient$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ImpersonateNamedPipeClient$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ImpersonateNamedPipeClient",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$328.ImpersonateNamedPipeClient$FUNC, false
    );
    static final FunctionDescriptor CreatePipe$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle CreatePipe$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreatePipe",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$328.CreatePipe$FUNC, false
    );
}


