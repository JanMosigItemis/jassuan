// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$402 {

    static final FunctionDescriptor SetFileCompletionNotificationModes$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_CHAR
    );
    static final MethodHandle SetFileCompletionNotificationModes$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetFileCompletionNotificationModes",
        "(Ljdk/incubator/foreign/MemoryAddress;B)I",
        constants$402.SetFileCompletionNotificationModes$FUNC, false
    );
    static final FunctionDescriptor SetFileIoOverlappedRange$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle SetFileIoOverlappedRange$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetFileIoOverlappedRange",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$402.SetFileIoOverlappedRange$FUNC, false
    );
    static final FunctionDescriptor Wow64GetThreadSelectorEntry$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle Wow64GetThreadSelectorEntry$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Wow64GetThreadSelectorEntry",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$402.Wow64GetThreadSelectorEntry$FUNC, false
    );
    static final FunctionDescriptor DebugSetProcessKillOnExit$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle DebugSetProcessKillOnExit$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DebugSetProcessKillOnExit",
        "(I)I",
        constants$402.DebugSetProcessKillOnExit$FUNC, false
    );
    static final FunctionDescriptor DebugBreakProcess$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle DebugBreakProcess$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DebugBreakProcess",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$402.DebugBreakProcess$FUNC, false
    );
    static final FunctionDescriptor WaitForMultipleObjects$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_INT,
        C_LONG
    );
    static final MethodHandle WaitForMultipleObjects$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WaitForMultipleObjects",
        "(ILjdk/incubator/foreign/MemoryAddress;II)I",
        constants$402.WaitForMultipleObjects$FUNC, false
    );
}


