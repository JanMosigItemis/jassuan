// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$625 {

    static final FunctionDescriptor GetCaretPos$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle GetCaretPos$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCaretPos",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$625.GetCaretPos$FUNC, false
    );
    static final FunctionDescriptor ClientToScreen$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle ClientToScreen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ClientToScreen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$625.ClientToScreen$FUNC, false
    );
    static final FunctionDescriptor ScreenToClient$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle ScreenToClient$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ScreenToClient",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$625.ScreenToClient$FUNC, false
    );
    static final FunctionDescriptor MapWindowPoints$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle MapWindowPoints$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MapWindowPoints",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$625.MapWindowPoints$FUNC, false
    );
    static final FunctionDescriptor WindowFromPoint$FUNC = FunctionDescriptor.of(C_POINTER,
        MemoryLayout.structLayout(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("tagPOINT")
    );
    static final MethodHandle WindowFromPoint$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WindowFromPoint",
        "(Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$625.WindowFromPoint$FUNC, false
    );
    static final FunctionDescriptor ChildWindowFromPoint$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        MemoryLayout.structLayout(
            C_LONG.withName("x"),
            C_LONG.withName("y")
        ).withName("tagPOINT")
    );
    static final MethodHandle ChildWindowFromPoint$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ChildWindowFromPoint",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$625.ChildWindowFromPoint$FUNC, false
    );
}


