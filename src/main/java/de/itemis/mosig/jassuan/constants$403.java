// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$403 {

    static final FunctionDescriptor PulseEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle PulseEvent$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PulseEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$403.PulseEvent$FUNC, false
    );
    static final FunctionDescriptor GlobalDeleteAtom$FUNC = FunctionDescriptor.of(C_SHORT,
        C_SHORT
    );
    static final MethodHandle GlobalDeleteAtom$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GlobalDeleteAtom",
        "(S)S",
        constants$403.GlobalDeleteAtom$FUNC, false
    );
    static final FunctionDescriptor InitAtomTable$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final MethodHandle InitAtomTable$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "InitAtomTable",
        "(I)I",
        constants$403.InitAtomTable$FUNC, false
    );
    static final FunctionDescriptor DeleteAtom$FUNC = FunctionDescriptor.of(C_SHORT,
        C_SHORT
    );
    static final MethodHandle DeleteAtom$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DeleteAtom",
        "(S)S",
        constants$403.DeleteAtom$FUNC, false
    );
    static final FunctionDescriptor SetHandleCount$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle SetHandleCount$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetHandleCount",
        "(I)I",
        constants$403.SetHandleCount$FUNC, false
    );
    static final FunctionDescriptor RequestDeviceWakeup$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle RequestDeviceWakeup$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RequestDeviceWakeup",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$403.RequestDeviceWakeup$FUNC, false
    );
}


