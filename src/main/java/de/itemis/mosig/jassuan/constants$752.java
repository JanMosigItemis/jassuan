// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$752 {

    static final FunctionDescriptor waveInPrepareHeader$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveInPrepareHeader$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInPrepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$752.waveInPrepareHeader$FUNC, false
    );
    static final FunctionDescriptor waveInUnprepareHeader$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveInUnprepareHeader$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInUnprepareHeader",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$752.waveInUnprepareHeader$FUNC, false
    );
    static final FunctionDescriptor waveInAddBuffer$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveInAddBuffer$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInAddBuffer",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$752.waveInAddBuffer$FUNC, false
    );
    static final FunctionDescriptor waveInStart$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveInStart$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInStart",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$752.waveInStart$FUNC, false
    );
    static final FunctionDescriptor waveInStop$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveInStop$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInStop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$752.waveInStop$FUNC, false
    );
    static final FunctionDescriptor waveInReset$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveInReset$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInReset",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$752.waveInReset$FUNC, false
    );
}


