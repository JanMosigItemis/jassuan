// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$536 {

    static final FunctionDescriptor GdiSetBatchLimit$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final MethodHandle GdiSetBatchLimit$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GdiSetBatchLimit",
        "(I)I",
        constants$536.GdiSetBatchLimit$FUNC, false
    );
    static final FunctionDescriptor GdiGetBatchLimit$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle GdiGetBatchLimit$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GdiGetBatchLimit",
        "()I",
        constants$536.GdiGetBatchLimit$FUNC, false
    );
    static final FunctionDescriptor ICMENUMPROCA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle ICMENUMPROCA$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$536.ICMENUMPROCA$FUNC, false
    );
    static final FunctionDescriptor ICMENUMPROCW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle ICMENUMPROCW$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$536.ICMENUMPROCW$FUNC, false
    );
}


