// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$480 {

    static final FunctionDescriptor FONTENUMPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG_LONG
    );
    static final MethodHandle FONTENUMPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        constants$480.FONTENUMPROC$FUNC, false
    );
    static final FunctionDescriptor GOBJENUMPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle GOBJENUMPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$480.GOBJENUMPROC$FUNC, false
    );
    static final FunctionDescriptor LINEDDAPROC$FUNC = FunctionDescriptor.ofVoid(
        C_INT,
        C_INT,
        C_LONG_LONG
    );
    static final MethodHandle LINEDDAPROC$MH = RuntimeHelper.downcallHandle(
        "(IIJ)V",
        constants$480.LINEDDAPROC$FUNC, false
    );
    static final FunctionDescriptor AddFontResourceA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle AddFontResourceA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddFontResourceA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$480.AddFontResourceA$FUNC, false
    );
}


