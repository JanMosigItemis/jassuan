// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$389 {

    static final FunctionDescriptor Wow64SetThreadContext$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle Wow64SetThreadContext$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Wow64SetThreadContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$389.Wow64SetThreadContext$FUNC, false
    );
    static final FunctionDescriptor Wow64SuspendThread$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle Wow64SuspendThread$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Wow64SuspendThread",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$389.Wow64SuspendThread$FUNC, false
    );
    static final FunctionDescriptor IsWow64Process$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IsWow64Process$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsWow64Process",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$389.IsWow64Process$FUNC, false
    );
    static final FunctionDescriptor PFIBER_START_ROUTINE$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle PFIBER_START_ROUTINE$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$389.PFIBER_START_ROUTINE$FUNC, false
    );
    static final FunctionDescriptor LPFIBER_START_ROUTINE$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
}


