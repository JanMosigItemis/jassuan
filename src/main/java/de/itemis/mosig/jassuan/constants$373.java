// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$373 {

    static final FunctionDescriptor OpenWaitableTimerW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle OpenWaitableTimerW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenWaitableTimerW",
        "(IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$373.OpenWaitableTimerW$FUNC, false
    );
    static final FunctionDescriptor EnterSynchronizationBarrier$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle EnterSynchronizationBarrier$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EnterSynchronizationBarrier",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$373.EnterSynchronizationBarrier$FUNC, false
    );
    static final FunctionDescriptor InitializeSynchronizationBarrier$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle InitializeSynchronizationBarrier$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "InitializeSynchronizationBarrier",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$373.InitializeSynchronizationBarrier$FUNC, false
    );
    static final FunctionDescriptor DeleteSynchronizationBarrier$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle DeleteSynchronizationBarrier$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DeleteSynchronizationBarrier",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$373.DeleteSynchronizationBarrier$FUNC, false
    );
    static final FunctionDescriptor Sleep$FUNC = FunctionDescriptor.ofVoid(
        C_LONG
    );
    static final MethodHandle Sleep$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Sleep",
        "(I)V",
        constants$373.Sleep$FUNC, false
    );
    static final FunctionDescriptor SignalObjectAndWait$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle SignalObjectAndWait$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SignalObjectAndWait",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$373.SignalObjectAndWait$FUNC, false
    );
}


