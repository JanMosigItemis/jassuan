// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public interface gpgrt_mopen$func_realloc {

    jdk.incubator.foreign.MemoryAddress apply(jdk.incubator.foreign.MemoryAddress x0, long x1);
    static MemoryAddress allocate(gpgrt_mopen$func_realloc fi) {
        return RuntimeHelper.upcallStub(gpgrt_mopen$func_realloc.class, fi, constants$1389.gpgrt_mopen$func_realloc$FUNC, "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;");
    }
    static MemoryAddress allocate(gpgrt_mopen$func_realloc fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(gpgrt_mopen$func_realloc.class, fi, constants$1389.gpgrt_mopen$func_realloc$FUNC, "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;", scope);
    }
    static gpgrt_mopen$func_realloc ofAddress(MemoryAddress addr) {
        return (jdk.incubator.foreign.MemoryAddress x0, long x1) -> {
            try {
                return (jdk.incubator.foreign.MemoryAddress)constants$1389.gpgrt_mopen$func_realloc$MH.invokeExact((Addressable)addr, x0, x1);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


