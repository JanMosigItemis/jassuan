// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1046 {

    static final FunctionDescriptor StgSetTimes$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle StgSetTimes$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "StgSetTimes",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1046.StgSetTimes$FUNC, false
    );
    static final FunctionDescriptor StgOpenAsyncDocfileOnIFillLockBytes$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle StgOpenAsyncDocfileOnIFillLockBytes$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "StgOpenAsyncDocfileOnIFillLockBytes",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1046.StgOpenAsyncDocfileOnIFillLockBytes$FUNC, false
    );
    static final FunctionDescriptor StgGetIFillLockBytesOnILockBytes$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle StgGetIFillLockBytesOnILockBytes$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "StgGetIFillLockBytesOnILockBytes",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1046.StgGetIFillLockBytesOnILockBytes$FUNC, false
    );
    static final FunctionDescriptor StgGetIFillLockBytesOnFile$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle StgGetIFillLockBytesOnFile$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "StgGetIFillLockBytesOnFile",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1046.StgGetIFillLockBytesOnFile$FUNC, false
    );
    static final FunctionDescriptor StgCreateStorageEx$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle StgCreateStorageEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "StgCreateStorageEx",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1046.StgCreateStorageEx$FUNC, false
    );
    static final FunctionDescriptor StgOpenStorageEx$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle StgOpenStorageEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "StgOpenStorageEx",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1046.StgOpenStorageEx$FUNC, false
    );
}


