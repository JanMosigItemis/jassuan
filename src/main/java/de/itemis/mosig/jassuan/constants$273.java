// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$273 {

    static final FunctionDescriptor RtlCompareMemory$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle RtlCompareMemory$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlCompareMemory",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
        constants$273.RtlCompareMemory$FUNC, false
    );
    static final FunctionDescriptor RtlAddFunctionTable$FUNC = FunctionDescriptor.of(C_CHAR,
        C_POINTER,
        C_LONG,
        C_LONG_LONG
    );
    static final MethodHandle RtlAddFunctionTable$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlAddFunctionTable",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)B",
        constants$273.RtlAddFunctionTable$FUNC, false
    );
    static final FunctionDescriptor RtlDeleteFunctionTable$FUNC = FunctionDescriptor.of(C_CHAR,
        C_POINTER
    );
    static final MethodHandle RtlDeleteFunctionTable$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlDeleteFunctionTable",
        "(Ljdk/incubator/foreign/MemoryAddress;)B",
        constants$273.RtlDeleteFunctionTable$FUNC, false
    );
    static final FunctionDescriptor RtlInstallFunctionTableCallback$FUNC = FunctionDescriptor.of(C_CHAR,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RtlInstallFunctionTableCallback$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlInstallFunctionTableCallback",
        "(JJILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)B",
        constants$273.RtlInstallFunctionTableCallback$FUNC, false
    );
    static final FunctionDescriptor RtlRestoreContext$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RtlRestoreContext$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlRestoreContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$273.RtlRestoreContext$FUNC, false
    );
    static final FunctionDescriptor RtlUnwind$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RtlUnwind$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlUnwind",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$273.RtlUnwind$FUNC, false
    );
}


