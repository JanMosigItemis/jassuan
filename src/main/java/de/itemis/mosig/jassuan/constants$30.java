// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$30 {

    static final FunctionDescriptor _unlock_file$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle _unlock_file$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_unlock_file",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$30._unlock_file$FUNC, false
    );
    static final FunctionDescriptor tempnam$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle tempnam$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "tempnam",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$30.tempnam$FUNC, false
    );
    static final FunctionDescriptor fcloseall$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle fcloseall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fcloseall",
        "()I",
        constants$30.fcloseall$FUNC, false
    );
    static final FunctionDescriptor fdopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle fdopen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fdopen",
        "(ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$30.fdopen$FUNC, false
    );
    static final FunctionDescriptor fgetchar$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle fgetchar$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fgetchar",
        "()I",
        constants$30.fgetchar$FUNC, false
    );
    static final FunctionDescriptor fileno$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle fileno$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fileno",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$30.fileno$FUNC, false
    );
}


