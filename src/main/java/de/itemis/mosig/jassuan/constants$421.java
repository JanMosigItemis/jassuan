// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$421 {

    static final FunctionDescriptor GetLogicalDriveStringsA$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle GetLogicalDriveStringsA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetLogicalDriveStringsA",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$421.GetLogicalDriveStringsA$FUNC, false
    );
    static final FunctionDescriptor CreateSemaphoreA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle CreateSemaphoreA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateSemaphoreA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$421.CreateSemaphoreA$FUNC, false
    );
    static final FunctionDescriptor CreateSemaphoreExA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle CreateSemaphoreExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateSemaphoreExA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        constants$421.CreateSemaphoreExA$FUNC, false
    );
    static final FunctionDescriptor QueryFullProcessImageNameA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle QueryFullProcessImageNameA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryFullProcessImageNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$421.QueryFullProcessImageNameA$FUNC, false
    );
    static final FunctionDescriptor QueryFullProcessImageNameW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle QueryFullProcessImageNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryFullProcessImageNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$421.QueryFullProcessImageNameW$FUNC, false
    );
    static final FunctionDescriptor GetProcessShutdownParameters$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetProcessShutdownParameters$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetProcessShutdownParameters",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$421.GetProcessShutdownParameters$FUNC, false
    );
}


