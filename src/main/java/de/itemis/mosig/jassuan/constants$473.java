// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$473 {

    static final FunctionDescriptor UnregisterApplicationRestart$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle UnregisterApplicationRestart$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "UnregisterApplicationRestart",
        "()I",
        constants$473.UnregisterApplicationRestart$FUNC, false
    );
    static final FunctionDescriptor GetApplicationRecoveryCallback$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetApplicationRecoveryCallback$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetApplicationRecoveryCallback",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$473.GetApplicationRecoveryCallback$FUNC, false
    );
    static final FunctionDescriptor GetApplicationRestartSettings$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetApplicationRestartSettings$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetApplicationRestartSettings",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$473.GetApplicationRestartSettings$FUNC, false
    );
    static final FunctionDescriptor ApplicationRecoveryInProgress$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle ApplicationRecoveryInProgress$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ApplicationRecoveryInProgress",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$473.ApplicationRecoveryInProgress$FUNC, false
    );
    static final FunctionDescriptor ApplicationRecoveryFinished$FUNC = FunctionDescriptor.ofVoid(
        C_INT
    );
    static final MethodHandle ApplicationRecoveryFinished$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ApplicationRecoveryFinished",
        "(I)V",
        constants$473.ApplicationRecoveryFinished$FUNC, false
    );
    static final FunctionDescriptor DeleteVolumeMountPointA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle DeleteVolumeMountPointA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DeleteVolumeMountPointA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$473.DeleteVolumeMountPointA$FUNC, false
    );
}


