// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1357 {

    static final FunctionDescriptor WSADuplicateSocketW$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle WSADuplicateSocketW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSADuplicateSocketW",
        "(JILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1357.WSADuplicateSocketW$FUNC, false
    );
    static final FunctionDescriptor WSAEnumNetworkEvents$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WSAEnumNetworkEvents$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSAEnumNetworkEvents",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1357.WSAEnumNetworkEvents$FUNC, false
    );
    static final FunctionDescriptor WSAEnumProtocolsA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WSAEnumProtocolsA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSAEnumProtocolsA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1357.WSAEnumProtocolsA$FUNC, false
    );
    static final FunctionDescriptor WSAEnumProtocolsW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WSAEnumProtocolsW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSAEnumProtocolsW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1357.WSAEnumProtocolsW$FUNC, false
    );
    static final FunctionDescriptor WSAEventSelect$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle WSAEventSelect$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSAEventSelect",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        constants$1357.WSAEventSelect$FUNC, false
    );
    static final FunctionDescriptor WSAGetOverlappedResult$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle WSAGetOverlappedResult$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSAGetOverlappedResult",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1357.WSAGetOverlappedResult$FUNC, false
    );
}


