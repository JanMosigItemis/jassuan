// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$707 {

    static final FunctionDescriptor QUERYHANDLER$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle QUERYHANDLER$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$707.QUERYHANDLER$FUNC, false
    );
    static final FunctionDescriptor PQUERYHANDLER$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle PQUERYHANDLER$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$707.PQUERYHANDLER$FUNC, false
    );
    static final FunctionDescriptor RegCloseKey$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle RegCloseKey$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegCloseKey",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$707.RegCloseKey$FUNC, false
    );
    static final FunctionDescriptor RegOverridePredefKey$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegOverridePredefKey$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegOverridePredefKey",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$707.RegOverridePredefKey$FUNC, false
    );
}


