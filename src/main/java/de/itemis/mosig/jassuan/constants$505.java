// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$505 {

    static final FunctionDescriptor GetCharWidthI$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetCharWidthI$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCharWidthI",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$505.GetCharWidthI$FUNC, false
    );
    static final FunctionDescriptor GetCharABCWidthsI$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetCharABCWidthsI$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCharABCWidthsI",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$505.GetCharABCWidthsI$FUNC, false
    );
    static final FunctionDescriptor AddFontResourceExA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle AddFontResourceExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddFontResourceExA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$505.AddFontResourceExA$FUNC, false
    );
    static final FunctionDescriptor AddFontResourceExW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle AddFontResourceExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddFontResourceExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$505.AddFontResourceExW$FUNC, false
    );
    static final FunctionDescriptor RemoveFontResourceExA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RemoveFontResourceExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RemoveFontResourceExA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$505.RemoveFontResourceExA$FUNC, false
    );
    static final FunctionDescriptor RemoveFontResourceExW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RemoveFontResourceExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RemoveFontResourceExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$505.RemoveFontResourceExW$FUNC, false
    );
}


