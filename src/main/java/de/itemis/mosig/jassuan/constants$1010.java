// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1010 {

    static final FunctionDescriptor CoTaskMemRealloc$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle CoTaskMemRealloc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoTaskMemRealloc",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1010.CoTaskMemRealloc$FUNC, false
    );
    static final FunctionDescriptor CoTaskMemFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle CoTaskMemFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CoTaskMemFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1010.CoTaskMemFree$FUNC, false
    );
    static final MemoryLayout IWinTypes_v0_1_c_ifspec$LAYOUT = C_POINTER;
    static final VarHandle IWinTypes_v0_1_c_ifspec$VH = MemoryHandles.asAddressVarHandle(constants$1010.IWinTypes_v0_1_c_ifspec$LAYOUT.varHandle(long.class));
    static final MemorySegment IWinTypes_v0_1_c_ifspec$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IWinTypes_v0_1_c_ifspec", constants$1010.IWinTypes_v0_1_c_ifspec$LAYOUT);
    static final MemoryLayout IWinTypes_v0_1_s_ifspec$LAYOUT = C_POINTER;
    static final VarHandle IWinTypes_v0_1_s_ifspec$VH = MemoryHandles.asAddressVarHandle(constants$1010.IWinTypes_v0_1_s_ifspec$LAYOUT.varHandle(long.class));
    static final MemorySegment IWinTypes_v0_1_s_ifspec$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IWinTypes_v0_1_s_ifspec", constants$1010.IWinTypes_v0_1_s_ifspec$LAYOUT);
    static final MemoryLayout IID_IMallocSpy$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IMallocSpy$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IMallocSpy", constants$1010.IID_IMallocSpy$LAYOUT);
    static final MemoryLayout IID_IBindCtx$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IBindCtx$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IBindCtx", constants$1010.IID_IBindCtx$LAYOUT);
}


