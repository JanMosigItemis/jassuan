// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1431 {

    static final FunctionDescriptor __assuan_read$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle __assuan_read$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__assuan_read",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
        constants$1431.__assuan_read$FUNC, false
    );
    static final FunctionDescriptor __assuan_write$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle __assuan_write$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__assuan_write",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
        constants$1431.__assuan_write$FUNC, false
    );
    static final FunctionDescriptor __assuan_recvmsg$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle __assuan_recvmsg$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__assuan_recvmsg",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$1431.__assuan_recvmsg$FUNC, false
    );
    static final FunctionDescriptor __assuan_sendmsg$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle __assuan_sendmsg$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__assuan_sendmsg",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$1431.__assuan_sendmsg$FUNC, false
    );
    static final FunctionDescriptor __assuan_waitpid$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle __assuan_waitpid$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__assuan_waitpid",
        "(Ljdk/incubator/foreign/MemoryAddress;JILjdk/incubator/foreign/MemoryAddress;I)J",
        constants$1431.__assuan_waitpid$FUNC, false
    );
    static final MemoryLayout _assuan_system_pth$LAYOUT = MemoryLayout.structLayout(
        C_INT.withName("version"),
        MemoryLayout.paddingLayout(32),
        C_POINTER.withName("usleep"),
        C_POINTER.withName("pipe"),
        C_POINTER.withName("close"),
        C_POINTER.withName("read"),
        C_POINTER.withName("write"),
        C_POINTER.withName("recvmsg"),
        C_POINTER.withName("sendmsg"),
        C_POINTER.withName("spawn"),
        C_POINTER.withName("waitpid"),
        C_POINTER.withName("socketpair"),
        C_POINTER.withName("socket"),
        C_POINTER.withName("connect")
    ).withName("assuan_system_hooks");
    static final MemorySegment _assuan_system_pth$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "_assuan_system_pth", constants$1431._assuan_system_pth$LAYOUT);
}


