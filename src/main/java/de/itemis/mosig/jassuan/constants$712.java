// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$712 {

    static final FunctionDescriptor RegEnumKeyExW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegEnumKeyExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegEnumKeyExW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$712.RegEnumKeyExW$FUNC, false
    );
    static final FunctionDescriptor RegEnumValueA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegEnumValueA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegEnumValueA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$712.RegEnumValueA$FUNC, false
    );
    static final FunctionDescriptor RegEnumValueW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegEnumValueW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegEnumValueW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$712.RegEnumValueW$FUNC, false
    );
    static final FunctionDescriptor RegFlushKey$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle RegFlushKey$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegFlushKey",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$712.RegFlushKey$FUNC, false
    );
    static final FunctionDescriptor RegGetKeySecurity$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegGetKeySecurity$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegGetKeySecurity",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$712.RegGetKeySecurity$FUNC, false
    );
    static final FunctionDescriptor RegLoadKeyA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegLoadKeyA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegLoadKeyA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$712.RegLoadKeyA$FUNC, false
    );
}


