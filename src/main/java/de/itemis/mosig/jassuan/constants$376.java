// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$376 {

    static final FunctionDescriptor GetVersionExW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle GetVersionExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetVersionExW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$376.GetVersionExW$FUNC, false
    );
    static final FunctionDescriptor GetVersion$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle GetVersion$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetVersion",
        "()I",
        constants$376.GetVersion$FUNC, false
    );
    static final FunctionDescriptor SetLocalTime$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle SetLocalTime$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetLocalTime",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$376.SetLocalTime$FUNC, false
    );
    static final FunctionDescriptor GetSystemTimeAdjustment$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetSystemTimeAdjustment$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetSystemTimeAdjustment",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$376.GetSystemTimeAdjustment$FUNC, false
    );
    static final FunctionDescriptor GetWindowsDirectoryA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle GetWindowsDirectoryA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetWindowsDirectoryA",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$376.GetWindowsDirectoryA$FUNC, false
    );
    static final FunctionDescriptor GetWindowsDirectoryW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle GetWindowsDirectoryW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetWindowsDirectoryW",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$376.GetWindowsDirectoryW$FUNC, false
    );
}


