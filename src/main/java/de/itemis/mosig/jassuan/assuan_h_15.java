// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_15 extends assuan_h_14 {

    public static MethodHandle GetTextAlign$MH() {
        return RuntimeHelper.requireNonNull(constants$501.GetTextAlign$MH,"GetTextAlign");
    }
    public static int GetTextAlign ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$501.GetTextAlign$MH, "GetTextAlign");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextColor$MH() {
        return RuntimeHelper.requireNonNull(constants$502.GetTextColor$MH,"GetTextColor");
    }
    public static int GetTextColor ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.GetTextColor$MH, "GetTextColor");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentPointA$MH() {
        return RuntimeHelper.requireNonNull(constants$502.GetTextExtentPointA$MH,"GetTextExtentPointA");
    }
    public static int GetTextExtentPointA ( Addressable hdc,  Addressable lpString,  int c,  Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.GetTextExtentPointA$MH, "GetTextExtentPointA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), c, lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentPointW$MH() {
        return RuntimeHelper.requireNonNull(constants$502.GetTextExtentPointW$MH,"GetTextExtentPointW");
    }
    public static int GetTextExtentPointW ( Addressable hdc,  Addressable lpString,  int c,  Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.GetTextExtentPointW$MH, "GetTextExtentPointW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), c, lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentPoint32A$MH() {
        return RuntimeHelper.requireNonNull(constants$502.GetTextExtentPoint32A$MH,"GetTextExtentPoint32A");
    }
    public static int GetTextExtentPoint32A ( Addressable hdc,  Addressable lpString,  int c,  Addressable psizl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.GetTextExtentPoint32A$MH, "GetTextExtentPoint32A");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), c, psizl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentPoint32W$MH() {
        return RuntimeHelper.requireNonNull(constants$502.GetTextExtentPoint32W$MH,"GetTextExtentPoint32W");
    }
    public static int GetTextExtentPoint32W ( Addressable hdc,  Addressable lpString,  int c,  Addressable psizl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.GetTextExtentPoint32W$MH, "GetTextExtentPoint32W");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), c, psizl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentExPointA$MH() {
        return RuntimeHelper.requireNonNull(constants$502.GetTextExtentExPointA$MH,"GetTextExtentExPointA");
    }
    public static int GetTextExtentExPointA ( Addressable hdc,  Addressable lpszString,  int cchString,  int nMaxExtent,  Addressable lpnFit,  Addressable lpnDx,  Addressable lpSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$502.GetTextExtentExPointA$MH, "GetTextExtentExPointA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpszString.address(), cchString, nMaxExtent, lpnFit.address(), lpnDx.address(), lpSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentExPointW$MH() {
        return RuntimeHelper.requireNonNull(constants$503.GetTextExtentExPointW$MH,"GetTextExtentExPointW");
    }
    public static int GetTextExtentExPointW ( Addressable hdc,  Addressable lpszString,  int cchString,  int nMaxExtent,  Addressable lpnFit,  Addressable lpnDx,  Addressable lpSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.GetTextExtentExPointW$MH, "GetTextExtentExPointW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpszString.address(), cchString, nMaxExtent, lpnFit.address(), lpnDx.address(), lpSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextCharset$MH() {
        return RuntimeHelper.requireNonNull(constants$503.GetTextCharset$MH,"GetTextCharset");
    }
    public static int GetTextCharset ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.GetTextCharset$MH, "GetTextCharset");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextCharsetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$503.GetTextCharsetInfo$MH,"GetTextCharsetInfo");
    }
    public static int GetTextCharsetInfo ( Addressable hdc,  Addressable lpSig,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.GetTextCharsetInfo$MH, "GetTextCharsetInfo");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpSig.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TranslateCharsetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$503.TranslateCharsetInfo$MH,"TranslateCharsetInfo");
    }
    public static int TranslateCharsetInfo ( Addressable lpSrc,  Addressable lpCs,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.TranslateCharsetInfo$MH, "TranslateCharsetInfo");
        try {
            return (int)mh$.invokeExact(lpSrc.address(), lpCs.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFontLanguageInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$503.GetFontLanguageInfo$MH,"GetFontLanguageInfo");
    }
    public static int GetFontLanguageInfo ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.GetFontLanguageInfo$MH, "GetFontLanguageInfo");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCharacterPlacementA$MH() {
        return RuntimeHelper.requireNonNull(constants$503.GetCharacterPlacementA$MH,"GetCharacterPlacementA");
    }
    public static int GetCharacterPlacementA ( Addressable hdc,  Addressable lpString,  int nCount,  int nMexExtent,  Addressable lpResults,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$503.GetCharacterPlacementA$MH, "GetCharacterPlacementA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), nCount, nMexExtent, lpResults.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCharacterPlacementW$MH() {
        return RuntimeHelper.requireNonNull(constants$504.GetCharacterPlacementW$MH,"GetCharacterPlacementW");
    }
    public static int GetCharacterPlacementW ( Addressable hdc,  Addressable lpString,  int nCount,  int nMexExtent,  Addressable lpResults,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.GetCharacterPlacementW$MH, "GetCharacterPlacementW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), nCount, nMexExtent, lpResults.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFontUnicodeRanges$MH() {
        return RuntimeHelper.requireNonNull(constants$504.GetFontUnicodeRanges$MH,"GetFontUnicodeRanges");
    }
    public static int GetFontUnicodeRanges ( Addressable hdc,  Addressable lpgs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.GetFontUnicodeRanges$MH, "GetFontUnicodeRanges");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpgs.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGlyphIndicesA$MH() {
        return RuntimeHelper.requireNonNull(constants$504.GetGlyphIndicesA$MH,"GetGlyphIndicesA");
    }
    public static int GetGlyphIndicesA ( Addressable hdc,  Addressable lpstr,  int c,  Addressable pgi,  int fl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.GetGlyphIndicesA$MH, "GetGlyphIndicesA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpstr.address(), c, pgi.address(), fl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGlyphIndicesW$MH() {
        return RuntimeHelper.requireNonNull(constants$504.GetGlyphIndicesW$MH,"GetGlyphIndicesW");
    }
    public static int GetGlyphIndicesW ( Addressable hdc,  Addressable lpstr,  int c,  Addressable pgi,  int fl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.GetGlyphIndicesW$MH, "GetGlyphIndicesW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpstr.address(), c, pgi.address(), fl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentPointI$MH() {
        return RuntimeHelper.requireNonNull(constants$504.GetTextExtentPointI$MH,"GetTextExtentPointI");
    }
    public static int GetTextExtentPointI ( Addressable hdc,  Addressable pgiIn,  int cgi,  Addressable psize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.GetTextExtentPointI$MH, "GetTextExtentPointI");
        try {
            return (int)mh$.invokeExact(hdc.address(), pgiIn.address(), cgi, psize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextExtentExPointI$MH() {
        return RuntimeHelper.requireNonNull(constants$504.GetTextExtentExPointI$MH,"GetTextExtentExPointI");
    }
    public static int GetTextExtentExPointI ( Addressable hdc,  Addressable lpwszString,  int cwchString,  int nMaxExtent,  Addressable lpnFit,  Addressable lpnDx,  Addressable lpSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$504.GetTextExtentExPointI$MH, "GetTextExtentExPointI");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpwszString.address(), cwchString, nMaxExtent, lpnFit.address(), lpnDx.address(), lpSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCharWidthI$MH() {
        return RuntimeHelper.requireNonNull(constants$505.GetCharWidthI$MH,"GetCharWidthI");
    }
    public static int GetCharWidthI ( Addressable hdc,  int giFirst,  int cgi,  Addressable pgi,  Addressable piWidths) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.GetCharWidthI$MH, "GetCharWidthI");
        try {
            return (int)mh$.invokeExact(hdc.address(), giFirst, cgi, pgi.address(), piWidths.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCharABCWidthsI$MH() {
        return RuntimeHelper.requireNonNull(constants$505.GetCharABCWidthsI$MH,"GetCharABCWidthsI");
    }
    public static int GetCharABCWidthsI ( Addressable hdc,  int giFirst,  int cgi,  Addressable pgi,  Addressable pabc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.GetCharABCWidthsI$MH, "GetCharABCWidthsI");
        try {
            return (int)mh$.invokeExact(hdc.address(), giFirst, cgi, pgi.address(), pabc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFontResourceExA$MH() {
        return RuntimeHelper.requireNonNull(constants$505.AddFontResourceExA$MH,"AddFontResourceExA");
    }
    public static int AddFontResourceExA ( Addressable name,  int fl,  Addressable res) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.AddFontResourceExA$MH, "AddFontResourceExA");
        try {
            return (int)mh$.invokeExact(name.address(), fl, res.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFontResourceExW$MH() {
        return RuntimeHelper.requireNonNull(constants$505.AddFontResourceExW$MH,"AddFontResourceExW");
    }
    public static int AddFontResourceExW ( Addressable name,  int fl,  Addressable res) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.AddFontResourceExW$MH, "AddFontResourceExW");
        try {
            return (int)mh$.invokeExact(name.address(), fl, res.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveFontResourceExA$MH() {
        return RuntimeHelper.requireNonNull(constants$505.RemoveFontResourceExA$MH,"RemoveFontResourceExA");
    }
    public static int RemoveFontResourceExA ( Addressable name,  int fl,  Addressable pdv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.RemoveFontResourceExA$MH, "RemoveFontResourceExA");
        try {
            return (int)mh$.invokeExact(name.address(), fl, pdv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveFontResourceExW$MH() {
        return RuntimeHelper.requireNonNull(constants$505.RemoveFontResourceExW$MH,"RemoveFontResourceExW");
    }
    public static int RemoveFontResourceExW ( Addressable name,  int fl,  Addressable pdv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$505.RemoveFontResourceExW$MH, "RemoveFontResourceExW");
        try {
            return (int)mh$.invokeExact(name.address(), fl, pdv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFontMemResourceEx$MH() {
        return RuntimeHelper.requireNonNull(constants$506.AddFontMemResourceEx$MH,"AddFontMemResourceEx");
    }
    public static MemoryAddress AddFontMemResourceEx ( Addressable pFileView,  int cjSize,  Addressable pvResrved,  Addressable pNumFonts) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.AddFontMemResourceEx$MH, "AddFontMemResourceEx");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pFileView.address(), cjSize, pvResrved.address(), pNumFonts.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveFontMemResourceEx$MH() {
        return RuntimeHelper.requireNonNull(constants$506.RemoveFontMemResourceEx$MH,"RemoveFontMemResourceEx");
    }
    public static int RemoveFontMemResourceEx ( Addressable h) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.RemoveFontMemResourceEx$MH, "RemoveFontMemResourceEx");
        try {
            return (int)mh$.invokeExact(h.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateFontIndirectExA$MH() {
        return RuntimeHelper.requireNonNull(constants$506.CreateFontIndirectExA$MH,"CreateFontIndirectExA");
    }
    public static MemoryAddress CreateFontIndirectExA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.CreateFontIndirectExA$MH, "CreateFontIndirectExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateFontIndirectExW$MH() {
        return RuntimeHelper.requireNonNull(constants$506.CreateFontIndirectExW$MH,"CreateFontIndirectExW");
    }
    public static MemoryAddress CreateFontIndirectExW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.CreateFontIndirectExW$MH, "CreateFontIndirectExW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetViewportExtEx$MH() {
        return RuntimeHelper.requireNonNull(constants$506.GetViewportExtEx$MH,"GetViewportExtEx");
    }
    public static int GetViewportExtEx ( Addressable hdc,  Addressable lpsize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.GetViewportExtEx$MH, "GetViewportExtEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpsize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetViewportOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$506.GetViewportOrgEx$MH,"GetViewportOrgEx");
    }
    public static int GetViewportOrgEx ( Addressable hdc,  Addressable lppoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$506.GetViewportOrgEx$MH, "GetViewportOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), lppoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowExtEx$MH() {
        return RuntimeHelper.requireNonNull(constants$507.GetWindowExtEx$MH,"GetWindowExtEx");
    }
    public static int GetWindowExtEx ( Addressable hdc,  Addressable lpsize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.GetWindowExtEx$MH, "GetWindowExtEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpsize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$507.GetWindowOrgEx$MH,"GetWindowOrgEx");
    }
    public static int GetWindowOrgEx ( Addressable hdc,  Addressable lppoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.GetWindowOrgEx$MH, "GetWindowOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), lppoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IntersectClipRect$MH() {
        return RuntimeHelper.requireNonNull(constants$507.IntersectClipRect$MH,"IntersectClipRect");
    }
    public static int IntersectClipRect ( Addressable hdc,  int left,  int top,  int right,  int bottom) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.IntersectClipRect$MH, "IntersectClipRect");
        try {
            return (int)mh$.invokeExact(hdc.address(), left, top, right, bottom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InvertRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$507.InvertRgn$MH,"InvertRgn");
    }
    public static int InvertRgn ( Addressable hdc,  Addressable hrgn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.InvertRgn$MH, "InvertRgn");
        try {
            return (int)mh$.invokeExact(hdc.address(), hrgn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LineDDA$MH() {
        return RuntimeHelper.requireNonNull(constants$507.LineDDA$MH,"LineDDA");
    }
    public static int LineDDA ( int xStart,  int yStart,  int xEnd,  int yEnd,  Addressable lpProc,  long data) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.LineDDA$MH, "LineDDA");
        try {
            return (int)mh$.invokeExact(xStart, yStart, xEnd, yEnd, lpProc.address(), data);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LineTo$MH() {
        return RuntimeHelper.requireNonNull(constants$507.LineTo$MH,"LineTo");
    }
    public static int LineTo ( Addressable hdc,  int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$507.LineTo$MH, "LineTo");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MaskBlt$MH() {
        return RuntimeHelper.requireNonNull(constants$508.MaskBlt$MH,"MaskBlt");
    }
    public static int MaskBlt ( Addressable hdcDest,  int xDest,  int yDest,  int width,  int height,  Addressable hdcSrc,  int xSrc,  int ySrc,  Addressable hbmMask,  int xMask,  int yMask,  int rop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.MaskBlt$MH, "MaskBlt");
        try {
            return (int)mh$.invokeExact(hdcDest.address(), xDest, yDest, width, height, hdcSrc.address(), xSrc, ySrc, hbmMask.address(), xMask, yMask, rop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlgBlt$MH() {
        return RuntimeHelper.requireNonNull(constants$508.PlgBlt$MH,"PlgBlt");
    }
    public static int PlgBlt ( Addressable hdcDest,  Addressable lpPoint,  Addressable hdcSrc,  int xSrc,  int ySrc,  int width,  int height,  Addressable hbmMask,  int xMask,  int yMask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.PlgBlt$MH, "PlgBlt");
        try {
            return (int)mh$.invokeExact(hdcDest.address(), lpPoint.address(), hdcSrc.address(), xSrc, ySrc, width, height, hbmMask.address(), xMask, yMask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OffsetClipRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$508.OffsetClipRgn$MH,"OffsetClipRgn");
    }
    public static int OffsetClipRgn ( Addressable hdc,  int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.OffsetClipRgn$MH, "OffsetClipRgn");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OffsetRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$508.OffsetRgn$MH,"OffsetRgn");
    }
    public static int OffsetRgn ( Addressable hrgn,  int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.OffsetRgn$MH, "OffsetRgn");
        try {
            return (int)mh$.invokeExact(hrgn.address(), x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PatBlt$MH() {
        return RuntimeHelper.requireNonNull(constants$508.PatBlt$MH,"PatBlt");
    }
    public static int PatBlt ( Addressable hdc,  int x,  int y,  int w,  int h,  int rop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.PatBlt$MH, "PatBlt");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, w, h, rop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Pie$MH() {
        return RuntimeHelper.requireNonNull(constants$508.Pie$MH,"Pie");
    }
    public static int Pie ( Addressable hdc,  int left,  int top,  int right,  int bottom,  int xr1,  int yr1,  int xr2,  int yr2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$508.Pie$MH, "Pie");
        try {
            return (int)mh$.invokeExact(hdc.address(), left, top, right, bottom, xr1, yr1, xr2, yr2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlayMetaFile$MH() {
        return RuntimeHelper.requireNonNull(constants$509.PlayMetaFile$MH,"PlayMetaFile");
    }
    public static int PlayMetaFile ( Addressable hdc,  Addressable hmf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.PlayMetaFile$MH, "PlayMetaFile");
        try {
            return (int)mh$.invokeExact(hdc.address(), hmf.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PaintRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$509.PaintRgn$MH,"PaintRgn");
    }
    public static int PaintRgn ( Addressable hdc,  Addressable hrgn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.PaintRgn$MH, "PaintRgn");
        try {
            return (int)mh$.invokeExact(hdc.address(), hrgn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolyPolygon$MH() {
        return RuntimeHelper.requireNonNull(constants$509.PolyPolygon$MH,"PolyPolygon");
    }
    public static int PolyPolygon ( Addressable hdc,  Addressable apt,  Addressable asz,  int csz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.PolyPolygon$MH, "PolyPolygon");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), asz.address(), csz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtInRegion$MH() {
        return RuntimeHelper.requireNonNull(constants$509.PtInRegion$MH,"PtInRegion");
    }
    public static int PtInRegion ( Addressable hrgn,  int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.PtInRegion$MH, "PtInRegion");
        try {
            return (int)mh$.invokeExact(hrgn.address(), x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtVisible$MH() {
        return RuntimeHelper.requireNonNull(constants$509.PtVisible$MH,"PtVisible");
    }
    public static int PtVisible ( Addressable hdc,  int x,  int y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.PtVisible$MH, "PtVisible");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RectInRegion$MH() {
        return RuntimeHelper.requireNonNull(constants$509.RectInRegion$MH,"RectInRegion");
    }
    public static int RectInRegion ( Addressable hrgn,  Addressable lprect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$509.RectInRegion$MH, "RectInRegion");
        try {
            return (int)mh$.invokeExact(hrgn.address(), lprect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RectVisible$MH() {
        return RuntimeHelper.requireNonNull(constants$510.RectVisible$MH,"RectVisible");
    }
    public static int RectVisible ( Addressable hdc,  Addressable lprect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.RectVisible$MH, "RectVisible");
        try {
            return (int)mh$.invokeExact(hdc.address(), lprect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Rectangle$MH() {
        return RuntimeHelper.requireNonNull(constants$510.Rectangle$MH,"Rectangle");
    }
    public static int Rectangle ( Addressable hdc,  int left,  int top,  int right,  int bottom) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.Rectangle$MH, "Rectangle");
        try {
            return (int)mh$.invokeExact(hdc.address(), left, top, right, bottom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RestoreDC$MH() {
        return RuntimeHelper.requireNonNull(constants$510.RestoreDC$MH,"RestoreDC");
    }
    public static int RestoreDC ( Addressable hdc,  int nSavedDC) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.RestoreDC$MH, "RestoreDC");
        try {
            return (int)mh$.invokeExact(hdc.address(), nSavedDC);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetDCA$MH() {
        return RuntimeHelper.requireNonNull(constants$510.ResetDCA$MH,"ResetDCA");
    }
    public static MemoryAddress ResetDCA ( Addressable hdc,  Addressable lpdm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.ResetDCA$MH, "ResetDCA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), lpdm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetDCW$MH() {
        return RuntimeHelper.requireNonNull(constants$510.ResetDCW$MH,"ResetDCW");
    }
    public static MemoryAddress ResetDCW ( Addressable hdc,  Addressable lpdm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.ResetDCW$MH, "ResetDCW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), lpdm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RealizePalette$MH() {
        return RuntimeHelper.requireNonNull(constants$510.RealizePalette$MH,"RealizePalette");
    }
    public static int RealizePalette ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$510.RealizePalette$MH, "RealizePalette");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveFontResourceA$MH() {
        return RuntimeHelper.requireNonNull(constants$511.RemoveFontResourceA$MH,"RemoveFontResourceA");
    }
    public static int RemoveFontResourceA ( Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.RemoveFontResourceA$MH, "RemoveFontResourceA");
        try {
            return (int)mh$.invokeExact(lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveFontResourceW$MH() {
        return RuntimeHelper.requireNonNull(constants$511.RemoveFontResourceW$MH,"RemoveFontResourceW");
    }
    public static int RemoveFontResourceW ( Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.RemoveFontResourceW$MH, "RemoveFontResourceW");
        try {
            return (int)mh$.invokeExact(lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RoundRect$MH() {
        return RuntimeHelper.requireNonNull(constants$511.RoundRect$MH,"RoundRect");
    }
    public static int RoundRect ( Addressable hdc,  int left,  int top,  int right,  int bottom,  int width,  int height) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.RoundRect$MH, "RoundRect");
        try {
            return (int)mh$.invokeExact(hdc.address(), left, top, right, bottom, width, height);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResizePalette$MH() {
        return RuntimeHelper.requireNonNull(constants$511.ResizePalette$MH,"ResizePalette");
    }
    public static int ResizePalette ( Addressable hpal,  int n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.ResizePalette$MH, "ResizePalette");
        try {
            return (int)mh$.invokeExact(hpal.address(), n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SaveDC$MH() {
        return RuntimeHelper.requireNonNull(constants$511.SaveDC$MH,"SaveDC");
    }
    public static int SaveDC ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.SaveDC$MH, "SaveDC");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SelectClipRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$511.SelectClipRgn$MH,"SelectClipRgn");
    }
    public static int SelectClipRgn ( Addressable hdc,  Addressable hrgn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$511.SelectClipRgn$MH, "SelectClipRgn");
        try {
            return (int)mh$.invokeExact(hdc.address(), hrgn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtSelectClipRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$512.ExtSelectClipRgn$MH,"ExtSelectClipRgn");
    }
    public static int ExtSelectClipRgn ( Addressable hdc,  Addressable hrgn,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.ExtSelectClipRgn$MH, "ExtSelectClipRgn");
        try {
            return (int)mh$.invokeExact(hdc.address(), hrgn.address(), mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMetaRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$512.SetMetaRgn$MH,"SetMetaRgn");
    }
    public static int SetMetaRgn ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.SetMetaRgn$MH, "SetMetaRgn");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SelectObject$MH() {
        return RuntimeHelper.requireNonNull(constants$512.SelectObject$MH,"SelectObject");
    }
    public static MemoryAddress SelectObject ( Addressable hdc,  Addressable h) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.SelectObject$MH, "SelectObject");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), h.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SelectPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$512.SelectPalette$MH,"SelectPalette");
    }
    public static MemoryAddress SelectPalette ( Addressable hdc,  Addressable hPal,  int bForceBkgd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.SelectPalette$MH, "SelectPalette");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), hPal.address(), bForceBkgd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetBkColor$MH() {
        return RuntimeHelper.requireNonNull(constants$512.SetBkColor$MH,"SetBkColor");
    }
    public static int SetBkColor ( Addressable hdc,  int color) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.SetBkColor$MH, "SetBkColor");
        try {
            return (int)mh$.invokeExact(hdc.address(), color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDCBrushColor$MH() {
        return RuntimeHelper.requireNonNull(constants$512.SetDCBrushColor$MH,"SetDCBrushColor");
    }
    public static int SetDCBrushColor ( Addressable hdc,  int color) {
        var mh$ = RuntimeHelper.requireNonNull(constants$512.SetDCBrushColor$MH, "SetDCBrushColor");
        try {
            return (int)mh$.invokeExact(hdc.address(), color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDCPenColor$MH() {
        return RuntimeHelper.requireNonNull(constants$513.SetDCPenColor$MH,"SetDCPenColor");
    }
    public static int SetDCPenColor ( Addressable hdc,  int color) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.SetDCPenColor$MH, "SetDCPenColor");
        try {
            return (int)mh$.invokeExact(hdc.address(), color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetBkMode$MH() {
        return RuntimeHelper.requireNonNull(constants$513.SetBkMode$MH,"SetBkMode");
    }
    public static int SetBkMode ( Addressable hdc,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.SetBkMode$MH, "SetBkMode");
        try {
            return (int)mh$.invokeExact(hdc.address(), mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetBitmapBits$MH() {
        return RuntimeHelper.requireNonNull(constants$513.SetBitmapBits$MH,"SetBitmapBits");
    }
    public static int SetBitmapBits ( Addressable hbm,  int cb,  Addressable pvBits) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.SetBitmapBits$MH, "SetBitmapBits");
        try {
            return (int)mh$.invokeExact(hbm.address(), cb, pvBits.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetBoundsRect$MH() {
        return RuntimeHelper.requireNonNull(constants$513.SetBoundsRect$MH,"SetBoundsRect");
    }
    public static int SetBoundsRect ( Addressable hdc,  Addressable lprect,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.SetBoundsRect$MH, "SetBoundsRect");
        try {
            return (int)mh$.invokeExact(hdc.address(), lprect.address(), flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDIBits$MH() {
        return RuntimeHelper.requireNonNull(constants$513.SetDIBits$MH,"SetDIBits");
    }
    public static int SetDIBits ( Addressable hdc,  Addressable hbm,  int start,  int cLines,  Addressable lpBits,  Addressable lpbmi,  int ColorUse) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.SetDIBits$MH, "SetDIBits");
        try {
            return (int)mh$.invokeExact(hdc.address(), hbm.address(), start, cLines, lpBits.address(), lpbmi.address(), ColorUse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDIBitsToDevice$MH() {
        return RuntimeHelper.requireNonNull(constants$513.SetDIBitsToDevice$MH,"SetDIBitsToDevice");
    }
    public static int SetDIBitsToDevice ( Addressable hdc,  int xDest,  int yDest,  int w,  int h,  int xSrc,  int ySrc,  int StartScan,  int cLines,  Addressable lpvBits,  Addressable lpbmi,  int ColorUse) {
        var mh$ = RuntimeHelper.requireNonNull(constants$513.SetDIBitsToDevice$MH, "SetDIBitsToDevice");
        try {
            return (int)mh$.invokeExact(hdc.address(), xDest, yDest, w, h, xSrc, ySrc, StartScan, cLines, lpvBits.address(), lpbmi.address(), ColorUse);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMapperFlags$MH() {
        return RuntimeHelper.requireNonNull(constants$514.SetMapperFlags$MH,"SetMapperFlags");
    }
    public static int SetMapperFlags ( Addressable hdc,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.SetMapperFlags$MH, "SetMapperFlags");
        try {
            return (int)mh$.invokeExact(hdc.address(), flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetGraphicsMode$MH() {
        return RuntimeHelper.requireNonNull(constants$514.SetGraphicsMode$MH,"SetGraphicsMode");
    }
    public static int SetGraphicsMode ( Addressable hdc,  int iMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.SetGraphicsMode$MH, "SetGraphicsMode");
        try {
            return (int)mh$.invokeExact(hdc.address(), iMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMapMode$MH() {
        return RuntimeHelper.requireNonNull(constants$514.SetMapMode$MH,"SetMapMode");
    }
    public static int SetMapMode ( Addressable hdc,  int iMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.SetMapMode$MH, "SetMapMode");
        try {
            return (int)mh$.invokeExact(hdc.address(), iMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$514.SetLayout$MH,"SetLayout");
    }
    public static int SetLayout ( Addressable hdc,  int l) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.SetLayout$MH, "SetLayout");
        try {
            return (int)mh$.invokeExact(hdc.address(), l);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$514.GetLayout$MH,"GetLayout");
    }
    public static int GetLayout ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.GetLayout$MH, "GetLayout");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMetaFileBitsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$514.SetMetaFileBitsEx$MH,"SetMetaFileBitsEx");
    }
    public static MemoryAddress SetMetaFileBitsEx ( int cbBuffer,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$514.SetMetaFileBitsEx$MH, "SetMetaFileBitsEx");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(cbBuffer, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPaletteEntries$MH() {
        return RuntimeHelper.requireNonNull(constants$515.SetPaletteEntries$MH,"SetPaletteEntries");
    }
    public static int SetPaletteEntries ( Addressable hpal,  int iStart,  int cEntries,  Addressable pPalEntries) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.SetPaletteEntries$MH, "SetPaletteEntries");
        try {
            return (int)mh$.invokeExact(hpal.address(), iStart, cEntries, pPalEntries.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPixel$MH() {
        return RuntimeHelper.requireNonNull(constants$515.SetPixel$MH,"SetPixel");
    }
    public static int SetPixel ( Addressable hdc,  int x,  int y,  int color) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.SetPixel$MH, "SetPixel");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPixelV$MH() {
        return RuntimeHelper.requireNonNull(constants$515.SetPixelV$MH,"SetPixelV");
    }
    public static int SetPixelV ( Addressable hdc,  int x,  int y,  int color) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.SetPixelV$MH, "SetPixelV");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPixelFormat$MH() {
        return RuntimeHelper.requireNonNull(constants$515.SetPixelFormat$MH,"SetPixelFormat");
    }
    public static int SetPixelFormat ( Addressable hdc,  int format,  Addressable ppfd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.SetPixelFormat$MH, "SetPixelFormat");
        try {
            return (int)mh$.invokeExact(hdc.address(), format, ppfd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPolyFillMode$MH() {
        return RuntimeHelper.requireNonNull(constants$515.SetPolyFillMode$MH,"SetPolyFillMode");
    }
    public static int SetPolyFillMode ( Addressable hdc,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.SetPolyFillMode$MH, "SetPolyFillMode");
        try {
            return (int)mh$.invokeExact(hdc.address(), mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StretchBlt$MH() {
        return RuntimeHelper.requireNonNull(constants$515.StretchBlt$MH,"StretchBlt");
    }
    public static int StretchBlt ( Addressable hdcDest,  int xDest,  int yDest,  int wDest,  int hDest,  Addressable hdcSrc,  int xSrc,  int ySrc,  int wSrc,  int hSrc,  int rop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$515.StretchBlt$MH, "StretchBlt");
        try {
            return (int)mh$.invokeExact(hdcDest.address(), xDest, yDest, wDest, hDest, hdcSrc.address(), xSrc, ySrc, wSrc, hSrc, rop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetRectRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$516.SetRectRgn$MH,"SetRectRgn");
    }
    public static int SetRectRgn ( Addressable hrgn,  int left,  int top,  int right,  int bottom) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.SetRectRgn$MH, "SetRectRgn");
        try {
            return (int)mh$.invokeExact(hrgn.address(), left, top, right, bottom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StretchDIBits$MH() {
        return RuntimeHelper.requireNonNull(constants$516.StretchDIBits$MH,"StretchDIBits");
    }
    public static int StretchDIBits ( Addressable hdc,  int xDest,  int yDest,  int DestWidth,  int DestHeight,  int xSrc,  int ySrc,  int SrcWidth,  int SrcHeight,  Addressable lpBits,  Addressable lpbmi,  int iUsage,  int rop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.StretchDIBits$MH, "StretchDIBits");
        try {
            return (int)mh$.invokeExact(hdc.address(), xDest, yDest, DestWidth, DestHeight, xSrc, ySrc, SrcWidth, SrcHeight, lpBits.address(), lpbmi.address(), iUsage, rop);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetROP2$MH() {
        return RuntimeHelper.requireNonNull(constants$516.SetROP2$MH,"SetROP2");
    }
    public static int SetROP2 ( Addressable hdc,  int rop2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.SetROP2$MH, "SetROP2");
        try {
            return (int)mh$.invokeExact(hdc.address(), rop2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetStretchBltMode$MH() {
        return RuntimeHelper.requireNonNull(constants$516.SetStretchBltMode$MH,"SetStretchBltMode");
    }
    public static int SetStretchBltMode ( Addressable hdc,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.SetStretchBltMode$MH, "SetStretchBltMode");
        try {
            return (int)mh$.invokeExact(hdc.address(), mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetSystemPaletteUse$MH() {
        return RuntimeHelper.requireNonNull(constants$516.SetSystemPaletteUse$MH,"SetSystemPaletteUse");
    }
    public static int SetSystemPaletteUse ( Addressable hdc,  int use) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.SetSystemPaletteUse$MH, "SetSystemPaletteUse");
        try {
            return (int)mh$.invokeExact(hdc.address(), use);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetTextCharacterExtra$MH() {
        return RuntimeHelper.requireNonNull(constants$516.SetTextCharacterExtra$MH,"SetTextCharacterExtra");
    }
    public static int SetTextCharacterExtra ( Addressable hdc,  int extra) {
        var mh$ = RuntimeHelper.requireNonNull(constants$516.SetTextCharacterExtra$MH, "SetTextCharacterExtra");
        try {
            return (int)mh$.invokeExact(hdc.address(), extra);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetTextColor$MH() {
        return RuntimeHelper.requireNonNull(constants$517.SetTextColor$MH,"SetTextColor");
    }
    public static int SetTextColor ( Addressable hdc,  int color) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.SetTextColor$MH, "SetTextColor");
        try {
            return (int)mh$.invokeExact(hdc.address(), color);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetTextAlign$MH() {
        return RuntimeHelper.requireNonNull(constants$517.SetTextAlign$MH,"SetTextAlign");
    }
    public static int SetTextAlign ( Addressable hdc,  int align) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.SetTextAlign$MH, "SetTextAlign");
        try {
            return (int)mh$.invokeExact(hdc.address(), align);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetTextJustification$MH() {
        return RuntimeHelper.requireNonNull(constants$517.SetTextJustification$MH,"SetTextJustification");
    }
    public static int SetTextJustification ( Addressable hdc,  int extra,  int count) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.SetTextJustification$MH, "SetTextJustification");
        try {
            return (int)mh$.invokeExact(hdc.address(), extra, count);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UpdateColors$MH() {
        return RuntimeHelper.requireNonNull(constants$517.UpdateColors$MH,"UpdateColors");
    }
    public static int UpdateColors ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.UpdateColors$MH, "UpdateColors");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AlphaBlend$MH() {
        return RuntimeHelper.requireNonNull(constants$517.AlphaBlend$MH,"AlphaBlend");
    }
    public static int AlphaBlend ( Addressable hdcDest,  int xoriginDest,  int yoriginDest,  int wDest,  int hDest,  Addressable hdcSrc,  int xoriginSrc,  int yoriginSrc,  int wSrc,  int hSrc,  MemorySegment ftn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.AlphaBlend$MH, "AlphaBlend");
        try {
            return (int)mh$.invokeExact(hdcDest.address(), xoriginDest, yoriginDest, wDest, hDest, hdcSrc.address(), xoriginSrc, yoriginSrc, wSrc, hSrc, ftn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GdiAlphaBlend$MH() {
        return RuntimeHelper.requireNonNull(constants$517.GdiAlphaBlend$MH,"GdiAlphaBlend");
    }
    public static int GdiAlphaBlend ( Addressable hdcDest,  int xoriginDest,  int yoriginDest,  int wDest,  int hDest,  Addressable hdcSrc,  int xoriginSrc,  int yoriginSrc,  int wSrc,  int hSrc,  MemorySegment ftn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$517.GdiAlphaBlend$MH, "GdiAlphaBlend");
        try {
            return (int)mh$.invokeExact(hdcDest.address(), xoriginDest, yoriginDest, wDest, hDest, hdcSrc.address(), xoriginSrc, yoriginSrc, wSrc, hSrc, ftn);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TransparentBlt$MH() {
        return RuntimeHelper.requireNonNull(constants$518.TransparentBlt$MH,"TransparentBlt");
    }
    public static int TransparentBlt ( Addressable hdcDest,  int xoriginDest,  int yoriginDest,  int wDest,  int hDest,  Addressable hdcSrc,  int xoriginSrc,  int yoriginSrc,  int wSrc,  int hSrc,  int crTransparent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.TransparentBlt$MH, "TransparentBlt");
        try {
            return (int)mh$.invokeExact(hdcDest.address(), xoriginDest, yoriginDest, wDest, hDest, hdcSrc.address(), xoriginSrc, yoriginSrc, wSrc, hSrc, crTransparent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GdiTransparentBlt$MH() {
        return RuntimeHelper.requireNonNull(constants$518.GdiTransparentBlt$MH,"GdiTransparentBlt");
    }
    public static int GdiTransparentBlt ( Addressable hdcDest,  int xoriginDest,  int yoriginDest,  int wDest,  int hDest,  Addressable hdcSrc,  int xoriginSrc,  int yoriginSrc,  int wSrc,  int hSrc,  int crTransparent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.GdiTransparentBlt$MH, "GdiTransparentBlt");
        try {
            return (int)mh$.invokeExact(hdcDest.address(), xoriginDest, yoriginDest, wDest, hDest, hdcSrc.address(), xoriginSrc, yoriginSrc, wSrc, hSrc, crTransparent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GradientFill$MH() {
        return RuntimeHelper.requireNonNull(constants$518.GradientFill$MH,"GradientFill");
    }
    public static int GradientFill ( Addressable hdc,  Addressable pVertex,  int nVertex,  Addressable pMesh,  int nMesh,  int ulMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.GradientFill$MH, "GradientFill");
        try {
            return (int)mh$.invokeExact(hdc.address(), pVertex.address(), nVertex, pMesh.address(), nMesh, ulMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GdiGradientFill$MH() {
        return RuntimeHelper.requireNonNull(constants$518.GdiGradientFill$MH,"GdiGradientFill");
    }
    public static int GdiGradientFill ( Addressable hdc,  Addressable pVertex,  int nVertex,  Addressable pMesh,  int nMesh,  int ulMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.GdiGradientFill$MH, "GdiGradientFill");
        try {
            return (int)mh$.invokeExact(hdc.address(), pVertex.address(), nVertex, pMesh.address(), nMesh, ulMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlayMetaFileRecord$MH() {
        return RuntimeHelper.requireNonNull(constants$518.PlayMetaFileRecord$MH,"PlayMetaFileRecord");
    }
    public static int PlayMetaFileRecord ( Addressable hdc,  Addressable lpHandleTable,  Addressable lpMR,  int noObjs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$518.PlayMetaFileRecord$MH, "PlayMetaFileRecord");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpHandleTable.address(), lpMR.address(), noObjs);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMetaFile$MH() {
        return RuntimeHelper.requireNonNull(constants$519.EnumMetaFile$MH,"EnumMetaFile");
    }
    public static int EnumMetaFile ( Addressable hdc,  Addressable hmf,  Addressable lpProc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.EnumMetaFile$MH, "EnumMetaFile");
        try {
            return (int)mh$.invokeExact(hdc.address(), hmf.address(), lpProc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseEnhMetaFile$MH() {
        return RuntimeHelper.requireNonNull(constants$519.CloseEnhMetaFile$MH,"CloseEnhMetaFile");
    }
    public static MemoryAddress CloseEnhMetaFile ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.CloseEnhMetaFile$MH, "CloseEnhMetaFile");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyEnhMetaFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$519.CopyEnhMetaFileA$MH,"CopyEnhMetaFileA");
    }
    public static MemoryAddress CopyEnhMetaFileA ( Addressable hEnh,  Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$519.CopyEnhMetaFileA$MH, "CopyEnhMetaFileA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hEnh.address(), lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyEnhMetaFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$520.CopyEnhMetaFileW$MH,"CopyEnhMetaFileW");
    }
    public static MemoryAddress CopyEnhMetaFileW ( Addressable hEnh,  Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.CopyEnhMetaFileW$MH, "CopyEnhMetaFileW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hEnh.address(), lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateEnhMetaFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$520.CreateEnhMetaFileA$MH,"CreateEnhMetaFileA");
    }
    public static MemoryAddress CreateEnhMetaFileA ( Addressable hdc,  Addressable lpFilename,  Addressable lprc,  Addressable lpDesc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.CreateEnhMetaFileA$MH, "CreateEnhMetaFileA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), lpFilename.address(), lprc.address(), lpDesc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateEnhMetaFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$520.CreateEnhMetaFileW$MH,"CreateEnhMetaFileW");
    }
    public static MemoryAddress CreateEnhMetaFileW ( Addressable hdc,  Addressable lpFilename,  Addressable lprc,  Addressable lpDesc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.CreateEnhMetaFileW$MH, "CreateEnhMetaFileW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), lpFilename.address(), lprc.address(), lpDesc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteEnhMetaFile$MH() {
        return RuntimeHelper.requireNonNull(constants$520.DeleteEnhMetaFile$MH,"DeleteEnhMetaFile");
    }
    public static int DeleteEnhMetaFile ( Addressable hmf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.DeleteEnhMetaFile$MH, "DeleteEnhMetaFile");
        try {
            return (int)mh$.invokeExact(hmf.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumEnhMetaFile$MH() {
        return RuntimeHelper.requireNonNull(constants$520.EnumEnhMetaFile$MH,"EnumEnhMetaFile");
    }
    public static int EnumEnhMetaFile ( Addressable hdc,  Addressable hmf,  Addressable lpProc,  Addressable lpParam,  Addressable lpRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.EnumEnhMetaFile$MH, "EnumEnhMetaFile");
        try {
            return (int)mh$.invokeExact(hdc.address(), hmf.address(), lpProc.address(), lpParam.address(), lpRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$520.GetEnhMetaFileA$MH,"GetEnhMetaFileA");
    }
    public static MemoryAddress GetEnhMetaFileA ( Addressable lpName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$520.GetEnhMetaFileA$MH, "GetEnhMetaFileA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileW$MH,"GetEnhMetaFileW");
    }
    public static MemoryAddress GetEnhMetaFileW ( Addressable lpName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileW$MH, "GetEnhMetaFileW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFileBits$MH() {
        return RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileBits$MH,"GetEnhMetaFileBits");
    }
    public static int GetEnhMetaFileBits ( Addressable hEMF,  int nSize,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileBits$MH, "GetEnhMetaFileBits");
        try {
            return (int)mh$.invokeExact(hEMF.address(), nSize, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFileDescriptionA$MH() {
        return RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileDescriptionA$MH,"GetEnhMetaFileDescriptionA");
    }
    public static int GetEnhMetaFileDescriptionA ( Addressable hemf,  int cchBuffer,  Addressable lpDescription) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileDescriptionA$MH, "GetEnhMetaFileDescriptionA");
        try {
            return (int)mh$.invokeExact(hemf.address(), cchBuffer, lpDescription.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFileDescriptionW$MH() {
        return RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileDescriptionW$MH,"GetEnhMetaFileDescriptionW");
    }
    public static int GetEnhMetaFileDescriptionW ( Addressable hemf,  int cchBuffer,  Addressable lpDescription) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileDescriptionW$MH, "GetEnhMetaFileDescriptionW");
        try {
            return (int)mh$.invokeExact(hemf.address(), cchBuffer, lpDescription.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFileHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileHeader$MH,"GetEnhMetaFileHeader");
    }
    public static int GetEnhMetaFileHeader ( Addressable hemf,  int nSize,  Addressable lpEnhMetaHeader) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFileHeader$MH, "GetEnhMetaFileHeader");
        try {
            return (int)mh$.invokeExact(hemf.address(), nSize, lpEnhMetaHeader.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFilePaletteEntries$MH() {
        return RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFilePaletteEntries$MH,"GetEnhMetaFilePaletteEntries");
    }
    public static int GetEnhMetaFilePaletteEntries ( Addressable hemf,  int nNumEntries,  Addressable lpPaletteEntries) {
        var mh$ = RuntimeHelper.requireNonNull(constants$521.GetEnhMetaFilePaletteEntries$MH, "GetEnhMetaFilePaletteEntries");
        try {
            return (int)mh$.invokeExact(hemf.address(), nNumEntries, lpPaletteEntries.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetEnhMetaFilePixelFormat$MH() {
        return RuntimeHelper.requireNonNull(constants$522.GetEnhMetaFilePixelFormat$MH,"GetEnhMetaFilePixelFormat");
    }
    public static int GetEnhMetaFilePixelFormat ( Addressable hemf,  int cbBuffer,  Addressable ppfd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.GetEnhMetaFilePixelFormat$MH, "GetEnhMetaFilePixelFormat");
        try {
            return (int)mh$.invokeExact(hemf.address(), cbBuffer, ppfd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWinMetaFileBits$MH() {
        return RuntimeHelper.requireNonNull(constants$522.GetWinMetaFileBits$MH,"GetWinMetaFileBits");
    }
    public static int GetWinMetaFileBits ( Addressable hemf,  int cbData16,  Addressable pData16,  int iMapMode,  Addressable hdcRef) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.GetWinMetaFileBits$MH, "GetWinMetaFileBits");
        try {
            return (int)mh$.invokeExact(hemf.address(), cbData16, pData16.address(), iMapMode, hdcRef.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlayEnhMetaFile$MH() {
        return RuntimeHelper.requireNonNull(constants$522.PlayEnhMetaFile$MH,"PlayEnhMetaFile");
    }
    public static int PlayEnhMetaFile ( Addressable hdc,  Addressable hmf,  Addressable lprect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.PlayEnhMetaFile$MH, "PlayEnhMetaFile");
        try {
            return (int)mh$.invokeExact(hdc.address(), hmf.address(), lprect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlayEnhMetaFileRecord$MH() {
        return RuntimeHelper.requireNonNull(constants$522.PlayEnhMetaFileRecord$MH,"PlayEnhMetaFileRecord");
    }
    public static int PlayEnhMetaFileRecord ( Addressable hdc,  Addressable pht,  Addressable pmr,  int cht) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.PlayEnhMetaFileRecord$MH, "PlayEnhMetaFileRecord");
        try {
            return (int)mh$.invokeExact(hdc.address(), pht.address(), pmr.address(), cht);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetEnhMetaFileBits$MH() {
        return RuntimeHelper.requireNonNull(constants$522.SetEnhMetaFileBits$MH,"SetEnhMetaFileBits");
    }
    public static MemoryAddress SetEnhMetaFileBits ( int nSize,  Addressable pb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.SetEnhMetaFileBits$MH, "SetEnhMetaFileBits");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(nSize, pb.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWinMetaFileBits$MH() {
        return RuntimeHelper.requireNonNull(constants$522.SetWinMetaFileBits$MH,"SetWinMetaFileBits");
    }
    public static MemoryAddress SetWinMetaFileBits ( int nSize,  Addressable lpMeta16Data,  Addressable hdcRef,  Addressable lpMFP) {
        var mh$ = RuntimeHelper.requireNonNull(constants$522.SetWinMetaFileBits$MH, "SetWinMetaFileBits");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(nSize, lpMeta16Data.address(), hdcRef.address(), lpMFP.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GdiComment$MH() {
        return RuntimeHelper.requireNonNull(constants$523.GdiComment$MH,"GdiComment");
    }
    public static int GdiComment ( Addressable hdc,  int nSize,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.GdiComment$MH, "GdiComment");
        try {
            return (int)mh$.invokeExact(hdc.address(), nSize, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextMetricsA$MH() {
        return RuntimeHelper.requireNonNull(constants$523.GetTextMetricsA$MH,"GetTextMetricsA");
    }
    public static int GetTextMetricsA ( Addressable hdc,  Addressable lptm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.GetTextMetricsA$MH, "GetTextMetricsA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lptm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextMetricsW$MH() {
        return RuntimeHelper.requireNonNull(constants$523.GetTextMetricsW$MH,"GetTextMetricsW");
    }
    public static int GetTextMetricsW ( Addressable hdc,  Addressable lptm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.GetTextMetricsW$MH, "GetTextMetricsW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lptm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AngleArc$MH() {
        return RuntimeHelper.requireNonNull(constants$523.AngleArc$MH,"AngleArc");
    }
    public static int AngleArc ( Addressable hdc,  int x,  int y,  int r,  float StartAngle,  float SweepAngle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.AngleArc$MH, "AngleArc");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, r, StartAngle, SweepAngle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolyPolyline$MH() {
        return RuntimeHelper.requireNonNull(constants$523.PolyPolyline$MH,"PolyPolyline");
    }
    public static int PolyPolyline ( Addressable hdc,  Addressable apt,  Addressable asz,  int csz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.PolyPolyline$MH, "PolyPolyline");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), asz.address(), csz);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWorldTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$523.GetWorldTransform$MH,"GetWorldTransform");
    }
    public static int GetWorldTransform ( Addressable hdc,  Addressable lpxf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$523.GetWorldTransform$MH, "GetWorldTransform");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpxf.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWorldTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$524.SetWorldTransform$MH,"SetWorldTransform");
    }
    public static int SetWorldTransform ( Addressable hdc,  Addressable lpxf) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.SetWorldTransform$MH, "SetWorldTransform");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpxf.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ModifyWorldTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$524.ModifyWorldTransform$MH,"ModifyWorldTransform");
    }
    public static int ModifyWorldTransform ( Addressable hdc,  Addressable lpxf,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.ModifyWorldTransform$MH, "ModifyWorldTransform");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpxf.address(), mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CombineTransform$MH() {
        return RuntimeHelper.requireNonNull(constants$524.CombineTransform$MH,"CombineTransform");
    }
    public static int CombineTransform ( Addressable lpxfOut,  Addressable lpxf1,  Addressable lpxf2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.CombineTransform$MH, "CombineTransform");
        try {
            return (int)mh$.invokeExact(lpxfOut.address(), lpxf1.address(), lpxf2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDIBSection$MH() {
        return RuntimeHelper.requireNonNull(constants$524.CreateDIBSection$MH,"CreateDIBSection");
    }
    public static MemoryAddress CreateDIBSection ( Addressable hdc,  Addressable lpbmi,  int usage,  Addressable ppvBits,  Addressable hSection,  int offset) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.CreateDIBSection$MH, "CreateDIBSection");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), lpbmi.address(), usage, ppvBits.address(), hSection.address(), offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDIBColorTable$MH() {
        return RuntimeHelper.requireNonNull(constants$524.GetDIBColorTable$MH,"GetDIBColorTable");
    }
    public static int GetDIBColorTable ( Addressable hdc,  int iStart,  int cEntries,  Addressable prgbq) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.GetDIBColorTable$MH, "GetDIBColorTable");
        try {
            return (int)mh$.invokeExact(hdc.address(), iStart, cEntries, prgbq.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDIBColorTable$MH() {
        return RuntimeHelper.requireNonNull(constants$524.SetDIBColorTable$MH,"SetDIBColorTable");
    }
    public static int SetDIBColorTable ( Addressable hdc,  int iStart,  int cEntries,  Addressable prgbq) {
        var mh$ = RuntimeHelper.requireNonNull(constants$524.SetDIBColorTable$MH, "SetDIBColorTable");
        try {
            return (int)mh$.invokeExact(hdc.address(), iStart, cEntries, prgbq.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetColorAdjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$525.SetColorAdjustment$MH,"SetColorAdjustment");
    }
    public static int SetColorAdjustment ( Addressable hdc,  Addressable lpca) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.SetColorAdjustment$MH, "SetColorAdjustment");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpca.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetColorAdjustment$MH() {
        return RuntimeHelper.requireNonNull(constants$525.GetColorAdjustment$MH,"GetColorAdjustment");
    }
    public static int GetColorAdjustment ( Addressable hdc,  Addressable lpca) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.GetColorAdjustment$MH, "GetColorAdjustment");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpca.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateHalftonePalette$MH() {
        return RuntimeHelper.requireNonNull(constants$525.CreateHalftonePalette$MH,"CreateHalftonePalette");
    }
    public static MemoryAddress CreateHalftonePalette ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.CreateHalftonePalette$MH, "CreateHalftonePalette");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocA$MH() {
        return RuntimeHelper.requireNonNull(constants$525.StartDocA$MH,"StartDocA");
    }
    public static int StartDocA ( Addressable hdc,  Addressable lpdi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$525.StartDocA$MH, "StartDocA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpdi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocW$MH() {
        return RuntimeHelper.requireNonNull(constants$526.StartDocW$MH,"StartDocW");
    }
    public static int StartDocW ( Addressable hdc,  Addressable lpdi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.StartDocW$MH, "StartDocW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpdi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndDoc$MH() {
        return RuntimeHelper.requireNonNull(constants$526.EndDoc$MH,"EndDoc");
    }
    public static int EndDoc ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.EndDoc$MH, "EndDoc");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartPage$MH() {
        return RuntimeHelper.requireNonNull(constants$526.StartPage$MH,"StartPage");
    }
    public static int StartPage ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.StartPage$MH, "StartPage");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndPage$MH() {
        return RuntimeHelper.requireNonNull(constants$526.EndPage$MH,"EndPage");
    }
    public static int EndPage ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.EndPage$MH, "EndPage");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortDoc$MH() {
        return RuntimeHelper.requireNonNull(constants$526.AbortDoc$MH,"AbortDoc");
    }
    public static int AbortDoc ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.AbortDoc$MH, "AbortDoc");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetAbortProc$MH() {
        return RuntimeHelper.requireNonNull(constants$526.SetAbortProc$MH,"SetAbortProc");
    }
    public static int SetAbortProc ( Addressable hdc,  Addressable lpProc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$526.SetAbortProc$MH, "SetAbortProc");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpProc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortPath$MH() {
        return RuntimeHelper.requireNonNull(constants$527.AbortPath$MH,"AbortPath");
    }
    public static int AbortPath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$527.AbortPath$MH, "AbortPath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ArcTo$MH() {
        return RuntimeHelper.requireNonNull(constants$527.ArcTo$MH,"ArcTo");
    }
    public static int ArcTo ( Addressable hdc,  int left,  int top,  int right,  int bottom,  int xr1,  int yr1,  int xr2,  int yr2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$527.ArcTo$MH, "ArcTo");
        try {
            return (int)mh$.invokeExact(hdc.address(), left, top, right, bottom, xr1, yr1, xr2, yr2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BeginPath$MH() {
        return RuntimeHelper.requireNonNull(constants$527.BeginPath$MH,"BeginPath");
    }
    public static int BeginPath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$527.BeginPath$MH, "BeginPath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseFigure$MH() {
        return RuntimeHelper.requireNonNull(constants$527.CloseFigure$MH,"CloseFigure");
    }
    public static int CloseFigure ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$527.CloseFigure$MH, "CloseFigure");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndPath$MH() {
        return RuntimeHelper.requireNonNull(constants$527.EndPath$MH,"EndPath");
    }
    public static int EndPath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$527.EndPath$MH, "EndPath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FillPath$MH() {
        return RuntimeHelper.requireNonNull(constants$527.FillPath$MH,"FillPath");
    }
    public static int FillPath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$527.FillPath$MH, "FillPath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlattenPath$MH() {
        return RuntimeHelper.requireNonNull(constants$528.FlattenPath$MH,"FlattenPath");
    }
    public static int FlattenPath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.FlattenPath$MH, "FlattenPath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPath$MH() {
        return RuntimeHelper.requireNonNull(constants$528.GetPath$MH,"GetPath");
    }
    public static int GetPath ( Addressable hdc,  Addressable apt,  Addressable aj,  int cpt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.GetPath$MH, "GetPath");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), aj.address(), cpt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PathToRegion$MH() {
        return RuntimeHelper.requireNonNull(constants$528.PathToRegion$MH,"PathToRegion");
    }
    public static MemoryAddress PathToRegion ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.PathToRegion$MH, "PathToRegion");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolyDraw$MH() {
        return RuntimeHelper.requireNonNull(constants$528.PolyDraw$MH,"PolyDraw");
    }
    public static int PolyDraw ( Addressable hdc,  Addressable apt,  Addressable aj,  int cpt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.PolyDraw$MH, "PolyDraw");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), aj.address(), cpt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SelectClipPath$MH() {
        return RuntimeHelper.requireNonNull(constants$528.SelectClipPath$MH,"SelectClipPath");
    }
    public static int SelectClipPath ( Addressable hdc,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.SelectClipPath$MH, "SelectClipPath");
        try {
            return (int)mh$.invokeExact(hdc.address(), mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetArcDirection$MH() {
        return RuntimeHelper.requireNonNull(constants$528.SetArcDirection$MH,"SetArcDirection");
    }
    public static int SetArcDirection ( Addressable hdc,  int dir) {
        var mh$ = RuntimeHelper.requireNonNull(constants$528.SetArcDirection$MH, "SetArcDirection");
        try {
            return (int)mh$.invokeExact(hdc.address(), dir);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMiterLimit$MH() {
        return RuntimeHelper.requireNonNull(constants$529.SetMiterLimit$MH,"SetMiterLimit");
    }
    public static int SetMiterLimit ( Addressable hdc,  float limit,  Addressable old) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.SetMiterLimit$MH, "SetMiterLimit");
        try {
            return (int)mh$.invokeExact(hdc.address(), limit, old.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StrokeAndFillPath$MH() {
        return RuntimeHelper.requireNonNull(constants$529.StrokeAndFillPath$MH,"StrokeAndFillPath");
    }
    public static int StrokeAndFillPath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.StrokeAndFillPath$MH, "StrokeAndFillPath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StrokePath$MH() {
        return RuntimeHelper.requireNonNull(constants$529.StrokePath$MH,"StrokePath");
    }
    public static int StrokePath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.StrokePath$MH, "StrokePath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WidenPath$MH() {
        return RuntimeHelper.requireNonNull(constants$529.WidenPath$MH,"WidenPath");
    }
    public static int WidenPath ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.WidenPath$MH, "WidenPath");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtCreatePen$MH() {
        return RuntimeHelper.requireNonNull(constants$529.ExtCreatePen$MH,"ExtCreatePen");
    }
    public static MemoryAddress ExtCreatePen ( int iPenStyle,  int cWidth,  Addressable plbrush,  int cStyle,  Addressable pstyle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.ExtCreatePen$MH, "ExtCreatePen");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(iPenStyle, cWidth, plbrush.address(), cStyle, pstyle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMiterLimit$MH() {
        return RuntimeHelper.requireNonNull(constants$529.GetMiterLimit$MH,"GetMiterLimit");
    }
    public static int GetMiterLimit ( Addressable hdc,  Addressable plimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$529.GetMiterLimit$MH, "GetMiterLimit");
        try {
            return (int)mh$.invokeExact(hdc.address(), plimit.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetArcDirection$MH() {
        return RuntimeHelper.requireNonNull(constants$530.GetArcDirection$MH,"GetArcDirection");
    }
    public static int GetArcDirection ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.GetArcDirection$MH, "GetArcDirection");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetObjectA$MH() {
        return RuntimeHelper.requireNonNull(constants$530.GetObjectA$MH,"GetObjectA");
    }
    public static int GetObjectA ( Addressable h,  int c,  Addressable pv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.GetObjectA$MH, "GetObjectA");
        try {
            return (int)mh$.invokeExact(h.address(), c, pv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetObjectW$MH() {
        return RuntimeHelper.requireNonNull(constants$530.GetObjectW$MH,"GetObjectW");
    }
    public static int GetObjectW ( Addressable h,  int c,  Addressable pv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.GetObjectW$MH, "GetObjectW");
        try {
            return (int)mh$.invokeExact(h.address(), c, pv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MoveToEx$MH() {
        return RuntimeHelper.requireNonNull(constants$530.MoveToEx$MH,"MoveToEx");
    }
    public static int MoveToEx ( Addressable hdc,  int x,  int y,  Addressable lppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.MoveToEx$MH, "MoveToEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TextOutA$MH() {
        return RuntimeHelper.requireNonNull(constants$530.TextOutA$MH,"TextOutA");
    }
    public static int TextOutA ( Addressable hdc,  int x,  int y,  Addressable lpString,  int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.TextOutA$MH, "TextOutA");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lpString.address(), c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TextOutW$MH() {
        return RuntimeHelper.requireNonNull(constants$530.TextOutW$MH,"TextOutW");
    }
    public static int TextOutW ( Addressable hdc,  int x,  int y,  Addressable lpString,  int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$530.TextOutW$MH, "TextOutW");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lpString.address(), c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtTextOutA$MH() {
        return RuntimeHelper.requireNonNull(constants$531.ExtTextOutA$MH,"ExtTextOutA");
    }
    public static int ExtTextOutA ( Addressable hdc,  int x,  int y,  int options,  Addressable lprect,  Addressable lpString,  int c,  Addressable lpDx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.ExtTextOutA$MH, "ExtTextOutA");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, options, lprect.address(), lpString.address(), c, lpDx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtTextOutW$MH() {
        return RuntimeHelper.requireNonNull(constants$531.ExtTextOutW$MH,"ExtTextOutW");
    }
    public static int ExtTextOutW ( Addressable hdc,  int x,  int y,  int options,  Addressable lprect,  Addressable lpString,  int c,  Addressable lpDx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.ExtTextOutW$MH, "ExtTextOutW");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, options, lprect.address(), lpString.address(), c, lpDx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolyTextOutA$MH() {
        return RuntimeHelper.requireNonNull(constants$531.PolyTextOutA$MH,"PolyTextOutA");
    }
    public static int PolyTextOutA ( Addressable hdc,  Addressable ppt,  int nstrings) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.PolyTextOutA$MH, "PolyTextOutA");
        try {
            return (int)mh$.invokeExact(hdc.address(), ppt.address(), nstrings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolyTextOutW$MH() {
        return RuntimeHelper.requireNonNull(constants$531.PolyTextOutW$MH,"PolyTextOutW");
    }
    public static int PolyTextOutW ( Addressable hdc,  Addressable ppt,  int nstrings) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.PolyTextOutW$MH, "PolyTextOutW");
        try {
            return (int)mh$.invokeExact(hdc.address(), ppt.address(), nstrings);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreatePolygonRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$531.CreatePolygonRgn$MH,"CreatePolygonRgn");
    }
    public static MemoryAddress CreatePolygonRgn ( Addressable pptl,  int cPoint,  int iMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.CreatePolygonRgn$MH, "CreatePolygonRgn");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pptl.address(), cPoint, iMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DPtoLP$MH() {
        return RuntimeHelper.requireNonNull(constants$531.DPtoLP$MH,"DPtoLP");
    }
    public static int DPtoLP ( Addressable hdc,  Addressable lppt,  int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$531.DPtoLP$MH, "DPtoLP");
        try {
            return (int)mh$.invokeExact(hdc.address(), lppt.address(), c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LPtoDP$MH() {
        return RuntimeHelper.requireNonNull(constants$532.LPtoDP$MH,"LPtoDP");
    }
    public static int LPtoDP ( Addressable hdc,  Addressable lppt,  int c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.LPtoDP$MH, "LPtoDP");
        try {
            return (int)mh$.invokeExact(hdc.address(), lppt.address(), c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Polygon$MH() {
        return RuntimeHelper.requireNonNull(constants$532.Polygon$MH,"Polygon");
    }
    public static int Polygon ( Addressable hdc,  Addressable apt,  int cpt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.Polygon$MH, "Polygon");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), cpt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Polyline$MH() {
        return RuntimeHelper.requireNonNull(constants$532.Polyline$MH,"Polyline");
    }
    public static int Polyline ( Addressable hdc,  Addressable apt,  int cpt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.Polyline$MH, "Polyline");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), cpt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolyBezier$MH() {
        return RuntimeHelper.requireNonNull(constants$532.PolyBezier$MH,"PolyBezier");
    }
    public static int PolyBezier ( Addressable hdc,  Addressable apt,  int cpt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.PolyBezier$MH, "PolyBezier");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), cpt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolyBezierTo$MH() {
        return RuntimeHelper.requireNonNull(constants$532.PolyBezierTo$MH,"PolyBezierTo");
    }
    public static int PolyBezierTo ( Addressable hdc,  Addressable apt,  int cpt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.PolyBezierTo$MH, "PolyBezierTo");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), cpt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PolylineTo$MH() {
        return RuntimeHelper.requireNonNull(constants$532.PolylineTo$MH,"PolylineTo");
    }
    public static int PolylineTo ( Addressable hdc,  Addressable apt,  int cpt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$532.PolylineTo$MH, "PolylineTo");
        try {
            return (int)mh$.invokeExact(hdc.address(), apt.address(), cpt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetViewportExtEx$MH() {
        return RuntimeHelper.requireNonNull(constants$533.SetViewportExtEx$MH,"SetViewportExtEx");
    }
    public static int SetViewportExtEx ( Addressable hdc,  int x,  int y,  Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.SetViewportExtEx$MH, "SetViewportExtEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetViewportOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$533.SetViewportOrgEx$MH,"SetViewportOrgEx");
    }
    public static int SetViewportOrgEx ( Addressable hdc,  int x,  int y,  Addressable lppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.SetViewportOrgEx$MH, "SetViewportOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowExtEx$MH() {
        return RuntimeHelper.requireNonNull(constants$533.SetWindowExtEx$MH,"SetWindowExtEx");
    }
    public static int SetWindowExtEx ( Addressable hdc,  int x,  int y,  Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.SetWindowExtEx$MH, "SetWindowExtEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$533.SetWindowOrgEx$MH,"SetWindowOrgEx");
    }
    public static int SetWindowOrgEx ( Addressable hdc,  int x,  int y,  Addressable lppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.SetWindowOrgEx$MH, "SetWindowOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OffsetViewportOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$533.OffsetViewportOrgEx$MH,"OffsetViewportOrgEx");
    }
    public static int OffsetViewportOrgEx ( Addressable hdc,  int x,  int y,  Addressable lppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.OffsetViewportOrgEx$MH, "OffsetViewportOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OffsetWindowOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$533.OffsetWindowOrgEx$MH,"OffsetWindowOrgEx");
    }
    public static int OffsetWindowOrgEx ( Addressable hdc,  int x,  int y,  Addressable lppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$533.OffsetWindowOrgEx$MH, "OffsetWindowOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScaleViewportExtEx$MH() {
        return RuntimeHelper.requireNonNull(constants$534.ScaleViewportExtEx$MH,"ScaleViewportExtEx");
    }
    public static int ScaleViewportExtEx ( Addressable hdc,  int xn,  int dx,  int yn,  int yd,  Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.ScaleViewportExtEx$MH, "ScaleViewportExtEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), xn, dx, yn, yd, lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScaleWindowExtEx$MH() {
        return RuntimeHelper.requireNonNull(constants$534.ScaleWindowExtEx$MH,"ScaleWindowExtEx");
    }
    public static int ScaleWindowExtEx ( Addressable hdc,  int xn,  int xd,  int yn,  int yd,  Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.ScaleWindowExtEx$MH, "ScaleWindowExtEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), xn, xd, yn, yd, lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetBitmapDimensionEx$MH() {
        return RuntimeHelper.requireNonNull(constants$534.SetBitmapDimensionEx$MH,"SetBitmapDimensionEx");
    }
    public static int SetBitmapDimensionEx ( Addressable hbm,  int w,  int h,  Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.SetBitmapDimensionEx$MH, "SetBitmapDimensionEx");
        try {
            return (int)mh$.invokeExact(hbm.address(), w, h, lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetBrushOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$534.SetBrushOrgEx$MH,"SetBrushOrgEx");
    }
    public static int SetBrushOrgEx ( Addressable hdc,  int x,  int y,  Addressable lppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.SetBrushOrgEx$MH, "SetBrushOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextFaceA$MH() {
        return RuntimeHelper.requireNonNull(constants$534.GetTextFaceA$MH,"GetTextFaceA");
    }
    public static int GetTextFaceA ( Addressable hdc,  int c,  Addressable lpName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.GetTextFaceA$MH, "GetTextFaceA");
        try {
            return (int)mh$.invokeExact(hdc.address(), c, lpName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTextFaceW$MH() {
        return RuntimeHelper.requireNonNull(constants$534.GetTextFaceW$MH,"GetTextFaceW");
    }
    public static int GetTextFaceW ( Addressable hdc,  int c,  Addressable lpName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$534.GetTextFaceW$MH, "GetTextFaceW");
        try {
            return (int)mh$.invokeExact(hdc.address(), c, lpName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKerningPairsA$MH() {
        return RuntimeHelper.requireNonNull(constants$535.GetKerningPairsA$MH,"GetKerningPairsA");
    }
    public static int GetKerningPairsA ( Addressable hdc,  int nPairs,  Addressable lpKernPair) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.GetKerningPairsA$MH, "GetKerningPairsA");
        try {
            return (int)mh$.invokeExact(hdc.address(), nPairs, lpKernPair.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKerningPairsW$MH() {
        return RuntimeHelper.requireNonNull(constants$535.GetKerningPairsW$MH,"GetKerningPairsW");
    }
    public static int GetKerningPairsW ( Addressable hdc,  int nPairs,  Addressable lpKernPair) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.GetKerningPairsW$MH, "GetKerningPairsW");
        try {
            return (int)mh$.invokeExact(hdc.address(), nPairs, lpKernPair.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDCOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$535.GetDCOrgEx$MH,"GetDCOrgEx");
    }
    public static int GetDCOrgEx ( Addressable hdc,  Addressable lppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.GetDCOrgEx$MH, "GetDCOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), lppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FixBrushOrgEx$MH() {
        return RuntimeHelper.requireNonNull(constants$535.FixBrushOrgEx$MH,"FixBrushOrgEx");
    }
    public static int FixBrushOrgEx ( Addressable hdc,  int x,  int y,  Addressable ptl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.FixBrushOrgEx$MH, "FixBrushOrgEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, ptl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnrealizeObject$MH() {
        return RuntimeHelper.requireNonNull(constants$535.UnrealizeObject$MH,"UnrealizeObject");
    }
    public static int UnrealizeObject ( Addressable h) {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.UnrealizeObject$MH, "UnrealizeObject");
        try {
            return (int)mh$.invokeExact(h.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GdiFlush$MH() {
        return RuntimeHelper.requireNonNull(constants$535.GdiFlush$MH,"GdiFlush");
    }
    public static int GdiFlush () {
        var mh$ = RuntimeHelper.requireNonNull(constants$535.GdiFlush$MH, "GdiFlush");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GdiSetBatchLimit$MH() {
        return RuntimeHelper.requireNonNull(constants$536.GdiSetBatchLimit$MH,"GdiSetBatchLimit");
    }
    public static int GdiSetBatchLimit ( int dw) {
        var mh$ = RuntimeHelper.requireNonNull(constants$536.GdiSetBatchLimit$MH, "GdiSetBatchLimit");
        try {
            return (int)mh$.invokeExact(dw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GdiGetBatchLimit$MH() {
        return RuntimeHelper.requireNonNull(constants$536.GdiGetBatchLimit$MH,"GdiGetBatchLimit");
    }
    public static int GdiGetBatchLimit () {
        var mh$ = RuntimeHelper.requireNonNull(constants$536.GdiGetBatchLimit$MH, "GdiGetBatchLimit");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetICMMode$MH() {
        return RuntimeHelper.requireNonNull(constants$537.SetICMMode$MH,"SetICMMode");
    }
    public static int SetICMMode ( Addressable hdc,  int mode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$537.SetICMMode$MH, "SetICMMode");
        try {
            return (int)mh$.invokeExact(hdc.address(), mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CheckColorsInGamut$MH() {
        return RuntimeHelper.requireNonNull(constants$537.CheckColorsInGamut$MH,"CheckColorsInGamut");
    }
    public static int CheckColorsInGamut ( Addressable hdc,  Addressable lpRGBTriple,  Addressable dlpBuffer,  int nCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$537.CheckColorsInGamut$MH, "CheckColorsInGamut");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpRGBTriple.address(), dlpBuffer.address(), nCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetColorSpace$MH() {
        return RuntimeHelper.requireNonNull(constants$537.GetColorSpace$MH,"GetColorSpace");
    }
    public static MemoryAddress GetColorSpace ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$537.GetColorSpace$MH, "GetColorSpace");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLogColorSpaceA$MH() {
        return RuntimeHelper.requireNonNull(constants$537.GetLogColorSpaceA$MH,"GetLogColorSpaceA");
    }
    public static int GetLogColorSpaceA ( Addressable hColorSpace,  Addressable lpBuffer,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$537.GetLogColorSpaceA$MH, "GetLogColorSpaceA");
        try {
            return (int)mh$.invokeExact(hColorSpace.address(), lpBuffer.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLogColorSpaceW$MH() {
        return RuntimeHelper.requireNonNull(constants$537.GetLogColorSpaceW$MH,"GetLogColorSpaceW");
    }
    public static int GetLogColorSpaceW ( Addressable hColorSpace,  Addressable lpBuffer,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$537.GetLogColorSpaceW$MH, "GetLogColorSpaceW");
        try {
            return (int)mh$.invokeExact(hColorSpace.address(), lpBuffer.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateColorSpaceA$MH() {
        return RuntimeHelper.requireNonNull(constants$537.CreateColorSpaceA$MH,"CreateColorSpaceA");
    }
    public static MemoryAddress CreateColorSpaceA ( Addressable lplcs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$537.CreateColorSpaceA$MH, "CreateColorSpaceA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lplcs.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateColorSpaceW$MH() {
        return RuntimeHelper.requireNonNull(constants$538.CreateColorSpaceW$MH,"CreateColorSpaceW");
    }
    public static MemoryAddress CreateColorSpaceW ( Addressable lplcs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.CreateColorSpaceW$MH, "CreateColorSpaceW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lplcs.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetColorSpace$MH() {
        return RuntimeHelper.requireNonNull(constants$538.SetColorSpace$MH,"SetColorSpace");
    }
    public static MemoryAddress SetColorSpace ( Addressable hdc,  Addressable hcs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.SetColorSpace$MH, "SetColorSpace");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hdc.address(), hcs.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteColorSpace$MH() {
        return RuntimeHelper.requireNonNull(constants$538.DeleteColorSpace$MH,"DeleteColorSpace");
    }
    public static int DeleteColorSpace ( Addressable hcs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.DeleteColorSpace$MH, "DeleteColorSpace");
        try {
            return (int)mh$.invokeExact(hcs.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetICMProfileA$MH() {
        return RuntimeHelper.requireNonNull(constants$538.GetICMProfileA$MH,"GetICMProfileA");
    }
    public static int GetICMProfileA ( Addressable hdc,  Addressable pBufSize,  Addressable pszFilename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.GetICMProfileA$MH, "GetICMProfileA");
        try {
            return (int)mh$.invokeExact(hdc.address(), pBufSize.address(), pszFilename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetICMProfileW$MH() {
        return RuntimeHelper.requireNonNull(constants$538.GetICMProfileW$MH,"GetICMProfileW");
    }
    public static int GetICMProfileW ( Addressable hdc,  Addressable pBufSize,  Addressable pszFilename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.GetICMProfileW$MH, "GetICMProfileW");
        try {
            return (int)mh$.invokeExact(hdc.address(), pBufSize.address(), pszFilename.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetICMProfileA$MH() {
        return RuntimeHelper.requireNonNull(constants$538.SetICMProfileA$MH,"SetICMProfileA");
    }
    public static int SetICMProfileA ( Addressable hdc,  Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$538.SetICMProfileA$MH, "SetICMProfileA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetICMProfileW$MH() {
        return RuntimeHelper.requireNonNull(constants$539.SetICMProfileW$MH,"SetICMProfileW");
    }
    public static int SetICMProfileW ( Addressable hdc,  Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.SetICMProfileW$MH, "SetICMProfileW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDeviceGammaRamp$MH() {
        return RuntimeHelper.requireNonNull(constants$539.GetDeviceGammaRamp$MH,"GetDeviceGammaRamp");
    }
    public static int GetDeviceGammaRamp ( Addressable hdc,  Addressable lpRamp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.GetDeviceGammaRamp$MH, "GetDeviceGammaRamp");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpRamp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDeviceGammaRamp$MH() {
        return RuntimeHelper.requireNonNull(constants$539.SetDeviceGammaRamp$MH,"SetDeviceGammaRamp");
    }
    public static int SetDeviceGammaRamp ( Addressable hdc,  Addressable lpRamp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.SetDeviceGammaRamp$MH, "SetDeviceGammaRamp");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpRamp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ColorMatchToTarget$MH() {
        return RuntimeHelper.requireNonNull(constants$539.ColorMatchToTarget$MH,"ColorMatchToTarget");
    }
    public static int ColorMatchToTarget ( Addressable hdc,  Addressable hdcTarget,  int action) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.ColorMatchToTarget$MH, "ColorMatchToTarget");
        try {
            return (int)mh$.invokeExact(hdc.address(), hdcTarget.address(), action);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumICMProfilesA$MH() {
        return RuntimeHelper.requireNonNull(constants$539.EnumICMProfilesA$MH,"EnumICMProfilesA");
    }
    public static int EnumICMProfilesA ( Addressable hdc,  Addressable lpProc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.EnumICMProfilesA$MH, "EnumICMProfilesA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpProc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumICMProfilesW$MH() {
        return RuntimeHelper.requireNonNull(constants$539.EnumICMProfilesW$MH,"EnumICMProfilesW");
    }
    public static int EnumICMProfilesW ( Addressable hdc,  Addressable lpProc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$539.EnumICMProfilesW$MH, "EnumICMProfilesW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpProc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UpdateICMRegKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$540.UpdateICMRegKeyA$MH,"UpdateICMRegKeyA");
    }
    public static int UpdateICMRegKeyA ( int reserved,  Addressable lpszCMID,  Addressable lpszFileName,  int command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.UpdateICMRegKeyA$MH, "UpdateICMRegKeyA");
        try {
            return (int)mh$.invokeExact(reserved, lpszCMID.address(), lpszFileName.address(), command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UpdateICMRegKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$540.UpdateICMRegKeyW$MH,"UpdateICMRegKeyW");
    }
    public static int UpdateICMRegKeyW ( int reserved,  Addressable lpszCMID,  Addressable lpszFileName,  int command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.UpdateICMRegKeyW$MH, "UpdateICMRegKeyW");
        try {
            return (int)mh$.invokeExact(reserved, lpszCMID.address(), lpszFileName.address(), command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ColorCorrectPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$540.ColorCorrectPalette$MH,"ColorCorrectPalette");
    }
    public static int ColorCorrectPalette ( Addressable hdc,  Addressable hPal,  int deFirst,  int num) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.ColorCorrectPalette$MH, "ColorCorrectPalette");
        try {
            return (int)mh$.invokeExact(hdc.address(), hPal.address(), deFirst, num);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglCopyContext$MH() {
        return RuntimeHelper.requireNonNull(constants$540.wglCopyContext$MH,"wglCopyContext");
    }
    public static int wglCopyContext ( Addressable x0,  Addressable x1,  int x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.wglCopyContext$MH, "wglCopyContext");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglCreateContext$MH() {
        return RuntimeHelper.requireNonNull(constants$540.wglCreateContext$MH,"wglCreateContext");
    }
    public static MemoryAddress wglCreateContext ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.wglCreateContext$MH, "wglCreateContext");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglCreateLayerContext$MH() {
        return RuntimeHelper.requireNonNull(constants$540.wglCreateLayerContext$MH,"wglCreateLayerContext");
    }
    public static MemoryAddress wglCreateLayerContext ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$540.wglCreateLayerContext$MH, "wglCreateLayerContext");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglDeleteContext$MH() {
        return RuntimeHelper.requireNonNull(constants$541.wglDeleteContext$MH,"wglDeleteContext");
    }
    public static int wglDeleteContext ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.wglDeleteContext$MH, "wglDeleteContext");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglGetCurrentContext$MH() {
        return RuntimeHelper.requireNonNull(constants$541.wglGetCurrentContext$MH,"wglGetCurrentContext");
    }
    public static MemoryAddress wglGetCurrentContext () {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.wglGetCurrentContext$MH, "wglGetCurrentContext");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglGetCurrentDC$MH() {
        return RuntimeHelper.requireNonNull(constants$541.wglGetCurrentDC$MH,"wglGetCurrentDC");
    }
    public static MemoryAddress wglGetCurrentDC () {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.wglGetCurrentDC$MH, "wglGetCurrentDC");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglGetProcAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$541.wglGetProcAddress$MH,"wglGetProcAddress");
    }
    public static MemoryAddress wglGetProcAddress ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.wglGetProcAddress$MH, "wglGetProcAddress");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglMakeCurrent$MH() {
        return RuntimeHelper.requireNonNull(constants$541.wglMakeCurrent$MH,"wglMakeCurrent");
    }
    public static int wglMakeCurrent ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.wglMakeCurrent$MH, "wglMakeCurrent");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglShareLists$MH() {
        return RuntimeHelper.requireNonNull(constants$541.wglShareLists$MH,"wglShareLists");
    }
    public static int wglShareLists ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$541.wglShareLists$MH, "wglShareLists");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglUseFontBitmapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$542.wglUseFontBitmapsA$MH,"wglUseFontBitmapsA");
    }
    public static int wglUseFontBitmapsA ( Addressable x0,  int x1,  int x2,  int x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$542.wglUseFontBitmapsA$MH, "wglUseFontBitmapsA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglUseFontBitmapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$542.wglUseFontBitmapsW$MH,"wglUseFontBitmapsW");
    }
    public static int wglUseFontBitmapsW ( Addressable x0,  int x1,  int x2,  int x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$542.wglUseFontBitmapsW$MH, "wglUseFontBitmapsW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SwapBuffers$MH() {
        return RuntimeHelper.requireNonNull(constants$542.SwapBuffers$MH,"SwapBuffers");
    }
    public static int SwapBuffers ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$542.SwapBuffers$MH, "SwapBuffers");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglUseFontOutlinesA$MH() {
        return RuntimeHelper.requireNonNull(constants$542.wglUseFontOutlinesA$MH,"wglUseFontOutlinesA");
    }
    public static int wglUseFontOutlinesA ( Addressable x0,  int x1,  int x2,  int x3,  float x4,  float x5,  int x6,  Addressable x7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$542.wglUseFontOutlinesA$MH, "wglUseFontOutlinesA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3, x4, x5, x6, x7.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglUseFontOutlinesW$MH() {
        return RuntimeHelper.requireNonNull(constants$542.wglUseFontOutlinesW$MH,"wglUseFontOutlinesW");
    }
    public static int wglUseFontOutlinesW ( Addressable x0,  int x1,  int x2,  int x3,  float x4,  float x5,  int x6,  Addressable x7) {
        var mh$ = RuntimeHelper.requireNonNull(constants$542.wglUseFontOutlinesW$MH, "wglUseFontOutlinesW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3, x4, x5, x6, x7.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglDescribeLayerPlane$MH() {
        return RuntimeHelper.requireNonNull(constants$542.wglDescribeLayerPlane$MH,"wglDescribeLayerPlane");
    }
    public static int wglDescribeLayerPlane ( Addressable x0,  int x1,  int x2,  int x3,  Addressable x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$542.wglDescribeLayerPlane$MH, "wglDescribeLayerPlane");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3, x4.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglSetLayerPaletteEntries$MH() {
        return RuntimeHelper.requireNonNull(constants$543.wglSetLayerPaletteEntries$MH,"wglSetLayerPaletteEntries");
    }
    public static int wglSetLayerPaletteEntries ( Addressable x0,  int x1,  int x2,  int x3,  Addressable x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.wglSetLayerPaletteEntries$MH, "wglSetLayerPaletteEntries");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3, x4.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglGetLayerPaletteEntries$MH() {
        return RuntimeHelper.requireNonNull(constants$543.wglGetLayerPaletteEntries$MH,"wglGetLayerPaletteEntries");
    }
    public static int wglGetLayerPaletteEntries ( Addressable x0,  int x1,  int x2,  int x3,  Addressable x4) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.wglGetLayerPaletteEntries$MH, "wglGetLayerPaletteEntries");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3, x4.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglRealizeLayerPalette$MH() {
        return RuntimeHelper.requireNonNull(constants$543.wglRealizeLayerPalette$MH,"wglRealizeLayerPalette");
    }
    public static int wglRealizeLayerPalette ( Addressable x0,  int x1,  int x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.wglRealizeLayerPalette$MH, "wglRealizeLayerPalette");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglSwapLayerBuffers$MH() {
        return RuntimeHelper.requireNonNull(constants$543.wglSwapLayerBuffers$MH,"wglSwapLayerBuffers");
    }
    public static int wglSwapLayerBuffers ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.wglSwapLayerBuffers$MH, "wglSwapLayerBuffers");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wglSwapMultipleBuffers$MH() {
        return RuntimeHelper.requireNonNull(constants$543.wglSwapMultipleBuffers$MH,"wglSwapMultipleBuffers");
    }
    public static int wglSwapMultipleBuffers ( int x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$543.wglSwapMultipleBuffers$MH, "wglSwapMultipleBuffers");
        try {
            return (int)mh$.invokeExact(x0, x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wvsprintfA$MH() {
        return RuntimeHelper.requireNonNull(constants$552.wvsprintfA$MH,"wvsprintfA");
    }
    public static int wvsprintfA ( Addressable x0,  Addressable x1,  Addressable arglist) {
        var mh$ = RuntimeHelper.requireNonNull(constants$552.wvsprintfA$MH, "wvsprintfA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), arglist.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wvsprintfW$MH() {
        return RuntimeHelper.requireNonNull(constants$552.wvsprintfW$MH,"wvsprintfW");
    }
    public static int wvsprintfW ( Addressable x0,  Addressable x1,  Addressable arglist) {
        var mh$ = RuntimeHelper.requireNonNull(constants$552.wvsprintfW$MH, "wvsprintfW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), arglist.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wsprintfA$MH() {
        return RuntimeHelper.requireNonNull(constants$552.wsprintfA$MH,"wsprintfA");
    }
    public static int wsprintfA ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$552.wsprintfA$MH, "wsprintfA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wsprintfW$MH() {
        return RuntimeHelper.requireNonNull(constants$552.wsprintfW$MH,"wsprintfW");
    }
    public static int wsprintfW ( Addressable x0,  Addressable x1, Object... x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$552.wsprintfW$MH, "wsprintfW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadKeyboardLayoutA$MH() {
        return RuntimeHelper.requireNonNull(constants$552.LoadKeyboardLayoutA$MH,"LoadKeyboardLayoutA");
    }
    public static MemoryAddress LoadKeyboardLayoutA ( Addressable pwszKLID,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$552.LoadKeyboardLayoutA$MH, "LoadKeyboardLayoutA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pwszKLID.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadKeyboardLayoutW$MH() {
        return RuntimeHelper.requireNonNull(constants$553.LoadKeyboardLayoutW$MH,"LoadKeyboardLayoutW");
    }
    public static MemoryAddress LoadKeyboardLayoutW ( Addressable pwszKLID,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$553.LoadKeyboardLayoutW$MH, "LoadKeyboardLayoutW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pwszKLID.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ActivateKeyboardLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$553.ActivateKeyboardLayout$MH,"ActivateKeyboardLayout");
    }
    public static MemoryAddress ActivateKeyboardLayout ( Addressable hkl,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$553.ActivateKeyboardLayout$MH, "ActivateKeyboardLayout");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hkl.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ToUnicodeEx$MH() {
        return RuntimeHelper.requireNonNull(constants$553.ToUnicodeEx$MH,"ToUnicodeEx");
    }
    public static int ToUnicodeEx ( int wVirtKey,  int wScanCode,  Addressable lpKeyState,  Addressable pwszBuff,  int cchBuff,  int wFlags,  Addressable dwhkl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$553.ToUnicodeEx$MH, "ToUnicodeEx");
        try {
            return (int)mh$.invokeExact(wVirtKey, wScanCode, lpKeyState.address(), pwszBuff.address(), cchBuff, wFlags, dwhkl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnloadKeyboardLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$553.UnloadKeyboardLayout$MH,"UnloadKeyboardLayout");
    }
    public static int UnloadKeyboardLayout ( Addressable hkl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$553.UnloadKeyboardLayout$MH, "UnloadKeyboardLayout");
        try {
            return (int)mh$.invokeExact(hkl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyboardLayoutNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$553.GetKeyboardLayoutNameA$MH,"GetKeyboardLayoutNameA");
    }
    public static int GetKeyboardLayoutNameA ( Addressable pwszKLID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$553.GetKeyboardLayoutNameA$MH, "GetKeyboardLayoutNameA");
        try {
            return (int)mh$.invokeExact(pwszKLID.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyboardLayoutNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$553.GetKeyboardLayoutNameW$MH,"GetKeyboardLayoutNameW");
    }
    public static int GetKeyboardLayoutNameW ( Addressable pwszKLID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$553.GetKeyboardLayoutNameW$MH, "GetKeyboardLayoutNameW");
        try {
            return (int)mh$.invokeExact(pwszKLID.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyboardLayoutList$MH() {
        return RuntimeHelper.requireNonNull(constants$554.GetKeyboardLayoutList$MH,"GetKeyboardLayoutList");
    }
    public static int GetKeyboardLayoutList ( int nBuff,  Addressable lpList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$554.GetKeyboardLayoutList$MH, "GetKeyboardLayoutList");
        try {
            return (int)mh$.invokeExact(nBuff, lpList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyboardLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$554.GetKeyboardLayout$MH,"GetKeyboardLayout");
    }
    public static MemoryAddress GetKeyboardLayout ( int idThread) {
        var mh$ = RuntimeHelper.requireNonNull(constants$554.GetKeyboardLayout$MH, "GetKeyboardLayout");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idThread);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMouseMovePointsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$554.GetMouseMovePointsEx$MH,"GetMouseMovePointsEx");
    }
    public static int GetMouseMovePointsEx ( int cbSize,  Addressable lppt,  Addressable lpptBuf,  int nBufPoints,  int resolution) {
        var mh$ = RuntimeHelper.requireNonNull(constants$554.GetMouseMovePointsEx$MH, "GetMouseMovePointsEx");
        try {
            return (int)mh$.invokeExact(cbSize, lppt.address(), lpptBuf.address(), nBufPoints, resolution);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDesktopA$MH() {
        return RuntimeHelper.requireNonNull(constants$554.CreateDesktopA$MH,"CreateDesktopA");
    }
    public static MemoryAddress CreateDesktopA ( Addressable lpszDesktop,  Addressable lpszDevice,  Addressable pDevmode,  int dwFlags,  int dwDesiredAccess,  Addressable lpsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$554.CreateDesktopA$MH, "CreateDesktopA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszDesktop.address(), lpszDevice.address(), pDevmode.address(), dwFlags, dwDesiredAccess, lpsa.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDesktopW$MH() {
        return RuntimeHelper.requireNonNull(constants$554.CreateDesktopW$MH,"CreateDesktopW");
    }
    public static MemoryAddress CreateDesktopW ( Addressable lpszDesktop,  Addressable lpszDevice,  Addressable pDevmode,  int dwFlags,  int dwDesiredAccess,  Addressable lpsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$554.CreateDesktopW$MH, "CreateDesktopW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszDesktop.address(), lpszDevice.address(), pDevmode.address(), dwFlags, dwDesiredAccess, lpsa.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDesktopExA$MH() {
        return RuntimeHelper.requireNonNull(constants$554.CreateDesktopExA$MH,"CreateDesktopExA");
    }
    public static MemoryAddress CreateDesktopExA ( Addressable lpszDesktop,  Addressable lpszDevice,  Addressable pDevmode,  int dwFlags,  int dwDesiredAccess,  Addressable lpsa,  int ulHeapSize,  Addressable pvoid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$554.CreateDesktopExA$MH, "CreateDesktopExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszDesktop.address(), lpszDevice.address(), pDevmode.address(), dwFlags, dwDesiredAccess, lpsa.address(), ulHeapSize, pvoid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDesktopExW$MH() {
        return RuntimeHelper.requireNonNull(constants$555.CreateDesktopExW$MH,"CreateDesktopExW");
    }
    public static MemoryAddress CreateDesktopExW ( Addressable lpszDesktop,  Addressable lpszDevice,  Addressable pDevmode,  int dwFlags,  int dwDesiredAccess,  Addressable lpsa,  int ulHeapSize,  Addressable pvoid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$555.CreateDesktopExW$MH, "CreateDesktopExW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszDesktop.address(), lpszDevice.address(), pDevmode.address(), dwFlags, dwDesiredAccess, lpsa.address(), ulHeapSize, pvoid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenDesktopA$MH() {
        return RuntimeHelper.requireNonNull(constants$555.OpenDesktopA$MH,"OpenDesktopA");
    }
    public static MemoryAddress OpenDesktopA ( Addressable lpszDesktop,  int dwFlags,  int fInherit,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$555.OpenDesktopA$MH, "OpenDesktopA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszDesktop.address(), dwFlags, fInherit, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenDesktopW$MH() {
        return RuntimeHelper.requireNonNull(constants$555.OpenDesktopW$MH,"OpenDesktopW");
    }
    public static MemoryAddress OpenDesktopW ( Addressable lpszDesktop,  int dwFlags,  int fInherit,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$555.OpenDesktopW$MH, "OpenDesktopW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszDesktop.address(), dwFlags, fInherit, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenInputDesktop$MH() {
        return RuntimeHelper.requireNonNull(constants$555.OpenInputDesktop$MH,"OpenInputDesktop");
    }
    public static MemoryAddress OpenInputDesktop ( int dwFlags,  int fInherit,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$555.OpenInputDesktop$MH, "OpenInputDesktop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dwFlags, fInherit, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDesktopsA$MH() {
        return RuntimeHelper.requireNonNull(constants$555.EnumDesktopsA$MH,"EnumDesktopsA");
    }
    public static int EnumDesktopsA ( Addressable hwinsta,  Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$555.EnumDesktopsA$MH, "EnumDesktopsA");
        try {
            return (int)mh$.invokeExact(hwinsta.address(), lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDesktopsW$MH() {
        return RuntimeHelper.requireNonNull(constants$555.EnumDesktopsW$MH,"EnumDesktopsW");
    }
    public static int EnumDesktopsW ( Addressable hwinsta,  Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$555.EnumDesktopsW$MH, "EnumDesktopsW");
        try {
            return (int)mh$.invokeExact(hwinsta.address(), lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDesktopWindows$MH() {
        return RuntimeHelper.requireNonNull(constants$556.EnumDesktopWindows$MH,"EnumDesktopWindows");
    }
    public static int EnumDesktopWindows ( Addressable hDesktop,  Addressable lpfn,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.EnumDesktopWindows$MH, "EnumDesktopWindows");
        try {
            return (int)mh$.invokeExact(hDesktop.address(), lpfn.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SwitchDesktop$MH() {
        return RuntimeHelper.requireNonNull(constants$556.SwitchDesktop$MH,"SwitchDesktop");
    }
    public static int SwitchDesktop ( Addressable hDesktop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.SwitchDesktop$MH, "SwitchDesktop");
        try {
            return (int)mh$.invokeExact(hDesktop.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetThreadDesktop$MH() {
        return RuntimeHelper.requireNonNull(constants$556.SetThreadDesktop$MH,"SetThreadDesktop");
    }
    public static int SetThreadDesktop ( Addressable hDesktop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.SetThreadDesktop$MH, "SetThreadDesktop");
        try {
            return (int)mh$.invokeExact(hDesktop.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseDesktop$MH() {
        return RuntimeHelper.requireNonNull(constants$556.CloseDesktop$MH,"CloseDesktop");
    }
    public static int CloseDesktop ( Addressable hDesktop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.CloseDesktop$MH, "CloseDesktop");
        try {
            return (int)mh$.invokeExact(hDesktop.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetThreadDesktop$MH() {
        return RuntimeHelper.requireNonNull(constants$556.GetThreadDesktop$MH,"GetThreadDesktop");
    }
    public static MemoryAddress GetThreadDesktop ( int dwThreadId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.GetThreadDesktop$MH, "GetThreadDesktop");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dwThreadId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateWindowStationA$MH() {
        return RuntimeHelper.requireNonNull(constants$556.CreateWindowStationA$MH,"CreateWindowStationA");
    }
    public static MemoryAddress CreateWindowStationA ( Addressable lpwinsta,  int dwFlags,  int dwDesiredAccess,  Addressable lpsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$556.CreateWindowStationA$MH, "CreateWindowStationA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpwinsta.address(), dwFlags, dwDesiredAccess, lpsa.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateWindowStationW$MH() {
        return RuntimeHelper.requireNonNull(constants$557.CreateWindowStationW$MH,"CreateWindowStationW");
    }
    public static MemoryAddress CreateWindowStationW ( Addressable lpwinsta,  int dwFlags,  int dwDesiredAccess,  Addressable lpsa) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.CreateWindowStationW$MH, "CreateWindowStationW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpwinsta.address(), dwFlags, dwDesiredAccess, lpsa.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenWindowStationA$MH() {
        return RuntimeHelper.requireNonNull(constants$557.OpenWindowStationA$MH,"OpenWindowStationA");
    }
    public static MemoryAddress OpenWindowStationA ( Addressable lpszWinSta,  int fInherit,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.OpenWindowStationA$MH, "OpenWindowStationA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszWinSta.address(), fInherit, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenWindowStationW$MH() {
        return RuntimeHelper.requireNonNull(constants$557.OpenWindowStationW$MH,"OpenWindowStationW");
    }
    public static MemoryAddress OpenWindowStationW ( Addressable lpszWinSta,  int fInherit,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.OpenWindowStationW$MH, "OpenWindowStationW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszWinSta.address(), fInherit, dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumWindowStationsA$MH() {
        return RuntimeHelper.requireNonNull(constants$557.EnumWindowStationsA$MH,"EnumWindowStationsA");
    }
    public static int EnumWindowStationsA ( Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.EnumWindowStationsA$MH, "EnumWindowStationsA");
        try {
            return (int)mh$.invokeExact(lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumWindowStationsW$MH() {
        return RuntimeHelper.requireNonNull(constants$557.EnumWindowStationsW$MH,"EnumWindowStationsW");
    }
    public static int EnumWindowStationsW ( Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.EnumWindowStationsW$MH, "EnumWindowStationsW");
        try {
            return (int)mh$.invokeExact(lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseWindowStation$MH() {
        return RuntimeHelper.requireNonNull(constants$557.CloseWindowStation$MH,"CloseWindowStation");
    }
    public static int CloseWindowStation ( Addressable hWinSta) {
        var mh$ = RuntimeHelper.requireNonNull(constants$557.CloseWindowStation$MH, "CloseWindowStation");
        try {
            return (int)mh$.invokeExact(hWinSta.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetProcessWindowStation$MH() {
        return RuntimeHelper.requireNonNull(constants$558.SetProcessWindowStation$MH,"SetProcessWindowStation");
    }
    public static int SetProcessWindowStation ( Addressable hWinSta) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.SetProcessWindowStation$MH, "SetProcessWindowStation");
        try {
            return (int)mh$.invokeExact(hWinSta.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetProcessWindowStation$MH() {
        return RuntimeHelper.requireNonNull(constants$558.GetProcessWindowStation$MH,"GetProcessWindowStation");
    }
    public static MemoryAddress GetProcessWindowStation () {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.GetProcessWindowStation$MH, "GetProcessWindowStation");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetUserObjectSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$558.SetUserObjectSecurity$MH,"SetUserObjectSecurity");
    }
    public static int SetUserObjectSecurity ( Addressable hObj,  Addressable pSIRequested,  Addressable pSID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.SetUserObjectSecurity$MH, "SetUserObjectSecurity");
        try {
            return (int)mh$.invokeExact(hObj.address(), pSIRequested.address(), pSID.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserObjectSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$558.GetUserObjectSecurity$MH,"GetUserObjectSecurity");
    }
    public static int GetUserObjectSecurity ( Addressable hObj,  Addressable pSIRequested,  Addressable pSID,  int nLength,  Addressable lpnLengthNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.GetUserObjectSecurity$MH, "GetUserObjectSecurity");
        try {
            return (int)mh$.invokeExact(hObj.address(), pSIRequested.address(), pSID.address(), nLength, lpnLengthNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserObjectInformationA$MH() {
        return RuntimeHelper.requireNonNull(constants$558.GetUserObjectInformationA$MH,"GetUserObjectInformationA");
    }
    public static int GetUserObjectInformationA ( Addressable hObj,  int nIndex,  Addressable pvInfo,  int nLength,  Addressable lpnLengthNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.GetUserObjectInformationA$MH, "GetUserObjectInformationA");
        try {
            return (int)mh$.invokeExact(hObj.address(), nIndex, pvInfo.address(), nLength, lpnLengthNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserObjectInformationW$MH() {
        return RuntimeHelper.requireNonNull(constants$558.GetUserObjectInformationW$MH,"GetUserObjectInformationW");
    }
    public static int GetUserObjectInformationW ( Addressable hObj,  int nIndex,  Addressable pvInfo,  int nLength,  Addressable lpnLengthNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$558.GetUserObjectInformationW$MH, "GetUserObjectInformationW");
        try {
            return (int)mh$.invokeExact(hObj.address(), nIndex, pvInfo.address(), nLength, lpnLengthNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetUserObjectInformationA$MH() {
        return RuntimeHelper.requireNonNull(constants$559.SetUserObjectInformationA$MH,"SetUserObjectInformationA");
    }
    public static int SetUserObjectInformationA ( Addressable hObj,  int nIndex,  Addressable pvInfo,  int nLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.SetUserObjectInformationA$MH, "SetUserObjectInformationA");
        try {
            return (int)mh$.invokeExact(hObj.address(), nIndex, pvInfo.address(), nLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetUserObjectInformationW$MH() {
        return RuntimeHelper.requireNonNull(constants$559.SetUserObjectInformationW$MH,"SetUserObjectInformationW");
    }
    public static int SetUserObjectInformationW ( Addressable hObj,  int nIndex,  Addressable pvInfo,  int nLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.SetUserObjectInformationW$MH, "SetUserObjectInformationW");
        try {
            return (int)mh$.invokeExact(hObj.address(), nIndex, pvInfo.address(), nLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsHungAppWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$559.IsHungAppWindow$MH,"IsHungAppWindow");
    }
    public static int IsHungAppWindow ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.IsHungAppWindow$MH, "IsHungAppWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DisableProcessWindowsGhosting$MH() {
        return RuntimeHelper.requireNonNull(constants$559.DisableProcessWindowsGhosting$MH,"DisableProcessWindowsGhosting");
    }
    public static void DisableProcessWindowsGhosting () {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.DisableProcessWindowsGhosting$MH, "DisableProcessWindowsGhosting");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterWindowMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$559.RegisterWindowMessageA$MH,"RegisterWindowMessageA");
    }
    public static int RegisterWindowMessageA ( Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.RegisterWindowMessageA$MH, "RegisterWindowMessageA");
        try {
            return (int)mh$.invokeExact(lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterWindowMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$559.RegisterWindowMessageW$MH,"RegisterWindowMessageW");
    }
    public static int RegisterWindowMessageW ( Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$559.RegisterWindowMessageW$MH, "RegisterWindowMessageW");
        try {
            return (int)mh$.invokeExact(lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TrackMouseEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$560.TrackMouseEvent$MH,"TrackMouseEvent");
    }
    public static int TrackMouseEvent ( Addressable lpEventTrack) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.TrackMouseEvent$MH, "TrackMouseEvent");
        try {
            return (int)mh$.invokeExact(lpEventTrack.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawEdge$MH() {
        return RuntimeHelper.requireNonNull(constants$560.DrawEdge$MH,"DrawEdge");
    }
    public static int DrawEdge ( Addressable hdc,  Addressable qrc,  int edge,  int grfFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.DrawEdge$MH, "DrawEdge");
        try {
            return (int)mh$.invokeExact(hdc.address(), qrc.address(), edge, grfFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawFrameControl$MH() {
        return RuntimeHelper.requireNonNull(constants$560.DrawFrameControl$MH,"DrawFrameControl");
    }
    public static int DrawFrameControl ( Addressable x0,  Addressable x1,  int x2,  int x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.DrawFrameControl$MH, "DrawFrameControl");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawCaption$MH() {
        return RuntimeHelper.requireNonNull(constants$560.DrawCaption$MH,"DrawCaption");
    }
    public static int DrawCaption ( Addressable hwnd,  Addressable hdc,  Addressable lprect,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.DrawCaption$MH, "DrawCaption");
        try {
            return (int)mh$.invokeExact(hwnd.address(), hdc.address(), lprect.address(), flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawAnimatedRects$MH() {
        return RuntimeHelper.requireNonNull(constants$560.DrawAnimatedRects$MH,"DrawAnimatedRects");
    }
    public static int DrawAnimatedRects ( Addressable hwnd,  int idAni,  Addressable lprcFrom,  Addressable lprcTo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.DrawAnimatedRects$MH, "DrawAnimatedRects");
        try {
            return (int)mh$.invokeExact(hwnd.address(), idAni, lprcFrom.address(), lprcTo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$560.GetMessageA$MH,"GetMessageA");
    }
    public static int GetMessageA ( Addressable lpMsg,  Addressable hWnd,  int wMsgFilterMin,  int wMsgFilterMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$560.GetMessageA$MH, "GetMessageA");
        try {
            return (int)mh$.invokeExact(lpMsg.address(), hWnd.address(), wMsgFilterMin, wMsgFilterMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$561.GetMessageW$MH,"GetMessageW");
    }
    public static int GetMessageW ( Addressable lpMsg,  Addressable hWnd,  int wMsgFilterMin,  int wMsgFilterMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.GetMessageW$MH, "GetMessageW");
        try {
            return (int)mh$.invokeExact(lpMsg.address(), hWnd.address(), wMsgFilterMin, wMsgFilterMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TranslateMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$561.TranslateMessage$MH,"TranslateMessage");
    }
    public static int TranslateMessage ( Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.TranslateMessage$MH, "TranslateMessage");
        try {
            return (int)mh$.invokeExact(lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispatchMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$561.DispatchMessageA$MH,"DispatchMessageA");
    }
    public static long DispatchMessageA ( Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.DispatchMessageA$MH, "DispatchMessageA");
        try {
            return (long)mh$.invokeExact(lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispatchMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$561.DispatchMessageW$MH,"DispatchMessageW");
    }
    public static long DispatchMessageW ( Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.DispatchMessageW$MH, "DispatchMessageW");
        try {
            return (long)mh$.invokeExact(lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMessageQueue$MH() {
        return RuntimeHelper.requireNonNull(constants$561.SetMessageQueue$MH,"SetMessageQueue");
    }
    public static int SetMessageQueue ( int cMessagesMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.SetMessageQueue$MH, "SetMessageQueue");
        try {
            return (int)mh$.invokeExact(cMessagesMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PeekMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$561.PeekMessageA$MH,"PeekMessageA");
    }
    public static int PeekMessageA ( Addressable lpMsg,  Addressable hWnd,  int wMsgFilterMin,  int wMsgFilterMax,  int wRemoveMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$561.PeekMessageA$MH, "PeekMessageA");
        try {
            return (int)mh$.invokeExact(lpMsg.address(), hWnd.address(), wMsgFilterMin, wMsgFilterMax, wRemoveMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PeekMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$562.PeekMessageW$MH,"PeekMessageW");
    }
    public static int PeekMessageW ( Addressable lpMsg,  Addressable hWnd,  int wMsgFilterMin,  int wMsgFilterMax,  int wRemoveMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.PeekMessageW$MH, "PeekMessageW");
        try {
            return (int)mh$.invokeExact(lpMsg.address(), hWnd.address(), wMsgFilterMin, wMsgFilterMax, wRemoveMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterHotKey$MH() {
        return RuntimeHelper.requireNonNull(constants$562.RegisterHotKey$MH,"RegisterHotKey");
    }
    public static int RegisterHotKey ( Addressable hWnd,  int id,  int fsModifiers,  int vk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.RegisterHotKey$MH, "RegisterHotKey");
        try {
            return (int)mh$.invokeExact(hWnd.address(), id, fsModifiers, vk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnregisterHotKey$MH() {
        return RuntimeHelper.requireNonNull(constants$562.UnregisterHotKey$MH,"UnregisterHotKey");
    }
    public static int UnregisterHotKey ( Addressable hWnd,  int id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.UnregisterHotKey$MH, "UnregisterHotKey");
        try {
            return (int)mh$.invokeExact(hWnd.address(), id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExitWindowsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$562.ExitWindowsEx$MH,"ExitWindowsEx");
    }
    public static int ExitWindowsEx ( int uFlags,  int dwReason) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.ExitWindowsEx$MH, "ExitWindowsEx");
        try {
            return (int)mh$.invokeExact(uFlags, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SwapMouseButton$MH() {
        return RuntimeHelper.requireNonNull(constants$562.SwapMouseButton$MH,"SwapMouseButton");
    }
    public static int SwapMouseButton ( int fSwap) {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.SwapMouseButton$MH, "SwapMouseButton");
        try {
            return (int)mh$.invokeExact(fSwap);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMessagePos$MH() {
        return RuntimeHelper.requireNonNull(constants$562.GetMessagePos$MH,"GetMessagePos");
    }
    public static int GetMessagePos () {
        var mh$ = RuntimeHelper.requireNonNull(constants$562.GetMessagePos$MH, "GetMessagePos");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMessageTime$MH() {
        return RuntimeHelper.requireNonNull(constants$563.GetMessageTime$MH,"GetMessageTime");
    }
    public static int GetMessageTime () {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.GetMessageTime$MH, "GetMessageTime");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMessageExtraInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$563.GetMessageExtraInfo$MH,"GetMessageExtraInfo");
    }
    public static long GetMessageExtraInfo () {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.GetMessageExtraInfo$MH, "GetMessageExtraInfo");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsWow64Message$MH() {
        return RuntimeHelper.requireNonNull(constants$563.IsWow64Message$MH,"IsWow64Message");
    }
    public static int IsWow64Message () {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.IsWow64Message$MH, "IsWow64Message");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMessageExtraInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$563.SetMessageExtraInfo$MH,"SetMessageExtraInfo");
    }
    public static long SetMessageExtraInfo ( long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.SetMessageExtraInfo$MH, "SetMessageExtraInfo");
        try {
            return (long)mh$.invokeExact(lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$563.SendMessageA$MH,"SendMessageA");
    }
    public static long SendMessageA ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.SendMessageA$MH, "SendMessageA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$563.SendMessageW$MH,"SendMessageW");
    }
    public static long SendMessageW ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$563.SendMessageW$MH, "SendMessageW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendMessageTimeoutA$MH() {
        return RuntimeHelper.requireNonNull(constants$564.SendMessageTimeoutA$MH,"SendMessageTimeoutA");
    }
    public static long SendMessageTimeoutA ( Addressable hWnd,  int Msg,  long wParam,  long lParam,  int fuFlags,  int uTimeout,  Addressable lpdwResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.SendMessageTimeoutA$MH, "SendMessageTimeoutA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam, fuFlags, uTimeout, lpdwResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendMessageTimeoutW$MH() {
        return RuntimeHelper.requireNonNull(constants$564.SendMessageTimeoutW$MH,"SendMessageTimeoutW");
    }
    public static long SendMessageTimeoutW ( Addressable hWnd,  int Msg,  long wParam,  long lParam,  int fuFlags,  int uTimeout,  Addressable lpdwResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.SendMessageTimeoutW$MH, "SendMessageTimeoutW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam, fuFlags, uTimeout, lpdwResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendNotifyMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$564.SendNotifyMessageA$MH,"SendNotifyMessageA");
    }
    public static int SendNotifyMessageA ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.SendNotifyMessageA$MH, "SendNotifyMessageA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendNotifyMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$564.SendNotifyMessageW$MH,"SendNotifyMessageW");
    }
    public static int SendNotifyMessageW ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.SendNotifyMessageW$MH, "SendNotifyMessageW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendMessageCallbackA$MH() {
        return RuntimeHelper.requireNonNull(constants$564.SendMessageCallbackA$MH,"SendMessageCallbackA");
    }
    public static int SendMessageCallbackA ( Addressable hWnd,  int Msg,  long wParam,  long lParam,  Addressable lpResultCallBack,  long dwData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.SendMessageCallbackA$MH, "SendMessageCallbackA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam, lpResultCallBack.address(), dwData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendMessageCallbackW$MH() {
        return RuntimeHelper.requireNonNull(constants$564.SendMessageCallbackW$MH,"SendMessageCallbackW");
    }
    public static int SendMessageCallbackW ( Addressable hWnd,  int Msg,  long wParam,  long lParam,  Addressable lpResultCallBack,  long dwData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$564.SendMessageCallbackW$MH, "SendMessageCallbackW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam, lpResultCallBack.address(), dwData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BroadcastSystemMessageExA$MH() {
        return RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageExA$MH,"BroadcastSystemMessageExA");
    }
    public static int BroadcastSystemMessageExA ( int flags,  Addressable lpInfo,  int Msg,  long wParam,  long lParam,  Addressable pbsmInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageExA$MH, "BroadcastSystemMessageExA");
        try {
            return (int)mh$.invokeExact(flags, lpInfo.address(), Msg, wParam, lParam, pbsmInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BroadcastSystemMessageExW$MH() {
        return RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageExW$MH,"BroadcastSystemMessageExW");
    }
    public static int BroadcastSystemMessageExW ( int flags,  Addressable lpInfo,  int Msg,  long wParam,  long lParam,  Addressable pbsmInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageExW$MH, "BroadcastSystemMessageExW");
        try {
            return (int)mh$.invokeExact(flags, lpInfo.address(), Msg, wParam, lParam, pbsmInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BroadcastSystemMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageA$MH,"BroadcastSystemMessageA");
    }
    public static int BroadcastSystemMessageA ( int flags,  Addressable lpInfo,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageA$MH, "BroadcastSystemMessageA");
        try {
            return (int)mh$.invokeExact(flags, lpInfo.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BroadcastSystemMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageW$MH,"BroadcastSystemMessageW");
    }
    public static int BroadcastSystemMessageW ( int flags,  Addressable lpInfo,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.BroadcastSystemMessageW$MH, "BroadcastSystemMessageW");
        try {
            return (int)mh$.invokeExact(flags, lpInfo.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterPowerSettingNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$565.RegisterPowerSettingNotification$MH,"RegisterPowerSettingNotification");
    }
    public static MemoryAddress RegisterPowerSettingNotification ( Addressable hRecipient,  Addressable PowerSettingGuid,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.RegisterPowerSettingNotification$MH, "RegisterPowerSettingNotification");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hRecipient.address(), PowerSettingGuid.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnregisterPowerSettingNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$565.UnregisterPowerSettingNotification$MH,"UnregisterPowerSettingNotification");
    }
    public static int UnregisterPowerSettingNotification ( Addressable Handle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$565.UnregisterPowerSettingNotification$MH, "UnregisterPowerSettingNotification");
        try {
            return (int)mh$.invokeExact(Handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterSuspendResumeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$566.RegisterSuspendResumeNotification$MH,"RegisterSuspendResumeNotification");
    }
    public static MemoryAddress RegisterSuspendResumeNotification ( Addressable hRecipient,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.RegisterSuspendResumeNotification$MH, "RegisterSuspendResumeNotification");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hRecipient.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnregisterSuspendResumeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$566.UnregisterSuspendResumeNotification$MH,"UnregisterSuspendResumeNotification");
    }
    public static int UnregisterSuspendResumeNotification ( Addressable Handle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.UnregisterSuspendResumeNotification$MH, "UnregisterSuspendResumeNotification");
        try {
            return (int)mh$.invokeExact(Handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PostMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$566.PostMessageA$MH,"PostMessageA");
    }
    public static int PostMessageA ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.PostMessageA$MH, "PostMessageA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PostMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$566.PostMessageW$MH,"PostMessageW");
    }
    public static int PostMessageW ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.PostMessageW$MH, "PostMessageW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PostThreadMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$566.PostThreadMessageA$MH,"PostThreadMessageA");
    }
    public static int PostThreadMessageA ( int idThread,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.PostThreadMessageA$MH, "PostThreadMessageA");
        try {
            return (int)mh$.invokeExact(idThread, Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PostThreadMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$566.PostThreadMessageW$MH,"PostThreadMessageW");
    }
    public static int PostThreadMessageW ( int idThread,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$566.PostThreadMessageW$MH, "PostThreadMessageW");
        try {
            return (int)mh$.invokeExact(idThread, Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AttachThreadInput$MH() {
        return RuntimeHelper.requireNonNull(constants$567.AttachThreadInput$MH,"AttachThreadInput");
    }
    public static int AttachThreadInput ( int idAttach,  int idAttachTo,  int fAttach) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.AttachThreadInput$MH, "AttachThreadInput");
        try {
            return (int)mh$.invokeExact(idAttach, idAttachTo, fAttach);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReplyMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$567.ReplyMessage$MH,"ReplyMessage");
    }
    public static int ReplyMessage ( long lResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.ReplyMessage$MH, "ReplyMessage");
        try {
            return (int)mh$.invokeExact(lResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WaitMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$567.WaitMessage$MH,"WaitMessage");
    }
    public static int WaitMessage () {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.WaitMessage$MH, "WaitMessage");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WaitForInputIdle$MH() {
        return RuntimeHelper.requireNonNull(constants$567.WaitForInputIdle$MH,"WaitForInputIdle");
    }
    public static int WaitForInputIdle ( Addressable hProcess,  int dwMilliseconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.WaitForInputIdle$MH, "WaitForInputIdle");
        try {
            return (int)mh$.invokeExact(hProcess.address(), dwMilliseconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefWindowProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$567.DefWindowProcA$MH,"DefWindowProcA");
    }
    public static long DefWindowProcA ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.DefWindowProcA$MH, "DefWindowProcA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefWindowProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$567.DefWindowProcW$MH,"DefWindowProcW");
    }
    public static long DefWindowProcW ( Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$567.DefWindowProcW$MH, "DefWindowProcW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PostQuitMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$568.PostQuitMessage$MH,"PostQuitMessage");
    }
    public static void PostQuitMessage ( int nExitCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.PostQuitMessage$MH, "PostQuitMessage");
        try {
            mh$.invokeExact(nExitCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InSendMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$568.InSendMessage$MH,"InSendMessage");
    }
    public static int InSendMessage () {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.InSendMessage$MH, "InSendMessage");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InSendMessageEx$MH() {
        return RuntimeHelper.requireNonNull(constants$568.InSendMessageEx$MH,"InSendMessageEx");
    }
    public static int InSendMessageEx ( Addressable lpReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.InSendMessageEx$MH, "InSendMessageEx");
        try {
            return (int)mh$.invokeExact(lpReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDoubleClickTime$MH() {
        return RuntimeHelper.requireNonNull(constants$568.GetDoubleClickTime$MH,"GetDoubleClickTime");
    }
    public static int GetDoubleClickTime () {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.GetDoubleClickTime$MH, "GetDoubleClickTime");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDoubleClickTime$MH() {
        return RuntimeHelper.requireNonNull(constants$568.SetDoubleClickTime$MH,"SetDoubleClickTime");
    }
    public static int SetDoubleClickTime ( int x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.SetDoubleClickTime$MH, "SetDoubleClickTime");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterClassA$MH() {
        return RuntimeHelper.requireNonNull(constants$568.RegisterClassA$MH,"RegisterClassA");
    }
    public static short RegisterClassA ( Addressable lpWndClass) {
        var mh$ = RuntimeHelper.requireNonNull(constants$568.RegisterClassA$MH, "RegisterClassA");
        try {
            return (short)mh$.invokeExact(lpWndClass.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterClassW$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegisterClassW$MH,"RegisterClassW");
    }
    public static short RegisterClassW ( Addressable lpWndClass) {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.RegisterClassW$MH, "RegisterClassW");
        try {
            return (short)mh$.invokeExact(lpWndClass.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnregisterClassA$MH() {
        return RuntimeHelper.requireNonNull(constants$569.UnregisterClassA$MH,"UnregisterClassA");
    }
    public static int UnregisterClassA ( Addressable lpClassName,  Addressable hInstance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.UnregisterClassA$MH, "UnregisterClassA");
        try {
            return (int)mh$.invokeExact(lpClassName.address(), hInstance.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnregisterClassW$MH() {
        return RuntimeHelper.requireNonNull(constants$569.UnregisterClassW$MH,"UnregisterClassW");
    }
    public static int UnregisterClassW ( Addressable lpClassName,  Addressable hInstance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.UnregisterClassW$MH, "UnregisterClassW");
        try {
            return (int)mh$.invokeExact(lpClassName.address(), hInstance.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$569.GetClassInfoA$MH,"GetClassInfoA");
    }
    public static int GetClassInfoA ( Addressable hInstance,  Addressable lpClassName,  Addressable lpWndClass) {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.GetClassInfoA$MH, "GetClassInfoA");
        try {
            return (int)mh$.invokeExact(hInstance.address(), lpClassName.address(), lpWndClass.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$569.GetClassInfoW$MH,"GetClassInfoW");
    }
    public static int GetClassInfoW ( Addressable hInstance,  Addressable lpClassName,  Addressable lpWndClass) {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.GetClassInfoW$MH, "GetClassInfoW");
        try {
            return (int)mh$.invokeExact(hInstance.address(), lpClassName.address(), lpWndClass.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterClassExA$MH() {
        return RuntimeHelper.requireNonNull(constants$569.RegisterClassExA$MH,"RegisterClassExA");
    }
    public static short RegisterClassExA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$569.RegisterClassExA$MH, "RegisterClassExA");
        try {
            return (short)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterClassExW$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegisterClassExW$MH,"RegisterClassExW");
    }
    public static short RegisterClassExW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$570.RegisterClassExW$MH, "RegisterClassExW");
        try {
            return (short)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$570.GetClassInfoExA$MH,"GetClassInfoExA");
    }
    public static int GetClassInfoExA ( Addressable hInstance,  Addressable lpszClass,  Addressable lpwcx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$570.GetClassInfoExA$MH, "GetClassInfoExA");
        try {
            return (int)mh$.invokeExact(hInstance.address(), lpszClass.address(), lpwcx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$570.GetClassInfoExW$MH,"GetClassInfoExW");
    }
    public static int GetClassInfoExW ( Addressable hInstance,  Addressable lpszClass,  Addressable lpwcx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$570.GetClassInfoExW$MH, "GetClassInfoExW");
        try {
            return (int)mh$.invokeExact(hInstance.address(), lpszClass.address(), lpwcx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CallWindowProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$570.CallWindowProcA$MH,"CallWindowProcA");
    }
    public static long CallWindowProcA ( Addressable lpPrevWndFunc,  Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$570.CallWindowProcA$MH, "CallWindowProcA");
        try {
            return (long)mh$.invokeExact(lpPrevWndFunc.address(), hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CallWindowProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$570.CallWindowProcW$MH,"CallWindowProcW");
    }
    public static long CallWindowProcW ( Addressable lpPrevWndFunc,  Addressable hWnd,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$570.CallWindowProcW$MH, "CallWindowProcW");
        try {
            return (long)mh$.invokeExact(lpPrevWndFunc.address(), hWnd.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterDeviceNotificationA$MH() {
        return RuntimeHelper.requireNonNull(constants$570.RegisterDeviceNotificationA$MH,"RegisterDeviceNotificationA");
    }
    public static MemoryAddress RegisterDeviceNotificationA ( Addressable hRecipient,  Addressable NotificationFilter,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$570.RegisterDeviceNotificationA$MH, "RegisterDeviceNotificationA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hRecipient.address(), NotificationFilter.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterDeviceNotificationW$MH() {
        return RuntimeHelper.requireNonNull(constants$571.RegisterDeviceNotificationW$MH,"RegisterDeviceNotificationW");
    }
    public static MemoryAddress RegisterDeviceNotificationW ( Addressable hRecipient,  Addressable NotificationFilter,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.RegisterDeviceNotificationW$MH, "RegisterDeviceNotificationW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hRecipient.address(), NotificationFilter.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnregisterDeviceNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$571.UnregisterDeviceNotification$MH,"UnregisterDeviceNotification");
    }
    public static int UnregisterDeviceNotification ( Addressable Handle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.UnregisterDeviceNotification$MH, "UnregisterDeviceNotification");
        try {
            return (int)mh$.invokeExact(Handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateWindowExA$MH() {
        return RuntimeHelper.requireNonNull(constants$571.CreateWindowExA$MH,"CreateWindowExA");
    }
    public static MemoryAddress CreateWindowExA ( int dwExStyle,  Addressable lpClassName,  Addressable lpWindowName,  int dwStyle,  int X,  int Y,  int nWidth,  int nHeight,  Addressable hWndParent,  Addressable hMenu,  Addressable hInstance,  Addressable lpParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.CreateWindowExA$MH, "CreateWindowExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dwExStyle, lpClassName.address(), lpWindowName.address(), dwStyle, X, Y, nWidth, nHeight, hWndParent.address(), hMenu.address(), hInstance.address(), lpParam.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateWindowExW$MH() {
        return RuntimeHelper.requireNonNull(constants$571.CreateWindowExW$MH,"CreateWindowExW");
    }
    public static MemoryAddress CreateWindowExW ( int dwExStyle,  Addressable lpClassName,  Addressable lpWindowName,  int dwStyle,  int X,  int Y,  int nWidth,  int nHeight,  Addressable hWndParent,  Addressable hMenu,  Addressable hInstance,  Addressable lpParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$571.CreateWindowExW$MH, "CreateWindowExW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dwExStyle, lpClassName.address(), lpWindowName.address(), dwStyle, X, Y, nWidth, nHeight, hWndParent.address(), hMenu.address(), hInstance.address(), lpParam.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$572.IsWindow$MH,"IsWindow");
    }
    public static int IsWindow ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.IsWindow$MH, "IsWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$572.IsMenu$MH,"IsMenu");
    }
    public static int IsMenu ( Addressable hMenu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.IsMenu$MH, "IsMenu");
        try {
            return (int)mh$.invokeExact(hMenu.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsChild$MH() {
        return RuntimeHelper.requireNonNull(constants$572.IsChild$MH,"IsChild");
    }
    public static int IsChild ( Addressable hWndParent,  Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.IsChild$MH, "IsChild");
        try {
            return (int)mh$.invokeExact(hWndParent.address(), hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$572.DestroyWindow$MH,"DestroyWindow");
    }
    public static int DestroyWindow ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.DestroyWindow$MH, "DestroyWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShowWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$572.ShowWindow$MH,"ShowWindow");
    }
    public static int ShowWindow ( Addressable hWnd,  int nCmdShow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.ShowWindow$MH, "ShowWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nCmdShow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AnimateWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$572.AnimateWindow$MH,"AnimateWindow");
    }
    public static int AnimateWindow ( Addressable hWnd,  int dwTime,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$572.AnimateWindow$MH, "AnimateWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), dwTime, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UpdateLayeredWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$573.UpdateLayeredWindow$MH,"UpdateLayeredWindow");
    }
    public static int UpdateLayeredWindow ( Addressable hWnd,  Addressable hdcDst,  Addressable pptDst,  Addressable psize,  Addressable hdcSrc,  Addressable pptSrc,  int crKey,  Addressable pblend,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.UpdateLayeredWindow$MH, "UpdateLayeredWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hdcDst.address(), pptDst.address(), psize.address(), hdcSrc.address(), pptSrc.address(), crKey, pblend.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UpdateLayeredWindowIndirect$MH() {
        return RuntimeHelper.requireNonNull(constants$573.UpdateLayeredWindowIndirect$MH,"UpdateLayeredWindowIndirect");
    }
    public static int UpdateLayeredWindowIndirect ( Addressable hWnd,  Addressable pULWInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.UpdateLayeredWindowIndirect$MH, "UpdateLayeredWindowIndirect");
        try {
            return (int)mh$.invokeExact(hWnd.address(), pULWInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLayeredWindowAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$573.GetLayeredWindowAttributes$MH,"GetLayeredWindowAttributes");
    }
    public static int GetLayeredWindowAttributes ( Addressable hwnd,  Addressable pcrKey,  Addressable pbAlpha,  Addressable pdwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.GetLayeredWindowAttributes$MH, "GetLayeredWindowAttributes");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pcrKey.address(), pbAlpha.address(), pdwFlags.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrintWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$573.PrintWindow$MH,"PrintWindow");
    }
    public static int PrintWindow ( Addressable hwnd,  Addressable hdcBlt,  int nFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.PrintWindow$MH, "PrintWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address(), hdcBlt.address(), nFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetLayeredWindowAttributes$MH() {
        return RuntimeHelper.requireNonNull(constants$573.SetLayeredWindowAttributes$MH,"SetLayeredWindowAttributes");
    }
    public static int SetLayeredWindowAttributes ( Addressable hwnd,  int crKey,  byte bAlpha,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.SetLayeredWindowAttributes$MH, "SetLayeredWindowAttributes");
        try {
            return (int)mh$.invokeExact(hwnd.address(), crKey, bAlpha, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShowWindowAsync$MH() {
        return RuntimeHelper.requireNonNull(constants$573.ShowWindowAsync$MH,"ShowWindowAsync");
    }
    public static int ShowWindowAsync ( Addressable hWnd,  int nCmdShow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$573.ShowWindowAsync$MH, "ShowWindowAsync");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nCmdShow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlashWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$574.FlashWindow$MH,"FlashWindow");
    }
    public static int FlashWindow ( Addressable hWnd,  int bInvert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.FlashWindow$MH, "FlashWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), bInvert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlashWindowEx$MH() {
        return RuntimeHelper.requireNonNull(constants$574.FlashWindowEx$MH,"FlashWindowEx");
    }
    public static int FlashWindowEx ( Addressable pfwi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.FlashWindowEx$MH, "FlashWindowEx");
        try {
            return (int)mh$.invokeExact(pfwi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShowOwnedPopups$MH() {
        return RuntimeHelper.requireNonNull(constants$574.ShowOwnedPopups$MH,"ShowOwnedPopups");
    }
    public static int ShowOwnedPopups ( Addressable hWnd,  int fShow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.ShowOwnedPopups$MH, "ShowOwnedPopups");
        try {
            return (int)mh$.invokeExact(hWnd.address(), fShow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$574.OpenIcon$MH,"OpenIcon");
    }
    public static int OpenIcon ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.OpenIcon$MH, "OpenIcon");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$574.CloseWindow$MH,"CloseWindow");
    }
    public static int CloseWindow ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.CloseWindow$MH, "CloseWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MoveWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$574.MoveWindow$MH,"MoveWindow");
    }
    public static int MoveWindow ( Addressable hWnd,  int X,  int Y,  int nWidth,  int nHeight,  int bRepaint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$574.MoveWindow$MH, "MoveWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), X, Y, nWidth, nHeight, bRepaint);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$575.SetWindowPos$MH,"SetWindowPos");
    }
    public static int SetWindowPos ( Addressable hWnd,  Addressable hWndInsertAfter,  int X,  int Y,  int cx,  int cy,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.SetWindowPos$MH, "SetWindowPos");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hWndInsertAfter.address(), X, Y, cx, cy, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowPlacement$MH() {
        return RuntimeHelper.requireNonNull(constants$575.GetWindowPlacement$MH,"GetWindowPlacement");
    }
    public static int GetWindowPlacement ( Addressable hWnd,  Addressable lpwndpl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.GetWindowPlacement$MH, "GetWindowPlacement");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpwndpl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowPlacement$MH() {
        return RuntimeHelper.requireNonNull(constants$575.SetWindowPlacement$MH,"SetWindowPlacement");
    }
    public static int SetWindowPlacement ( Addressable hWnd,  Addressable lpwndpl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.SetWindowPlacement$MH, "SetWindowPlacement");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpwndpl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowDisplayAffinity$MH() {
        return RuntimeHelper.requireNonNull(constants$575.GetWindowDisplayAffinity$MH,"GetWindowDisplayAffinity");
    }
    public static int GetWindowDisplayAffinity ( Addressable hWnd,  Addressable pdwAffinity) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.GetWindowDisplayAffinity$MH, "GetWindowDisplayAffinity");
        try {
            return (int)mh$.invokeExact(hWnd.address(), pdwAffinity.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowDisplayAffinity$MH() {
        return RuntimeHelper.requireNonNull(constants$575.SetWindowDisplayAffinity$MH,"SetWindowDisplayAffinity");
    }
    public static int SetWindowDisplayAffinity ( Addressable hWnd,  int dwAffinity) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.SetWindowDisplayAffinity$MH, "SetWindowDisplayAffinity");
        try {
            return (int)mh$.invokeExact(hWnd.address(), dwAffinity);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BeginDeferWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$575.BeginDeferWindowPos$MH,"BeginDeferWindowPos");
    }
    public static MemoryAddress BeginDeferWindowPos ( int nNumWindows) {
        var mh$ = RuntimeHelper.requireNonNull(constants$575.BeginDeferWindowPos$MH, "BeginDeferWindowPos");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(nNumWindows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeferWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$576.DeferWindowPos$MH,"DeferWindowPos");
    }
    public static MemoryAddress DeferWindowPos ( Addressable hWinPosInfo,  Addressable hWnd,  Addressable hWndInsertAfter,  int x,  int y,  int cx,  int cy,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.DeferWindowPos$MH, "DeferWindowPos");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWinPosInfo.address(), hWnd.address(), hWndInsertAfter.address(), x, y, cx, cy, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndDeferWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$576.EndDeferWindowPos$MH,"EndDeferWindowPos");
    }
    public static int EndDeferWindowPos ( Addressable hWinPosInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.EndDeferWindowPos$MH, "EndDeferWindowPos");
        try {
            return (int)mh$.invokeExact(hWinPosInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsWindowVisible$MH() {
        return RuntimeHelper.requireNonNull(constants$576.IsWindowVisible$MH,"IsWindowVisible");
    }
    public static int IsWindowVisible ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.IsWindowVisible$MH, "IsWindowVisible");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsIconic$MH() {
        return RuntimeHelper.requireNonNull(constants$576.IsIconic$MH,"IsIconic");
    }
    public static int IsIconic ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.IsIconic$MH, "IsIconic");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AnyPopup$MH() {
        return RuntimeHelper.requireNonNull(constants$576.AnyPopup$MH,"AnyPopup");
    }
    public static int AnyPopup () {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.AnyPopup$MH, "AnyPopup");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BringWindowToTop$MH() {
        return RuntimeHelper.requireNonNull(constants$576.BringWindowToTop$MH,"BringWindowToTop");
    }
    public static int BringWindowToTop ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$576.BringWindowToTop$MH, "BringWindowToTop");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsZoomed$MH() {
        return RuntimeHelper.requireNonNull(constants$577.IsZoomed$MH,"IsZoomed");
    }
    public static int IsZoomed ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.IsZoomed$MH, "IsZoomed");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDialogParamA$MH() {
        return RuntimeHelper.requireNonNull(constants$577.CreateDialogParamA$MH,"CreateDialogParamA");
    }
    public static MemoryAddress CreateDialogParamA ( Addressable hInstance,  Addressable lpTemplateName,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.CreateDialogParamA$MH, "CreateDialogParamA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpTemplateName.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDialogParamW$MH() {
        return RuntimeHelper.requireNonNull(constants$577.CreateDialogParamW$MH,"CreateDialogParamW");
    }
    public static MemoryAddress CreateDialogParamW ( Addressable hInstance,  Addressable lpTemplateName,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.CreateDialogParamW$MH, "CreateDialogParamW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpTemplateName.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDialogIndirectParamA$MH() {
        return RuntimeHelper.requireNonNull(constants$577.CreateDialogIndirectParamA$MH,"CreateDialogIndirectParamA");
    }
    public static MemoryAddress CreateDialogIndirectParamA ( Addressable hInstance,  Addressable lpTemplate,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.CreateDialogIndirectParamA$MH, "CreateDialogIndirectParamA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpTemplate.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDialogIndirectParamW$MH() {
        return RuntimeHelper.requireNonNull(constants$577.CreateDialogIndirectParamW$MH,"CreateDialogIndirectParamW");
    }
    public static MemoryAddress CreateDialogIndirectParamW ( Addressable hInstance,  Addressable lpTemplate,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.CreateDialogIndirectParamW$MH, "CreateDialogIndirectParamW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpTemplate.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DialogBoxParamA$MH() {
        return RuntimeHelper.requireNonNull(constants$577.DialogBoxParamA$MH,"DialogBoxParamA");
    }
    public static long DialogBoxParamA ( Addressable hInstance,  Addressable lpTemplateName,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$577.DialogBoxParamA$MH, "DialogBoxParamA");
        try {
            return (long)mh$.invokeExact(hInstance.address(), lpTemplateName.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DialogBoxParamW$MH() {
        return RuntimeHelper.requireNonNull(constants$578.DialogBoxParamW$MH,"DialogBoxParamW");
    }
    public static long DialogBoxParamW ( Addressable hInstance,  Addressable lpTemplateName,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.DialogBoxParamW$MH, "DialogBoxParamW");
        try {
            return (long)mh$.invokeExact(hInstance.address(), lpTemplateName.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DialogBoxIndirectParamA$MH() {
        return RuntimeHelper.requireNonNull(constants$578.DialogBoxIndirectParamA$MH,"DialogBoxIndirectParamA");
    }
    public static long DialogBoxIndirectParamA ( Addressable hInstance,  Addressable hDialogTemplate,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.DialogBoxIndirectParamA$MH, "DialogBoxIndirectParamA");
        try {
            return (long)mh$.invokeExact(hInstance.address(), hDialogTemplate.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DialogBoxIndirectParamW$MH() {
        return RuntimeHelper.requireNonNull(constants$578.DialogBoxIndirectParamW$MH,"DialogBoxIndirectParamW");
    }
    public static long DialogBoxIndirectParamW ( Addressable hInstance,  Addressable hDialogTemplate,  Addressable hWndParent,  Addressable lpDialogFunc,  long dwInitParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.DialogBoxIndirectParamW$MH, "DialogBoxIndirectParamW");
        try {
            return (long)mh$.invokeExact(hInstance.address(), hDialogTemplate.address(), hWndParent.address(), lpDialogFunc.address(), dwInitParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$578.EndDialog$MH,"EndDialog");
    }
    public static int EndDialog ( Addressable hDlg,  long nResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.EndDialog$MH, "EndDialog");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nResult);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDlgItem$MH() {
        return RuntimeHelper.requireNonNull(constants$578.GetDlgItem$MH,"GetDlgItem");
    }
    public static MemoryAddress GetDlgItem ( Addressable hDlg,  int nIDDlgItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.GetDlgItem$MH, "GetDlgItem");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hDlg.address(), nIDDlgItem);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDlgItemInt$MH() {
        return RuntimeHelper.requireNonNull(constants$578.SetDlgItemInt$MH,"SetDlgItemInt");
    }
    public static int SetDlgItemInt ( Addressable hDlg,  int nIDDlgItem,  int uValue,  int bSigned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$578.SetDlgItemInt$MH, "SetDlgItemInt");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDDlgItem, uValue, bSigned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDlgItemInt$MH() {
        return RuntimeHelper.requireNonNull(constants$579.GetDlgItemInt$MH,"GetDlgItemInt");
    }
    public static int GetDlgItemInt ( Addressable hDlg,  int nIDDlgItem,  Addressable lpTranslated,  int bSigned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.GetDlgItemInt$MH, "GetDlgItemInt");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDDlgItem, lpTranslated.address(), bSigned);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDlgItemTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$579.SetDlgItemTextA$MH,"SetDlgItemTextA");
    }
    public static int SetDlgItemTextA ( Addressable hDlg,  int nIDDlgItem,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.SetDlgItemTextA$MH, "SetDlgItemTextA");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDDlgItem, lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDlgItemTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$579.SetDlgItemTextW$MH,"SetDlgItemTextW");
    }
    public static int SetDlgItemTextW ( Addressable hDlg,  int nIDDlgItem,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.SetDlgItemTextW$MH, "SetDlgItemTextW");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDDlgItem, lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDlgItemTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$579.GetDlgItemTextA$MH,"GetDlgItemTextA");
    }
    public static int GetDlgItemTextA ( Addressable hDlg,  int nIDDlgItem,  Addressable lpString,  int cchMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.GetDlgItemTextA$MH, "GetDlgItemTextA");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDDlgItem, lpString.address(), cchMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDlgItemTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$579.GetDlgItemTextW$MH,"GetDlgItemTextW");
    }
    public static int GetDlgItemTextW ( Addressable hDlg,  int nIDDlgItem,  Addressable lpString,  int cchMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.GetDlgItemTextW$MH, "GetDlgItemTextW");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDDlgItem, lpString.address(), cchMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CheckDlgButton$MH() {
        return RuntimeHelper.requireNonNull(constants$579.CheckDlgButton$MH,"CheckDlgButton");
    }
    public static int CheckDlgButton ( Addressable hDlg,  int nIDButton,  int uCheck) {
        var mh$ = RuntimeHelper.requireNonNull(constants$579.CheckDlgButton$MH, "CheckDlgButton");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDButton, uCheck);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CheckRadioButton$MH() {
        return RuntimeHelper.requireNonNull(constants$580.CheckRadioButton$MH,"CheckRadioButton");
    }
    public static int CheckRadioButton ( Addressable hDlg,  int nIDFirstButton,  int nIDLastButton,  int nIDCheckButton) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.CheckRadioButton$MH, "CheckRadioButton");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDFirstButton, nIDLastButton, nIDCheckButton);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsDlgButtonChecked$MH() {
        return RuntimeHelper.requireNonNull(constants$580.IsDlgButtonChecked$MH,"IsDlgButtonChecked");
    }
    public static int IsDlgButtonChecked ( Addressable hDlg,  int nIDButton) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.IsDlgButtonChecked$MH, "IsDlgButtonChecked");
        try {
            return (int)mh$.invokeExact(hDlg.address(), nIDButton);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendDlgItemMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$580.SendDlgItemMessageA$MH,"SendDlgItemMessageA");
    }
    public static long SendDlgItemMessageA ( Addressable hDlg,  int nIDDlgItem,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.SendDlgItemMessageA$MH, "SendDlgItemMessageA");
        try {
            return (long)mh$.invokeExact(hDlg.address(), nIDDlgItem, Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendDlgItemMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$580.SendDlgItemMessageW$MH,"SendDlgItemMessageW");
    }
    public static long SendDlgItemMessageW ( Addressable hDlg,  int nIDDlgItem,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.SendDlgItemMessageW$MH, "SendDlgItemMessageW");
        try {
            return (long)mh$.invokeExact(hDlg.address(), nIDDlgItem, Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNextDlgGroupItem$MH() {
        return RuntimeHelper.requireNonNull(constants$580.GetNextDlgGroupItem$MH,"GetNextDlgGroupItem");
    }
    public static MemoryAddress GetNextDlgGroupItem ( Addressable hDlg,  Addressable hCtl,  int bPrevious) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.GetNextDlgGroupItem$MH, "GetNextDlgGroupItem");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hDlg.address(), hCtl.address(), bPrevious);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNextDlgTabItem$MH() {
        return RuntimeHelper.requireNonNull(constants$580.GetNextDlgTabItem$MH,"GetNextDlgTabItem");
    }
    public static MemoryAddress GetNextDlgTabItem ( Addressable hDlg,  Addressable hCtl,  int bPrevious) {
        var mh$ = RuntimeHelper.requireNonNull(constants$580.GetNextDlgTabItem$MH, "GetNextDlgTabItem");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hDlg.address(), hCtl.address(), bPrevious);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDlgCtrlID$MH() {
        return RuntimeHelper.requireNonNull(constants$581.GetDlgCtrlID$MH,"GetDlgCtrlID");
    }
    public static int GetDlgCtrlID ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.GetDlgCtrlID$MH, "GetDlgCtrlID");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDialogBaseUnits$MH() {
        return RuntimeHelper.requireNonNull(constants$581.GetDialogBaseUnits$MH,"GetDialogBaseUnits");
    }
    public static int GetDialogBaseUnits () {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.GetDialogBaseUnits$MH, "GetDialogBaseUnits");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefDlgProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$581.DefDlgProcA$MH,"DefDlgProcA");
    }
    public static long DefDlgProcA ( Addressable hDlg,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.DefDlgProcA$MH, "DefDlgProcA");
        try {
            return (long)mh$.invokeExact(hDlg.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefDlgProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$581.DefDlgProcW$MH,"DefDlgProcW");
    }
    public static long DefDlgProcW ( Addressable hDlg,  int Msg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.DefDlgProcW$MH, "DefDlgProcW");
        try {
            return (long)mh$.invokeExact(hDlg.address(), Msg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int DCDC_DEFAULT() {
        return (int)0L;
    }
    public static int DCDC_DISABLE_FONT_UPDATE() {
        return (int)1L;
    }
    public static int DCDC_DISABLE_RELAYOUT() {
        return (int)2L;
    }
    public static MethodHandle SetDialogControlDpiChangeBehavior$MH() {
        return RuntimeHelper.requireNonNull(constants$581.SetDialogControlDpiChangeBehavior$MH,"SetDialogControlDpiChangeBehavior");
    }
    public static int SetDialogControlDpiChangeBehavior ( Addressable hWnd,  int mask,  int values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.SetDialogControlDpiChangeBehavior$MH, "SetDialogControlDpiChangeBehavior");
        try {
            return (int)mh$.invokeExact(hWnd.address(), mask, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDialogControlDpiChangeBehavior$MH() {
        return RuntimeHelper.requireNonNull(constants$581.GetDialogControlDpiChangeBehavior$MH,"GetDialogControlDpiChangeBehavior");
    }
    public static int GetDialogControlDpiChangeBehavior ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$581.GetDialogControlDpiChangeBehavior$MH, "GetDialogControlDpiChangeBehavior");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int DDC_DEFAULT() {
        return (int)0L;
    }
    public static int DDC_DISABLE_ALL() {
        return (int)1L;
    }
    public static int DDC_DISABLE_RESIZE() {
        return (int)2L;
    }
    public static int DDC_DISABLE_CONTROL_RELAYOUT() {
        return (int)4L;
    }
    public static MethodHandle SetDialogDpiChangeBehavior$MH() {
        return RuntimeHelper.requireNonNull(constants$582.SetDialogDpiChangeBehavior$MH,"SetDialogDpiChangeBehavior");
    }
    public static int SetDialogDpiChangeBehavior ( Addressable hDlg,  int mask,  int values) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.SetDialogDpiChangeBehavior$MH, "SetDialogDpiChangeBehavior");
        try {
            return (int)mh$.invokeExact(hDlg.address(), mask, values);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDialogDpiChangeBehavior$MH() {
        return RuntimeHelper.requireNonNull(constants$582.GetDialogDpiChangeBehavior$MH,"GetDialogDpiChangeBehavior");
    }
    public static int GetDialogDpiChangeBehavior ( Addressable hDlg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.GetDialogDpiChangeBehavior$MH, "GetDialogDpiChangeBehavior");
        try {
            return (int)mh$.invokeExact(hDlg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CallMsgFilterA$MH() {
        return RuntimeHelper.requireNonNull(constants$582.CallMsgFilterA$MH,"CallMsgFilterA");
    }
    public static int CallMsgFilterA ( Addressable lpMsg,  int nCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.CallMsgFilterA$MH, "CallMsgFilterA");
        try {
            return (int)mh$.invokeExact(lpMsg.address(), nCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CallMsgFilterW$MH() {
        return RuntimeHelper.requireNonNull(constants$582.CallMsgFilterW$MH,"CallMsgFilterW");
    }
    public static int CallMsgFilterW ( Addressable lpMsg,  int nCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.CallMsgFilterW$MH, "CallMsgFilterW");
        try {
            return (int)mh$.invokeExact(lpMsg.address(), nCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$582.OpenClipboard$MH,"OpenClipboard");
    }
    public static int OpenClipboard ( Addressable hWndNewOwner) {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.OpenClipboard$MH, "OpenClipboard");
        try {
            return (int)mh$.invokeExact(hWndNewOwner.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$582.CloseClipboard$MH,"CloseClipboard");
    }
    public static int CloseClipboard () {
        var mh$ = RuntimeHelper.requireNonNull(constants$582.CloseClipboard$MH, "CloseClipboard");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClipboardSequenceNumber$MH() {
        return RuntimeHelper.requireNonNull(constants$583.GetClipboardSequenceNumber$MH,"GetClipboardSequenceNumber");
    }
    public static int GetClipboardSequenceNumber () {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.GetClipboardSequenceNumber$MH, "GetClipboardSequenceNumber");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClipboardOwner$MH() {
        return RuntimeHelper.requireNonNull(constants$583.GetClipboardOwner$MH,"GetClipboardOwner");
    }
    public static MemoryAddress GetClipboardOwner () {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.GetClipboardOwner$MH, "GetClipboardOwner");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetClipboardViewer$MH() {
        return RuntimeHelper.requireNonNull(constants$583.SetClipboardViewer$MH,"SetClipboardViewer");
    }
    public static MemoryAddress SetClipboardViewer ( Addressable hWndNewViewer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.SetClipboardViewer$MH, "SetClipboardViewer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWndNewViewer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClipboardViewer$MH() {
        return RuntimeHelper.requireNonNull(constants$583.GetClipboardViewer$MH,"GetClipboardViewer");
    }
    public static MemoryAddress GetClipboardViewer () {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.GetClipboardViewer$MH, "GetClipboardViewer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeClipboardChain$MH() {
        return RuntimeHelper.requireNonNull(constants$583.ChangeClipboardChain$MH,"ChangeClipboardChain");
    }
    public static int ChangeClipboardChain ( Addressable hWndRemove,  Addressable hWndNewNext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.ChangeClipboardChain$MH, "ChangeClipboardChain");
        try {
            return (int)mh$.invokeExact(hWndRemove.address(), hWndNewNext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetClipboardData$MH() {
        return RuntimeHelper.requireNonNull(constants$583.SetClipboardData$MH,"SetClipboardData");
    }
    public static MemoryAddress SetClipboardData ( int uFormat,  Addressable hMem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$583.SetClipboardData$MH, "SetClipboardData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(uFormat, hMem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClipboardData$MH() {
        return RuntimeHelper.requireNonNull(constants$584.GetClipboardData$MH,"GetClipboardData");
    }
    public static MemoryAddress GetClipboardData ( int uFormat) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.GetClipboardData$MH, "GetClipboardData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(uFormat);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterClipboardFormatA$MH() {
        return RuntimeHelper.requireNonNull(constants$584.RegisterClipboardFormatA$MH,"RegisterClipboardFormatA");
    }
    public static int RegisterClipboardFormatA ( Addressable lpszFormat) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.RegisterClipboardFormatA$MH, "RegisterClipboardFormatA");
        try {
            return (int)mh$.invokeExact(lpszFormat.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterClipboardFormatW$MH() {
        return RuntimeHelper.requireNonNull(constants$584.RegisterClipboardFormatW$MH,"RegisterClipboardFormatW");
    }
    public static int RegisterClipboardFormatW ( Addressable lpszFormat) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.RegisterClipboardFormatW$MH, "RegisterClipboardFormatW");
        try {
            return (int)mh$.invokeExact(lpszFormat.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CountClipboardFormats$MH() {
        return RuntimeHelper.requireNonNull(constants$584.CountClipboardFormats$MH,"CountClipboardFormats");
    }
    public static int CountClipboardFormats () {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.CountClipboardFormats$MH, "CountClipboardFormats");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumClipboardFormats$MH() {
        return RuntimeHelper.requireNonNull(constants$584.EnumClipboardFormats$MH,"EnumClipboardFormats");
    }
    public static int EnumClipboardFormats ( int format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.EnumClipboardFormats$MH, "EnumClipboardFormats");
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClipboardFormatNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$584.GetClipboardFormatNameA$MH,"GetClipboardFormatNameA");
    }
    public static int GetClipboardFormatNameA ( int format,  Addressable lpszFormatName,  int cchMaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$584.GetClipboardFormatNameA$MH, "GetClipboardFormatNameA");
        try {
            return (int)mh$.invokeExact(format, lpszFormatName.address(), cchMaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClipboardFormatNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$585.GetClipboardFormatNameW$MH,"GetClipboardFormatNameW");
    }
    public static int GetClipboardFormatNameW ( int format,  Addressable lpszFormatName,  int cchMaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.GetClipboardFormatNameW$MH, "GetClipboardFormatNameW");
        try {
            return (int)mh$.invokeExact(format, lpszFormatName.address(), cchMaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EmptyClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$585.EmptyClipboard$MH,"EmptyClipboard");
    }
    public static int EmptyClipboard () {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.EmptyClipboard$MH, "EmptyClipboard");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsClipboardFormatAvailable$MH() {
        return RuntimeHelper.requireNonNull(constants$585.IsClipboardFormatAvailable$MH,"IsClipboardFormatAvailable");
    }
    public static int IsClipboardFormatAvailable ( int format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.IsClipboardFormatAvailable$MH, "IsClipboardFormatAvailable");
        try {
            return (int)mh$.invokeExact(format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPriorityClipboardFormat$MH() {
        return RuntimeHelper.requireNonNull(constants$585.GetPriorityClipboardFormat$MH,"GetPriorityClipboardFormat");
    }
    public static int GetPriorityClipboardFormat ( Addressable paFormatPriorityList,  int cFormats) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.GetPriorityClipboardFormat$MH, "GetPriorityClipboardFormat");
        try {
            return (int)mh$.invokeExact(paFormatPriorityList.address(), cFormats);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOpenClipboardWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$585.GetOpenClipboardWindow$MH,"GetOpenClipboardWindow");
    }
    public static MemoryAddress GetOpenClipboardWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.GetOpenClipboardWindow$MH, "GetOpenClipboardWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddClipboardFormatListener$MH() {
        return RuntimeHelper.requireNonNull(constants$585.AddClipboardFormatListener$MH,"AddClipboardFormatListener");
    }
    public static int AddClipboardFormatListener ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$585.AddClipboardFormatListener$MH, "AddClipboardFormatListener");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveClipboardFormatListener$MH() {
        return RuntimeHelper.requireNonNull(constants$586.RemoveClipboardFormatListener$MH,"RemoveClipboardFormatListener");
    }
    public static int RemoveClipboardFormatListener ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.RemoveClipboardFormatListener$MH, "RemoveClipboardFormatListener");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUpdatedClipboardFormats$MH() {
        return RuntimeHelper.requireNonNull(constants$586.GetUpdatedClipboardFormats$MH,"GetUpdatedClipboardFormats");
    }
    public static int GetUpdatedClipboardFormats ( Addressable lpuiFormats,  int cFormats,  Addressable pcFormatsOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.GetUpdatedClipboardFormats$MH, "GetUpdatedClipboardFormats");
        try {
            return (int)mh$.invokeExact(lpuiFormats.address(), cFormats, pcFormatsOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharToOemA$MH() {
        return RuntimeHelper.requireNonNull(constants$586.CharToOemA$MH,"CharToOemA");
    }
    public static int CharToOemA ( Addressable lpszSrc,  Addressable lpszDst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.CharToOemA$MH, "CharToOemA");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharToOemW$MH() {
        return RuntimeHelper.requireNonNull(constants$586.CharToOemW$MH,"CharToOemW");
    }
    public static int CharToOemW ( Addressable lpszSrc,  Addressable lpszDst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.CharToOemW$MH, "CharToOemW");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OemToCharA$MH() {
        return RuntimeHelper.requireNonNull(constants$586.OemToCharA$MH,"OemToCharA");
    }
    public static int OemToCharA ( Addressable lpszSrc,  Addressable lpszDst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.OemToCharA$MH, "OemToCharA");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OemToCharW$MH() {
        return RuntimeHelper.requireNonNull(constants$586.OemToCharW$MH,"OemToCharW");
    }
    public static int OemToCharW ( Addressable lpszSrc,  Addressable lpszDst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$586.OemToCharW$MH, "OemToCharW");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharToOemBuffA$MH() {
        return RuntimeHelper.requireNonNull(constants$587.CharToOemBuffA$MH,"CharToOemBuffA");
    }
    public static int CharToOemBuffA ( Addressable lpszSrc,  Addressable lpszDst,  int cchDstLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.CharToOemBuffA$MH, "CharToOemBuffA");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address(), cchDstLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharToOemBuffW$MH() {
        return RuntimeHelper.requireNonNull(constants$587.CharToOemBuffW$MH,"CharToOemBuffW");
    }
    public static int CharToOemBuffW ( Addressable lpszSrc,  Addressable lpszDst,  int cchDstLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.CharToOemBuffW$MH, "CharToOemBuffW");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address(), cchDstLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OemToCharBuffA$MH() {
        return RuntimeHelper.requireNonNull(constants$587.OemToCharBuffA$MH,"OemToCharBuffA");
    }
    public static int OemToCharBuffA ( Addressable lpszSrc,  Addressable lpszDst,  int cchDstLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.OemToCharBuffA$MH, "OemToCharBuffA");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address(), cchDstLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OemToCharBuffW$MH() {
        return RuntimeHelper.requireNonNull(constants$587.OemToCharBuffW$MH,"OemToCharBuffW");
    }
    public static int OemToCharBuffW ( Addressable lpszSrc,  Addressable lpszDst,  int cchDstLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.OemToCharBuffW$MH, "OemToCharBuffW");
        try {
            return (int)mh$.invokeExact(lpszSrc.address(), lpszDst.address(), cchDstLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharUpperA$MH() {
        return RuntimeHelper.requireNonNull(constants$587.CharUpperA$MH,"CharUpperA");
    }
    public static MemoryAddress CharUpperA ( Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.CharUpperA$MH, "CharUpperA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharUpperW$MH() {
        return RuntimeHelper.requireNonNull(constants$587.CharUpperW$MH,"CharUpperW");
    }
    public static MemoryAddress CharUpperW ( Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$587.CharUpperW$MH, "CharUpperW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharUpperBuffA$MH() {
        return RuntimeHelper.requireNonNull(constants$588.CharUpperBuffA$MH,"CharUpperBuffA");
    }
    public static int CharUpperBuffA ( Addressable lpsz,  int cchLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.CharUpperBuffA$MH, "CharUpperBuffA");
        try {
            return (int)mh$.invokeExact(lpsz.address(), cchLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharUpperBuffW$MH() {
        return RuntimeHelper.requireNonNull(constants$588.CharUpperBuffW$MH,"CharUpperBuffW");
    }
    public static int CharUpperBuffW ( Addressable lpsz,  int cchLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.CharUpperBuffW$MH, "CharUpperBuffW");
        try {
            return (int)mh$.invokeExact(lpsz.address(), cchLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharLowerA$MH() {
        return RuntimeHelper.requireNonNull(constants$588.CharLowerA$MH,"CharLowerA");
    }
    public static MemoryAddress CharLowerA ( Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.CharLowerA$MH, "CharLowerA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharLowerW$MH() {
        return RuntimeHelper.requireNonNull(constants$588.CharLowerW$MH,"CharLowerW");
    }
    public static MemoryAddress CharLowerW ( Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.CharLowerW$MH, "CharLowerW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharLowerBuffA$MH() {
        return RuntimeHelper.requireNonNull(constants$588.CharLowerBuffA$MH,"CharLowerBuffA");
    }
    public static int CharLowerBuffA ( Addressable lpsz,  int cchLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.CharLowerBuffA$MH, "CharLowerBuffA");
        try {
            return (int)mh$.invokeExact(lpsz.address(), cchLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharLowerBuffW$MH() {
        return RuntimeHelper.requireNonNull(constants$588.CharLowerBuffW$MH,"CharLowerBuffW");
    }
    public static int CharLowerBuffW ( Addressable lpsz,  int cchLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$588.CharLowerBuffW$MH, "CharLowerBuffW");
        try {
            return (int)mh$.invokeExact(lpsz.address(), cchLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$589.CharNextA$MH,"CharNextA");
    }
    public static MemoryAddress CharNextA ( Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.CharNextA$MH, "CharNextA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$589.CharNextW$MH,"CharNextW");
    }
    public static MemoryAddress CharNextW ( Addressable lpsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.CharNextW$MH, "CharNextW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharPrevA$MH() {
        return RuntimeHelper.requireNonNull(constants$589.CharPrevA$MH,"CharPrevA");
    }
    public static MemoryAddress CharPrevA ( Addressable lpszStart,  Addressable lpszCurrent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.CharPrevA$MH, "CharPrevA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszStart.address(), lpszCurrent.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharPrevW$MH() {
        return RuntimeHelper.requireNonNull(constants$589.CharPrevW$MH,"CharPrevW");
    }
    public static MemoryAddress CharPrevW ( Addressable lpszStart,  Addressable lpszCurrent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.CharPrevW$MH, "CharPrevW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszStart.address(), lpszCurrent.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharNextExA$MH() {
        return RuntimeHelper.requireNonNull(constants$589.CharNextExA$MH,"CharNextExA");
    }
    public static MemoryAddress CharNextExA ( short CodePage,  Addressable lpCurrentChar,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.CharNextExA$MH, "CharNextExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(CodePage, lpCurrentChar.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CharPrevExA$MH() {
        return RuntimeHelper.requireNonNull(constants$589.CharPrevExA$MH,"CharPrevExA");
    }
    public static MemoryAddress CharPrevExA ( short CodePage,  Addressable lpStart,  Addressable lpCurrentChar,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$589.CharPrevExA$MH, "CharPrevExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(CodePage, lpStart.address(), lpCurrentChar.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharAlphaA$MH() {
        return RuntimeHelper.requireNonNull(constants$590.IsCharAlphaA$MH,"IsCharAlphaA");
    }
    public static int IsCharAlphaA ( byte ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.IsCharAlphaA$MH, "IsCharAlphaA");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharAlphaW$MH() {
        return RuntimeHelper.requireNonNull(constants$590.IsCharAlphaW$MH,"IsCharAlphaW");
    }
    public static int IsCharAlphaW ( short ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.IsCharAlphaW$MH, "IsCharAlphaW");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharAlphaNumericA$MH() {
        return RuntimeHelper.requireNonNull(constants$590.IsCharAlphaNumericA$MH,"IsCharAlphaNumericA");
    }
    public static int IsCharAlphaNumericA ( byte ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.IsCharAlphaNumericA$MH, "IsCharAlphaNumericA");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharAlphaNumericW$MH() {
        return RuntimeHelper.requireNonNull(constants$590.IsCharAlphaNumericW$MH,"IsCharAlphaNumericW");
    }
    public static int IsCharAlphaNumericW ( short ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.IsCharAlphaNumericW$MH, "IsCharAlphaNumericW");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharUpperA$MH() {
        return RuntimeHelper.requireNonNull(constants$590.IsCharUpperA$MH,"IsCharUpperA");
    }
    public static int IsCharUpperA ( byte ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.IsCharUpperA$MH, "IsCharUpperA");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharUpperW$MH() {
        return RuntimeHelper.requireNonNull(constants$590.IsCharUpperW$MH,"IsCharUpperW");
    }
    public static int IsCharUpperW ( short ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$590.IsCharUpperW$MH, "IsCharUpperW");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharLowerA$MH() {
        return RuntimeHelper.requireNonNull(constants$591.IsCharLowerA$MH,"IsCharLowerA");
    }
    public static int IsCharLowerA ( byte ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.IsCharLowerA$MH, "IsCharLowerA");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsCharLowerW$MH() {
        return RuntimeHelper.requireNonNull(constants$591.IsCharLowerW$MH,"IsCharLowerW");
    }
    public static int IsCharLowerW ( short ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.IsCharLowerW$MH, "IsCharLowerW");
        try {
            return (int)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFocus$MH() {
        return RuntimeHelper.requireNonNull(constants$591.SetFocus$MH,"SetFocus");
    }
    public static MemoryAddress SetFocus ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.SetFocus$MH, "SetFocus");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetActiveWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$591.GetActiveWindow$MH,"GetActiveWindow");
    }
    public static MemoryAddress GetActiveWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.GetActiveWindow$MH, "GetActiveWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFocus$MH() {
        return RuntimeHelper.requireNonNull(constants$591.GetFocus$MH,"GetFocus");
    }
    public static MemoryAddress GetFocus () {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.GetFocus$MH, "GetFocus");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKBCodePage$MH() {
        return RuntimeHelper.requireNonNull(constants$591.GetKBCodePage$MH,"GetKBCodePage");
    }
    public static int GetKBCodePage () {
        var mh$ = RuntimeHelper.requireNonNull(constants$591.GetKBCodePage$MH, "GetKBCodePage");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyState$MH() {
        return RuntimeHelper.requireNonNull(constants$592.GetKeyState$MH,"GetKeyState");
    }
    public static short GetKeyState ( int nVirtKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.GetKeyState$MH, "GetKeyState");
        try {
            return (short)mh$.invokeExact(nVirtKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetAsyncKeyState$MH() {
        return RuntimeHelper.requireNonNull(constants$592.GetAsyncKeyState$MH,"GetAsyncKeyState");
    }
    public static short GetAsyncKeyState ( int vKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.GetAsyncKeyState$MH, "GetAsyncKeyState");
        try {
            return (short)mh$.invokeExact(vKey);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyboardState$MH() {
        return RuntimeHelper.requireNonNull(constants$592.GetKeyboardState$MH,"GetKeyboardState");
    }
    public static int GetKeyboardState ( Addressable lpKeyState) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.GetKeyboardState$MH, "GetKeyboardState");
        try {
            return (int)mh$.invokeExact(lpKeyState.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetKeyboardState$MH() {
        return RuntimeHelper.requireNonNull(constants$592.SetKeyboardState$MH,"SetKeyboardState");
    }
    public static int SetKeyboardState ( Addressable lpKeyState) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.SetKeyboardState$MH, "SetKeyboardState");
        try {
            return (int)mh$.invokeExact(lpKeyState.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyNameTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$592.GetKeyNameTextA$MH,"GetKeyNameTextA");
    }
    public static int GetKeyNameTextA ( int lParam,  Addressable lpString,  int cchSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.GetKeyNameTextA$MH, "GetKeyNameTextA");
        try {
            return (int)mh$.invokeExact(lParam, lpString.address(), cchSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyNameTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$592.GetKeyNameTextW$MH,"GetKeyNameTextW");
    }
    public static int GetKeyNameTextW ( int lParam,  Addressable lpString,  int cchSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$592.GetKeyNameTextW$MH, "GetKeyNameTextW");
        try {
            return (int)mh$.invokeExact(lParam, lpString.address(), cchSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetKeyboardType$MH() {
        return RuntimeHelper.requireNonNull(constants$593.GetKeyboardType$MH,"GetKeyboardType");
    }
    public static int GetKeyboardType ( int nTypeFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.GetKeyboardType$MH, "GetKeyboardType");
        try {
            return (int)mh$.invokeExact(nTypeFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ToAscii$MH() {
        return RuntimeHelper.requireNonNull(constants$593.ToAscii$MH,"ToAscii");
    }
    public static int ToAscii ( int uVirtKey,  int uScanCode,  Addressable lpKeyState,  Addressable lpChar,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.ToAscii$MH, "ToAscii");
        try {
            return (int)mh$.invokeExact(uVirtKey, uScanCode, lpKeyState.address(), lpChar.address(), uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ToAsciiEx$MH() {
        return RuntimeHelper.requireNonNull(constants$593.ToAsciiEx$MH,"ToAsciiEx");
    }
    public static int ToAsciiEx ( int uVirtKey,  int uScanCode,  Addressable lpKeyState,  Addressable lpChar,  int uFlags,  Addressable dwhkl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.ToAsciiEx$MH, "ToAsciiEx");
        try {
            return (int)mh$.invokeExact(uVirtKey, uScanCode, lpKeyState.address(), lpChar.address(), uFlags, dwhkl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ToUnicode$MH() {
        return RuntimeHelper.requireNonNull(constants$593.ToUnicode$MH,"ToUnicode");
    }
    public static int ToUnicode ( int wVirtKey,  int wScanCode,  Addressable lpKeyState,  Addressable pwszBuff,  int cchBuff,  int wFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.ToUnicode$MH, "ToUnicode");
        try {
            return (int)mh$.invokeExact(wVirtKey, wScanCode, lpKeyState.address(), pwszBuff.address(), cchBuff, wFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OemKeyScan$MH() {
        return RuntimeHelper.requireNonNull(constants$593.OemKeyScan$MH,"OemKeyScan");
    }
    public static int OemKeyScan ( short wOemChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.OemKeyScan$MH, "OemKeyScan");
        try {
            return (int)mh$.invokeExact(wOemChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VkKeyScanA$MH() {
        return RuntimeHelper.requireNonNull(constants$593.VkKeyScanA$MH,"VkKeyScanA");
    }
    public static short VkKeyScanA ( byte ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$593.VkKeyScanA$MH, "VkKeyScanA");
        try {
            return (short)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VkKeyScanW$MH() {
        return RuntimeHelper.requireNonNull(constants$594.VkKeyScanW$MH,"VkKeyScanW");
    }
    public static short VkKeyScanW ( short ch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.VkKeyScanW$MH, "VkKeyScanW");
        try {
            return (short)mh$.invokeExact(ch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VkKeyScanExA$MH() {
        return RuntimeHelper.requireNonNull(constants$594.VkKeyScanExA$MH,"VkKeyScanExA");
    }
    public static short VkKeyScanExA ( byte ch,  Addressable dwhkl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.VkKeyScanExA$MH, "VkKeyScanExA");
        try {
            return (short)mh$.invokeExact(ch, dwhkl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VkKeyScanExW$MH() {
        return RuntimeHelper.requireNonNull(constants$594.VkKeyScanExW$MH,"VkKeyScanExW");
    }
    public static short VkKeyScanExW ( short ch,  Addressable dwhkl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.VkKeyScanExW$MH, "VkKeyScanExW");
        try {
            return (short)mh$.invokeExact(ch, dwhkl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle keybd_event$MH() {
        return RuntimeHelper.requireNonNull(constants$594.keybd_event$MH,"keybd_event");
    }
    public static void keybd_event ( byte bVk,  byte bScan,  int dwFlags,  long dwExtraInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.keybd_event$MH, "keybd_event");
        try {
            mh$.invokeExact(bVk, bScan, dwFlags, dwExtraInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mouse_event$MH() {
        return RuntimeHelper.requireNonNull(constants$594.mouse_event$MH,"mouse_event");
    }
    public static void mouse_event ( int dwFlags,  int dx,  int dy,  int dwData,  long dwExtraInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.mouse_event$MH, "mouse_event");
        try {
            mh$.invokeExact(dwFlags, dx, dy, dwData, dwExtraInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendInput$MH() {
        return RuntimeHelper.requireNonNull(constants$594.SendInput$MH,"SendInput");
    }
    public static int SendInput ( int cInputs,  Addressable pInputs,  int cbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$594.SendInput$MH, "SendInput");
        try {
            return (int)mh$.invokeExact(cInputs, pInputs.address(), cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTouchInputInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$595.GetTouchInputInfo$MH,"GetTouchInputInfo");
    }
    public static int GetTouchInputInfo ( Addressable hTouchInput,  int cInputs,  Addressable pInputs,  int cbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.GetTouchInputInfo$MH, "GetTouchInputInfo");
        try {
            return (int)mh$.invokeExact(hTouchInput.address(), cInputs, pInputs.address(), cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseTouchInputHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$595.CloseTouchInputHandle$MH,"CloseTouchInputHandle");
    }
    public static int CloseTouchInputHandle ( Addressable hTouchInput) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.CloseTouchInputHandle$MH, "CloseTouchInputHandle");
        try {
            return (int)mh$.invokeExact(hTouchInput.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterTouchWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$595.RegisterTouchWindow$MH,"RegisterTouchWindow");
    }
    public static int RegisterTouchWindow ( Addressable hwnd,  int ulFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.RegisterTouchWindow$MH, "RegisterTouchWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address(), ulFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnregisterTouchWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$595.UnregisterTouchWindow$MH,"UnregisterTouchWindow");
    }
    public static int UnregisterTouchWindow ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.UnregisterTouchWindow$MH, "UnregisterTouchWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsTouchWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$595.IsTouchWindow$MH,"IsTouchWindow");
    }
    public static int IsTouchWindow ( Addressable hwnd,  Addressable pulFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.IsTouchWindow$MH, "IsTouchWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pulFlags.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnableMouseInPointerForThread$MH() {
        return RuntimeHelper.requireNonNull(constants$595.EnableMouseInPointerForThread$MH,"EnableMouseInPointerForThread");
    }
    public static int EnableMouseInPointerForThread () {
        var mh$ = RuntimeHelper.requireNonNull(constants$595.EnableMouseInPointerForThread$MH, "EnableMouseInPointerForThread");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLastInputInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$596.GetLastInputInfo$MH,"GetLastInputInfo");
    }
    public static int GetLastInputInfo ( Addressable plii) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.GetLastInputInfo$MH, "GetLastInputInfo");
        try {
            return (int)mh$.invokeExact(plii.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MapVirtualKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyA$MH,"MapVirtualKeyA");
    }
    public static int MapVirtualKeyA ( int uCode,  int uMapType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyA$MH, "MapVirtualKeyA");
        try {
            return (int)mh$.invokeExact(uCode, uMapType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MapVirtualKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyW$MH,"MapVirtualKeyW");
    }
    public static int MapVirtualKeyW ( int uCode,  int uMapType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyW$MH, "MapVirtualKeyW");
        try {
            return (int)mh$.invokeExact(uCode, uMapType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MapVirtualKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyExA$MH,"MapVirtualKeyExA");
    }
    public static int MapVirtualKeyExA ( int uCode,  int uMapType,  Addressable dwhkl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyExA$MH, "MapVirtualKeyExA");
        try {
            return (int)mh$.invokeExact(uCode, uMapType, dwhkl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MapVirtualKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyExW$MH,"MapVirtualKeyExW");
    }
    public static int MapVirtualKeyExW ( int uCode,  int uMapType,  Addressable dwhkl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.MapVirtualKeyExW$MH, "MapVirtualKeyExW");
        try {
            return (int)mh$.invokeExact(uCode, uMapType, dwhkl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetInputState$MH() {
        return RuntimeHelper.requireNonNull(constants$596.GetInputState$MH,"GetInputState");
    }
    public static int GetInputState () {
        var mh$ = RuntimeHelper.requireNonNull(constants$596.GetInputState$MH, "GetInputState");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetQueueStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$597.GetQueueStatus$MH,"GetQueueStatus");
    }
    public static int GetQueueStatus ( int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.GetQueueStatus$MH, "GetQueueStatus");
        try {
            return (int)mh$.invokeExact(flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$597.GetCapture$MH,"GetCapture");
    }
    public static MemoryAddress GetCapture () {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.GetCapture$MH, "GetCapture");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$597.SetCapture$MH,"SetCapture");
    }
    public static MemoryAddress SetCapture ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.SetCapture$MH, "SetCapture");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReleaseCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$597.ReleaseCapture$MH,"ReleaseCapture");
    }
    public static int ReleaseCapture () {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.ReleaseCapture$MH, "ReleaseCapture");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MsgWaitForMultipleObjects$MH() {
        return RuntimeHelper.requireNonNull(constants$597.MsgWaitForMultipleObjects$MH,"MsgWaitForMultipleObjects");
    }
    public static int MsgWaitForMultipleObjects ( int nCount,  Addressable pHandles,  int fWaitAll,  int dwMilliseconds,  int dwWakeMask) {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.MsgWaitForMultipleObjects$MH, "MsgWaitForMultipleObjects");
        try {
            return (int)mh$.invokeExact(nCount, pHandles.address(), fWaitAll, dwMilliseconds, dwWakeMask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MsgWaitForMultipleObjectsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$597.MsgWaitForMultipleObjectsEx$MH,"MsgWaitForMultipleObjectsEx");
    }
    public static int MsgWaitForMultipleObjectsEx ( int nCount,  Addressable pHandles,  int dwMilliseconds,  int dwWakeMask,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$597.MsgWaitForMultipleObjectsEx$MH, "MsgWaitForMultipleObjectsEx");
        try {
            return (int)mh$.invokeExact(nCount, pHandles.address(), dwMilliseconds, dwWakeMask, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$598.SetTimer$MH,"SetTimer");
    }
    public static long SetTimer ( Addressable hWnd,  long nIDEvent,  int uElapse,  Addressable lpTimerFunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.SetTimer$MH, "SetTimer");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIDEvent, uElapse, lpTimerFunc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle KillTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$598.KillTimer$MH,"KillTimer");
    }
    public static int KillTimer ( Addressable hWnd,  long uIDEvent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.KillTimer$MH, "KillTimer");
        try {
            return (int)mh$.invokeExact(hWnd.address(), uIDEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsWindowUnicode$MH() {
        return RuntimeHelper.requireNonNull(constants$598.IsWindowUnicode$MH,"IsWindowUnicode");
    }
    public static int IsWindowUnicode ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.IsWindowUnicode$MH, "IsWindowUnicode");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnableWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$598.EnableWindow$MH,"EnableWindow");
    }
    public static int EnableWindow ( Addressable hWnd,  int bEnable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.EnableWindow$MH, "EnableWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), bEnable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsWindowEnabled$MH() {
        return RuntimeHelper.requireNonNull(constants$598.IsWindowEnabled$MH,"IsWindowEnabled");
    }
    public static int IsWindowEnabled ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.IsWindowEnabled$MH, "IsWindowEnabled");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadAcceleratorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$598.LoadAcceleratorsA$MH,"LoadAcceleratorsA");
    }
    public static MemoryAddress LoadAcceleratorsA ( Addressable hInstance,  Addressable lpTableName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$598.LoadAcceleratorsA$MH, "LoadAcceleratorsA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpTableName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadAcceleratorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$599.LoadAcceleratorsW$MH,"LoadAcceleratorsW");
    }
    public static MemoryAddress LoadAcceleratorsW ( Addressable hInstance,  Addressable lpTableName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.LoadAcceleratorsW$MH, "LoadAcceleratorsW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpTableName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateAcceleratorTableA$MH() {
        return RuntimeHelper.requireNonNull(constants$599.CreateAcceleratorTableA$MH,"CreateAcceleratorTableA");
    }
    public static MemoryAddress CreateAcceleratorTableA ( Addressable paccel,  int cAccel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.CreateAcceleratorTableA$MH, "CreateAcceleratorTableA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(paccel.address(), cAccel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateAcceleratorTableW$MH() {
        return RuntimeHelper.requireNonNull(constants$599.CreateAcceleratorTableW$MH,"CreateAcceleratorTableW");
    }
    public static MemoryAddress CreateAcceleratorTableW ( Addressable paccel,  int cAccel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.CreateAcceleratorTableW$MH, "CreateAcceleratorTableW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(paccel.address(), cAccel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyAcceleratorTable$MH() {
        return RuntimeHelper.requireNonNull(constants$599.DestroyAcceleratorTable$MH,"DestroyAcceleratorTable");
    }
    public static int DestroyAcceleratorTable ( Addressable hAccel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.DestroyAcceleratorTable$MH, "DestroyAcceleratorTable");
        try {
            return (int)mh$.invokeExact(hAccel.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyAcceleratorTableA$MH() {
        return RuntimeHelper.requireNonNull(constants$599.CopyAcceleratorTableA$MH,"CopyAcceleratorTableA");
    }
    public static int CopyAcceleratorTableA ( Addressable hAccelSrc,  Addressable lpAccelDst,  int cAccelEntries) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.CopyAcceleratorTableA$MH, "CopyAcceleratorTableA");
        try {
            return (int)mh$.invokeExact(hAccelSrc.address(), lpAccelDst.address(), cAccelEntries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyAcceleratorTableW$MH() {
        return RuntimeHelper.requireNonNull(constants$599.CopyAcceleratorTableW$MH,"CopyAcceleratorTableW");
    }
    public static int CopyAcceleratorTableW ( Addressable hAccelSrc,  Addressable lpAccelDst,  int cAccelEntries) {
        var mh$ = RuntimeHelper.requireNonNull(constants$599.CopyAcceleratorTableW$MH, "CopyAcceleratorTableW");
        try {
            return (int)mh$.invokeExact(hAccelSrc.address(), lpAccelDst.address(), cAccelEntries);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TranslateAcceleratorA$MH() {
        return RuntimeHelper.requireNonNull(constants$600.TranslateAcceleratorA$MH,"TranslateAcceleratorA");
    }
    public static int TranslateAcceleratorA ( Addressable hWnd,  Addressable hAccTable,  Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.TranslateAcceleratorA$MH, "TranslateAcceleratorA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hAccTable.address(), lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TranslateAcceleratorW$MH() {
        return RuntimeHelper.requireNonNull(constants$600.TranslateAcceleratorW$MH,"TranslateAcceleratorW");
    }
    public static int TranslateAcceleratorW ( Addressable hWnd,  Addressable hAccTable,  Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.TranslateAcceleratorW$MH, "TranslateAcceleratorW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hAccTable.address(), lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCoalescableTimer$MH() {
        return RuntimeHelper.requireNonNull(constants$600.SetCoalescableTimer$MH,"SetCoalescableTimer");
    }
    public static long SetCoalescableTimer ( Addressable hWnd,  long nIDEvent,  int uElapse,  Addressable lpTimerFunc,  int uToleranceDelay) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.SetCoalescableTimer$MH, "SetCoalescableTimer");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIDEvent, uElapse, lpTimerFunc.address(), uToleranceDelay);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSystemMetrics$MH() {
        return RuntimeHelper.requireNonNull(constants$600.GetSystemMetrics$MH,"GetSystemMetrics");
    }
    public static int GetSystemMetrics ( int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.GetSystemMetrics$MH, "GetSystemMetrics");
        try {
            return (int)mh$.invokeExact(nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadMenuA$MH() {
        return RuntimeHelper.requireNonNull(constants$600.LoadMenuA$MH,"LoadMenuA");
    }
    public static MemoryAddress LoadMenuA ( Addressable hInstance,  Addressable lpMenuName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.LoadMenuA$MH, "LoadMenuA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpMenuName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadMenuW$MH() {
        return RuntimeHelper.requireNonNull(constants$600.LoadMenuW$MH,"LoadMenuW");
    }
    public static MemoryAddress LoadMenuW ( Addressable hInstance,  Addressable lpMenuName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$600.LoadMenuW$MH, "LoadMenuW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpMenuName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadMenuIndirectA$MH() {
        return RuntimeHelper.requireNonNull(constants$601.LoadMenuIndirectA$MH,"LoadMenuIndirectA");
    }
    public static MemoryAddress LoadMenuIndirectA ( Addressable lpMenuTemplate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.LoadMenuIndirectA$MH, "LoadMenuIndirectA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpMenuTemplate.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadMenuIndirectW$MH() {
        return RuntimeHelper.requireNonNull(constants$601.LoadMenuIndirectW$MH,"LoadMenuIndirectW");
    }
    public static MemoryAddress LoadMenuIndirectW ( Addressable lpMenuTemplate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.LoadMenuIndirectW$MH, "LoadMenuIndirectW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpMenuTemplate.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$601.GetMenu$MH,"GetMenu");
    }
    public static MemoryAddress GetMenu ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.GetMenu$MH, "GetMenu");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$601.SetMenu$MH,"SetMenu");
    }
    public static int SetMenu ( Addressable hWnd,  Addressable hMenu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.SetMenu$MH, "SetMenu");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hMenu.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeMenuA$MH() {
        return RuntimeHelper.requireNonNull(constants$601.ChangeMenuA$MH,"ChangeMenuA");
    }
    public static int ChangeMenuA ( Addressable hMenu,  int cmd,  Addressable lpszNewItem,  int cmdInsert,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.ChangeMenuA$MH, "ChangeMenuA");
        try {
            return (int)mh$.invokeExact(hMenu.address(), cmd, lpszNewItem.address(), cmdInsert, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeMenuW$MH() {
        return RuntimeHelper.requireNonNull(constants$601.ChangeMenuW$MH,"ChangeMenuW");
    }
    public static int ChangeMenuW ( Addressable hMenu,  int cmd,  Addressable lpszNewItem,  int cmdInsert,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$601.ChangeMenuW$MH, "ChangeMenuW");
        try {
            return (int)mh$.invokeExact(hMenu.address(), cmd, lpszNewItem.address(), cmdInsert, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle HiliteMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$602.HiliteMenuItem$MH,"HiliteMenuItem");
    }
    public static int HiliteMenuItem ( Addressable hWnd,  Addressable hMenu,  int uIDHiliteItem,  int uHilite) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.HiliteMenuItem$MH, "HiliteMenuItem");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hMenu.address(), uIDHiliteItem, uHilite);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$602.GetMenuStringA$MH,"GetMenuStringA");
    }
    public static int GetMenuStringA ( Addressable hMenu,  int uIDItem,  Addressable lpString,  int cchMax,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.GetMenuStringA$MH, "GetMenuStringA");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uIDItem, lpString.address(), cchMax, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$602.GetMenuStringW$MH,"GetMenuStringW");
    }
    public static int GetMenuStringW ( Addressable hMenu,  int uIDItem,  Addressable lpString,  int cchMax,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.GetMenuStringW$MH, "GetMenuStringW");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uIDItem, lpString.address(), cchMax, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuState$MH() {
        return RuntimeHelper.requireNonNull(constants$602.GetMenuState$MH,"GetMenuState");
    }
    public static int GetMenuState ( Addressable hMenu,  int uId,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.GetMenuState$MH, "GetMenuState");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uId, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawMenuBar$MH() {
        return RuntimeHelper.requireNonNull(constants$602.DrawMenuBar$MH,"DrawMenuBar");
    }
    public static int DrawMenuBar ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.DrawMenuBar$MH, "DrawMenuBar");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSystemMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$602.GetSystemMenu$MH,"GetSystemMenu");
    }
    public static MemoryAddress GetSystemMenu ( Addressable hWnd,  int bRevert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$602.GetSystemMenu$MH, "GetSystemMenu");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), bRevert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$603.CreateMenu$MH,"CreateMenu");
    }
    public static MemoryAddress CreateMenu () {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.CreateMenu$MH, "CreateMenu");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreatePopupMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$603.CreatePopupMenu$MH,"CreatePopupMenu");
    }
    public static MemoryAddress CreatePopupMenu () {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.CreatePopupMenu$MH, "CreatePopupMenu");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$603.DestroyMenu$MH,"DestroyMenu");
    }
    public static int DestroyMenu ( Addressable hMenu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.DestroyMenu$MH, "DestroyMenu");
        try {
            return (int)mh$.invokeExact(hMenu.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CheckMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$603.CheckMenuItem$MH,"CheckMenuItem");
    }
    public static int CheckMenuItem ( Addressable hMenu,  int uIDCheckItem,  int uCheck) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.CheckMenuItem$MH, "CheckMenuItem");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uIDCheckItem, uCheck);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnableMenuItem$MH() {
        return RuntimeHelper.requireNonNull(constants$603.EnableMenuItem$MH,"EnableMenuItem");
    }
    public static int EnableMenuItem ( Addressable hMenu,  int uIDEnableItem,  int uEnable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.EnableMenuItem$MH, "EnableMenuItem");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uIDEnableItem, uEnable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSubMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$603.GetSubMenu$MH,"GetSubMenu");
    }
    public static MemoryAddress GetSubMenu ( Addressable hMenu,  int nPos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$603.GetSubMenu$MH, "GetSubMenu");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hMenu.address(), nPos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuItemID$MH() {
        return RuntimeHelper.requireNonNull(constants$604.GetMenuItemID$MH,"GetMenuItemID");
    }
    public static int GetMenuItemID ( Addressable hMenu,  int nPos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.GetMenuItemID$MH, "GetMenuItemID");
        try {
            return (int)mh$.invokeExact(hMenu.address(), nPos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuItemCount$MH() {
        return RuntimeHelper.requireNonNull(constants$604.GetMenuItemCount$MH,"GetMenuItemCount");
    }
    public static int GetMenuItemCount ( Addressable hMenu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.GetMenuItemCount$MH, "GetMenuItemCount");
        try {
            return (int)mh$.invokeExact(hMenu.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InsertMenuA$MH() {
        return RuntimeHelper.requireNonNull(constants$604.InsertMenuA$MH,"InsertMenuA");
    }
    public static int InsertMenuA ( Addressable hMenu,  int uPosition,  int uFlags,  long uIDNewItem,  Addressable lpNewItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.InsertMenuA$MH, "InsertMenuA");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uPosition, uFlags, uIDNewItem, lpNewItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InsertMenuW$MH() {
        return RuntimeHelper.requireNonNull(constants$604.InsertMenuW$MH,"InsertMenuW");
    }
    public static int InsertMenuW ( Addressable hMenu,  int uPosition,  int uFlags,  long uIDNewItem,  Addressable lpNewItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.InsertMenuW$MH, "InsertMenuW");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uPosition, uFlags, uIDNewItem, lpNewItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AppendMenuA$MH() {
        return RuntimeHelper.requireNonNull(constants$604.AppendMenuA$MH,"AppendMenuA");
    }
    public static int AppendMenuA ( Addressable hMenu,  int uFlags,  long uIDNewItem,  Addressable lpNewItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.AppendMenuA$MH, "AppendMenuA");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uFlags, uIDNewItem, lpNewItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AppendMenuW$MH() {
        return RuntimeHelper.requireNonNull(constants$604.AppendMenuW$MH,"AppendMenuW");
    }
    public static int AppendMenuW ( Addressable hMenu,  int uFlags,  long uIDNewItem,  Addressable lpNewItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$604.AppendMenuW$MH, "AppendMenuW");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uFlags, uIDNewItem, lpNewItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ModifyMenuA$MH() {
        return RuntimeHelper.requireNonNull(constants$605.ModifyMenuA$MH,"ModifyMenuA");
    }
    public static int ModifyMenuA ( Addressable hMnu,  int uPosition,  int uFlags,  long uIDNewItem,  Addressable lpNewItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.ModifyMenuA$MH, "ModifyMenuA");
        try {
            return (int)mh$.invokeExact(hMnu.address(), uPosition, uFlags, uIDNewItem, lpNewItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ModifyMenuW$MH() {
        return RuntimeHelper.requireNonNull(constants$605.ModifyMenuW$MH,"ModifyMenuW");
    }
    public static int ModifyMenuW ( Addressable hMnu,  int uPosition,  int uFlags,  long uIDNewItem,  Addressable lpNewItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.ModifyMenuW$MH, "ModifyMenuW");
        try {
            return (int)mh$.invokeExact(hMnu.address(), uPosition, uFlags, uIDNewItem, lpNewItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemoveMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$605.RemoveMenu$MH,"RemoveMenu");
    }
    public static int RemoveMenu ( Addressable hMenu,  int uPosition,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.RemoveMenu$MH, "RemoveMenu");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uPosition, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$605.DeleteMenu$MH,"DeleteMenu");
    }
    public static int DeleteMenu ( Addressable hMenu,  int uPosition,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.DeleteMenu$MH, "DeleteMenu");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uPosition, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMenuItemBitmaps$MH() {
        return RuntimeHelper.requireNonNull(constants$605.SetMenuItemBitmaps$MH,"SetMenuItemBitmaps");
    }
    public static int SetMenuItemBitmaps ( Addressable hMenu,  int uPosition,  int uFlags,  Addressable hBitmapUnchecked,  Addressable hBitmapChecked) {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.SetMenuItemBitmaps$MH, "SetMenuItemBitmaps");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uPosition, uFlags, hBitmapUnchecked.address(), hBitmapChecked.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuCheckMarkDimensions$MH() {
        return RuntimeHelper.requireNonNull(constants$605.GetMenuCheckMarkDimensions$MH,"GetMenuCheckMarkDimensions");
    }
    public static int GetMenuCheckMarkDimensions () {
        var mh$ = RuntimeHelper.requireNonNull(constants$605.GetMenuCheckMarkDimensions$MH, "GetMenuCheckMarkDimensions");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TrackPopupMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$606.TrackPopupMenu$MH,"TrackPopupMenu");
    }
    public static int TrackPopupMenu ( Addressable hMenu,  int uFlags,  int x,  int y,  int nReserved,  Addressable hWnd,  Addressable prcRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.TrackPopupMenu$MH, "TrackPopupMenu");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uFlags, x, y, nReserved, hWnd.address(), prcRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TrackPopupMenuEx$MH() {
        return RuntimeHelper.requireNonNull(constants$606.TrackPopupMenuEx$MH,"TrackPopupMenuEx");
    }
    public static int TrackPopupMenuEx ( Addressable x0,  int x1,  int x2,  int x3,  Addressable x4,  Addressable x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.TrackPopupMenuEx$MH, "TrackPopupMenuEx");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3, x4.address(), x5.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$606.GetMenuInfo$MH,"GetMenuInfo");
    }
    public static int GetMenuInfo ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.GetMenuInfo$MH, "GetMenuInfo");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMenuInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$606.SetMenuInfo$MH,"SetMenuInfo");
    }
    public static int SetMenuInfo ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.SetMenuInfo$MH, "SetMenuInfo");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndMenu$MH() {
        return RuntimeHelper.requireNonNull(constants$606.EndMenu$MH,"EndMenu");
    }
    public static int EndMenu () {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.EndMenu$MH, "EndMenu");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CalculatePopupWindowPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$606.CalculatePopupWindowPosition$MH,"CalculatePopupWindowPosition");
    }
    public static int CalculatePopupWindowPosition ( Addressable anchorPoint,  Addressable windowSize,  int flags,  Addressable excludeRect,  Addressable popupWindowPosition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$606.CalculatePopupWindowPosition$MH, "CalculatePopupWindowPosition");
        try {
            return (int)mh$.invokeExact(anchorPoint.address(), windowSize.address(), flags, excludeRect.address(), popupWindowPosition.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InsertMenuItemA$MH() {
        return RuntimeHelper.requireNonNull(constants$607.InsertMenuItemA$MH,"InsertMenuItemA");
    }
    public static int InsertMenuItemA ( Addressable hmenu,  int item,  int fByPosition,  Addressable lpmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.InsertMenuItemA$MH, "InsertMenuItemA");
        try {
            return (int)mh$.invokeExact(hmenu.address(), item, fByPosition, lpmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InsertMenuItemW$MH() {
        return RuntimeHelper.requireNonNull(constants$607.InsertMenuItemW$MH,"InsertMenuItemW");
    }
    public static int InsertMenuItemW ( Addressable hmenu,  int item,  int fByPosition,  Addressable lpmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.InsertMenuItemW$MH, "InsertMenuItemW");
        try {
            return (int)mh$.invokeExact(hmenu.address(), item, fByPosition, lpmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuItemInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$607.GetMenuItemInfoA$MH,"GetMenuItemInfoA");
    }
    public static int GetMenuItemInfoA ( Addressable hmenu,  int item,  int fByPosition,  Addressable lpmii) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.GetMenuItemInfoA$MH, "GetMenuItemInfoA");
        try {
            return (int)mh$.invokeExact(hmenu.address(), item, fByPosition, lpmii.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuItemInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$607.GetMenuItemInfoW$MH,"GetMenuItemInfoW");
    }
    public static int GetMenuItemInfoW ( Addressable hmenu,  int item,  int fByPosition,  Addressable lpmii) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.GetMenuItemInfoW$MH, "GetMenuItemInfoW");
        try {
            return (int)mh$.invokeExact(hmenu.address(), item, fByPosition, lpmii.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMenuItemInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$607.SetMenuItemInfoA$MH,"SetMenuItemInfoA");
    }
    public static int SetMenuItemInfoA ( Addressable hmenu,  int item,  int fByPositon,  Addressable lpmii) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.SetMenuItemInfoA$MH, "SetMenuItemInfoA");
        try {
            return (int)mh$.invokeExact(hmenu.address(), item, fByPositon, lpmii.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMenuItemInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$607.SetMenuItemInfoW$MH,"SetMenuItemInfoW");
    }
    public static int SetMenuItemInfoW ( Addressable hmenu,  int item,  int fByPositon,  Addressable lpmii) {
        var mh$ = RuntimeHelper.requireNonNull(constants$607.SetMenuItemInfoW$MH, "SetMenuItemInfoW");
        try {
            return (int)mh$.invokeExact(hmenu.address(), item, fByPositon, lpmii.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuDefaultItem$MH() {
        return RuntimeHelper.requireNonNull(constants$608.GetMenuDefaultItem$MH,"GetMenuDefaultItem");
    }
    public static int GetMenuDefaultItem ( Addressable hMenu,  int fByPos,  int gmdiFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.GetMenuDefaultItem$MH, "GetMenuDefaultItem");
        try {
            return (int)mh$.invokeExact(hMenu.address(), fByPos, gmdiFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMenuDefaultItem$MH() {
        return RuntimeHelper.requireNonNull(constants$608.SetMenuDefaultItem$MH,"SetMenuDefaultItem");
    }
    public static int SetMenuDefaultItem ( Addressable hMenu,  int uItem,  int fByPos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.SetMenuDefaultItem$MH, "SetMenuDefaultItem");
        try {
            return (int)mh$.invokeExact(hMenu.address(), uItem, fByPos);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuItemRect$MH() {
        return RuntimeHelper.requireNonNull(constants$608.GetMenuItemRect$MH,"GetMenuItemRect");
    }
    public static int GetMenuItemRect ( Addressable hWnd,  Addressable hMenu,  int uItem,  Addressable lprcItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.GetMenuItemRect$MH, "GetMenuItemRect");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hMenu.address(), uItem, lprcItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MenuItemFromPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$608.MenuItemFromPoint$MH,"MenuItemFromPoint");
    }
    public static int MenuItemFromPoint ( Addressable hWnd,  Addressable hMenu,  MemorySegment ptScreen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.MenuItemFromPoint$MH, "MenuItemFromPoint");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hMenu.address(), ptScreen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragObject$MH() {
        return RuntimeHelper.requireNonNull(constants$608.DragObject$MH,"DragObject");
    }
    public static int DragObject ( Addressable hwndParent,  Addressable hwndFrom,  int fmt,  long data,  Addressable hcur) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.DragObject$MH, "DragObject");
        try {
            return (int)mh$.invokeExact(hwndParent.address(), hwndFrom.address(), fmt, data, hcur.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragDetect$MH() {
        return RuntimeHelper.requireNonNull(constants$608.DragDetect$MH,"DragDetect");
    }
    public static int DragDetect ( Addressable hwnd,  MemorySegment pt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$608.DragDetect$MH, "DragDetect");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DrawIcon$MH,"DrawIcon");
    }
    public static int DrawIcon ( Addressable hDC,  int X,  int Y,  Addressable hIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.DrawIcon$MH, "DrawIcon");
        try {
            return (int)mh$.invokeExact(hDC.address(), X, Y, hIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DrawTextA$MH,"DrawTextA");
    }
    public static int DrawTextA ( Addressable hdc,  Addressable lpchText,  int cchText,  Addressable lprc,  int format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.DrawTextA$MH, "DrawTextA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpchText.address(), cchText, lprc.address(), format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DrawTextW$MH,"DrawTextW");
    }
    public static int DrawTextW ( Addressable hdc,  Addressable lpchText,  int cchText,  Addressable lprc,  int format) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.DrawTextW$MH, "DrawTextW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpchText.address(), cchText, lprc.address(), format);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawTextExA$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DrawTextExA$MH,"DrawTextExA");
    }
    public static int DrawTextExA ( Addressable hdc,  Addressable lpchText,  int cchText,  Addressable lprc,  int format,  Addressable lpdtp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.DrawTextExA$MH, "DrawTextExA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpchText.address(), cchText, lprc.address(), format, lpdtp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawTextExW$MH() {
        return RuntimeHelper.requireNonNull(constants$609.DrawTextExW$MH,"DrawTextExW");
    }
    public static int DrawTextExW ( Addressable hdc,  Addressable lpchText,  int cchText,  Addressable lprc,  int format,  Addressable lpdtp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.DrawTextExW$MH, "DrawTextExW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpchText.address(), cchText, lprc.address(), format, lpdtp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GrayStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$609.GrayStringA$MH,"GrayStringA");
    }
    public static int GrayStringA ( Addressable hDC,  Addressable hBrush,  Addressable lpOutputFunc,  long lpData,  int nCount,  int X,  int Y,  int nWidth,  int nHeight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$609.GrayStringA$MH, "GrayStringA");
        try {
            return (int)mh$.invokeExact(hDC.address(), hBrush.address(), lpOutputFunc.address(), lpData, nCount, X, Y, nWidth, nHeight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GrayStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$610.GrayStringW$MH,"GrayStringW");
    }
    public static int GrayStringW ( Addressable hDC,  Addressable hBrush,  Addressable lpOutputFunc,  long lpData,  int nCount,  int X,  int Y,  int nWidth,  int nHeight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.GrayStringW$MH, "GrayStringW");
        try {
            return (int)mh$.invokeExact(hDC.address(), hBrush.address(), lpOutputFunc.address(), lpData, nCount, X, Y, nWidth, nHeight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawStateA$MH() {
        return RuntimeHelper.requireNonNull(constants$610.DrawStateA$MH,"DrawStateA");
    }
    public static int DrawStateA ( Addressable hdc,  Addressable hbrFore,  Addressable qfnCallBack,  long lData,  long wData,  int x,  int y,  int cx,  int cy,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.DrawStateA$MH, "DrawStateA");
        try {
            return (int)mh$.invokeExact(hdc.address(), hbrFore.address(), qfnCallBack.address(), lData, wData, x, y, cx, cy, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawStateW$MH() {
        return RuntimeHelper.requireNonNull(constants$610.DrawStateW$MH,"DrawStateW");
    }
    public static int DrawStateW ( Addressable hdc,  Addressable hbrFore,  Addressable qfnCallBack,  long lData,  long wData,  int x,  int y,  int cx,  int cy,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.DrawStateW$MH, "DrawStateW");
        try {
            return (int)mh$.invokeExact(hdc.address(), hbrFore.address(), qfnCallBack.address(), lData, wData, x, y, cx, cy, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TabbedTextOutA$MH() {
        return RuntimeHelper.requireNonNull(constants$610.TabbedTextOutA$MH,"TabbedTextOutA");
    }
    public static int TabbedTextOutA ( Addressable hdc,  int x,  int y,  Addressable lpString,  int chCount,  int nTabPositions,  Addressable lpnTabStopPositions,  int nTabOrigin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.TabbedTextOutA$MH, "TabbedTextOutA");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lpString.address(), chCount, nTabPositions, lpnTabStopPositions.address(), nTabOrigin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TabbedTextOutW$MH() {
        return RuntimeHelper.requireNonNull(constants$610.TabbedTextOutW$MH,"TabbedTextOutW");
    }
    public static int TabbedTextOutW ( Addressable hdc,  int x,  int y,  Addressable lpString,  int chCount,  int nTabPositions,  Addressable lpnTabStopPositions,  int nTabOrigin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.TabbedTextOutW$MH, "TabbedTextOutW");
        try {
            return (int)mh$.invokeExact(hdc.address(), x, y, lpString.address(), chCount, nTabPositions, lpnTabStopPositions.address(), nTabOrigin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTabbedTextExtentA$MH() {
        return RuntimeHelper.requireNonNull(constants$610.GetTabbedTextExtentA$MH,"GetTabbedTextExtentA");
    }
    public static int GetTabbedTextExtentA ( Addressable hdc,  Addressable lpString,  int chCount,  int nTabPositions,  Addressable lpnTabStopPositions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$610.GetTabbedTextExtentA$MH, "GetTabbedTextExtentA");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), chCount, nTabPositions, lpnTabStopPositions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTabbedTextExtentW$MH() {
        return RuntimeHelper.requireNonNull(constants$611.GetTabbedTextExtentW$MH,"GetTabbedTextExtentW");
    }
    public static int GetTabbedTextExtentW ( Addressable hdc,  Addressable lpString,  int chCount,  int nTabPositions,  Addressable lpnTabStopPositions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.GetTabbedTextExtentW$MH, "GetTabbedTextExtentW");
        try {
            return (int)mh$.invokeExact(hdc.address(), lpString.address(), chCount, nTabPositions, lpnTabStopPositions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UpdateWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$611.UpdateWindow$MH,"UpdateWindow");
    }
    public static int UpdateWindow ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.UpdateWindow$MH, "UpdateWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetActiveWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$611.SetActiveWindow$MH,"SetActiveWindow");
    }
    public static MemoryAddress SetActiveWindow ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.SetActiveWindow$MH, "SetActiveWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetForegroundWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$611.GetForegroundWindow$MH,"GetForegroundWindow");
    }
    public static MemoryAddress GetForegroundWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.GetForegroundWindow$MH, "GetForegroundWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PaintDesktop$MH() {
        return RuntimeHelper.requireNonNull(constants$611.PaintDesktop$MH,"PaintDesktop");
    }
    public static int PaintDesktop ( Addressable hdc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.PaintDesktop$MH, "PaintDesktop");
        try {
            return (int)mh$.invokeExact(hdc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SwitchToThisWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$611.SwitchToThisWindow$MH,"SwitchToThisWindow");
    }
    public static void SwitchToThisWindow ( Addressable hwnd,  int fUnknown) {
        var mh$ = RuntimeHelper.requireNonNull(constants$611.SwitchToThisWindow$MH, "SwitchToThisWindow");
        try {
            mh$.invokeExact(hwnd.address(), fUnknown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetForegroundWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$612.SetForegroundWindow$MH,"SetForegroundWindow");
    }
    public static int SetForegroundWindow ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.SetForegroundWindow$MH, "SetForegroundWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AllowSetForegroundWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$612.AllowSetForegroundWindow$MH,"AllowSetForegroundWindow");
    }
    public static int AllowSetForegroundWindow ( int dwProcessId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.AllowSetForegroundWindow$MH, "AllowSetForegroundWindow");
        try {
            return (int)mh$.invokeExact(dwProcessId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LockSetForegroundWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$612.LockSetForegroundWindow$MH,"LockSetForegroundWindow");
    }
    public static int LockSetForegroundWindow ( int uLockCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.LockSetForegroundWindow$MH, "LockSetForegroundWindow");
        try {
            return (int)mh$.invokeExact(uLockCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WindowFromDC$MH() {
        return RuntimeHelper.requireNonNull(constants$612.WindowFromDC$MH,"WindowFromDC");
    }
    public static MemoryAddress WindowFromDC ( Addressable hDC) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.WindowFromDC$MH, "WindowFromDC");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hDC.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDC$MH() {
        return RuntimeHelper.requireNonNull(constants$612.GetDC$MH,"GetDC");
    }
    public static MemoryAddress GetDC ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.GetDC$MH, "GetDC");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDCEx$MH() {
        return RuntimeHelper.requireNonNull(constants$612.GetDCEx$MH,"GetDCEx");
    }
    public static MemoryAddress GetDCEx ( Addressable hWnd,  Addressable hrgnClip,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$612.GetDCEx$MH, "GetDCEx");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), hrgnClip.address(), flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowDC$MH() {
        return RuntimeHelper.requireNonNull(constants$613.GetWindowDC$MH,"GetWindowDC");
    }
    public static MemoryAddress GetWindowDC ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.GetWindowDC$MH, "GetWindowDC");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReleaseDC$MH() {
        return RuntimeHelper.requireNonNull(constants$613.ReleaseDC$MH,"ReleaseDC");
    }
    public static int ReleaseDC ( Addressable hWnd,  Addressable hDC) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.ReleaseDC$MH, "ReleaseDC");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hDC.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BeginPaint$MH() {
        return RuntimeHelper.requireNonNull(constants$613.BeginPaint$MH,"BeginPaint");
    }
    public static MemoryAddress BeginPaint ( Addressable hWnd,  Addressable lpPaint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.BeginPaint$MH, "BeginPaint");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), lpPaint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndPaint$MH() {
        return RuntimeHelper.requireNonNull(constants$613.EndPaint$MH,"EndPaint");
    }
    public static int EndPaint ( Addressable hWnd,  Addressable lpPaint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.EndPaint$MH, "EndPaint");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpPaint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUpdateRect$MH() {
        return RuntimeHelper.requireNonNull(constants$613.GetUpdateRect$MH,"GetUpdateRect");
    }
    public static int GetUpdateRect ( Addressable hWnd,  Addressable lpRect,  int bErase) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.GetUpdateRect$MH, "GetUpdateRect");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpRect.address(), bErase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUpdateRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$613.GetUpdateRgn$MH,"GetUpdateRgn");
    }
    public static int GetUpdateRgn ( Addressable hWnd,  Addressable hRgn,  int bErase) {
        var mh$ = RuntimeHelper.requireNonNull(constants$613.GetUpdateRgn$MH, "GetUpdateRgn");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hRgn.address(), bErase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$614.SetWindowRgn$MH,"SetWindowRgn");
    }
    public static int SetWindowRgn ( Addressable hWnd,  Addressable hRgn,  int bRedraw) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.SetWindowRgn$MH, "SetWindowRgn");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hRgn.address(), bRedraw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$614.GetWindowRgn$MH,"GetWindowRgn");
    }
    public static int GetWindowRgn ( Addressable hWnd,  Addressable hRgn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.GetWindowRgn$MH, "GetWindowRgn");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hRgn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowRgnBox$MH() {
        return RuntimeHelper.requireNonNull(constants$614.GetWindowRgnBox$MH,"GetWindowRgnBox");
    }
    public static int GetWindowRgnBox ( Addressable hWnd,  Addressable lprc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.GetWindowRgnBox$MH, "GetWindowRgnBox");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lprc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExcludeUpdateRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$614.ExcludeUpdateRgn$MH,"ExcludeUpdateRgn");
    }
    public static int ExcludeUpdateRgn ( Addressable hDC,  Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.ExcludeUpdateRgn$MH, "ExcludeUpdateRgn");
        try {
            return (int)mh$.invokeExact(hDC.address(), hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InvalidateRect$MH() {
        return RuntimeHelper.requireNonNull(constants$614.InvalidateRect$MH,"InvalidateRect");
    }
    public static int InvalidateRect ( Addressable hWnd,  Addressable lpRect,  int bErase) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.InvalidateRect$MH, "InvalidateRect");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpRect.address(), bErase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ValidateRect$MH() {
        return RuntimeHelper.requireNonNull(constants$614.ValidateRect$MH,"ValidateRect");
    }
    public static int ValidateRect ( Addressable hWnd,  Addressable lpRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$614.ValidateRect$MH, "ValidateRect");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InvalidateRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$615.InvalidateRgn$MH,"InvalidateRgn");
    }
    public static int InvalidateRgn ( Addressable hWnd,  Addressable hRgn,  int bErase) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.InvalidateRgn$MH, "InvalidateRgn");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hRgn.address(), bErase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ValidateRgn$MH() {
        return RuntimeHelper.requireNonNull(constants$615.ValidateRgn$MH,"ValidateRgn");
    }
    public static int ValidateRgn ( Addressable hWnd,  Addressable hRgn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.ValidateRgn$MH, "ValidateRgn");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hRgn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RedrawWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$615.RedrawWindow$MH,"RedrawWindow");
    }
    public static int RedrawWindow ( Addressable hWnd,  Addressable lprcUpdate,  Addressable hrgnUpdate,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.RedrawWindow$MH, "RedrawWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lprcUpdate.address(), hrgnUpdate.address(), flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LockWindowUpdate$MH() {
        return RuntimeHelper.requireNonNull(constants$615.LockWindowUpdate$MH,"LockWindowUpdate");
    }
    public static int LockWindowUpdate ( Addressable hWndLock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.LockWindowUpdate$MH, "LockWindowUpdate");
        try {
            return (int)mh$.invokeExact(hWndLock.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScrollWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$615.ScrollWindow$MH,"ScrollWindow");
    }
    public static int ScrollWindow ( Addressable hWnd,  int XAmount,  int YAmount,  Addressable lpRect,  Addressable lpClipRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.ScrollWindow$MH, "ScrollWindow");
        try {
            return (int)mh$.invokeExact(hWnd.address(), XAmount, YAmount, lpRect.address(), lpClipRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScrollDC$MH() {
        return RuntimeHelper.requireNonNull(constants$615.ScrollDC$MH,"ScrollDC");
    }
    public static int ScrollDC ( Addressable hDC,  int dx,  int dy,  Addressable lprcScroll,  Addressable lprcClip,  Addressable hrgnUpdate,  Addressable lprcUpdate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$615.ScrollDC$MH, "ScrollDC");
        try {
            return (int)mh$.invokeExact(hDC.address(), dx, dy, lprcScroll.address(), lprcClip.address(), hrgnUpdate.address(), lprcUpdate.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScrollWindowEx$MH() {
        return RuntimeHelper.requireNonNull(constants$616.ScrollWindowEx$MH,"ScrollWindowEx");
    }
    public static int ScrollWindowEx ( Addressable hWnd,  int dx,  int dy,  Addressable prcScroll,  Addressable prcClip,  Addressable hrgnUpdate,  Addressable prcUpdate,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.ScrollWindowEx$MH, "ScrollWindowEx");
        try {
            return (int)mh$.invokeExact(hWnd.address(), dx, dy, prcScroll.address(), prcClip.address(), hrgnUpdate.address(), prcUpdate.address(), flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetScrollPos$MH() {
        return RuntimeHelper.requireNonNull(constants$616.SetScrollPos$MH,"SetScrollPos");
    }
    public static int SetScrollPos ( Addressable hWnd,  int nBar,  int nPos,  int bRedraw) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.SetScrollPos$MH, "SetScrollPos");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nBar, nPos, bRedraw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetScrollPos$MH() {
        return RuntimeHelper.requireNonNull(constants$616.GetScrollPos$MH,"GetScrollPos");
    }
    public static int GetScrollPos ( Addressable hWnd,  int nBar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.GetScrollPos$MH, "GetScrollPos");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nBar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetScrollRange$MH() {
        return RuntimeHelper.requireNonNull(constants$616.SetScrollRange$MH,"SetScrollRange");
    }
    public static int SetScrollRange ( Addressable hWnd,  int nBar,  int nMinPos,  int nMaxPos,  int bRedraw) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.SetScrollRange$MH, "SetScrollRange");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nBar, nMinPos, nMaxPos, bRedraw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetScrollRange$MH() {
        return RuntimeHelper.requireNonNull(constants$616.GetScrollRange$MH,"GetScrollRange");
    }
    public static int GetScrollRange ( Addressable hWnd,  int nBar,  Addressable lpMinPos,  Addressable lpMaxPos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.GetScrollRange$MH, "GetScrollRange");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nBar, lpMinPos.address(), lpMaxPos.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShowScrollBar$MH() {
        return RuntimeHelper.requireNonNull(constants$616.ShowScrollBar$MH,"ShowScrollBar");
    }
    public static int ShowScrollBar ( Addressable hWnd,  int wBar,  int bShow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$616.ShowScrollBar$MH, "ShowScrollBar");
        try {
            return (int)mh$.invokeExact(hWnd.address(), wBar, bShow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnableScrollBar$MH() {
        return RuntimeHelper.requireNonNull(constants$617.EnableScrollBar$MH,"EnableScrollBar");
    }
    public static int EnableScrollBar ( Addressable hWnd,  int wSBflags,  int wArrows) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.EnableScrollBar$MH, "EnableScrollBar");
        try {
            return (int)mh$.invokeExact(hWnd.address(), wSBflags, wArrows);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPropA$MH() {
        return RuntimeHelper.requireNonNull(constants$617.SetPropA$MH,"SetPropA");
    }
    public static int SetPropA ( Addressable hWnd,  Addressable lpString,  Addressable hData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.SetPropA$MH, "SetPropA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpString.address(), hData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPropW$MH() {
        return RuntimeHelper.requireNonNull(constants$617.SetPropW$MH,"SetPropW");
    }
    public static int SetPropW ( Addressable hWnd,  Addressable lpString,  Addressable hData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.SetPropW$MH, "SetPropW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpString.address(), hData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPropA$MH() {
        return RuntimeHelper.requireNonNull(constants$617.GetPropA$MH,"GetPropA");
    }
    public static MemoryAddress GetPropA ( Addressable hWnd,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.GetPropA$MH, "GetPropA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPropW$MH() {
        return RuntimeHelper.requireNonNull(constants$617.GetPropW$MH,"GetPropW");
    }
    public static MemoryAddress GetPropW ( Addressable hWnd,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.GetPropW$MH, "GetPropW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemovePropA$MH() {
        return RuntimeHelper.requireNonNull(constants$617.RemovePropA$MH,"RemovePropA");
    }
    public static MemoryAddress RemovePropA ( Addressable hWnd,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$617.RemovePropA$MH, "RemovePropA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RemovePropW$MH() {
        return RuntimeHelper.requireNonNull(constants$618.RemovePropW$MH,"RemovePropW");
    }
    public static MemoryAddress RemovePropW ( Addressable hWnd,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.RemovePropW$MH, "RemovePropW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPropsExA$MH() {
        return RuntimeHelper.requireNonNull(constants$618.EnumPropsExA$MH,"EnumPropsExA");
    }
    public static int EnumPropsExA ( Addressable hWnd,  Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.EnumPropsExA$MH, "EnumPropsExA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPropsExW$MH() {
        return RuntimeHelper.requireNonNull(constants$618.EnumPropsExW$MH,"EnumPropsExW");
    }
    public static int EnumPropsExW ( Addressable hWnd,  Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.EnumPropsExW$MH, "EnumPropsExW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPropsA$MH() {
        return RuntimeHelper.requireNonNull(constants$618.EnumPropsA$MH,"EnumPropsA");
    }
    public static int EnumPropsA ( Addressable hWnd,  Addressable lpEnumFunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.EnumPropsA$MH, "EnumPropsA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpEnumFunc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPropsW$MH() {
        return RuntimeHelper.requireNonNull(constants$618.EnumPropsW$MH,"EnumPropsW");
    }
    public static int EnumPropsW ( Addressable hWnd,  Addressable lpEnumFunc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.EnumPropsW$MH, "EnumPropsW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpEnumFunc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$618.SetWindowTextA$MH,"SetWindowTextA");
    }
    public static int SetWindowTextA ( Addressable hWnd,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$618.SetWindowTextA$MH, "SetWindowTextA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$619.SetWindowTextW$MH,"SetWindowTextW");
    }
    public static int SetWindowTextW ( Addressable hWnd,  Addressable lpString) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.SetWindowTextW$MH, "SetWindowTextW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpString.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$619.GetWindowTextA$MH,"GetWindowTextA");
    }
    public static int GetWindowTextA ( Addressable hWnd,  Addressable lpString,  int nMaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.GetWindowTextA$MH, "GetWindowTextA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpString.address(), nMaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$619.GetWindowTextW$MH,"GetWindowTextW");
    }
    public static int GetWindowTextW ( Addressable hWnd,  Addressable lpString,  int nMaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.GetWindowTextW$MH, "GetWindowTextW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpString.address(), nMaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowTextLengthA$MH() {
        return RuntimeHelper.requireNonNull(constants$619.GetWindowTextLengthA$MH,"GetWindowTextLengthA");
    }
    public static int GetWindowTextLengthA ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.GetWindowTextLengthA$MH, "GetWindowTextLengthA");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowTextLengthW$MH() {
        return RuntimeHelper.requireNonNull(constants$619.GetWindowTextLengthW$MH,"GetWindowTextLengthW");
    }
    public static int GetWindowTextLengthW ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.GetWindowTextLengthW$MH, "GetWindowTextLengthW");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClientRect$MH() {
        return RuntimeHelper.requireNonNull(constants$619.GetClientRect$MH,"GetClientRect");
    }
    public static int GetClientRect ( Addressable hWnd,  Addressable lpRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$619.GetClientRect$MH, "GetClientRect");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowRect$MH() {
        return RuntimeHelper.requireNonNull(constants$620.GetWindowRect$MH,"GetWindowRect");
    }
    public static int GetWindowRect ( Addressable hWnd,  Addressable lpRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.GetWindowRect$MH, "GetWindowRect");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdjustWindowRect$MH() {
        return RuntimeHelper.requireNonNull(constants$620.AdjustWindowRect$MH,"AdjustWindowRect");
    }
    public static int AdjustWindowRect ( Addressable lpRect,  int dwStyle,  int bMenu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.AdjustWindowRect$MH, "AdjustWindowRect");
        try {
            return (int)mh$.invokeExact(lpRect.address(), dwStyle, bMenu);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdjustWindowRectEx$MH() {
        return RuntimeHelper.requireNonNull(constants$620.AdjustWindowRectEx$MH,"AdjustWindowRectEx");
    }
    public static int AdjustWindowRectEx ( Addressable lpRect,  int dwStyle,  int bMenu,  int dwExStyle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.AdjustWindowRectEx$MH, "AdjustWindowRectEx");
        try {
            return (int)mh$.invokeExact(lpRect.address(), dwStyle, bMenu, dwExStyle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowContextHelpId$MH() {
        return RuntimeHelper.requireNonNull(constants$620.SetWindowContextHelpId$MH,"SetWindowContextHelpId");
    }
    public static int SetWindowContextHelpId ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.SetWindowContextHelpId$MH, "SetWindowContextHelpId");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowContextHelpId$MH() {
        return RuntimeHelper.requireNonNull(constants$620.GetWindowContextHelpId$MH,"GetWindowContextHelpId");
    }
    public static int GetWindowContextHelpId ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.GetWindowContextHelpId$MH, "GetWindowContextHelpId");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetMenuContextHelpId$MH() {
        return RuntimeHelper.requireNonNull(constants$620.SetMenuContextHelpId$MH,"SetMenuContextHelpId");
    }
    public static int SetMenuContextHelpId ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$620.SetMenuContextHelpId$MH, "SetMenuContextHelpId");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuContextHelpId$MH() {
        return RuntimeHelper.requireNonNull(constants$621.GetMenuContextHelpId$MH,"GetMenuContextHelpId");
    }
    public static int GetMenuContextHelpId ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.GetMenuContextHelpId$MH, "GetMenuContextHelpId");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MessageBoxA$MH() {
        return RuntimeHelper.requireNonNull(constants$621.MessageBoxA$MH,"MessageBoxA");
    }
    public static int MessageBoxA ( Addressable hWnd,  Addressable lpText,  Addressable lpCaption,  int uType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.MessageBoxA$MH, "MessageBoxA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpText.address(), lpCaption.address(), uType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MessageBoxW$MH() {
        return RuntimeHelper.requireNonNull(constants$621.MessageBoxW$MH,"MessageBoxW");
    }
    public static int MessageBoxW ( Addressable hWnd,  Addressable lpText,  Addressable lpCaption,  int uType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.MessageBoxW$MH, "MessageBoxW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpText.address(), lpCaption.address(), uType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MessageBoxExA$MH() {
        return RuntimeHelper.requireNonNull(constants$621.MessageBoxExA$MH,"MessageBoxExA");
    }
    public static int MessageBoxExA ( Addressable hWnd,  Addressable lpText,  Addressable lpCaption,  int uType,  short wLanguageId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.MessageBoxExA$MH, "MessageBoxExA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpText.address(), lpCaption.address(), uType, wLanguageId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MessageBoxExW$MH() {
        return RuntimeHelper.requireNonNull(constants$621.MessageBoxExW$MH,"MessageBoxExW");
    }
    public static int MessageBoxExW ( Addressable hWnd,  Addressable lpText,  Addressable lpCaption,  int uType,  short wLanguageId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$621.MessageBoxExW$MH, "MessageBoxExW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpText.address(), lpCaption.address(), uType, wLanguageId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MessageBoxIndirectA$MH() {
        return RuntimeHelper.requireNonNull(constants$622.MessageBoxIndirectA$MH,"MessageBoxIndirectA");
    }
    public static int MessageBoxIndirectA ( Addressable lpmbp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.MessageBoxIndirectA$MH, "MessageBoxIndirectA");
        try {
            return (int)mh$.invokeExact(lpmbp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MessageBoxIndirectW$MH() {
        return RuntimeHelper.requireNonNull(constants$622.MessageBoxIndirectW$MH,"MessageBoxIndirectW");
    }
    public static int MessageBoxIndirectW ( Addressable lpmbp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.MessageBoxIndirectW$MH, "MessageBoxIndirectW");
        try {
            return (int)mh$.invokeExact(lpmbp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MessageBeep$MH() {
        return RuntimeHelper.requireNonNull(constants$622.MessageBeep$MH,"MessageBeep");
    }
    public static int MessageBeep ( int uType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.MessageBeep$MH, "MessageBeep");
        try {
            return (int)mh$.invokeExact(uType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShowCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$622.ShowCursor$MH,"ShowCursor");
    }
    public static int ShowCursor ( int bShow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.ShowCursor$MH, "ShowCursor");
        try {
            return (int)mh$.invokeExact(bShow);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCursorPos$MH() {
        return RuntimeHelper.requireNonNull(constants$622.SetCursorPos$MH,"SetCursorPos");
    }
    public static int SetCursorPos ( int X,  int Y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$622.SetCursorPos$MH, "SetCursorPos");
        try {
            return (int)mh$.invokeExact(X, Y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$623.SetCursor$MH,"SetCursor");
    }
    public static MemoryAddress SetCursor ( Addressable hCursor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.SetCursor$MH, "SetCursor");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hCursor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCursorPos$MH() {
        return RuntimeHelper.requireNonNull(constants$623.GetCursorPos$MH,"GetCursorPos");
    }
    public static int GetCursorPos ( Addressable lpPoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.GetCursorPos$MH, "GetCursorPos");
        try {
            return (int)mh$.invokeExact(lpPoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClipCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$623.ClipCursor$MH,"ClipCursor");
    }
    public static int ClipCursor ( Addressable lpRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.ClipCursor$MH, "ClipCursor");
        try {
            return (int)mh$.invokeExact(lpRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClipCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$623.GetClipCursor$MH,"GetClipCursor");
    }
    public static int GetClipCursor ( Addressable lpRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.GetClipCursor$MH, "GetClipCursor");
        try {
            return (int)mh$.invokeExact(lpRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$623.GetCursor$MH,"GetCursor");
    }
    public static MemoryAddress GetCursor () {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.GetCursor$MH, "GetCursor");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateCaret$MH() {
        return RuntimeHelper.requireNonNull(constants$623.CreateCaret$MH,"CreateCaret");
    }
    public static int CreateCaret ( Addressable hWnd,  Addressable hBitmap,  int nWidth,  int nHeight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$623.CreateCaret$MH, "CreateCaret");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hBitmap.address(), nWidth, nHeight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCaretBlinkTime$MH() {
        return RuntimeHelper.requireNonNull(constants$624.GetCaretBlinkTime$MH,"GetCaretBlinkTime");
    }
    public static int GetCaretBlinkTime () {
        var mh$ = RuntimeHelper.requireNonNull(constants$624.GetCaretBlinkTime$MH, "GetCaretBlinkTime");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCaretBlinkTime$MH() {
        return RuntimeHelper.requireNonNull(constants$624.SetCaretBlinkTime$MH,"SetCaretBlinkTime");
    }
    public static int SetCaretBlinkTime ( int uMSeconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$624.SetCaretBlinkTime$MH, "SetCaretBlinkTime");
        try {
            return (int)mh$.invokeExact(uMSeconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyCaret$MH() {
        return RuntimeHelper.requireNonNull(constants$624.DestroyCaret$MH,"DestroyCaret");
    }
    public static int DestroyCaret () {
        var mh$ = RuntimeHelper.requireNonNull(constants$624.DestroyCaret$MH, "DestroyCaret");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle HideCaret$MH() {
        return RuntimeHelper.requireNonNull(constants$624.HideCaret$MH,"HideCaret");
    }
    public static int HideCaret ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$624.HideCaret$MH, "HideCaret");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShowCaret$MH() {
        return RuntimeHelper.requireNonNull(constants$624.ShowCaret$MH,"ShowCaret");
    }
    public static int ShowCaret ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$624.ShowCaret$MH, "ShowCaret");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCaretPos$MH() {
        return RuntimeHelper.requireNonNull(constants$624.SetCaretPos$MH,"SetCaretPos");
    }
    public static int SetCaretPos ( int X,  int Y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$624.SetCaretPos$MH, "SetCaretPos");
        try {
            return (int)mh$.invokeExact(X, Y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCaretPos$MH() {
        return RuntimeHelper.requireNonNull(constants$625.GetCaretPos$MH,"GetCaretPos");
    }
    public static int GetCaretPos ( Addressable lpPoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.GetCaretPos$MH, "GetCaretPos");
        try {
            return (int)mh$.invokeExact(lpPoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClientToScreen$MH() {
        return RuntimeHelper.requireNonNull(constants$625.ClientToScreen$MH,"ClientToScreen");
    }
    public static int ClientToScreen ( Addressable hWnd,  Addressable lpPoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.ClientToScreen$MH, "ClientToScreen");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpPoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScreenToClient$MH() {
        return RuntimeHelper.requireNonNull(constants$625.ScreenToClient$MH,"ScreenToClient");
    }
    public static int ScreenToClient ( Addressable hWnd,  Addressable lpPoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.ScreenToClient$MH, "ScreenToClient");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpPoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MapWindowPoints$MH() {
        return RuntimeHelper.requireNonNull(constants$625.MapWindowPoints$MH,"MapWindowPoints");
    }
    public static int MapWindowPoints ( Addressable hWndFrom,  Addressable hWndTo,  Addressable lpPoints,  int cPoints) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.MapWindowPoints$MH, "MapWindowPoints");
        try {
            return (int)mh$.invokeExact(hWndFrom.address(), hWndTo.address(), lpPoints.address(), cPoints);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WindowFromPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$625.WindowFromPoint$MH,"WindowFromPoint");
    }
    public static MemoryAddress WindowFromPoint ( MemorySegment Point) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.WindowFromPoint$MH, "WindowFromPoint");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(Point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChildWindowFromPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$625.ChildWindowFromPoint$MH,"ChildWindowFromPoint");
    }
    public static MemoryAddress ChildWindowFromPoint ( Addressable hWndParent,  MemorySegment Point) {
        var mh$ = RuntimeHelper.requireNonNull(constants$625.ChildWindowFromPoint$MH, "ChildWindowFromPoint");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWndParent.address(), Point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChildWindowFromPointEx$MH() {
        return RuntimeHelper.requireNonNull(constants$626.ChildWindowFromPointEx$MH,"ChildWindowFromPointEx");
    }
    public static MemoryAddress ChildWindowFromPointEx ( Addressable hwnd,  MemorySegment pt,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$626.ChildWindowFromPointEx$MH, "ChildWindowFromPointEx");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hwnd.address(), pt, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPhysicalCursorPos$MH() {
        return RuntimeHelper.requireNonNull(constants$626.SetPhysicalCursorPos$MH,"SetPhysicalCursorPos");
    }
    public static int SetPhysicalCursorPos ( int X,  int Y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$626.SetPhysicalCursorPos$MH, "SetPhysicalCursorPos");
        try {
            return (int)mh$.invokeExact(X, Y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPhysicalCursorPos$MH() {
        return RuntimeHelper.requireNonNull(constants$626.GetPhysicalCursorPos$MH,"GetPhysicalCursorPos");
    }
    public static int GetPhysicalCursorPos ( Addressable lpPoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$626.GetPhysicalCursorPos$MH, "GetPhysicalCursorPos");
        try {
            return (int)mh$.invokeExact(lpPoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LogicalToPhysicalPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$626.LogicalToPhysicalPoint$MH,"LogicalToPhysicalPoint");
    }
    public static int LogicalToPhysicalPoint ( Addressable hWnd,  Addressable lpPoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$626.LogicalToPhysicalPoint$MH, "LogicalToPhysicalPoint");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpPoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PhysicalToLogicalPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$626.PhysicalToLogicalPoint$MH,"PhysicalToLogicalPoint");
    }
    public static int PhysicalToLogicalPoint ( Addressable hWnd,  Addressable lpPoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$626.PhysicalToLogicalPoint$MH, "PhysicalToLogicalPoint");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpPoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WindowFromPhysicalPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$626.WindowFromPhysicalPoint$MH,"WindowFromPhysicalPoint");
    }
    public static MemoryAddress WindowFromPhysicalPoint ( MemorySegment Point) {
        var mh$ = RuntimeHelper.requireNonNull(constants$626.WindowFromPhysicalPoint$MH, "WindowFromPhysicalPoint");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(Point);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSysColor$MH() {
        return RuntimeHelper.requireNonNull(constants$627.GetSysColor$MH,"GetSysColor");
    }
    public static int GetSysColor ( int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$627.GetSysColor$MH, "GetSysColor");
        try {
            return (int)mh$.invokeExact(nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSysColorBrush$MH() {
        return RuntimeHelper.requireNonNull(constants$627.GetSysColorBrush$MH,"GetSysColorBrush");
    }
    public static MemoryAddress GetSysColorBrush ( int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$627.GetSysColorBrush$MH, "GetSysColorBrush");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetSysColors$MH() {
        return RuntimeHelper.requireNonNull(constants$627.SetSysColors$MH,"SetSysColors");
    }
    public static int SetSysColors ( int cElements,  Addressable lpaElements,  Addressable lpaRgbValues) {
        var mh$ = RuntimeHelper.requireNonNull(constants$627.SetSysColors$MH, "SetSysColors");
        try {
            return (int)mh$.invokeExact(cElements, lpaElements.address(), lpaRgbValues.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawFocusRect$MH() {
        return RuntimeHelper.requireNonNull(constants$627.DrawFocusRect$MH,"DrawFocusRect");
    }
    public static int DrawFocusRect ( Addressable hDC,  Addressable lprc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$627.DrawFocusRect$MH, "DrawFocusRect");
        try {
            return (int)mh$.invokeExact(hDC.address(), lprc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FillRect$MH() {
        return RuntimeHelper.requireNonNull(constants$627.FillRect$MH,"FillRect");
    }
    public static int FillRect ( Addressable hDC,  Addressable lprc,  Addressable hbr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$627.FillRect$MH, "FillRect");
        try {
            return (int)mh$.invokeExact(hDC.address(), lprc.address(), hbr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FrameRect$MH() {
        return RuntimeHelper.requireNonNull(constants$627.FrameRect$MH,"FrameRect");
    }
    public static int FrameRect ( Addressable hDC,  Addressable lprc,  Addressable hbr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$627.FrameRect$MH, "FrameRect");
        try {
            return (int)mh$.invokeExact(hDC.address(), lprc.address(), hbr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InvertRect$MH() {
        return RuntimeHelper.requireNonNull(constants$628.InvertRect$MH,"InvertRect");
    }
    public static int InvertRect ( Addressable hDC,  Addressable lprc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$628.InvertRect$MH, "InvertRect");
        try {
            return (int)mh$.invokeExact(hDC.address(), lprc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetRect$MH() {
        return RuntimeHelper.requireNonNull(constants$628.SetRect$MH,"SetRect");
    }
    public static int SetRect ( Addressable lprc,  int xLeft,  int yTop,  int xRight,  int yBottom) {
        var mh$ = RuntimeHelper.requireNonNull(constants$628.SetRect$MH, "SetRect");
        try {
            return (int)mh$.invokeExact(lprc.address(), xLeft, yTop, xRight, yBottom);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetRectEmpty$MH() {
        return RuntimeHelper.requireNonNull(constants$628.SetRectEmpty$MH,"SetRectEmpty");
    }
    public static int SetRectEmpty ( Addressable lprc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$628.SetRectEmpty$MH, "SetRectEmpty");
        try {
            return (int)mh$.invokeExact(lprc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyRect$MH() {
        return RuntimeHelper.requireNonNull(constants$628.CopyRect$MH,"CopyRect");
    }
    public static int CopyRect ( Addressable lprcDst,  Addressable lprcSrc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$628.CopyRect$MH, "CopyRect");
        try {
            return (int)mh$.invokeExact(lprcDst.address(), lprcSrc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InflateRect$MH() {
        return RuntimeHelper.requireNonNull(constants$628.InflateRect$MH,"InflateRect");
    }
    public static int InflateRect ( Addressable lprc,  int dx,  int dy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$628.InflateRect$MH, "InflateRect");
        try {
            return (int)mh$.invokeExact(lprc.address(), dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IntersectRect$MH() {
        return RuntimeHelper.requireNonNull(constants$628.IntersectRect$MH,"IntersectRect");
    }
    public static int IntersectRect ( Addressable lprcDst,  Addressable lprcSrc1,  Addressable lprcSrc2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$628.IntersectRect$MH, "IntersectRect");
        try {
            return (int)mh$.invokeExact(lprcDst.address(), lprcSrc1.address(), lprcSrc2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnionRect$MH() {
        return RuntimeHelper.requireNonNull(constants$629.UnionRect$MH,"UnionRect");
    }
    public static int UnionRect ( Addressable lprcDst,  Addressable lprcSrc1,  Addressable lprcSrc2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$629.UnionRect$MH, "UnionRect");
        try {
            return (int)mh$.invokeExact(lprcDst.address(), lprcSrc1.address(), lprcSrc2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SubtractRect$MH() {
        return RuntimeHelper.requireNonNull(constants$629.SubtractRect$MH,"SubtractRect");
    }
    public static int SubtractRect ( Addressable lprcDst,  Addressable lprcSrc1,  Addressable lprcSrc2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$629.SubtractRect$MH, "SubtractRect");
        try {
            return (int)mh$.invokeExact(lprcDst.address(), lprcSrc1.address(), lprcSrc2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OffsetRect$MH() {
        return RuntimeHelper.requireNonNull(constants$629.OffsetRect$MH,"OffsetRect");
    }
    public static int OffsetRect ( Addressable lprc,  int dx,  int dy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$629.OffsetRect$MH, "OffsetRect");
        try {
            return (int)mh$.invokeExact(lprc.address(), dx, dy);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsRectEmpty$MH() {
        return RuntimeHelper.requireNonNull(constants$629.IsRectEmpty$MH,"IsRectEmpty");
    }
    public static int IsRectEmpty ( Addressable lprc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$629.IsRectEmpty$MH, "IsRectEmpty");
        try {
            return (int)mh$.invokeExact(lprc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EqualRect$MH() {
        return RuntimeHelper.requireNonNull(constants$629.EqualRect$MH,"EqualRect");
    }
    public static int EqualRect ( Addressable lprc1,  Addressable lprc2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$629.EqualRect$MH, "EqualRect");
        try {
            return (int)mh$.invokeExact(lprc1.address(), lprc2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PtInRect$MH() {
        return RuntimeHelper.requireNonNull(constants$629.PtInRect$MH,"PtInRect");
    }
    public static int PtInRect ( Addressable lprc,  MemorySegment pt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$629.PtInRect$MH, "PtInRect");
        try {
            return (int)mh$.invokeExact(lprc.address(), pt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowWord$MH() {
        return RuntimeHelper.requireNonNull(constants$630.GetWindowWord$MH,"GetWindowWord");
    }
    public static short GetWindowWord ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$630.GetWindowWord$MH, "GetWindowWord");
        try {
            return (short)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowWord$MH() {
        return RuntimeHelper.requireNonNull(constants$630.SetWindowWord$MH,"SetWindowWord");
    }
    public static short SetWindowWord ( Addressable hWnd,  int nIndex,  short wNewWord) {
        var mh$ = RuntimeHelper.requireNonNull(constants$630.SetWindowWord$MH, "SetWindowWord");
        try {
            return (short)mh$.invokeExact(hWnd.address(), nIndex, wNewWord);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowLongA$MH() {
        return RuntimeHelper.requireNonNull(constants$630.GetWindowLongA$MH,"GetWindowLongA");
    }
    public static int GetWindowLongA ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$630.GetWindowLongA$MH, "GetWindowLongA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowLongW$MH() {
        return RuntimeHelper.requireNonNull(constants$630.GetWindowLongW$MH,"GetWindowLongW");
    }
    public static int GetWindowLongW ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$630.GetWindowLongW$MH, "GetWindowLongW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowLongA$MH() {
        return RuntimeHelper.requireNonNull(constants$630.SetWindowLongA$MH,"SetWindowLongA");
    }
    public static int SetWindowLongA ( Addressable hWnd,  int nIndex,  int dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$630.SetWindowLongA$MH, "SetWindowLongA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowLongW$MH() {
        return RuntimeHelper.requireNonNull(constants$630.SetWindowLongW$MH,"SetWindowLongW");
    }
    public static int SetWindowLongW ( Addressable hWnd,  int nIndex,  int dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$630.SetWindowLongW$MH, "SetWindowLongW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowLongPtrA$MH() {
        return RuntimeHelper.requireNonNull(constants$631.GetWindowLongPtrA$MH,"GetWindowLongPtrA");
    }
    public static long GetWindowLongPtrA ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$631.GetWindowLongPtrA$MH, "GetWindowLongPtrA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowLongPtrW$MH() {
        return RuntimeHelper.requireNonNull(constants$631.GetWindowLongPtrW$MH,"GetWindowLongPtrW");
    }
    public static long GetWindowLongPtrW ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$631.GetWindowLongPtrW$MH, "GetWindowLongPtrW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowLongPtrA$MH() {
        return RuntimeHelper.requireNonNull(constants$631.SetWindowLongPtrA$MH,"SetWindowLongPtrA");
    }
    public static long SetWindowLongPtrA ( Addressable hWnd,  int nIndex,  long dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$631.SetWindowLongPtrA$MH, "SetWindowLongPtrA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowLongPtrW$MH() {
        return RuntimeHelper.requireNonNull(constants$631.SetWindowLongPtrW$MH,"SetWindowLongPtrW");
    }
    public static long SetWindowLongPtrW ( Addressable hWnd,  int nIndex,  long dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$631.SetWindowLongPtrW$MH, "SetWindowLongPtrW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassWord$MH() {
        return RuntimeHelper.requireNonNull(constants$631.GetClassWord$MH,"GetClassWord");
    }
    public static short GetClassWord ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$631.GetClassWord$MH, "GetClassWord");
        try {
            return (short)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetClassWord$MH() {
        return RuntimeHelper.requireNonNull(constants$631.SetClassWord$MH,"SetClassWord");
    }
    public static short SetClassWord ( Addressable hWnd,  int nIndex,  short wNewWord) {
        var mh$ = RuntimeHelper.requireNonNull(constants$631.SetClassWord$MH, "SetClassWord");
        try {
            return (short)mh$.invokeExact(hWnd.address(), nIndex, wNewWord);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassLongA$MH() {
        return RuntimeHelper.requireNonNull(constants$632.GetClassLongA$MH,"GetClassLongA");
    }
    public static int GetClassLongA ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$632.GetClassLongA$MH, "GetClassLongA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassLongW$MH() {
        return RuntimeHelper.requireNonNull(constants$632.GetClassLongW$MH,"GetClassLongW");
    }
    public static int GetClassLongW ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$632.GetClassLongW$MH, "GetClassLongW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetClassLongA$MH() {
        return RuntimeHelper.requireNonNull(constants$632.SetClassLongA$MH,"SetClassLongA");
    }
    public static int SetClassLongA ( Addressable hWnd,  int nIndex,  int dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$632.SetClassLongA$MH, "SetClassLongA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetClassLongW$MH() {
        return RuntimeHelper.requireNonNull(constants$632.SetClassLongW$MH,"SetClassLongW");
    }
    public static int SetClassLongW ( Addressable hWnd,  int nIndex,  int dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$632.SetClassLongW$MH, "SetClassLongW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassLongPtrA$MH() {
        return RuntimeHelper.requireNonNull(constants$632.GetClassLongPtrA$MH,"GetClassLongPtrA");
    }
    public static long GetClassLongPtrA ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$632.GetClassLongPtrA$MH, "GetClassLongPtrA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassLongPtrW$MH() {
        return RuntimeHelper.requireNonNull(constants$632.GetClassLongPtrW$MH,"GetClassLongPtrW");
    }
    public static long GetClassLongPtrW ( Addressable hWnd,  int nIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$632.GetClassLongPtrW$MH, "GetClassLongPtrW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetClassLongPtrA$MH() {
        return RuntimeHelper.requireNonNull(constants$633.SetClassLongPtrA$MH,"SetClassLongPtrA");
    }
    public static long SetClassLongPtrA ( Addressable hWnd,  int nIndex,  long dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$633.SetClassLongPtrA$MH, "SetClassLongPtrA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetClassLongPtrW$MH() {
        return RuntimeHelper.requireNonNull(constants$633.SetClassLongPtrW$MH,"SetClassLongPtrW");
    }
    public static long SetClassLongPtrW ( Addressable hWnd,  int nIndex,  long dwNewLong) {
        var mh$ = RuntimeHelper.requireNonNull(constants$633.SetClassLongPtrW$MH, "SetClassLongPtrW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), nIndex, dwNewLong);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetProcessDefaultLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$633.GetProcessDefaultLayout$MH,"GetProcessDefaultLayout");
    }
    public static int GetProcessDefaultLayout ( Addressable pdwDefaultLayout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$633.GetProcessDefaultLayout$MH, "GetProcessDefaultLayout");
        try {
            return (int)mh$.invokeExact(pdwDefaultLayout.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetProcessDefaultLayout$MH() {
        return RuntimeHelper.requireNonNull(constants$633.SetProcessDefaultLayout$MH,"SetProcessDefaultLayout");
    }
    public static int SetProcessDefaultLayout ( int dwDefaultLayout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$633.SetProcessDefaultLayout$MH, "SetProcessDefaultLayout");
        try {
            return (int)mh$.invokeExact(dwDefaultLayout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDesktopWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$633.GetDesktopWindow$MH,"GetDesktopWindow");
    }
    public static MemoryAddress GetDesktopWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$633.GetDesktopWindow$MH, "GetDesktopWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetParent$MH() {
        return RuntimeHelper.requireNonNull(constants$633.GetParent$MH,"GetParent");
    }
    public static MemoryAddress GetParent ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$633.GetParent$MH, "GetParent");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetParent$MH() {
        return RuntimeHelper.requireNonNull(constants$634.SetParent$MH,"SetParent");
    }
    public static MemoryAddress SetParent ( Addressable hWndChild,  Addressable hWndNewParent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$634.SetParent$MH, "SetParent");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWndChild.address(), hWndNewParent.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumChildWindows$MH() {
        return RuntimeHelper.requireNonNull(constants$634.EnumChildWindows$MH,"EnumChildWindows");
    }
    public static int EnumChildWindows ( Addressable hWndParent,  Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$634.EnumChildWindows$MH, "EnumChildWindows");
        try {
            return (int)mh$.invokeExact(hWndParent.address(), lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindWindowA$MH() {
        return RuntimeHelper.requireNonNull(constants$634.FindWindowA$MH,"FindWindowA");
    }
    public static MemoryAddress FindWindowA ( Addressable lpClassName,  Addressable lpWindowName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$634.FindWindowA$MH, "FindWindowA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpClassName.address(), lpWindowName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindWindowW$MH() {
        return RuntimeHelper.requireNonNull(constants$634.FindWindowW$MH,"FindWindowW");
    }
    public static MemoryAddress FindWindowW ( Addressable lpClassName,  Addressable lpWindowName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$634.FindWindowW$MH, "FindWindowW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpClassName.address(), lpWindowName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindWindowExA$MH() {
        return RuntimeHelper.requireNonNull(constants$634.FindWindowExA$MH,"FindWindowExA");
    }
    public static MemoryAddress FindWindowExA ( Addressable hWndParent,  Addressable hWndChildAfter,  Addressable lpszClass,  Addressable lpszWindow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$634.FindWindowExA$MH, "FindWindowExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWndParent.address(), hWndChildAfter.address(), lpszClass.address(), lpszWindow.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindWindowExW$MH() {
        return RuntimeHelper.requireNonNull(constants$634.FindWindowExW$MH,"FindWindowExW");
    }
    public static MemoryAddress FindWindowExW ( Addressable hWndParent,  Addressable hWndChildAfter,  Addressable lpszClass,  Addressable lpszWindow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$634.FindWindowExW$MH, "FindWindowExW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWndParent.address(), hWndChildAfter.address(), lpszClass.address(), lpszWindow.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetShellWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$635.GetShellWindow$MH,"GetShellWindow");
    }
    public static MemoryAddress GetShellWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$635.GetShellWindow$MH, "GetShellWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterShellHookWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$635.RegisterShellHookWindow$MH,"RegisterShellHookWindow");
    }
    public static int RegisterShellHookWindow ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$635.RegisterShellHookWindow$MH, "RegisterShellHookWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeregisterShellHookWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$635.DeregisterShellHookWindow$MH,"DeregisterShellHookWindow");
    }
    public static int DeregisterShellHookWindow ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$635.DeregisterShellHookWindow$MH, "DeregisterShellHookWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumWindows$MH() {
        return RuntimeHelper.requireNonNull(constants$635.EnumWindows$MH,"EnumWindows");
    }
    public static int EnumWindows ( Addressable lpEnumFunc,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$635.EnumWindows$MH, "EnumWindows");
        try {
            return (int)mh$.invokeExact(lpEnumFunc.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumThreadWindows$MH() {
        return RuntimeHelper.requireNonNull(constants$635.EnumThreadWindows$MH,"EnumThreadWindows");
    }
    public static int EnumThreadWindows ( int dwThreadId,  Addressable lpfn,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$635.EnumThreadWindows$MH, "EnumThreadWindows");
        try {
            return (int)mh$.invokeExact(dwThreadId, lpfn.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$635.GetClassNameA$MH,"GetClassNameA");
    }
    public static int GetClassNameA ( Addressable hWnd,  Addressable lpClassName,  int nMaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$635.GetClassNameA$MH, "GetClassNameA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpClassName.address(), nMaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetClassNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$636.GetClassNameW$MH,"GetClassNameW");
    }
    public static int GetClassNameW ( Addressable hWnd,  Addressable lpClassName,  int nMaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$636.GetClassNameW$MH, "GetClassNameW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpClassName.address(), nMaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTopWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$636.GetTopWindow$MH,"GetTopWindow");
    }
    public static MemoryAddress GetTopWindow ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$636.GetTopWindow$MH, "GetTopWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowThreadProcessId$MH() {
        return RuntimeHelper.requireNonNull(constants$636.GetWindowThreadProcessId$MH,"GetWindowThreadProcessId");
    }
    public static int GetWindowThreadProcessId ( Addressable hWnd,  Addressable lpdwProcessId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$636.GetWindowThreadProcessId$MH, "GetWindowThreadProcessId");
        try {
            return (int)mh$.invokeExact(hWnd.address(), lpdwProcessId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsGUIThread$MH() {
        return RuntimeHelper.requireNonNull(constants$636.IsGUIThread$MH,"IsGUIThread");
    }
    public static int IsGUIThread ( int bConvert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$636.IsGUIThread$MH, "IsGUIThread");
        try {
            return (int)mh$.invokeExact(bConvert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLastActivePopup$MH() {
        return RuntimeHelper.requireNonNull(constants$636.GetLastActivePopup$MH,"GetLastActivePopup");
    }
    public static MemoryAddress GetLastActivePopup ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$636.GetLastActivePopup$MH, "GetLastActivePopup");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$636.GetWindow$MH,"GetWindow");
    }
    public static MemoryAddress GetWindow ( Addressable hWnd,  int uCmd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$636.GetWindow$MH, "GetWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hWnd.address(), uCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowsHookA$MH() {
        return RuntimeHelper.requireNonNull(constants$637.SetWindowsHookA$MH,"SetWindowsHookA");
    }
    public static MemoryAddress SetWindowsHookA ( int nFilterType,  Addressable pfnFilterProc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$637.SetWindowsHookA$MH, "SetWindowsHookA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(nFilterType, pfnFilterProc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowsHookW$MH() {
        return RuntimeHelper.requireNonNull(constants$637.SetWindowsHookW$MH,"SetWindowsHookW");
    }
    public static MemoryAddress SetWindowsHookW ( int nFilterType,  Addressable pfnFilterProc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$637.SetWindowsHookW$MH, "SetWindowsHookW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(nFilterType, pfnFilterProc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnhookWindowsHook$MH() {
        return RuntimeHelper.requireNonNull(constants$637.UnhookWindowsHook$MH,"UnhookWindowsHook");
    }
    public static int UnhookWindowsHook ( int nCode,  Addressable pfnFilterProc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$637.UnhookWindowsHook$MH, "UnhookWindowsHook");
        try {
            return (int)mh$.invokeExact(nCode, pfnFilterProc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowsHookExA$MH() {
        return RuntimeHelper.requireNonNull(constants$637.SetWindowsHookExA$MH,"SetWindowsHookExA");
    }
    public static MemoryAddress SetWindowsHookExA ( int idHook,  Addressable lpfn,  Addressable hmod,  int dwThreadId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$637.SetWindowsHookExA$MH, "SetWindowsHookExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idHook, lpfn.address(), hmod.address(), dwThreadId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWindowsHookExW$MH() {
        return RuntimeHelper.requireNonNull(constants$637.SetWindowsHookExW$MH,"SetWindowsHookExW");
    }
    public static MemoryAddress SetWindowsHookExW ( int idHook,  Addressable lpfn,  Addressable hmod,  int dwThreadId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$637.SetWindowsHookExW$MH, "SetWindowsHookExW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idHook, lpfn.address(), hmod.address(), dwThreadId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnhookWindowsHookEx$MH() {
        return RuntimeHelper.requireNonNull(constants$637.UnhookWindowsHookEx$MH,"UnhookWindowsHookEx");
    }
    public static int UnhookWindowsHookEx ( Addressable hhk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$637.UnhookWindowsHookEx$MH, "UnhookWindowsHookEx");
        try {
            return (int)mh$.invokeExact(hhk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CallNextHookEx$MH() {
        return RuntimeHelper.requireNonNull(constants$638.CallNextHookEx$MH,"CallNextHookEx");
    }
    public static long CallNextHookEx ( Addressable hhk,  int nCode,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$638.CallNextHookEx$MH, "CallNextHookEx");
        try {
            return (long)mh$.invokeExact(hhk.address(), nCode, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CheckMenuRadioItem$MH() {
        return RuntimeHelper.requireNonNull(constants$638.CheckMenuRadioItem$MH,"CheckMenuRadioItem");
    }
    public static int CheckMenuRadioItem ( Addressable hmenu,  int first,  int last,  int check,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$638.CheckMenuRadioItem$MH, "CheckMenuRadioItem");
        try {
            return (int)mh$.invokeExact(hmenu.address(), first, last, check, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadBitmapA$MH() {
        return RuntimeHelper.requireNonNull(constants$638.LoadBitmapA$MH,"LoadBitmapA");
    }
    public static MemoryAddress LoadBitmapA ( Addressable hInstance,  Addressable lpBitmapName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$638.LoadBitmapA$MH, "LoadBitmapA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpBitmapName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadBitmapW$MH() {
        return RuntimeHelper.requireNonNull(constants$638.LoadBitmapW$MH,"LoadBitmapW");
    }
    public static MemoryAddress LoadBitmapW ( Addressable hInstance,  Addressable lpBitmapName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$638.LoadBitmapW$MH, "LoadBitmapW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpBitmapName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadCursorA$MH() {
        return RuntimeHelper.requireNonNull(constants$638.LoadCursorA$MH,"LoadCursorA");
    }
    public static MemoryAddress LoadCursorA ( Addressable hInstance,  Addressable lpCursorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$638.LoadCursorA$MH, "LoadCursorA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpCursorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadCursorW$MH() {
        return RuntimeHelper.requireNonNull(constants$638.LoadCursorW$MH,"LoadCursorW");
    }
    public static MemoryAddress LoadCursorW ( Addressable hInstance,  Addressable lpCursorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$638.LoadCursorW$MH, "LoadCursorW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpCursorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadCursorFromFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$639.LoadCursorFromFileA$MH,"LoadCursorFromFileA");
    }
    public static MemoryAddress LoadCursorFromFileA ( Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$639.LoadCursorFromFileA$MH, "LoadCursorFromFileA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadCursorFromFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$639.LoadCursorFromFileW$MH,"LoadCursorFromFileW");
    }
    public static MemoryAddress LoadCursorFromFileW ( Addressable lpFileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$639.LoadCursorFromFileW$MH, "LoadCursorFromFileW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpFileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$639.CreateCursor$MH,"CreateCursor");
    }
    public static MemoryAddress CreateCursor ( Addressable hInst,  int xHotSpot,  int yHotSpot,  int nWidth,  int nHeight,  Addressable pvANDPlane,  Addressable pvXORPlane) {
        var mh$ = RuntimeHelper.requireNonNull(constants$639.CreateCursor$MH, "CreateCursor");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), xHotSpot, yHotSpot, nWidth, nHeight, pvANDPlane.address(), pvXORPlane.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$639.DestroyCursor$MH,"DestroyCursor");
    }
    public static int DestroyCursor ( Addressable hCursor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$639.DestroyCursor$MH, "DestroyCursor");
        try {
            return (int)mh$.invokeExact(hCursor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetSystemCursor$MH() {
        return RuntimeHelper.requireNonNull(constants$639.SetSystemCursor$MH,"SetSystemCursor");
    }
    public static int SetSystemCursor ( Addressable hcur,  int id) {
        var mh$ = RuntimeHelper.requireNonNull(constants$639.SetSystemCursor$MH, "SetSystemCursor");
        try {
            return (int)mh$.invokeExact(hcur.address(), id);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$639.LoadIconA$MH,"LoadIconA");
    }
    public static MemoryAddress LoadIconA ( Addressable hInstance,  Addressable lpIconName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$639.LoadIconA$MH, "LoadIconA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpIconName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$640.LoadIconW$MH,"LoadIconW");
    }
    public static MemoryAddress LoadIconW ( Addressable hInstance,  Addressable lpIconName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.LoadIconW$MH, "LoadIconW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), lpIconName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrivateExtractIconsA$MH() {
        return RuntimeHelper.requireNonNull(constants$640.PrivateExtractIconsA$MH,"PrivateExtractIconsA");
    }
    public static int PrivateExtractIconsA ( Addressable szFileName,  int nIconIndex,  int cxIcon,  int cyIcon,  Addressable phicon,  Addressable piconid,  int nIcons,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.PrivateExtractIconsA$MH, "PrivateExtractIconsA");
        try {
            return (int)mh$.invokeExact(szFileName.address(), nIconIndex, cxIcon, cyIcon, phicon.address(), piconid.address(), nIcons, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrivateExtractIconsW$MH() {
        return RuntimeHelper.requireNonNull(constants$640.PrivateExtractIconsW$MH,"PrivateExtractIconsW");
    }
    public static int PrivateExtractIconsW ( Addressable szFileName,  int nIconIndex,  int cxIcon,  int cyIcon,  Addressable phicon,  Addressable piconid,  int nIcons,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.PrivateExtractIconsW$MH, "PrivateExtractIconsW");
        try {
            return (int)mh$.invokeExact(szFileName.address(), nIconIndex, cxIcon, cyIcon, phicon.address(), piconid.address(), nIcons, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$640.CreateIcon$MH,"CreateIcon");
    }
    public static MemoryAddress CreateIcon ( Addressable hInstance,  int nWidth,  int nHeight,  byte cPlanes,  byte cBitsPixel,  Addressable lpbANDbits,  Addressable lpbXORbits) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.CreateIcon$MH, "CreateIcon");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInstance.address(), nWidth, nHeight, cPlanes, cBitsPixel, lpbANDbits.address(), lpbXORbits.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$640.DestroyIcon$MH,"DestroyIcon");
    }
    public static int DestroyIcon ( Addressable hIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.DestroyIcon$MH, "DestroyIcon");
        try {
            return (int)mh$.invokeExact(hIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LookupIconIdFromDirectory$MH() {
        return RuntimeHelper.requireNonNull(constants$640.LookupIconIdFromDirectory$MH,"LookupIconIdFromDirectory");
    }
    public static int LookupIconIdFromDirectory ( Addressable presbits,  int fIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$640.LookupIconIdFromDirectory$MH, "LookupIconIdFromDirectory");
        try {
            return (int)mh$.invokeExact(presbits.address(), fIcon);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LookupIconIdFromDirectoryEx$MH() {
        return RuntimeHelper.requireNonNull(constants$641.LookupIconIdFromDirectoryEx$MH,"LookupIconIdFromDirectoryEx");
    }
    public static int LookupIconIdFromDirectoryEx ( Addressable presbits,  int fIcon,  int cxDesired,  int cyDesired,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.LookupIconIdFromDirectoryEx$MH, "LookupIconIdFromDirectoryEx");
        try {
            return (int)mh$.invokeExact(presbits.address(), fIcon, cxDesired, cyDesired, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateIconFromResource$MH() {
        return RuntimeHelper.requireNonNull(constants$641.CreateIconFromResource$MH,"CreateIconFromResource");
    }
    public static MemoryAddress CreateIconFromResource ( Addressable presbits,  int dwResSize,  int fIcon,  int dwVer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.CreateIconFromResource$MH, "CreateIconFromResource");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(presbits.address(), dwResSize, fIcon, dwVer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateIconFromResourceEx$MH() {
        return RuntimeHelper.requireNonNull(constants$641.CreateIconFromResourceEx$MH,"CreateIconFromResourceEx");
    }
    public static MemoryAddress CreateIconFromResourceEx ( Addressable presbits,  int dwResSize,  int fIcon,  int dwVer,  int cxDesired,  int cyDesired,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.CreateIconFromResourceEx$MH, "CreateIconFromResourceEx");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(presbits.address(), dwResSize, fIcon, dwVer, cxDesired, cyDesired, Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadImageA$MH() {
        return RuntimeHelper.requireNonNull(constants$641.LoadImageA$MH,"LoadImageA");
    }
    public static MemoryAddress LoadImageA ( Addressable hInst,  Addressable name,  int type,  int cx,  int cy,  int fuLoad) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.LoadImageA$MH, "LoadImageA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), name.address(), type, cx, cy, fuLoad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadImageW$MH() {
        return RuntimeHelper.requireNonNull(constants$641.LoadImageW$MH,"LoadImageW");
    }
    public static MemoryAddress LoadImageW ( Addressable hInst,  Addressable name,  int type,  int cx,  int cy,  int fuLoad) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.LoadImageW$MH, "LoadImageW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), name.address(), type, cx, cy, fuLoad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyImage$MH() {
        return RuntimeHelper.requireNonNull(constants$641.CopyImage$MH,"CopyImage");
    }
    public static MemoryAddress CopyImage ( Addressable h,  int type,  int cx,  int cy,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$641.CopyImage$MH, "CopyImage");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(h.address(), type, cx, cy, flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrawIconEx$MH() {
        return RuntimeHelper.requireNonNull(constants$642.DrawIconEx$MH,"DrawIconEx");
    }
    public static int DrawIconEx ( Addressable hdc,  int xLeft,  int yTop,  Addressable hIcon,  int cxWidth,  int cyWidth,  int istepIfAniCur,  Addressable hbrFlickerFreeDraw,  int diFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.DrawIconEx$MH, "DrawIconEx");
        try {
            return (int)mh$.invokeExact(hdc.address(), xLeft, yTop, hIcon.address(), cxWidth, cyWidth, istepIfAniCur, hbrFlickerFreeDraw.address(), diFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateIconIndirect$MH() {
        return RuntimeHelper.requireNonNull(constants$642.CreateIconIndirect$MH,"CreateIconIndirect");
    }
    public static MemoryAddress CreateIconIndirect ( Addressable piconinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.CreateIconIndirect$MH, "CreateIconIndirect");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(piconinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$642.CopyIcon$MH,"CopyIcon");
    }
    public static MemoryAddress CopyIcon ( Addressable hIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.CopyIcon$MH, "CopyIcon");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetIconInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$642.GetIconInfo$MH,"GetIconInfo");
    }
    public static int GetIconInfo ( Addressable hIcon,  Addressable piconinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.GetIconInfo$MH, "GetIconInfo");
        try {
            return (int)mh$.invokeExact(hIcon.address(), piconinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetIconInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$642.GetIconInfoExA$MH,"GetIconInfoExA");
    }
    public static int GetIconInfoExA ( Addressable hicon,  Addressable piconinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.GetIconInfoExA$MH, "GetIconInfoExA");
        try {
            return (int)mh$.invokeExact(hicon.address(), piconinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetIconInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$642.GetIconInfoExW$MH,"GetIconInfoExW");
    }
    public static int GetIconInfoExW ( Addressable hicon,  Addressable piconinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$642.GetIconInfoExW$MH, "GetIconInfoExW");
        try {
            return (int)mh$.invokeExact(hicon.address(), piconinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsDialogMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$643.IsDialogMessageA$MH,"IsDialogMessageA");
    }
    public static int IsDialogMessageA ( Addressable hDlg,  Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.IsDialogMessageA$MH, "IsDialogMessageA");
        try {
            return (int)mh$.invokeExact(hDlg.address(), lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsDialogMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$643.IsDialogMessageW$MH,"IsDialogMessageW");
    }
    public static int IsDialogMessageW ( Addressable hDlg,  Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.IsDialogMessageW$MH, "IsDialogMessageW");
        try {
            return (int)mh$.invokeExact(hDlg.address(), lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MapDialogRect$MH() {
        return RuntimeHelper.requireNonNull(constants$643.MapDialogRect$MH,"MapDialogRect");
    }
    public static int MapDialogRect ( Addressable hDlg,  Addressable lpRect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.MapDialogRect$MH, "MapDialogRect");
        try {
            return (int)mh$.invokeExact(hDlg.address(), lpRect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirListA$MH() {
        return RuntimeHelper.requireNonNull(constants$643.DlgDirListA$MH,"DlgDirListA");
    }
    public static int DlgDirListA ( Addressable hDlg,  Addressable lpPathSpec,  int nIDListBox,  int nIDStaticPath,  int uFileType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.DlgDirListA$MH, "DlgDirListA");
        try {
            return (int)mh$.invokeExact(hDlg.address(), lpPathSpec.address(), nIDListBox, nIDStaticPath, uFileType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirListW$MH() {
        return RuntimeHelper.requireNonNull(constants$643.DlgDirListW$MH,"DlgDirListW");
    }
    public static int DlgDirListW ( Addressable hDlg,  Addressable lpPathSpec,  int nIDListBox,  int nIDStaticPath,  int uFileType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.DlgDirListW$MH, "DlgDirListW");
        try {
            return (int)mh$.invokeExact(hDlg.address(), lpPathSpec.address(), nIDListBox, nIDStaticPath, uFileType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirSelectExA$MH() {
        return RuntimeHelper.requireNonNull(constants$643.DlgDirSelectExA$MH,"DlgDirSelectExA");
    }
    public static int DlgDirSelectExA ( Addressable hwndDlg,  Addressable lpString,  int chCount,  int idListBox) {
        var mh$ = RuntimeHelper.requireNonNull(constants$643.DlgDirSelectExA$MH, "DlgDirSelectExA");
        try {
            return (int)mh$.invokeExact(hwndDlg.address(), lpString.address(), chCount, idListBox);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirSelectExW$MH() {
        return RuntimeHelper.requireNonNull(constants$644.DlgDirSelectExW$MH,"DlgDirSelectExW");
    }
    public static int DlgDirSelectExW ( Addressable hwndDlg,  Addressable lpString,  int chCount,  int idListBox) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.DlgDirSelectExW$MH, "DlgDirSelectExW");
        try {
            return (int)mh$.invokeExact(hwndDlg.address(), lpString.address(), chCount, idListBox);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirListComboBoxA$MH() {
        return RuntimeHelper.requireNonNull(constants$644.DlgDirListComboBoxA$MH,"DlgDirListComboBoxA");
    }
    public static int DlgDirListComboBoxA ( Addressable hDlg,  Addressable lpPathSpec,  int nIDComboBox,  int nIDStaticPath,  int uFiletype) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.DlgDirListComboBoxA$MH, "DlgDirListComboBoxA");
        try {
            return (int)mh$.invokeExact(hDlg.address(), lpPathSpec.address(), nIDComboBox, nIDStaticPath, uFiletype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirListComboBoxW$MH() {
        return RuntimeHelper.requireNonNull(constants$644.DlgDirListComboBoxW$MH,"DlgDirListComboBoxW");
    }
    public static int DlgDirListComboBoxW ( Addressable hDlg,  Addressable lpPathSpec,  int nIDComboBox,  int nIDStaticPath,  int uFiletype) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.DlgDirListComboBoxW$MH, "DlgDirListComboBoxW");
        try {
            return (int)mh$.invokeExact(hDlg.address(), lpPathSpec.address(), nIDComboBox, nIDStaticPath, uFiletype);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirSelectComboBoxExA$MH() {
        return RuntimeHelper.requireNonNull(constants$644.DlgDirSelectComboBoxExA$MH,"DlgDirSelectComboBoxExA");
    }
    public static int DlgDirSelectComboBoxExA ( Addressable hwndDlg,  Addressable lpString,  int cchOut,  int idComboBox) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.DlgDirSelectComboBoxExA$MH, "DlgDirSelectComboBoxExA");
        try {
            return (int)mh$.invokeExact(hwndDlg.address(), lpString.address(), cchOut, idComboBox);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DlgDirSelectComboBoxExW$MH() {
        return RuntimeHelper.requireNonNull(constants$644.DlgDirSelectComboBoxExW$MH,"DlgDirSelectComboBoxExW");
    }
    public static int DlgDirSelectComboBoxExW ( Addressable hwndDlg,  Addressable lpString,  int cchOut,  int idComboBox) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.DlgDirSelectComboBoxExW$MH, "DlgDirSelectComboBoxExW");
        try {
            return (int)mh$.invokeExact(hwndDlg.address(), lpString.address(), cchOut, idComboBox);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetScrollInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$644.SetScrollInfo$MH,"SetScrollInfo");
    }
    public static int SetScrollInfo ( Addressable hwnd,  int nBar,  Addressable lpsi,  int redraw) {
        var mh$ = RuntimeHelper.requireNonNull(constants$644.SetScrollInfo$MH, "SetScrollInfo");
        try {
            return (int)mh$.invokeExact(hwnd.address(), nBar, lpsi.address(), redraw);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetScrollInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$645.GetScrollInfo$MH,"GetScrollInfo");
    }
    public static int GetScrollInfo ( Addressable hwnd,  int nBar,  Addressable lpsi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.GetScrollInfo$MH, "GetScrollInfo");
        try {
            return (int)mh$.invokeExact(hwnd.address(), nBar, lpsi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefFrameProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$645.DefFrameProcA$MH,"DefFrameProcA");
    }
    public static long DefFrameProcA ( Addressable hWnd,  Addressable hWndMDIClient,  int uMsg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.DefFrameProcA$MH, "DefFrameProcA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), hWndMDIClient.address(), uMsg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefFrameProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$645.DefFrameProcW$MH,"DefFrameProcW");
    }
    public static long DefFrameProcW ( Addressable hWnd,  Addressable hWndMDIClient,  int uMsg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.DefFrameProcW$MH, "DefFrameProcW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), hWndMDIClient.address(), uMsg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefMDIChildProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$645.DefMDIChildProcA$MH,"DefMDIChildProcA");
    }
    public static long DefMDIChildProcA ( Addressable hWnd,  int uMsg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.DefMDIChildProcA$MH, "DefMDIChildProcA");
        try {
            return (long)mh$.invokeExact(hWnd.address(), uMsg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefMDIChildProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$645.DefMDIChildProcW$MH,"DefMDIChildProcW");
    }
    public static long DefMDIChildProcW ( Addressable hWnd,  int uMsg,  long wParam,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.DefMDIChildProcW$MH, "DefMDIChildProcW");
        try {
            return (long)mh$.invokeExact(hWnd.address(), uMsg, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TranslateMDISysAccel$MH() {
        return RuntimeHelper.requireNonNull(constants$645.TranslateMDISysAccel$MH,"TranslateMDISysAccel");
    }
    public static int TranslateMDISysAccel ( Addressable hWndClient,  Addressable lpMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$645.TranslateMDISysAccel$MH, "TranslateMDISysAccel");
        try {
            return (int)mh$.invokeExact(hWndClient.address(), lpMsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ArrangeIconicWindows$MH() {
        return RuntimeHelper.requireNonNull(constants$646.ArrangeIconicWindows$MH,"ArrangeIconicWindows");
    }
    public static int ArrangeIconicWindows ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.ArrangeIconicWindows$MH, "ArrangeIconicWindows");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateMDIWindowA$MH() {
        return RuntimeHelper.requireNonNull(constants$646.CreateMDIWindowA$MH,"CreateMDIWindowA");
    }
    public static MemoryAddress CreateMDIWindowA ( Addressable lpClassName,  Addressable lpWindowName,  int dwStyle,  int X,  int Y,  int nWidth,  int nHeight,  Addressable hWndParent,  Addressable hInstance,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.CreateMDIWindowA$MH, "CreateMDIWindowA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpClassName.address(), lpWindowName.address(), dwStyle, X, Y, nWidth, nHeight, hWndParent.address(), hInstance.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateMDIWindowW$MH() {
        return RuntimeHelper.requireNonNull(constants$646.CreateMDIWindowW$MH,"CreateMDIWindowW");
    }
    public static MemoryAddress CreateMDIWindowW ( Addressable lpClassName,  Addressable lpWindowName,  int dwStyle,  int X,  int Y,  int nWidth,  int nHeight,  Addressable hWndParent,  Addressable hInstance,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.CreateMDIWindowW$MH, "CreateMDIWindowW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpClassName.address(), lpWindowName.address(), dwStyle, X, Y, nWidth, nHeight, hWndParent.address(), hInstance.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle TileWindows$MH() {
        return RuntimeHelper.requireNonNull(constants$646.TileWindows$MH,"TileWindows");
    }
    public static short TileWindows ( Addressable hwndParent,  int wHow,  Addressable lpRect,  int cKids,  Addressable lpKids) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.TileWindows$MH, "TileWindows");
        try {
            return (short)mh$.invokeExact(hwndParent.address(), wHow, lpRect.address(), cKids, lpKids.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CascadeWindows$MH() {
        return RuntimeHelper.requireNonNull(constants$646.CascadeWindows$MH,"CascadeWindows");
    }
    public static short CascadeWindows ( Addressable hwndParent,  int wHow,  Addressable lpRect,  int cKids,  Addressable lpKids) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.CascadeWindows$MH, "CascadeWindows");
        try {
            return (short)mh$.invokeExact(hwndParent.address(), wHow, lpRect.address(), cKids, lpKids.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WinHelpA$MH() {
        return RuntimeHelper.requireNonNull(constants$646.WinHelpA$MH,"WinHelpA");
    }
    public static int WinHelpA ( Addressable hWndMain,  Addressable lpszHelp,  int uCommand,  long dwData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$646.WinHelpA$MH, "WinHelpA");
        try {
            return (int)mh$.invokeExact(hWndMain.address(), lpszHelp.address(), uCommand, dwData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WinHelpW$MH() {
        return RuntimeHelper.requireNonNull(constants$647.WinHelpW$MH,"WinHelpW");
    }
    public static int WinHelpW ( Addressable hWndMain,  Addressable lpszHelp,  int uCommand,  long dwData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.WinHelpW$MH, "WinHelpW");
        try {
            return (int)mh$.invokeExact(hWndMain.address(), lpszHelp.address(), uCommand, dwData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGuiResources$MH() {
        return RuntimeHelper.requireNonNull(constants$647.GetGuiResources$MH,"GetGuiResources");
    }
    public static int GetGuiResources ( Addressable hProcess,  int uiFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.GetGuiResources$MH, "GetGuiResources");
        try {
            return (int)mh$.invokeExact(hProcess.address(), uiFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeDisplaySettingsA$MH() {
        return RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsA$MH,"ChangeDisplaySettingsA");
    }
    public static int ChangeDisplaySettingsA ( Addressable lpDevMode,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsA$MH, "ChangeDisplaySettingsA");
        try {
            return (int)mh$.invokeExact(lpDevMode.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeDisplaySettingsW$MH() {
        return RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsW$MH,"ChangeDisplaySettingsW");
    }
    public static int ChangeDisplaySettingsW ( Addressable lpDevMode,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsW$MH, "ChangeDisplaySettingsW");
        try {
            return (int)mh$.invokeExact(lpDevMode.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeDisplaySettingsExA$MH() {
        return RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsExA$MH,"ChangeDisplaySettingsExA");
    }
    public static int ChangeDisplaySettingsExA ( Addressable lpszDeviceName,  Addressable lpDevMode,  Addressable hwnd,  int dwflags,  Addressable lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsExA$MH, "ChangeDisplaySettingsExA");
        try {
            return (int)mh$.invokeExact(lpszDeviceName.address(), lpDevMode.address(), hwnd.address(), dwflags, lParam.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeDisplaySettingsExW$MH() {
        return RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsExW$MH,"ChangeDisplaySettingsExW");
    }
    public static int ChangeDisplaySettingsExW ( Addressable lpszDeviceName,  Addressable lpDevMode,  Addressable hwnd,  int dwflags,  Addressable lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$647.ChangeDisplaySettingsExW$MH, "ChangeDisplaySettingsExW");
        try {
            return (int)mh$.invokeExact(lpszDeviceName.address(), lpDevMode.address(), hwnd.address(), dwflags, lParam.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDisplaySettingsA$MH() {
        return RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsA$MH,"EnumDisplaySettingsA");
    }
    public static int EnumDisplaySettingsA ( Addressable lpszDeviceName,  int iModeNum,  Addressable lpDevMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsA$MH, "EnumDisplaySettingsA");
        try {
            return (int)mh$.invokeExact(lpszDeviceName.address(), iModeNum, lpDevMode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDisplaySettingsW$MH() {
        return RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsW$MH,"EnumDisplaySettingsW");
    }
    public static int EnumDisplaySettingsW ( Addressable lpszDeviceName,  int iModeNum,  Addressable lpDevMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsW$MH, "EnumDisplaySettingsW");
        try {
            return (int)mh$.invokeExact(lpszDeviceName.address(), iModeNum, lpDevMode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDisplaySettingsExA$MH() {
        return RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsExA$MH,"EnumDisplaySettingsExA");
    }
    public static int EnumDisplaySettingsExA ( Addressable lpszDeviceName,  int iModeNum,  Addressable lpDevMode,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsExA$MH, "EnumDisplaySettingsExA");
        try {
            return (int)mh$.invokeExact(lpszDeviceName.address(), iModeNum, lpDevMode.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDisplaySettingsExW$MH() {
        return RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsExW$MH,"EnumDisplaySettingsExW");
    }
    public static int EnumDisplaySettingsExW ( Addressable lpszDeviceName,  int iModeNum,  Addressable lpDevMode,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.EnumDisplaySettingsExW$MH, "EnumDisplaySettingsExW");
        try {
            return (int)mh$.invokeExact(lpszDeviceName.address(), iModeNum, lpDevMode.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDisplayDevicesA$MH() {
        return RuntimeHelper.requireNonNull(constants$648.EnumDisplayDevicesA$MH,"EnumDisplayDevicesA");
    }
    public static int EnumDisplayDevicesA ( Addressable lpDevice,  int iDevNum,  Addressable lpDisplayDevice,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.EnumDisplayDevicesA$MH, "EnumDisplayDevicesA");
        try {
            return (int)mh$.invokeExact(lpDevice.address(), iDevNum, lpDisplayDevice.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDisplayDevicesW$MH() {
        return RuntimeHelper.requireNonNull(constants$648.EnumDisplayDevicesW$MH,"EnumDisplayDevicesW");
    }
    public static int EnumDisplayDevicesW ( Addressable lpDevice,  int iDevNum,  Addressable lpDisplayDevice,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$648.EnumDisplayDevicesW$MH, "EnumDisplayDevicesW");
        try {
            return (int)mh$.invokeExact(lpDevice.address(), iDevNum, lpDisplayDevice.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDisplayConfigBufferSizes$MH() {
        return RuntimeHelper.requireNonNull(constants$649.GetDisplayConfigBufferSizes$MH,"GetDisplayConfigBufferSizes");
    }
    public static int GetDisplayConfigBufferSizes ( int flags,  Addressable numPathArrayElements,  Addressable numModeInfoArrayElements) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.GetDisplayConfigBufferSizes$MH, "GetDisplayConfigBufferSizes");
        try {
            return (int)mh$.invokeExact(flags, numPathArrayElements.address(), numModeInfoArrayElements.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDisplayConfig$MH() {
        return RuntimeHelper.requireNonNull(constants$649.SetDisplayConfig$MH,"SetDisplayConfig");
    }
    public static int SetDisplayConfig ( int numPathArrayElements,  Addressable pathArray,  int numModeInfoArrayElements,  Addressable modeInfoArray,  int flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.SetDisplayConfig$MH, "SetDisplayConfig");
        try {
            return (int)mh$.invokeExact(numPathArrayElements, pathArray.address(), numModeInfoArrayElements, modeInfoArray.address(), flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryDisplayConfig$MH() {
        return RuntimeHelper.requireNonNull(constants$649.QueryDisplayConfig$MH,"QueryDisplayConfig");
    }
    public static int QueryDisplayConfig ( int flags,  Addressable numPathArrayElements,  Addressable pathArray,  Addressable numModeInfoArrayElements,  Addressable modeInfoArray,  Addressable currentTopologyId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.QueryDisplayConfig$MH, "QueryDisplayConfig");
        try {
            return (int)mh$.invokeExact(flags, numPathArrayElements.address(), pathArray.address(), numModeInfoArrayElements.address(), modeInfoArray.address(), currentTopologyId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DisplayConfigGetDeviceInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$649.DisplayConfigGetDeviceInfo$MH,"DisplayConfigGetDeviceInfo");
    }
    public static int DisplayConfigGetDeviceInfo ( Addressable requestPacket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.DisplayConfigGetDeviceInfo$MH, "DisplayConfigGetDeviceInfo");
        try {
            return (int)mh$.invokeExact(requestPacket.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DisplayConfigSetDeviceInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$649.DisplayConfigSetDeviceInfo$MH,"DisplayConfigSetDeviceInfo");
    }
    public static int DisplayConfigSetDeviceInfo ( Addressable setPacket) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.DisplayConfigSetDeviceInfo$MH, "DisplayConfigSetDeviceInfo");
        try {
            return (int)mh$.invokeExact(setPacket.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SystemParametersInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$649.SystemParametersInfoA$MH,"SystemParametersInfoA");
    }
    public static int SystemParametersInfoA ( int uiAction,  int uiParam,  Addressable pvParam,  int fWinIni) {
        var mh$ = RuntimeHelper.requireNonNull(constants$649.SystemParametersInfoA$MH, "SystemParametersInfoA");
        try {
            return (int)mh$.invokeExact(uiAction, uiParam, pvParam.address(), fWinIni);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SystemParametersInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$650.SystemParametersInfoW$MH,"SystemParametersInfoW");
    }
    public static int SystemParametersInfoW ( int uiAction,  int uiParam,  Addressable pvParam,  int fWinIni) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.SystemParametersInfoW$MH, "SystemParametersInfoW");
        try {
            return (int)mh$.invokeExact(uiAction, uiParam, pvParam.address(), fWinIni);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDebugErrorLevel$MH() {
        return RuntimeHelper.requireNonNull(constants$650.SetDebugErrorLevel$MH,"SetDebugErrorLevel");
    }
    public static void SetDebugErrorLevel ( int dwLevel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.SetDebugErrorLevel$MH, "SetDebugErrorLevel");
        try {
            mh$.invokeExact(dwLevel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetLastErrorEx$MH() {
        return RuntimeHelper.requireNonNull(constants$650.SetLastErrorEx$MH,"SetLastErrorEx");
    }
    public static void SetLastErrorEx ( int dwErrCode,  int dwType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.SetLastErrorEx$MH, "SetLastErrorEx");
        try {
            mh$.invokeExact(dwErrCode, dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InternalGetWindowText$MH() {
        return RuntimeHelper.requireNonNull(constants$650.InternalGetWindowText$MH,"InternalGetWindowText");
    }
    public static int InternalGetWindowText ( Addressable hWnd,  Addressable pString,  int cchMaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$650.InternalGetWindowText$MH, "InternalGetWindowText");
        try {
            return (int)mh$.invokeExact(hWnd.address(), pString.address(), cchMaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CancelShutdown$MH() {
        return RuntimeHelper.requireNonNull(constants$651.CancelShutdown$MH,"CancelShutdown");
    }
    public static int CancelShutdown () {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.CancelShutdown$MH, "CancelShutdown");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MonitorFromPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$651.MonitorFromPoint$MH,"MonitorFromPoint");
    }
    public static MemoryAddress MonitorFromPoint ( MemorySegment pt,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.MonitorFromPoint$MH, "MonitorFromPoint");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pt, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MonitorFromRect$MH() {
        return RuntimeHelper.requireNonNull(constants$651.MonitorFromRect$MH,"MonitorFromRect");
    }
    public static MemoryAddress MonitorFromRect ( Addressable lprc,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.MonitorFromRect$MH, "MonitorFromRect");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lprc.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MonitorFromWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$651.MonitorFromWindow$MH,"MonitorFromWindow");
    }
    public static MemoryAddress MonitorFromWindow ( Addressable hwnd,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.MonitorFromWindow$MH, "MonitorFromWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hwnd.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SoundSentry$MH() {
        return RuntimeHelper.requireNonNull(constants$651.SoundSentry$MH,"SoundSentry");
    }
    public static int SoundSentry () {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.SoundSentry$MH, "SoundSentry");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMonitorInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$651.GetMonitorInfoA$MH,"GetMonitorInfoA");
    }
    public static int GetMonitorInfoA ( Addressable hMonitor,  Addressable lpmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$651.GetMonitorInfoA$MH, "GetMonitorInfoA");
        try {
            return (int)mh$.invokeExact(hMonitor.address(), lpmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMonitorInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$652.GetMonitorInfoW$MH,"GetMonitorInfoW");
    }
    public static int GetMonitorInfoW ( Addressable hMonitor,  Addressable lpmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.GetMonitorInfoW$MH, "GetMonitorInfoW");
        try {
            return (int)mh$.invokeExact(hMonitor.address(), lpmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDisplayMonitors$MH() {
        return RuntimeHelper.requireNonNull(constants$652.EnumDisplayMonitors$MH,"EnumDisplayMonitors");
    }
    public static int EnumDisplayMonitors ( Addressable hdc,  Addressable lprcClip,  Addressable lpfnEnum,  long dwData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.EnumDisplayMonitors$MH, "EnumDisplayMonitors");
        try {
            return (int)mh$.invokeExact(hdc.address(), lprcClip.address(), lpfnEnum.address(), dwData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyWinEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$652.NotifyWinEvent$MH,"NotifyWinEvent");
    }
    public static void NotifyWinEvent ( int event,  Addressable hwnd,  int idObject,  int idChild) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.NotifyWinEvent$MH, "NotifyWinEvent");
        try {
            mh$.invokeExact(event, hwnd.address(), idObject, idChild);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetWinEventHook$MH() {
        return RuntimeHelper.requireNonNull(constants$652.SetWinEventHook$MH,"SetWinEventHook");
    }
    public static MemoryAddress SetWinEventHook ( int eventMin,  int eventMax,  Addressable hmodWinEventProc,  Addressable pfnWinEventProc,  int idProcess,  int idThread,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$652.SetWinEventHook$MH, "SetWinEventHook");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(eventMin, eventMax, hmodWinEventProc.address(), pfnWinEventProc.address(), idProcess, idThread, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsWinEventHookInstalled$MH() {
        return RuntimeHelper.requireNonNull(constants$653.IsWinEventHookInstalled$MH,"IsWinEventHookInstalled");
    }
    public static int IsWinEventHookInstalled ( int event) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.IsWinEventHookInstalled$MH, "IsWinEventHookInstalled");
        try {
            return (int)mh$.invokeExact(event);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnhookWinEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$653.UnhookWinEvent$MH,"UnhookWinEvent");
    }
    public static int UnhookWinEvent ( Addressable hWinEventHook) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.UnhookWinEvent$MH, "UnhookWinEvent");
        try {
            return (int)mh$.invokeExact(hWinEventHook.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGUIThreadInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$653.GetGUIThreadInfo$MH,"GetGUIThreadInfo");
    }
    public static int GetGUIThreadInfo ( int idThread,  Addressable pgui) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.GetGUIThreadInfo$MH, "GetGUIThreadInfo");
        try {
            return (int)mh$.invokeExact(idThread, pgui.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle BlockInput$MH() {
        return RuntimeHelper.requireNonNull(constants$653.BlockInput$MH,"BlockInput");
    }
    public static int BlockInput ( int fBlockIt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.BlockInput$MH, "BlockInput");
        try {
            return (int)mh$.invokeExact(fBlockIt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowModuleFileNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$653.GetWindowModuleFileNameA$MH,"GetWindowModuleFileNameA");
    }
    public static int GetWindowModuleFileNameA ( Addressable hwnd,  Addressable pszFileName,  int cchFileNameMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.GetWindowModuleFileNameA$MH, "GetWindowModuleFileNameA");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pszFileName.address(), cchFileNameMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowModuleFileNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$653.GetWindowModuleFileNameW$MH,"GetWindowModuleFileNameW");
    }
    public static int GetWindowModuleFileNameW ( Addressable hwnd,  Addressable pszFileName,  int cchFileNameMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$653.GetWindowModuleFileNameW$MH, "GetWindowModuleFileNameW");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pszFileName.address(), cchFileNameMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetProcessDPIAware$MH() {
        return RuntimeHelper.requireNonNull(constants$654.SetProcessDPIAware$MH,"SetProcessDPIAware");
    }
    public static int SetProcessDPIAware () {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.SetProcessDPIAware$MH, "SetProcessDPIAware");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsProcessDPIAware$MH() {
        return RuntimeHelper.requireNonNull(constants$654.IsProcessDPIAware$MH,"IsProcessDPIAware");
    }
    public static int IsProcessDPIAware () {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.IsProcessDPIAware$MH, "IsProcessDPIAware");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCursorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$654.GetCursorInfo$MH,"GetCursorInfo");
    }
    public static int GetCursorInfo ( Addressable pci) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.GetCursorInfo$MH, "GetCursorInfo");
        try {
            return (int)mh$.invokeExact(pci.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetWindowInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$654.GetWindowInfo$MH,"GetWindowInfo");
    }
    public static int GetWindowInfo ( Addressable hwnd,  Addressable pwi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.GetWindowInfo$MH, "GetWindowInfo");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pwi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTitleBarInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$654.GetTitleBarInfo$MH,"GetTitleBarInfo");
    }
    public static int GetTitleBarInfo ( Addressable hwnd,  Addressable pti) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.GetTitleBarInfo$MH, "GetTitleBarInfo");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pti.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetMenuBarInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$654.GetMenuBarInfo$MH,"GetMenuBarInfo");
    }
    public static int GetMenuBarInfo ( Addressable hwnd,  int idObject,  int idItem,  Addressable pmbi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$654.GetMenuBarInfo$MH, "GetMenuBarInfo");
        try {
            return (int)mh$.invokeExact(hwnd.address(), idObject, idItem, pmbi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetScrollBarInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$655.GetScrollBarInfo$MH,"GetScrollBarInfo");
    }
    public static int GetScrollBarInfo ( Addressable hwnd,  int idObject,  Addressable psbi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.GetScrollBarInfo$MH, "GetScrollBarInfo");
        try {
            return (int)mh$.invokeExact(hwnd.address(), idObject, psbi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetComboBoxInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$655.GetComboBoxInfo$MH,"GetComboBoxInfo");
    }
    public static int GetComboBoxInfo ( Addressable hwndCombo,  Addressable pcbi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.GetComboBoxInfo$MH, "GetComboBoxInfo");
        try {
            return (int)mh$.invokeExact(hwndCombo.address(), pcbi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetAncestor$MH() {
        return RuntimeHelper.requireNonNull(constants$655.GetAncestor$MH,"GetAncestor");
    }
    public static MemoryAddress GetAncestor ( Addressable hwnd,  int gaFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.GetAncestor$MH, "GetAncestor");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hwnd.address(), gaFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RealChildWindowFromPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RealChildWindowFromPoint$MH,"RealChildWindowFromPoint");
    }
    public static MemoryAddress RealChildWindowFromPoint ( Addressable hwndParent,  MemorySegment ptParentClientCoords) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.RealChildWindowFromPoint$MH, "RealChildWindowFromPoint");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hwndParent.address(), ptParentClientCoords);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RealGetWindowClassA$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RealGetWindowClassA$MH,"RealGetWindowClassA");
    }
    public static int RealGetWindowClassA ( Addressable hwnd,  Addressable ptszClassName,  int cchClassNameMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.RealGetWindowClassA$MH, "RealGetWindowClassA");
        try {
            return (int)mh$.invokeExact(hwnd.address(), ptszClassName.address(), cchClassNameMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RealGetWindowClassW$MH() {
        return RuntimeHelper.requireNonNull(constants$655.RealGetWindowClassW$MH,"RealGetWindowClassW");
    }
    public static int RealGetWindowClassW ( Addressable hwnd,  Addressable ptszClassName,  int cchClassNameMax) {
        var mh$ = RuntimeHelper.requireNonNull(constants$655.RealGetWindowClassW$MH, "RealGetWindowClassW");
        try {
            return (int)mh$.invokeExact(hwnd.address(), ptszClassName.address(), cchClassNameMax);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetAltTabInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$656.GetAltTabInfoA$MH,"GetAltTabInfoA");
    }
    public static int GetAltTabInfoA ( Addressable hwnd,  int iItem,  Addressable pati,  Addressable pszItemText,  int cchItemText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.GetAltTabInfoA$MH, "GetAltTabInfoA");
        try {
            return (int)mh$.invokeExact(hwnd.address(), iItem, pati.address(), pszItemText.address(), cchItemText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetAltTabInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$656.GetAltTabInfoW$MH,"GetAltTabInfoW");
    }
    public static int GetAltTabInfoW ( Addressable hwnd,  int iItem,  Addressable pati,  Addressable pszItemText,  int cchItemText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.GetAltTabInfoW$MH, "GetAltTabInfoW");
        try {
            return (int)mh$.invokeExact(hwnd.address(), iItem, pati.address(), pszItemText.address(), cchItemText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetListBoxInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$656.GetListBoxInfo$MH,"GetListBoxInfo");
    }
    public static int GetListBoxInfo ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.GetListBoxInfo$MH, "GetListBoxInfo");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LockWorkStation$MH() {
        return RuntimeHelper.requireNonNull(constants$656.LockWorkStation$MH,"LockWorkStation");
    }
    public static int LockWorkStation () {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.LockWorkStation$MH, "LockWorkStation");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UserHandleGrantAccess$MH() {
        return RuntimeHelper.requireNonNull(constants$656.UserHandleGrantAccess$MH,"UserHandleGrantAccess");
    }
    public static int UserHandleGrantAccess ( Addressable hUserHandle,  Addressable hJob,  int bGrant) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.UserHandleGrantAccess$MH, "UserHandleGrantAccess");
        try {
            return (int)mh$.invokeExact(hUserHandle.address(), hJob.address(), bGrant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRawInputData$MH() {
        return RuntimeHelper.requireNonNull(constants$656.GetRawInputData$MH,"GetRawInputData");
    }
    public static int GetRawInputData ( Addressable hRawInput,  int uiCommand,  Addressable pData,  Addressable pcbSize,  int cbSizeHeader) {
        var mh$ = RuntimeHelper.requireNonNull(constants$656.GetRawInputData$MH, "GetRawInputData");
        try {
            return (int)mh$.invokeExact(hRawInput.address(), uiCommand, pData.address(), pcbSize.address(), cbSizeHeader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRawInputDeviceInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$657.GetRawInputDeviceInfoA$MH,"GetRawInputDeviceInfoA");
    }
    public static int GetRawInputDeviceInfoA ( Addressable hDevice,  int uiCommand,  Addressable pData,  Addressable pcbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.GetRawInputDeviceInfoA$MH, "GetRawInputDeviceInfoA");
        try {
            return (int)mh$.invokeExact(hDevice.address(), uiCommand, pData.address(), pcbSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRawInputDeviceInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$657.GetRawInputDeviceInfoW$MH,"GetRawInputDeviceInfoW");
    }
    public static int GetRawInputDeviceInfoW ( Addressable hDevice,  int uiCommand,  Addressable pData,  Addressable pcbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.GetRawInputDeviceInfoW$MH, "GetRawInputDeviceInfoW");
        try {
            return (int)mh$.invokeExact(hDevice.address(), uiCommand, pData.address(), pcbSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRawInputBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$657.GetRawInputBuffer$MH,"GetRawInputBuffer");
    }
    public static int GetRawInputBuffer ( Addressable pData,  Addressable pcbSize,  int cbSizeHeader) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.GetRawInputBuffer$MH, "GetRawInputBuffer");
        try {
            return (int)mh$.invokeExact(pData.address(), pcbSize.address(), cbSizeHeader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterRawInputDevices$MH() {
        return RuntimeHelper.requireNonNull(constants$657.RegisterRawInputDevices$MH,"RegisterRawInputDevices");
    }
    public static int RegisterRawInputDevices ( Addressable pRawInputDevices,  int uiNumDevices,  int cbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.RegisterRawInputDevices$MH, "RegisterRawInputDevices");
        try {
            return (int)mh$.invokeExact(pRawInputDevices.address(), uiNumDevices, cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRegisteredRawInputDevices$MH() {
        return RuntimeHelper.requireNonNull(constants$657.GetRegisteredRawInputDevices$MH,"GetRegisteredRawInputDevices");
    }
    public static int GetRegisteredRawInputDevices ( Addressable pRawInputDevices,  Addressable puiNumDevices,  int cbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.GetRegisteredRawInputDevices$MH, "GetRegisteredRawInputDevices");
        try {
            return (int)mh$.invokeExact(pRawInputDevices.address(), puiNumDevices.address(), cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRawInputDeviceList$MH() {
        return RuntimeHelper.requireNonNull(constants$657.GetRawInputDeviceList$MH,"GetRawInputDeviceList");
    }
    public static int GetRawInputDeviceList ( Addressable pRawInputDeviceList,  Addressable puiNumDevices,  int cbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$657.GetRawInputDeviceList$MH, "GetRawInputDeviceList");
        try {
            return (int)mh$.invokeExact(pRawInputDeviceList.address(), puiNumDevices.address(), cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefRawInputProc$MH() {
        return RuntimeHelper.requireNonNull(constants$658.DefRawInputProc$MH,"DefRawInputProc");
    }
    public static long DefRawInputProc ( Addressable paRawInput,  int nInput,  int cbSizeHeader) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.DefRawInputProc$MH, "DefRawInputProc");
        try {
            return (long)mh$.invokeExact(paRawInput.address(), nInput, cbSizeHeader);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeWindowMessageFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$658.ChangeWindowMessageFilter$MH,"ChangeWindowMessageFilter");
    }
    public static int ChangeWindowMessageFilter ( int message,  int dwFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.ChangeWindowMessageFilter$MH, "ChangeWindowMessageFilter");
        try {
            return (int)mh$.invokeExact(message, dwFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeWindowMessageFilterEx$MH() {
        return RuntimeHelper.requireNonNull(constants$658.ChangeWindowMessageFilterEx$MH,"ChangeWindowMessageFilterEx");
    }
    public static int ChangeWindowMessageFilterEx ( Addressable hwnd,  int message,  int action,  Addressable pChangeFilterStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.ChangeWindowMessageFilterEx$MH, "ChangeWindowMessageFilterEx");
        try {
            return (int)mh$.invokeExact(hwnd.address(), message, action, pChangeFilterStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGestureInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$658.GetGestureInfo$MH,"GetGestureInfo");
    }
    public static int GetGestureInfo ( Addressable hGestureInfo,  Addressable pGestureInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.GetGestureInfo$MH, "GetGestureInfo");
        try {
            return (int)mh$.invokeExact(hGestureInfo.address(), pGestureInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGestureExtraArgs$MH() {
        return RuntimeHelper.requireNonNull(constants$658.GetGestureExtraArgs$MH,"GetGestureExtraArgs");
    }
    public static int GetGestureExtraArgs ( Addressable hGestureInfo,  int cbExtraArgs,  Addressable pExtraArgs) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.GetGestureExtraArgs$MH, "GetGestureExtraArgs");
        try {
            return (int)mh$.invokeExact(hGestureInfo.address(), cbExtraArgs, pExtraArgs.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseGestureInfoHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$658.CloseGestureInfoHandle$MH,"CloseGestureInfoHandle");
    }
    public static int CloseGestureInfoHandle ( Addressable hGestureInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$658.CloseGestureInfoHandle$MH, "CloseGestureInfoHandle");
        try {
            return (int)mh$.invokeExact(hGestureInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetGestureConfig$MH() {
        return RuntimeHelper.requireNonNull(constants$659.SetGestureConfig$MH,"SetGestureConfig");
    }
    public static int SetGestureConfig ( Addressable hwnd,  int dwReserved,  int cIDs,  Addressable pGestureConfig,  int cbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.SetGestureConfig$MH, "SetGestureConfig");
        try {
            return (int)mh$.invokeExact(hwnd.address(), dwReserved, cIDs, pGestureConfig.address(), cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGestureConfig$MH() {
        return RuntimeHelper.requireNonNull(constants$659.GetGestureConfig$MH,"GetGestureConfig");
    }
    public static int GetGestureConfig ( Addressable hwnd,  int dwReserved,  int dwFlags,  Addressable pcIDs,  Addressable pGestureConfig,  int cbSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.GetGestureConfig$MH, "GetGestureConfig");
        try {
            return (int)mh$.invokeExact(hwnd.address(), dwReserved, dwFlags, pcIDs.address(), pGestureConfig.address(), cbSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShutdownBlockReasonCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$659.ShutdownBlockReasonCreate$MH,"ShutdownBlockReasonCreate");
    }
    public static int ShutdownBlockReasonCreate ( Addressable hWnd,  Addressable pwszReason) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.ShutdownBlockReasonCreate$MH, "ShutdownBlockReasonCreate");
        try {
            return (int)mh$.invokeExact(hWnd.address(), pwszReason.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShutdownBlockReasonQuery$MH() {
        return RuntimeHelper.requireNonNull(constants$659.ShutdownBlockReasonQuery$MH,"ShutdownBlockReasonQuery");
    }
    public static int ShutdownBlockReasonQuery ( Addressable hWnd,  Addressable pwszBuff,  Addressable pcchBuff) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.ShutdownBlockReasonQuery$MH, "ShutdownBlockReasonQuery");
        try {
            return (int)mh$.invokeExact(hWnd.address(), pwszBuff.address(), pcchBuff.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShutdownBlockReasonDestroy$MH() {
        return RuntimeHelper.requireNonNull(constants$659.ShutdownBlockReasonDestroy$MH,"ShutdownBlockReasonDestroy");
    }
    public static int ShutdownBlockReasonDestroy ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.ShutdownBlockReasonDestroy$MH, "ShutdownBlockReasonDestroy");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int IMDT_UNAVAILABLE() {
        return (int)0L;
    }
    public static int IMDT_KEYBOARD() {
        return (int)1L;
    }
    public static int IMDT_MOUSE() {
        return (int)2L;
    }
    public static int IMDT_TOUCH() {
        return (int)4L;
    }
    public static int IMDT_PEN() {
        return (int)8L;
    }
    public static int IMO_UNAVAILABLE() {
        return (int)0L;
    }
    public static int IMO_HARDWARE() {
        return (int)1L;
    }
    public static int IMO_INJECTED() {
        return (int)2L;
    }
    public static int IMO_SYSTEM() {
        return (int)4L;
    }
    public static MethodHandle GetCurrentInputMessageSource$MH() {
        return RuntimeHelper.requireNonNull(constants$659.GetCurrentInputMessageSource$MH,"GetCurrentInputMessageSource");
    }
    public static int GetCurrentInputMessageSource ( Addressable inputMessageSource) {
        var mh$ = RuntimeHelper.requireNonNull(constants$659.GetCurrentInputMessageSource$MH, "GetCurrentInputMessageSource");
        try {
            return (int)mh$.invokeExact(inputMessageSource.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCIMSSM$MH() {
        return RuntimeHelper.requireNonNull(constants$660.GetCIMSSM$MH,"GetCIMSSM");
    }
    public static int GetCIMSSM ( Addressable inputMessageSource) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.GetCIMSSM$MH, "GetCIMSSM");
        try {
            return (int)mh$.invokeExact(inputMessageSource.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int AR_ENABLED() {
        return (int)0L;
    }
    public static int AR_DISABLED() {
        return (int)1L;
    }
    public static int AR_SUPPRESSED() {
        return (int)2L;
    }
    public static int AR_REMOTESESSION() {
        return (int)4L;
    }
    public static int AR_MULTIMON() {
        return (int)8L;
    }
    public static int AR_NOSENSOR() {
        return (int)16L;
    }
    public static int AR_NOT_SUPPORTED() {
        return (int)32L;
    }
    public static int AR_DOCKED() {
        return (int)64L;
    }
    public static int AR_LAPTOP() {
        return (int)128L;
    }
    public static int ORIENTATION_PREFERENCE_NONE() {
        return (int)0L;
    }
    public static int ORIENTATION_PREFERENCE_LANDSCAPE() {
        return (int)1L;
    }
    public static int ORIENTATION_PREFERENCE_PORTRAIT() {
        return (int)2L;
    }
    public static int ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED() {
        return (int)4L;
    }
    public static int ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED() {
        return (int)8L;
    }
    public static MethodHandle GetAutoRotationState$MH() {
        return RuntimeHelper.requireNonNull(constants$660.GetAutoRotationState$MH,"GetAutoRotationState");
    }
    public static int GetAutoRotationState ( Addressable pState) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.GetAutoRotationState$MH, "GetAutoRotationState");
        try {
            return (int)mh$.invokeExact(pState.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDisplayAutoRotationPreferences$MH() {
        return RuntimeHelper.requireNonNull(constants$660.GetDisplayAutoRotationPreferences$MH,"GetDisplayAutoRotationPreferences");
    }
    public static int GetDisplayAutoRotationPreferences ( Addressable pOrientation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.GetDisplayAutoRotationPreferences$MH, "GetDisplayAutoRotationPreferences");
        try {
            return (int)mh$.invokeExact(pOrientation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDisplayAutoRotationPreferencesByProcessId$MH() {
        return RuntimeHelper.requireNonNull(constants$660.GetDisplayAutoRotationPreferencesByProcessId$MH,"GetDisplayAutoRotationPreferencesByProcessId");
    }
    public static int GetDisplayAutoRotationPreferencesByProcessId ( int dwProcessId,  Addressable pOrientation,  Addressable fRotateScreen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.GetDisplayAutoRotationPreferencesByProcessId$MH, "GetDisplayAutoRotationPreferencesByProcessId");
        try {
            return (int)mh$.invokeExact(dwProcessId, pOrientation.address(), fRotateScreen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDisplayAutoRotationPreferences$MH() {
        return RuntimeHelper.requireNonNull(constants$660.SetDisplayAutoRotationPreferences$MH,"SetDisplayAutoRotationPreferences");
    }
    public static int SetDisplayAutoRotationPreferences ( int orientation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.SetDisplayAutoRotationPreferences$MH, "SetDisplayAutoRotationPreferences");
        try {
            return (int)mh$.invokeExact(orientation);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsImmersiveProcess$MH() {
        return RuntimeHelper.requireNonNull(constants$660.IsImmersiveProcess$MH,"IsImmersiveProcess");
    }
    public static int IsImmersiveProcess ( Addressable hProcess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$660.IsImmersiveProcess$MH, "IsImmersiveProcess");
        try {
            return (int)mh$.invokeExact(hProcess.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetProcessRestrictionExemption$MH() {
        return RuntimeHelper.requireNonNull(constants$661.SetProcessRestrictionExemption$MH,"SetProcessRestrictionExemption");
    }
    public static int SetProcessRestrictionExemption ( int fEnableExemption) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.SetProcessRestrictionExemption$MH, "SetProcessRestrictionExemption");
        try {
            return (int)mh$.invokeExact(fEnableExemption);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTimeFormatEx$MH() {
        return RuntimeHelper.requireNonNull(constants$661.GetTimeFormatEx$MH,"GetTimeFormatEx");
    }
    public static int GetTimeFormatEx ( Addressable lpLocaleName,  int dwFlags,  Addressable lpTime,  Addressable lpFormat,  Addressable lpTimeStr,  int cchTime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.GetTimeFormatEx$MH, "GetTimeFormatEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwFlags, lpTime.address(), lpFormat.address(), lpTimeStr.address(), cchTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDateFormatEx$MH() {
        return RuntimeHelper.requireNonNull(constants$661.GetDateFormatEx$MH,"GetDateFormatEx");
    }
    public static int GetDateFormatEx ( Addressable lpLocaleName,  int dwFlags,  Addressable lpDate,  Addressable lpFormat,  Addressable lpDateStr,  int cchDate,  Addressable lpCalendar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.GetDateFormatEx$MH, "GetDateFormatEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwFlags, lpDate.address(), lpFormat.address(), lpDateStr.address(), cchDate, lpCalendar.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDateFormatA$MH() {
        return RuntimeHelper.requireNonNull(constants$661.GetDateFormatA$MH,"GetDateFormatA");
    }
    public static int GetDateFormatA ( int Locale,  int dwFlags,  Addressable lpDate,  Addressable lpFormat,  Addressable lpDateStr,  int cchDate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.GetDateFormatA$MH, "GetDateFormatA");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpDate.address(), lpFormat.address(), lpDateStr.address(), cchDate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDateFormatW$MH() {
        return RuntimeHelper.requireNonNull(constants$661.GetDateFormatW$MH,"GetDateFormatW");
    }
    public static int GetDateFormatW ( int Locale,  int dwFlags,  Addressable lpDate,  Addressable lpFormat,  Addressable lpDateStr,  int cchDate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.GetDateFormatW$MH, "GetDateFormatW");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpDate.address(), lpFormat.address(), lpDateStr.address(), cchDate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTimeFormatA$MH() {
        return RuntimeHelper.requireNonNull(constants$661.GetTimeFormatA$MH,"GetTimeFormatA");
    }
    public static int GetTimeFormatA ( int Locale,  int dwFlags,  Addressable lpTime,  Addressable lpFormat,  Addressable lpTimeStr,  int cchTime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$661.GetTimeFormatA$MH, "GetTimeFormatA");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpTime.address(), lpFormat.address(), lpTimeStr.address(), cchTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetTimeFormatW$MH() {
        return RuntimeHelper.requireNonNull(constants$662.GetTimeFormatW$MH,"GetTimeFormatW");
    }
    public static int GetTimeFormatW ( int Locale,  int dwFlags,  Addressable lpTime,  Addressable lpFormat,  Addressable lpTimeStr,  int cchTime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$662.GetTimeFormatW$MH, "GetTimeFormatW");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpTime.address(), lpFormat.address(), lpTimeStr.address(), cchTime);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int COMPARE_STRING() {
        return (int)1L;
    }
    public static ValueLayout GEOID = C_LONG;
    public static int GEO_NATION() {
        return (int)1L;
    }
    public static int GEO_LATITUDE() {
        return (int)2L;
    }
    public static int GEO_LONGITUDE() {
        return (int)3L;
    }
    public static int GEO_ISO2() {
        return (int)4L;
    }
    public static int GEO_ISO3() {
        return (int)5L;
    }
    public static int GEO_RFC1766() {
        return (int)6L;
    }
    public static int GEO_LCID() {
        return (int)7L;
    }
    public static int GEO_FRIENDLYNAME() {
        return (int)8L;
    }
    public static int GEO_OFFICIALNAME() {
        return (int)9L;
    }
    public static int GEO_TIMEZONES() {
        return (int)10L;
    }
    public static int GEO_OFFICIALLANGUAGES() {
        return (int)11L;
    }
    public static int GEO_ISO_UN_NUMBER() {
        return (int)12L;
    }
    public static int GEO_PARENT() {
        return (int)13L;
    }
    public static int GEO_DIALINGCODE() {
        return (int)14L;
    }
    public static int GEO_CURRENCYCODE() {
        return (int)15L;
    }
    public static int GEO_CURRENCYSYMBOL() {
        return (int)16L;
    }
    public static int GEOCLASS_NATION() {
        return (int)16L;
    }
    public static int GEOCLASS_REGION() {
        return (int)14L;
    }
    public static int GEOCLASS_ALL() {
        return (int)0L;
    }
    public static int NormalizationOther() {
        return (int)0L;
    }
    public static int NormalizationC() {
        return (int)1L;
    }
    public static int NormalizationD() {
        return (int)2L;
    }
    public static int NormalizationKC() {
        return (int)5L;
    }
    public static int NormalizationKD() {
        return (int)6L;
    }
    public static MethodHandle CompareStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$669.CompareStringW$MH,"CompareStringW");
    }
    public static int CompareStringW ( int Locale,  int dwCmpFlags,  Addressable lpString1,  int cchCount1,  Addressable lpString2,  int cchCount2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.CompareStringW$MH, "CompareStringW");
        try {
            return (int)mh$.invokeExact(Locale, dwCmpFlags, lpString1.address(), cchCount1, lpString2.address(), cchCount2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FoldStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$669.FoldStringW$MH,"FoldStringW");
    }
    public static int FoldStringW ( int dwMapFlags,  Addressable lpSrcStr,  int cchSrc,  Addressable lpDestStr,  int cchDest) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.FoldStringW$MH, "FoldStringW");
        try {
            return (int)mh$.invokeExact(dwMapFlags, lpSrcStr.address(), cchSrc, lpDestStr.address(), cchDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetStringTypeExW$MH() {
        return RuntimeHelper.requireNonNull(constants$669.GetStringTypeExW$MH,"GetStringTypeExW");
    }
    public static int GetStringTypeExW ( int Locale,  int dwInfoType,  Addressable lpSrcStr,  int cchSrc,  Addressable lpCharType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.GetStringTypeExW$MH, "GetStringTypeExW");
        try {
            return (int)mh$.invokeExact(Locale, dwInfoType, lpSrcStr.address(), cchSrc, lpCharType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CompareStringEx$MH() {
        return RuntimeHelper.requireNonNull(constants$669.CompareStringEx$MH,"CompareStringEx");
    }
    public static int CompareStringEx ( Addressable lpLocaleName,  int dwCmpFlags,  Addressable lpString1,  int cchCount1,  Addressable lpString2,  int cchCount2,  Addressable lpVersionInformation,  Addressable lpReserved,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.CompareStringEx$MH, "CompareStringEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwCmpFlags, lpString1.address(), cchCount1, lpString2.address(), cchCount2, lpVersionInformation.address(), lpReserved.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CompareStringOrdinal$MH() {
        return RuntimeHelper.requireNonNull(constants$669.CompareStringOrdinal$MH,"CompareStringOrdinal");
    }
    public static int CompareStringOrdinal ( Addressable lpString1,  int cchCount1,  Addressable lpString2,  int cchCount2,  int bIgnoreCase) {
        var mh$ = RuntimeHelper.requireNonNull(constants$669.CompareStringOrdinal$MH, "CompareStringOrdinal");
        try {
            return (int)mh$.invokeExact(lpString1.address(), cchCount1, lpString2.address(), cchCount2, bIgnoreCase);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetStringTypeW$MH() {
        return RuntimeHelper.requireNonNull(constants$670.GetStringTypeW$MH,"GetStringTypeW");
    }
    public static int GetStringTypeW ( int dwInfoType,  Addressable lpSrcStr,  int cchSrc,  Addressable lpCharType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.GetStringTypeW$MH, "GetStringTypeW");
        try {
            return (int)mh$.invokeExact(dwInfoType, lpSrcStr.address(), cchSrc, lpCharType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MultiByteToWideChar$MH() {
        return RuntimeHelper.requireNonNull(constants$670.MultiByteToWideChar$MH,"MultiByteToWideChar");
    }
    public static int MultiByteToWideChar ( int CodePage,  int dwFlags,  Addressable lpMultiByteStr,  int cbMultiByte,  Addressable lpWideCharStr,  int cchWideChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.MultiByteToWideChar$MH, "MultiByteToWideChar");
        try {
            return (int)mh$.invokeExact(CodePage, dwFlags, lpMultiByteStr.address(), cbMultiByte, lpWideCharStr.address(), cchWideChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WideCharToMultiByte$MH() {
        return RuntimeHelper.requireNonNull(constants$670.WideCharToMultiByte$MH,"WideCharToMultiByte");
    }
    public static int WideCharToMultiByte ( int CodePage,  int dwFlags,  Addressable lpWideCharStr,  int cchWideChar,  Addressable lpMultiByteStr,  int cbMultiByte,  Addressable lpDefaultChar,  Addressable lpUsedDefaultChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.WideCharToMultiByte$MH, "WideCharToMultiByte");
        try {
            return (int)mh$.invokeExact(CodePage, dwFlags, lpWideCharStr.address(), cchWideChar, lpMultiByteStr.address(), cbMultiByte, lpDefaultChar.address(), lpUsedDefaultChar.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidCodePage$MH() {
        return RuntimeHelper.requireNonNull(constants$670.IsValidCodePage$MH,"IsValidCodePage");
    }
    public static int IsValidCodePage ( int CodePage) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.IsValidCodePage$MH, "IsValidCodePage");
        try {
            return (int)mh$.invokeExact(CodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetACP$MH() {
        return RuntimeHelper.requireNonNull(constants$670.GetACP$MH,"GetACP");
    }
    public static int GetACP () {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.GetACP$MH, "GetACP");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsDBCSLeadByte$MH() {
        return RuntimeHelper.requireNonNull(constants$670.IsDBCSLeadByte$MH,"IsDBCSLeadByte");
    }
    public static int IsDBCSLeadByte ( byte TestChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$670.IsDBCSLeadByte$MH, "IsDBCSLeadByte");
        try {
            return (int)mh$.invokeExact(TestChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsDBCSLeadByteEx$MH() {
        return RuntimeHelper.requireNonNull(constants$671.IsDBCSLeadByteEx$MH,"IsDBCSLeadByteEx");
    }
    public static int IsDBCSLeadByteEx ( int CodePage,  byte TestChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.IsDBCSLeadByteEx$MH, "IsDBCSLeadByteEx");
        try {
            return (int)mh$.invokeExact(CodePage, TestChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsNLSDefinedString$MH() {
        return RuntimeHelper.requireNonNull(constants$671.IsNLSDefinedString$MH,"IsNLSDefinedString");
    }
    public static int IsNLSDefinedString ( int Function,  int dwFlags,  Addressable lpVersionInformation,  Addressable lpString,  int cchStr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.IsNLSDefinedString$MH, "IsNLSDefinedString");
        try {
            return (int)mh$.invokeExact(Function, dwFlags, lpVersionInformation.address(), lpString.address(), cchStr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLocaleInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$671.GetLocaleInfoW$MH,"GetLocaleInfoW");
    }
    public static int GetLocaleInfoW ( int Locale,  int LCType,  Addressable lpLCData,  int cchData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.GetLocaleInfoW$MH, "GetLocaleInfoW");
        try {
            return (int)mh$.invokeExact(Locale, LCType, lpLCData.address(), cchData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLocaleInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$671.GetLocaleInfoA$MH,"GetLocaleInfoA");
    }
    public static int GetLocaleInfoA ( int Locale,  int LCType,  Addressable lpLCData,  int cchData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.GetLocaleInfoA$MH, "GetLocaleInfoA");
        try {
            return (int)mh$.invokeExact(Locale, LCType, lpLCData.address(), cchData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOEMCP$MH() {
        return RuntimeHelper.requireNonNull(constants$671.GetOEMCP$MH,"GetOEMCP");
    }
    public static int GetOEMCP () {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.GetOEMCP$MH, "GetOEMCP");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CompareStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$671.CompareStringA$MH,"CompareStringA");
    }
    public static int CompareStringA ( int Locale,  int dwCmpFlags,  Addressable lpString1,  int cchCount1,  Addressable lpString2,  int cchCount2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$671.CompareStringA$MH, "CompareStringA");
        try {
            return (int)mh$.invokeExact(Locale, dwCmpFlags, lpString1.address(), cchCount1, lpString2.address(), cchCount2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LCMapStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$672.LCMapStringW$MH,"LCMapStringW");
    }
    public static int LCMapStringW ( int Locale,  int dwMapFlags,  Addressable lpSrcStr,  int cchSrc,  Addressable lpDestStr,  int cchDest) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.LCMapStringW$MH, "LCMapStringW");
        try {
            return (int)mh$.invokeExact(Locale, dwMapFlags, lpSrcStr.address(), cchSrc, lpDestStr.address(), cchDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LCMapStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$672.LCMapStringA$MH,"LCMapStringA");
    }
    public static int LCMapStringA ( int Locale,  int dwMapFlags,  Addressable lpSrcStr,  int cchSrc,  Addressable lpDestStr,  int cchDest) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.LCMapStringA$MH, "LCMapStringA");
        try {
            return (int)mh$.invokeExact(Locale, dwMapFlags, lpSrcStr.address(), cchSrc, lpDestStr.address(), cchDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNumberFormatA$MH() {
        return RuntimeHelper.requireNonNull(constants$672.GetNumberFormatA$MH,"GetNumberFormatA");
    }
    public static int GetNumberFormatA ( int Locale,  int dwFlags,  Addressable lpValue,  Addressable lpFormat,  Addressable lpNumberStr,  int cchNumber) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.GetNumberFormatA$MH, "GetNumberFormatA");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpValue.address(), lpFormat.address(), lpNumberStr.address(), cchNumber);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNumberFormatW$MH() {
        return RuntimeHelper.requireNonNull(constants$672.GetNumberFormatW$MH,"GetNumberFormatW");
    }
    public static int GetNumberFormatW ( int Locale,  int dwFlags,  Addressable lpValue,  Addressable lpFormat,  Addressable lpNumberStr,  int cchNumber) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.GetNumberFormatW$MH, "GetNumberFormatW");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpValue.address(), lpFormat.address(), lpNumberStr.address(), cchNumber);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCurrencyFormatA$MH() {
        return RuntimeHelper.requireNonNull(constants$672.GetCurrencyFormatA$MH,"GetCurrencyFormatA");
    }
    public static int GetCurrencyFormatA ( int Locale,  int dwFlags,  Addressable lpValue,  Addressable lpFormat,  Addressable lpCurrencyStr,  int cchCurrency) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.GetCurrencyFormatA$MH, "GetCurrencyFormatA");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpValue.address(), lpFormat.address(), lpCurrencyStr.address(), cchCurrency);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCurrencyFormatW$MH() {
        return RuntimeHelper.requireNonNull(constants$672.GetCurrencyFormatW$MH,"GetCurrencyFormatW");
    }
    public static int GetCurrencyFormatW ( int Locale,  int dwFlags,  Addressable lpValue,  Addressable lpFormat,  Addressable lpCurrencyStr,  int cchCurrency) {
        var mh$ = RuntimeHelper.requireNonNull(constants$672.GetCurrencyFormatW$MH, "GetCurrencyFormatW");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpValue.address(), lpFormat.address(), lpCurrencyStr.address(), cchCurrency);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumCalendarInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoA$MH,"EnumCalendarInfoA");
    }
    public static int EnumCalendarInfoA ( Addressable lpCalInfoEnumProc,  int Locale,  int Calendar,  int CalType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoA$MH, "EnumCalendarInfoA");
        try {
            return (int)mh$.invokeExact(lpCalInfoEnumProc.address(), Locale, Calendar, CalType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumCalendarInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoW$MH,"EnumCalendarInfoW");
    }
    public static int EnumCalendarInfoW ( Addressable lpCalInfoEnumProc,  int Locale,  int Calendar,  int CalType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoW$MH, "EnumCalendarInfoW");
        try {
            return (int)mh$.invokeExact(lpCalInfoEnumProc.address(), Locale, Calendar, CalType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumCalendarInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoExA$MH,"EnumCalendarInfoExA");
    }
    public static int EnumCalendarInfoExA ( Addressable lpCalInfoEnumProcEx,  int Locale,  int Calendar,  int CalType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoExA$MH, "EnumCalendarInfoExA");
        try {
            return (int)mh$.invokeExact(lpCalInfoEnumProcEx.address(), Locale, Calendar, CalType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumCalendarInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoExW$MH,"EnumCalendarInfoExW");
    }
    public static int EnumCalendarInfoExW ( Addressable lpCalInfoEnumProcEx,  int Locale,  int Calendar,  int CalType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.EnumCalendarInfoExW$MH, "EnumCalendarInfoExW");
        try {
            return (int)mh$.invokeExact(lpCalInfoEnumProcEx.address(), Locale, Calendar, CalType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumTimeFormatsA$MH() {
        return RuntimeHelper.requireNonNull(constants$673.EnumTimeFormatsA$MH,"EnumTimeFormatsA");
    }
    public static int EnumTimeFormatsA ( Addressable lpTimeFmtEnumProc,  int Locale,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.EnumTimeFormatsA$MH, "EnumTimeFormatsA");
        try {
            return (int)mh$.invokeExact(lpTimeFmtEnumProc.address(), Locale, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumTimeFormatsW$MH() {
        return RuntimeHelper.requireNonNull(constants$673.EnumTimeFormatsW$MH,"EnumTimeFormatsW");
    }
    public static int EnumTimeFormatsW ( Addressable lpTimeFmtEnumProc,  int Locale,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$673.EnumTimeFormatsW$MH, "EnumTimeFormatsW");
        try {
            return (int)mh$.invokeExact(lpTimeFmtEnumProc.address(), Locale, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDateFormatsA$MH() {
        return RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsA$MH,"EnumDateFormatsA");
    }
    public static int EnumDateFormatsA ( Addressable lpDateFmtEnumProc,  int Locale,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsA$MH, "EnumDateFormatsA");
        try {
            return (int)mh$.invokeExact(lpDateFmtEnumProc.address(), Locale, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDateFormatsW$MH() {
        return RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsW$MH,"EnumDateFormatsW");
    }
    public static int EnumDateFormatsW ( Addressable lpDateFmtEnumProc,  int Locale,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsW$MH, "EnumDateFormatsW");
        try {
            return (int)mh$.invokeExact(lpDateFmtEnumProc.address(), Locale, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDateFormatsExA$MH() {
        return RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsExA$MH,"EnumDateFormatsExA");
    }
    public static int EnumDateFormatsExA ( Addressable lpDateFmtEnumProcEx,  int Locale,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsExA$MH, "EnumDateFormatsExA");
        try {
            return (int)mh$.invokeExact(lpDateFmtEnumProcEx.address(), Locale, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDateFormatsExW$MH() {
        return RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsExW$MH,"EnumDateFormatsExW");
    }
    public static int EnumDateFormatsExW ( Addressable lpDateFmtEnumProcEx,  int Locale,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.EnumDateFormatsExW$MH, "EnumDateFormatsExW");
        try {
            return (int)mh$.invokeExact(lpDateFmtEnumProcEx.address(), Locale, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidLanguageGroup$MH() {
        return RuntimeHelper.requireNonNull(constants$674.IsValidLanguageGroup$MH,"IsValidLanguageGroup");
    }
    public static int IsValidLanguageGroup ( int LanguageGroup,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.IsValidLanguageGroup$MH, "IsValidLanguageGroup");
        try {
            return (int)mh$.invokeExact(LanguageGroup, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNLSVersion$MH() {
        return RuntimeHelper.requireNonNull(constants$674.GetNLSVersion$MH,"GetNLSVersion");
    }
    public static int GetNLSVersion ( int Function,  int Locale,  Addressable lpVersionInformation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$674.GetNLSVersion$MH, "GetNLSVersion");
        try {
            return (int)mh$.invokeExact(Function, Locale, lpVersionInformation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidLocale$MH() {
        return RuntimeHelper.requireNonNull(constants$675.IsValidLocale$MH,"IsValidLocale");
    }
    public static int IsValidLocale ( int Locale,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.IsValidLocale$MH, "IsValidLocale");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetLocaleInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$675.SetLocaleInfoA$MH,"SetLocaleInfoA");
    }
    public static int SetLocaleInfoA ( int Locale,  int LCType,  Addressable lpLCData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.SetLocaleInfoA$MH, "SetLocaleInfoA");
        try {
            return (int)mh$.invokeExact(Locale, LCType, lpLCData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetLocaleInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$675.SetLocaleInfoW$MH,"SetLocaleInfoW");
    }
    public static int SetLocaleInfoW ( int Locale,  int LCType,  Addressable lpLCData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.SetLocaleInfoW$MH, "SetLocaleInfoW");
        try {
            return (int)mh$.invokeExact(Locale, LCType, lpLCData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCalendarInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$675.GetCalendarInfoA$MH,"GetCalendarInfoA");
    }
    public static int GetCalendarInfoA ( int Locale,  int Calendar,  int CalType,  Addressable lpCalData,  int cchData,  Addressable lpValue) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.GetCalendarInfoA$MH, "GetCalendarInfoA");
        try {
            return (int)mh$.invokeExact(Locale, Calendar, CalType, lpCalData.address(), cchData, lpValue.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCalendarInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$675.GetCalendarInfoW$MH,"GetCalendarInfoW");
    }
    public static int GetCalendarInfoW ( int Locale,  int Calendar,  int CalType,  Addressable lpCalData,  int cchData,  Addressable lpValue) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.GetCalendarInfoW$MH, "GetCalendarInfoW");
        try {
            return (int)mh$.invokeExact(Locale, Calendar, CalType, lpCalData.address(), cchData, lpValue.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCalendarInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$675.SetCalendarInfoA$MH,"SetCalendarInfoA");
    }
    public static int SetCalendarInfoA ( int Locale,  int Calendar,  int CalType,  Addressable lpCalData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$675.SetCalendarInfoA$MH, "SetCalendarInfoA");
        try {
            return (int)mh$.invokeExact(Locale, Calendar, CalType, lpCalData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCalendarInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$676.SetCalendarInfoW$MH,"SetCalendarInfoW");
    }
    public static int SetCalendarInfoW ( int Locale,  int Calendar,  int CalType,  Addressable lpCalData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.SetCalendarInfoW$MH, "SetCalendarInfoW");
        try {
            return (int)mh$.invokeExact(Locale, Calendar, CalType, lpCalData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDurationFormat$MH() {
        return RuntimeHelper.requireNonNull(constants$676.GetDurationFormat$MH,"GetDurationFormat");
    }
    public static int GetDurationFormat ( int Locale,  int dwFlags,  Addressable lpDuration,  long ullDuration,  Addressable lpFormat,  Addressable lpDurationStr,  int cchDuration) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.GetDurationFormat$MH, "GetDurationFormat");
        try {
            return (int)mh$.invokeExact(Locale, dwFlags, lpDuration.address(), ullDuration, lpFormat.address(), lpDurationStr.address(), cchDuration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindNLSString$MH() {
        return RuntimeHelper.requireNonNull(constants$676.FindNLSString$MH,"FindNLSString");
    }
    public static int FindNLSString ( int Locale,  int dwFindNLSStringFlags,  Addressable lpStringSource,  int cchSource,  Addressable lpStringValue,  int cchValue,  Addressable pcchFound) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.FindNLSString$MH, "FindNLSString");
        try {
            return (int)mh$.invokeExact(Locale, dwFindNLSStringFlags, lpStringSource.address(), cchSource, lpStringValue.address(), cchValue, pcchFound.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadStringByReference$MH() {
        return RuntimeHelper.requireNonNull(constants$676.LoadStringByReference$MH,"LoadStringByReference");
    }
    public static int LoadStringByReference ( int Flags,  Addressable Language,  Addressable SourceString,  Addressable Buffer,  int cchBuffer,  Addressable Directory,  Addressable pcchBufferOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.LoadStringByReference$MH, "LoadStringByReference");
        try {
            return (int)mh$.invokeExact(Flags, Language.address(), SourceString.address(), Buffer.address(), cchBuffer, Directory.address(), pcchBufferOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGeoInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$676.GetGeoInfoA$MH,"GetGeoInfoA");
    }
    public static int GetGeoInfoA ( int Location,  int GeoType,  Addressable lpGeoData,  int cchData,  short LangId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.GetGeoInfoA$MH, "GetGeoInfoA");
        try {
            return (int)mh$.invokeExact(Location, GeoType, lpGeoData.address(), cchData, LangId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetGeoInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$676.GetGeoInfoW$MH,"GetGeoInfoW");
    }
    public static int GetGeoInfoW ( int Location,  int GeoType,  Addressable lpGeoData,  int cchData,  short LangId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$676.GetGeoInfoW$MH, "GetGeoInfoW");
        try {
            return (int)mh$.invokeExact(Location, GeoType, lpGeoData.address(), cchData, LangId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
}


