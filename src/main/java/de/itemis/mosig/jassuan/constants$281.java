// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$281 {

    static final FunctionDescriptor RtlApplicationVerifierStop$FUNC = FunctionDescriptor.ofVoid(
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle RtlApplicationVerifierStop$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlApplicationVerifierStop",
        "(JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)V",
        constants$281.RtlApplicationVerifierStop$FUNC, false
    );
    static final FunctionDescriptor RtlSetHeapInformation$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle RtlSetHeapInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlSetHeapInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;J)I",
        constants$281.RtlSetHeapInformation$FUNC, false
    );
    static final FunctionDescriptor RtlQueryHeapInformation$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle RtlQueryHeapInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlQueryHeapInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$281.RtlQueryHeapInformation$FUNC, false
    );
    static final FunctionDescriptor RtlMultipleAllocateHeap$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RtlMultipleAllocateHeap$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlMultipleAllocateHeap",
        "(Ljdk/incubator/foreign/MemoryAddress;IJILjdk/incubator/foreign/MemoryAddress;)I",
        constants$281.RtlMultipleAllocateHeap$FUNC, false
    );
    static final FunctionDescriptor RtlMultipleFreeHeap$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RtlMultipleFreeHeap$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlMultipleFreeHeap",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$281.RtlMultipleFreeHeap$FUNC, false
    );
    static final FunctionDescriptor PTP_SIMPLE_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
}


