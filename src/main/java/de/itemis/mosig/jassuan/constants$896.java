// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$896 {

    static final FunctionDescriptor CryptMsgGetAndVerifySigner$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptMsgGetAndVerifySigner$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptMsgGetAndVerifySigner",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$896.CryptMsgGetAndVerifySigner$FUNC, false
    );
    static final FunctionDescriptor CryptMsgSignCTL$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptMsgSignCTL$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptMsgSignCTL",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$896.CryptMsgSignCTL$FUNC, false
    );
    static final FunctionDescriptor CryptMsgEncodeAndSignCTL$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptMsgEncodeAndSignCTL$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptMsgEncodeAndSignCTL",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$896.CryptMsgEncodeAndSignCTL$FUNC, false
    );
    static final FunctionDescriptor CertFindSubjectInSortedCTL$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CertFindSubjectInSortedCTL$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertFindSubjectInSortedCTL",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$896.CertFindSubjectInSortedCTL$FUNC, false
    );
    static final FunctionDescriptor CertEnumSubjectInSortedCTL$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CertEnumSubjectInSortedCTL$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertEnumSubjectInSortedCTL",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$896.CertEnumSubjectInSortedCTL$FUNC, false
    );
    static final FunctionDescriptor CertVerifyCTLUsage$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CertVerifyCTLUsage$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertVerifyCTLUsage",
        "(IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$896.CertVerifyCTLUsage$FUNC, false
    );
}


