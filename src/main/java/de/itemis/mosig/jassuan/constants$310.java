// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$310 {

    static final FunctionDescriptor HeapDestroy$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle HeapDestroy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapDestroy",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$310.HeapDestroy$FUNC, false
    );
    static final FunctionDescriptor HeapAlloc$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG_LONG
    );
    static final MethodHandle HeapAlloc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapAlloc",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)Ljdk/incubator/foreign/MemoryAddress;",
        constants$310.HeapAlloc$FUNC, false
    );
    static final FunctionDescriptor HeapReAlloc$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle HeapReAlloc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapReAlloc",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$310.HeapReAlloc$FUNC, false
    );
    static final FunctionDescriptor HeapFree$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle HeapFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapFree",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$310.HeapFree$FUNC, false
    );
    static final FunctionDescriptor HeapSize$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle HeapSize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)J",
        constants$310.HeapSize$FUNC, false
    );
    static final FunctionDescriptor GetProcessHeap$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetProcessHeap$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetProcessHeap",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$310.GetProcessHeap$FUNC, false
    );
}


