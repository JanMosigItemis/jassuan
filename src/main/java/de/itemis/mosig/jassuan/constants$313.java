// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$313 {

    static final FunctionDescriptor InterlockedPopEntrySList$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle InterlockedPopEntrySList$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "InterlockedPopEntrySList",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$313.InterlockedPopEntrySList$FUNC, false
    );
    static final FunctionDescriptor InterlockedPushEntrySList$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle InterlockedPushEntrySList$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "InterlockedPushEntrySList",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$313.InterlockedPushEntrySList$FUNC, false
    );
    static final FunctionDescriptor InterlockedFlushSList$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle InterlockedFlushSList$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "InterlockedFlushSList",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$313.InterlockedFlushSList$FUNC, false
    );
    static final FunctionDescriptor QueryDepthSList$FUNC = FunctionDescriptor.of(C_SHORT,
        C_POINTER
    );
    static final MethodHandle QueryDepthSList$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryDepthSList",
        "(Ljdk/incubator/foreign/MemoryAddress;)S",
        constants$313.QueryDepthSList$FUNC, false
    );
    static final FunctionDescriptor IsProcessInJob$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IsProcessInJob$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsProcessInJob",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$313.IsProcessInJob$FUNC, false
    );
    static final FunctionDescriptor ENUMRESLANGPROCA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_SHORT,
        C_LONG_LONG
    );
}


