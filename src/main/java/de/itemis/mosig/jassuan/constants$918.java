// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$918 {

    static final FunctionDescriptor PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$918.PFN_CERT_CHAIN_FIND_BY_ISSUER_CALLBACK$FUNC, false
    );
    static final FunctionDescriptor CertVerifyCertificateChainPolicy$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CertVerifyCertificateChainPolicy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertVerifyCertificateChainPolicy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$918.CertVerifyCertificateChainPolicy$FUNC, false
    );
    static final FunctionDescriptor CryptStringToBinaryA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptStringToBinaryA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptStringToBinaryA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$918.CryptStringToBinaryA$FUNC, false
    );
    static final FunctionDescriptor CryptStringToBinaryW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptStringToBinaryW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptStringToBinaryW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$918.CryptStringToBinaryW$FUNC, false
    );
    static final FunctionDescriptor CryptBinaryToStringA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptBinaryToStringA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptBinaryToStringA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$918.CryptBinaryToStringA$FUNC, false
    );
    static final FunctionDescriptor CryptBinaryToStringW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptBinaryToStringW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptBinaryToStringW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$918.CryptBinaryToStringW$FUNC, false
    );
}


