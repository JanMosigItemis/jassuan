// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$532 {

    static final FunctionDescriptor LPtoDP$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle LPtoDP$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LPtoDP",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$532.LPtoDP$FUNC, false
    );
    static final FunctionDescriptor Polygon$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle Polygon$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Polygon",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$532.Polygon$FUNC, false
    );
    static final FunctionDescriptor Polyline$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle Polyline$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "Polyline",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$532.Polyline$FUNC, false
    );
    static final FunctionDescriptor PolyBezier$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle PolyBezier$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PolyBezier",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$532.PolyBezier$FUNC, false
    );
    static final FunctionDescriptor PolyBezierTo$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle PolyBezierTo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PolyBezierTo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$532.PolyBezierTo$FUNC, false
    );
    static final FunctionDescriptor PolylineTo$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle PolylineTo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PolylineTo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$532.PolylineTo$FUNC, false
    );
}


