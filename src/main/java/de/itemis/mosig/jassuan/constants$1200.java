// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1200 {

    static final FunctionDescriptor PropStgNameToFmtId$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PropStgNameToFmtId$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PropStgNameToFmtId",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1200.PropStgNameToFmtId$FUNC, false
    );
    static final FunctionDescriptor StgConvertVariantToProperty$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_CHAR,
        C_POINTER
    );
    static final MethodHandle StgConvertVariantToProperty$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "StgConvertVariantToProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;SLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IBLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1200.StgConvertVariantToProperty$FUNC, false
    );
    static final FunctionDescriptor LPSAFEARRAY_UserSize$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle LPSAFEARRAY_UserSize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LPSAFEARRAY_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1200.LPSAFEARRAY_UserSize$FUNC, false
    );
    static final FunctionDescriptor LPSAFEARRAY_UserMarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle LPSAFEARRAY_UserMarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LPSAFEARRAY_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1200.LPSAFEARRAY_UserMarshal$FUNC, false
    );
    static final FunctionDescriptor LPSAFEARRAY_UserUnmarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle LPSAFEARRAY_UserUnmarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LPSAFEARRAY_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1200.LPSAFEARRAY_UserUnmarshal$FUNC, false
    );
    static final FunctionDescriptor LPSAFEARRAY_UserFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle LPSAFEARRAY_UserFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LPSAFEARRAY_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1200.LPSAFEARRAY_UserFree$FUNC, false
    );
}


