// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class _userCLIPFORMAT {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("fContext"),
        MemoryLayout.paddingLayout(32),
        MemoryLayout.unionLayout(
            C_LONG.withName("dwValue"),
            C_POINTER.withName("pwszName")
        ).withName("u")
    ).withName("_userCLIPFORMAT");
    public static MemoryLayout $LAYOUT() {
        return _userCLIPFORMAT.$struct$LAYOUT;
    }
    static final VarHandle fContext$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    public static VarHandle fContext$VH() {
        return _userCLIPFORMAT.fContext$VH;
    }
    public static int fContext$get(MemorySegment seg) {
        return (int)_userCLIPFORMAT.fContext$VH.get(seg);
    }
    public static void fContext$set( MemorySegment seg, int x) {
        _userCLIPFORMAT.fContext$VH.set(seg, x);
    }
    public static int fContext$get(MemorySegment seg, long index) {
        return (int)_userCLIPFORMAT.fContext$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fContext$set(MemorySegment seg, long index, int x) {
        _userCLIPFORMAT.fContext$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static class __WIDL_wtypes_generated_name_00000001 {

        static final MemoryLayout __WIDL_wtypes_generated_name_00000001$union$LAYOUT = MemoryLayout.unionLayout(
            C_LONG.withName("dwValue"),
            C_POINTER.withName("pwszName")
        ).withName("__WIDL_wtypes_generated_name_00000001");
        public static MemoryLayout $LAYOUT() {
            return __WIDL_wtypes_generated_name_00000001.__WIDL_wtypes_generated_name_00000001$union$LAYOUT;
        }
        static final VarHandle dwValue$VH = __WIDL_wtypes_generated_name_00000001$union$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("dwValue"));
        public static VarHandle dwValue$VH() {
            return __WIDL_wtypes_generated_name_00000001.dwValue$VH;
        }
        public static int dwValue$get(MemorySegment seg) {
            return (int)__WIDL_wtypes_generated_name_00000001.dwValue$VH.get(seg);
        }
        public static void dwValue$set( MemorySegment seg, int x) {
            __WIDL_wtypes_generated_name_00000001.dwValue$VH.set(seg, x);
        }
        public static int dwValue$get(MemorySegment seg, long index) {
            return (int)__WIDL_wtypes_generated_name_00000001.dwValue$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void dwValue$set(MemorySegment seg, long index, int x) {
            __WIDL_wtypes_generated_name_00000001.dwValue$VH.set(seg.asSlice(index*sizeof()), x);
        }
        static final VarHandle pwszName$VH = MemoryHandles.asAddressVarHandle(__WIDL_wtypes_generated_name_00000001$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pwszName")));
        public static VarHandle pwszName$VH() {
            return __WIDL_wtypes_generated_name_00000001.pwszName$VH;
        }
        public static MemoryAddress pwszName$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_00000001.pwszName$VH.get(seg);
        }
        public static void pwszName$set( MemorySegment seg, MemoryAddress x) {
            __WIDL_wtypes_generated_name_00000001.pwszName$VH.set(seg, x);
        }
        public static MemoryAddress pwszName$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_00000001.pwszName$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void pwszName$set(MemorySegment seg, long index, MemoryAddress x) {
            __WIDL_wtypes_generated_name_00000001.pwszName$VH.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
        public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment allocateArray(int len, ResourceScope scope) {
            return allocateArray(len, SegmentAllocator.ofScope(scope));
        }
        public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
    }

    public static MemorySegment u$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


