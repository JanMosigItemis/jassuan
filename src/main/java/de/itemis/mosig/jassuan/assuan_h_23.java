// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_23 extends assuan_h_22 {

    public static int TAPE_DRIVE_LOGICAL_BLK() {
        return (int)2147500032L;
    }
    public static int TAPE_DRIVE_LOG_BLK_IMMED() {
        return (int)2147516416L;
    }
    public static int TAPE_DRIVE_END_OF_DATA() {
        return (int)2147549184L;
    }
    public static int TAPE_DRIVE_RELATIVE_BLKS() {
        return (int)2147614720L;
    }
    public static int TAPE_DRIVE_FILEMARKS() {
        return (int)2147745792L;
    }
    public static int TAPE_DRIVE_SEQUENTIAL_FMKS() {
        return (int)2148007936L;
    }
    public static int TAPE_DRIVE_SETMARKS() {
        return (int)2148532224L;
    }
    public static int TAPE_DRIVE_SEQUENTIAL_SMKS() {
        return (int)2149580800L;
    }
    public static int TAPE_DRIVE_REVERSE_POSITION() {
        return (int)2151677952L;
    }
    public static int TAPE_DRIVE_SPACE_IMMEDIATE() {
        return (int)2155872256L;
    }
    public static int TAPE_DRIVE_WRITE_SETMARKS() {
        return (int)2164260864L;
    }
    public static int TAPE_DRIVE_WRITE_FILEMARKS() {
        return (int)2181038080L;
    }
    public static int TAPE_DRIVE_WRITE_SHORT_FMKS() {
        return (int)2214592512L;
    }
    public static int TAPE_DRIVE_WRITE_LONG_FMKS() {
        return (int)2281701376L;
    }
    public static int TAPE_DRIVE_WRITE_MARK_IMMED() {
        return (int)2415919104L;
    }
    public static int TAPE_DRIVE_FORMAT() {
        return (int)2684354560L;
    }
    public static int TAPE_DRIVE_FORMAT_IMMEDIATE() {
        return (int)3221225472L;
    }
    public static int TAPE_DRIVE_HIGH_FEATURES() {
        return (int)2147483648L;
    }
    public static int TAPE_FIXED_PARTITIONS() {
        return (int)0L;
    }
    public static int TAPE_SELECT_PARTITIONS() {
        return (int)1L;
    }
    public static int TAPE_INITIATOR_PARTITIONS() {
        return (int)2L;
    }
    public static int TAPE_QUERY_DRIVE_PARAMETERS() {
        return (int)0L;
    }
    public static int TAPE_QUERY_MEDIA_CAPACITY() {
        return (int)1L;
    }
    public static int TAPE_CHECK_FOR_DRIVE_PROBLEM() {
        return (int)2L;
    }
    public static int TAPE_QUERY_IO_ERROR_DATA() {
        return (int)3L;
    }
    public static int TAPE_QUERY_DEVICE_ERROR_DATA() {
        return (int)4L;
    }
    public static MemorySegment TRANSACTIONMANAGER_OBJECT_PATH() {
        return constants$1442.TRANSACTIONMANAGER_OBJECT_PATH$SEGMENT;
    }
    public static MemorySegment TRANSACTION_OBJECT_PATH() {
        return constants$1442.TRANSACTION_OBJECT_PATH$SEGMENT;
    }
    public static MemorySegment ENLISTMENT_OBJECT_PATH() {
        return constants$1442.ENLISTMENT_OBJECT_PATH$SEGMENT;
    }
    public static MemorySegment RESOURCE_MANAGER_OBJECT_PATH() {
        return constants$1442.RESOURCE_MANAGER_OBJECT_PATH$SEGMENT;
    }
    public static long TRANSACTIONMANAGER_OBJECT_NAME_LENGTH_IN_BYTES() {
        return 118L;
    }
    public static long TRANSACTION_OBJECT_NAME_LENGTH_IN_BYTES() {
        return 104L;
    }
    public static long ENLISTMENT_OBJECT_NAME_LENGTH_IN_BYTES() {
        return 102L;
    }
    public static long RESOURCE_MANAGER_OBJECT_NAME_LENGTH_IN_BYTES() {
        return 112L;
    }
    public static int TRANSACTIONMANAGER_GENERIC_READ() {
        return (int)131073L;
    }
    public static int TRANSACTIONMANAGER_GENERIC_WRITE() {
        return (int)131102L;
    }
    public static int TRANSACTIONMANAGER_GENERIC_EXECUTE() {
        return (int)131072L;
    }
    public static int TRANSACTIONMANAGER_ALL_ACCESS() {
        return (int)983103L;
    }
    public static int TRANSACTION_QUERY_INFORMATION() {
        return (int)1L;
    }
    public static int TRANSACTION_SET_INFORMATION() {
        return (int)2L;
    }
    public static int TRANSACTION_ENLIST() {
        return (int)4L;
    }
    public static int TRANSACTION_COMMIT() {
        return (int)8L;
    }
    public static int TRANSACTION_ROLLBACK() {
        return (int)16L;
    }
    public static int TRANSACTION_PROPAGATE() {
        return (int)32L;
    }
    public static int TRANSACTION_RIGHT_RESERVED1() {
        return (int)64L;
    }
    public static int TRANSACTION_GENERIC_READ() {
        return (int)1179649L;
    }
    public static int TRANSACTION_GENERIC_WRITE() {
        return (int)1179710L;
    }
    public static int TRANSACTION_GENERIC_EXECUTE() {
        return (int)1179672L;
    }
    public static int TRANSACTION_ALL_ACCESS() {
        return (int)2031679L;
    }
    public static int TRANSACTION_RESOURCE_MANAGER_RIGHTS() {
        return (int)1179703L;
    }
    public static int RESOURCEMANAGER_QUERY_INFORMATION() {
        return (int)1L;
    }
    public static int RESOURCEMANAGER_SET_INFORMATION() {
        return (int)2L;
    }
    public static int RESOURCEMANAGER_RECOVER() {
        return (int)4L;
    }
    public static int RESOURCEMANAGER_ENLIST() {
        return (int)8L;
    }
    public static int RESOURCEMANAGER_GET_NOTIFICATION() {
        return (int)16L;
    }
    public static int RESOURCEMANAGER_REGISTER_PROTOCOL() {
        return (int)32L;
    }
    public static int RESOURCEMANAGER_COMPLETE_PROPAGATION() {
        return (int)64L;
    }
    public static int RESOURCEMANAGER_GENERIC_READ() {
        return (int)1179649L;
    }
    public static int RESOURCEMANAGER_GENERIC_WRITE() {
        return (int)1179774L;
    }
    public static int RESOURCEMANAGER_GENERIC_EXECUTE() {
        return (int)1179740L;
    }
    public static int RESOURCEMANAGER_ALL_ACCESS() {
        return (int)2031743L;
    }
    public static int ENLISTMENT_GENERIC_READ() {
        return (int)131073L;
    }
    public static int ENLISTMENT_GENERIC_WRITE() {
        return (int)131102L;
    }
    public static int ENLISTMENT_GENERIC_EXECUTE() {
        return (int)131100L;
    }
    public static int ENLISTMENT_ALL_ACCESS() {
        return (int)983071L;
    }
    public static int WOW64_CONTEXT_CONTROL() {
        return (int)65537L;
    }
    public static int WOW64_CONTEXT_INTEGER() {
        return (int)65538L;
    }
    public static int WOW64_CONTEXT_SEGMENTS() {
        return (int)65540L;
    }
    public static int WOW64_CONTEXT_FLOATING_POINT() {
        return (int)65544L;
    }
    public static int WOW64_CONTEXT_DEBUG_REGISTERS() {
        return (int)65552L;
    }
    public static int WOW64_CONTEXT_EXTENDED_REGISTERS() {
        return (int)65568L;
    }
    public static int WOW64_CONTEXT_FULL() {
        return (int)65543L;
    }
    public static int WOW64_CONTEXT_ALL() {
        return (int)65599L;
    }
    public static int WOW64_CONTEXT_XSTATE() {
        return (int)65600L;
    }
    public static int WOW64_CONTEXT_EXCEPTION_REPORTING() {
        return (int)2147483648L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_ASSEMBLY_INFORMATION() {
        return (int)1L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_DLL_REDIRECTION() {
        return (int)2L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_WINDOW_CLASS_REDIRECTION() {
        return (int)3L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_SERVER_REDIRECTION() {
        return (int)4L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_INTERFACE_REDIRECTION() {
        return (int)5L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_TYPE_LIBRARY_REDIRECTION() {
        return (int)6L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COM_PROGID_REDIRECTION() {
        return (int)7L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_GLOBAL_OBJECT_RENAME_TABLE() {
        return (int)8L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_CLR_SURROGATES() {
        return (int)9L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_APPLICATION_SETTINGS() {
        return (int)10L;
    }
    public static int ACTIVATION_CONTEXT_SECTION_COMPATIBILITY_INFO() {
        return (int)11L;
    }
    public static int HFILE_ERROR() {
        return (int)-1L;
    }
    public static int DM_IN_BUFFER() {
        return (int)8L;
    }
    public static int DM_IN_PROMPT() {
        return (int)4L;
    }
    public static int DM_OUT_BUFFER() {
        return (int)2L;
    }
    public static int DM_OUT_DEFAULT() {
        return (int)1L;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE() {
        return constants$1442.DPI_AWARENESS_CONTEXT_UNAWARE$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_SYSTEM_AWARE() {
        return constants$1443.DPI_AWARENESS_CONTEXT_SYSTEM_AWARE$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE() {
        return constants$1443.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2() {
        return constants$1443.DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2$ADDR;
    }
    public static MemoryAddress DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED() {
        return constants$1443.DPI_AWARENESS_CONTEXT_UNAWARE_GDISCALED$ADDR;
    }
    public static int STILL_ACTIVE() {
        return (int)259L;
    }
    public static int EXCEPTION_ACCESS_VIOLATION() {
        return (int)3221225477L;
    }
    public static int EXCEPTION_DATATYPE_MISALIGNMENT() {
        return (int)2147483650L;
    }
    public static int EXCEPTION_BREAKPOINT() {
        return (int)2147483651L;
    }
    public static int EXCEPTION_SINGLE_STEP() {
        return (int)2147483652L;
    }
    public static int EXCEPTION_ARRAY_BOUNDS_EXCEEDED() {
        return (int)3221225612L;
    }
    public static int EXCEPTION_FLT_DENORMAL_OPERAND() {
        return (int)3221225613L;
    }
    public static int EXCEPTION_FLT_DIVIDE_BY_ZERO() {
        return (int)3221225614L;
    }
    public static int EXCEPTION_FLT_INEXACT_RESULT() {
        return (int)3221225615L;
    }
    public static int EXCEPTION_FLT_INVALID_OPERATION() {
        return (int)3221225616L;
    }
    public static int EXCEPTION_FLT_OVERFLOW() {
        return (int)3221225617L;
    }
    public static int EXCEPTION_FLT_STACK_CHECK() {
        return (int)3221225618L;
    }
    public static int EXCEPTION_FLT_UNDERFLOW() {
        return (int)3221225619L;
    }
    public static int EXCEPTION_INT_DIVIDE_BY_ZERO() {
        return (int)3221225620L;
    }
    public static int EXCEPTION_INT_OVERFLOW() {
        return (int)3221225621L;
    }
    public static int EXCEPTION_PRIV_INSTRUCTION() {
        return (int)3221225622L;
    }
    public static int EXCEPTION_IN_PAGE_ERROR() {
        return (int)3221225478L;
    }
    public static int EXCEPTION_ILLEGAL_INSTRUCTION() {
        return (int)3221225501L;
    }
    public static int EXCEPTION_NONCONTINUABLE_EXCEPTION() {
        return (int)3221225509L;
    }
    public static int EXCEPTION_STACK_OVERFLOW() {
        return (int)3221225725L;
    }
    public static int EXCEPTION_INVALID_DISPOSITION() {
        return (int)3221225510L;
    }
    public static int EXCEPTION_GUARD_PAGE() {
        return (int)2147483649L;
    }
    public static int EXCEPTION_INVALID_HANDLE() {
        return (int)3221225480L;
    }
    public static int CONTROL_C_EXIT() {
        return (int)3221225786L;
    }
    public static int LHND() {
        return (int)66L;
    }
    public static int LPTR() {
        return (int)64L;
    }
    public static int NONZEROLHND() {
        return (int)2L;
    }
    public static int NONZEROLPTR() {
        return (int)0L;
    }
    public static int NUMA_NO_PREFERRED_NODE() {
        return (int)4294967295L;
    }
    public static int FLS_OUT_OF_INDEXES() {
        return (int)4294967295L;
    }
    public static int INVALID_FILE_SIZE() {
        return (int)4294967295L;
    }
    public static int INVALID_SET_FILE_POINTER() {
        return (int)4294967295L;
    }
    public static int INVALID_FILE_ATTRIBUTES() {
        return (int)4294967295L;
    }
    public static MemoryAddress INVALID_HANDLE_VALUE() {
        return constants$1443.INVALID_HANDLE_VALUE$ADDR;
    }
    public static int FIND_RESOURCE_DIRECTORY_TYPES() {
        return (int)256L;
    }
    public static int FIND_RESOURCE_DIRECTORY_NAMES() {
        return (int)512L;
    }
    public static int FIND_RESOURCE_DIRECTORY_LANGUAGES() {
        return (int)1024L;
    }
    public static int RESOURCE_ENUM_LN() {
        return (int)1L;
    }
    public static int RESOURCE_ENUM_MUI() {
        return (int)2L;
    }
    public static int RESOURCE_ENUM_MUI_SYSTEM() {
        return (int)4L;
    }
    public static int RESOURCE_ENUM_VALIDATE() {
        return (int)8L;
    }
    public static int RESOURCE_ENUM_MODULE_EXACT() {
        return (int)16L;
    }
    public static int LOAD_LIBRARY_SEARCH_SYSTEM32_NO_FORWARDER() {
        return (int)2048L;
    }
    public static int GET_MODULE_HANDLE_EX_FLAG_PIN() {
        return (int)1L;
    }
    public static int GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT() {
        return (int)2L;
    }
    public static int GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS() {
        return (int)4L;
    }
    public static int FILE_MAP_WRITE() {
        return (int)2L;
    }
    public static int FILE_MAP_READ() {
        return (int)4L;
    }
    public static int FILE_MAP_ALL_ACCESS() {
        return (int)983071L;
    }
    public static int FILE_MAP_RESERVE() {
        return (int)2147483648L;
    }
    public static int FILE_MAP_EXECUTE() {
        return (int)32L;
    }
    public static int TLS_OUT_OF_INDEXES() {
        return (int)4294967295L;
    }
    public static int PROCESS_AFFINITY_ENABLE_AUTO_UPDATE() {
        return (int)1L;
    }
    public static int INIT_ONCE_CHECK_ONLY() {
        return (int)1L;
    }
    public static int INIT_ONCE_ASYNC() {
        return (int)2L;
    }
    public static int INIT_ONCE_INIT_FAILED() {
        return (int)4L;
    }
    public static int INIT_ONCE_CTX_RESERVED_BITS() {
        return (int)2L;
    }
    public static int CONDITION_VARIABLE_LOCKMODE_SHARED() {
        return (int)1L;
    }
    public static int MUTEX_MODIFY_STATE() {
        return (int)1L;
    }
    public static int MUTEX_ALL_ACCESS() {
        return (int)2031617L;
    }
    public static int WAIT_FAILED() {
        return (int)4294967295L;
    }
    public static int WAIT_OBJECT_0() {
        return (int)0L;
    }
    public static int WAIT_ABANDONED() {
        return (int)128L;
    }
    public static int WAIT_ABANDONED_0() {
        return (int)128L;
    }
    public static int WAIT_IO_COMPLETION() {
        return (int)192L;
    }
    public static int FILE_FLAG_WRITE_THROUGH() {
        return (int)2147483648L;
    }
    public static int SECURITY_ANONYMOUS() {
        return (int)0L;
    }
    public static int SECURITY_IDENTIFICATION() {
        return (int)65536L;
    }
    public static int SECURITY_IMPERSONATION() {
        return (int)131072L;
    }
    public static int SECURITY_DELEGATION() {
        return (int)196608L;
    }
    public static int SP_SERIALCOMM() {
        return (int)1L;
    }
    public static int PST_UNSPECIFIED() {
        return (int)0L;
    }
    public static int PST_RS232() {
        return (int)1L;
    }
    public static int PST_PARALLELPORT() {
        return (int)2L;
    }
    public static int PST_RS422() {
        return (int)3L;
    }
    public static int PST_RS423() {
        return (int)4L;
    }
    public static int PST_RS449() {
        return (int)5L;
    }
    public static int PST_MODEM() {
        return (int)6L;
    }
    public static int PST_FAX() {
        return (int)33L;
    }
    public static int PST_SCANNER() {
        return (int)34L;
    }
    public static int PST_NETWORK_BRIDGE() {
        return (int)256L;
    }
    public static int PST_LAT() {
        return (int)257L;
    }
    public static int PST_TCPIP_TELNET() {
        return (int)258L;
    }
    public static int PST_X25() {
        return (int)259L;
    }
    public static int PCF_DTRDSR() {
        return (int)1L;
    }
    public static int PCF_RTSCTS() {
        return (int)2L;
    }
    public static int PCF_RLSD() {
        return (int)4L;
    }
    public static int PCF_PARITY_CHECK() {
        return (int)8L;
    }
    public static int PCF_XONXOFF() {
        return (int)16L;
    }
    public static int PCF_SETXCHAR() {
        return (int)32L;
    }
    public static int PCF_TOTALTIMEOUTS() {
        return (int)64L;
    }
    public static int PCF_INTTIMEOUTS() {
        return (int)128L;
    }
    public static int PCF_SPECIALCHARS() {
        return (int)256L;
    }
    public static int PCF_16BITMODE() {
        return (int)512L;
    }
    public static int SP_PARITY() {
        return (int)1L;
    }
    public static int SP_BAUD() {
        return (int)2L;
    }
    public static int SP_DATABITS() {
        return (int)4L;
    }
    public static int SP_STOPBITS() {
        return (int)8L;
    }
    public static int SP_HANDSHAKING() {
        return (int)16L;
    }
    public static int SP_PARITY_CHECK() {
        return (int)32L;
    }
    public static int SP_RLSD() {
        return (int)64L;
    }
    public static int BAUD_075() {
        return (int)1L;
    }
    public static int BAUD_110() {
        return (int)2L;
    }
    public static int BAUD_134_5() {
        return (int)4L;
    }
    public static int BAUD_150() {
        return (int)8L;
    }
    public static int BAUD_300() {
        return (int)16L;
    }
    public static int BAUD_600() {
        return (int)32L;
    }
    public static int BAUD_1200() {
        return (int)64L;
    }
    public static int BAUD_1800() {
        return (int)128L;
    }
    public static int BAUD_2400() {
        return (int)256L;
    }
    public static int BAUD_4800() {
        return (int)512L;
    }
    public static int BAUD_7200() {
        return (int)1024L;
    }
    public static int BAUD_9600() {
        return (int)2048L;
    }
    public static int BAUD_14400() {
        return (int)4096L;
    }
    public static int BAUD_19200() {
        return (int)8192L;
    }
    public static int BAUD_38400() {
        return (int)16384L;
    }
    public static int BAUD_56K() {
        return (int)32768L;
    }
    public static int BAUD_128K() {
        return (int)65536L;
    }
    public static int BAUD_115200() {
        return (int)131072L;
    }
    public static int BAUD_57600() {
        return (int)262144L;
    }
    public static int BAUD_USER() {
        return (int)268435456L;
    }
    public static short DATABITS_5() {
        return (short)1L;
    }
    public static short DATABITS_6() {
        return (short)2L;
    }
    public static short DATABITS_7() {
        return (short)4L;
    }
    public static short DATABITS_8() {
        return (short)8L;
    }
    public static short DATABITS_16() {
        return (short)16L;
    }
    public static short DATABITS_16X() {
        return (short)32L;
    }
    public static short STOPBITS_10() {
        return (short)1L;
    }
    public static short STOPBITS_15() {
        return (short)2L;
    }
    public static short STOPBITS_20() {
        return (short)4L;
    }
    public static short PARITY_NONE() {
        return (short)256L;
    }
    public static short PARITY_ODD() {
        return (short)512L;
    }
    public static short PARITY_EVEN() {
        return (short)1024L;
    }
    public static short PARITY_MARK() {
        return (short)2048L;
    }
    public static short PARITY_SPACE() {
        return (short)4096L;
    }
    public static int COMMPROP_INITIALIZED() {
        return (int)3879531822L;
    }
    public static int GMEM_LOWER() {
        return (int)4096L;
    }
    public static int GHND() {
        return (int)66L;
    }
    public static int GPTR() {
        return (int)64L;
    }
    public static int CREATE_IGNORE_SYSTEM_DEFAULT() {
        return (int)2147483648L;
    }
    public static int THREAD_PRIORITY_LOWEST() {
        return (int)-2L;
    }
    public static int THREAD_PRIORITY_BELOW_NORMAL() {
        return (int)-1L;
    }
    public static int THREAD_PRIORITY_HIGHEST() {
        return (int)2L;
    }
    public static int THREAD_PRIORITY_ABOVE_NORMAL() {
        return (int)1L;
    }
    public static int THREAD_PRIORITY_ERROR_RETURN() {
        return (int)2147483647L;
    }
    public static int THREAD_PRIORITY_TIME_CRITICAL() {
        return (int)15L;
    }
    public static int THREAD_PRIORITY_IDLE() {
        return (int)-15L;
    }
    public static int STD_INPUT_HANDLE() {
        return (int)4294967286L;
    }
    public static int STD_OUTPUT_HANDLE() {
        return (int)4294967285L;
    }
    public static int STD_ERROR_HANDLE() {
        return (int)4294967284L;
    }
    public static int INFINITE() {
        return (int)4294967295L;
    }
    public static int IE_BADID() {
        return (int)-1L;
    }
    public static int IE_OPEN() {
        return (int)-2L;
    }
    public static int IE_NOPEN() {
        return (int)-3L;
    }
    public static int IE_MEMORY() {
        return (int)-4L;
    }
    public static int IE_DEFAULT() {
        return (int)-5L;
    }
    public static int IE_HARDWARE() {
        return (int)-10L;
    }
    public static int IE_BYTESIZE() {
        return (int)-11L;
    }
    public static int IE_BAUDRATE() {
        return (int)-12L;
    }
    public static int MS_CTS_ON() {
        return (int)16L;
    }
    public static int MS_DSR_ON() {
        return (int)32L;
    }
    public static int MS_RING_ON() {
        return (int)64L;
    }
    public static int MS_RLSD_ON() {
        return (int)128L;
    }
    public static int S_SERDVNA() {
        return (int)-1L;
    }
    public static int S_SEROFM() {
        return (int)-2L;
    }
    public static int S_SERMACT() {
        return (int)-3L;
    }
    public static int S_SERQFUL() {
        return (int)-4L;
    }
    public static int S_SERBDNT() {
        return (int)-5L;
    }
    public static int S_SERDLN() {
        return (int)-6L;
    }
    public static int S_SERDCC() {
        return (int)-7L;
    }
    public static int S_SERDTP() {
        return (int)-8L;
    }
    public static int S_SERDVL() {
        return (int)-9L;
    }
    public static int S_SERDMD() {
        return (int)-10L;
    }
    public static int S_SERDSH() {
        return (int)-11L;
    }
    public static int S_SERDPT() {
        return (int)-12L;
    }
    public static int S_SERDFQ() {
        return (int)-13L;
    }
    public static int S_SERDDR() {
        return (int)-14L;
    }
    public static int S_SERDSR() {
        return (int)-15L;
    }
    public static int S_SERDST() {
        return (int)-16L;
    }
    public static int NMPWAIT_WAIT_FOREVER() {
        return (int)4294967295L;
    }
    public static int FS_CASE_IS_PRESERVED() {
        return (int)2L;
    }
    public static int FS_CASE_SENSITIVE() {
        return (int)1L;
    }
    public static int FS_UNICODE_STORED_ON_DISK() {
        return (int)4L;
    }
    public static int FS_PERSISTENT_ACLS() {
        return (int)8L;
    }
    public static int FS_VOL_IS_COMPRESSED() {
        return (int)32768L;
    }
    public static int FS_FILE_COMPRESSION() {
        return (int)16L;
    }
    public static int FS_FILE_ENCRYPTION() {
        return (int)131072L;
    }
    public static short INVALID_ATOM() {
        return (short)0L;
    }
    public static int SCS_THIS_PLATFORM_BINARY() {
        return (int)6L;
    }
    public static int CRITICAL_SECTION_NO_DEBUG_INFO() {
        return (int)16777216L;
    }
    public static int EFS_USE_RECOVERY_KEYS() {
        return (int)1L;
    }
    public static int CREATE_FOR_IMPORT() {
        return (int)1L;
    }
    public static int CREATE_FOR_DIR() {
        return (int)2L;
    }
    public static int OVERWRITE_HIDDEN() {
        return (int)4L;
    }
    public static int EFSRPC_SECURE_ONLY() {
        return (int)8L;
    }
    public static int EFS_DROP_ALTERNATE_STREAMS() {
        return (int)16L;
    }
    public static int PROTECTION_LEVEL_SAME() {
        return (int)4294967295L;
    }
    public static int PROTECTION_LEVEL_NONE() {
        return (int)4294967294L;
    }
    public static int PROC_THREAD_ATTRIBUTE_PARENT_PROCESS() {
        return (int)131072L;
    }
    public static int PROC_THREAD_ATTRIBUTE_HANDLE_LIST() {
        return (int)131074L;
    }
    public static int PROC_THREAD_ATTRIBUTE_GROUP_AFFINITY() {
        return (int)196611L;
    }
    public static int PROC_THREAD_ATTRIBUTE_PREFERRED_NODE() {
        return (int)131076L;
    }
    public static int PROC_THREAD_ATTRIBUTE_IDEAL_PROCESSOR() {
        return (int)196613L;
    }
    public static int PROC_THREAD_ATTRIBUTE_UMS_THREAD() {
        return (int)196614L;
    }
    public static int PROC_THREAD_ATTRIBUTE_MITIGATION_POLICY() {
        return (int)131079L;
    }
    public static int PROC_THREAD_ATTRIBUTE_PROTECTION_LEVEL() {
        return (int)131083L;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A() {
        return constants$1443.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W() {
        return constants$1444.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T() {
        return constants$1444.GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A() {
        return constants$1444.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W() {
        return constants$1444.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T() {
        return constants$1444.GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A() {
        return constants$1444.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W() {
        return constants$1445.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W$SEGMENT;
    }
    public static MemorySegment GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T() {
        return constants$1445.GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T$SEGMENT;
    }
    public static int BASE_SEARCH_PATH_INVALID_FLAGS() {
        return (int)-98306L;
    }
    public static int COPYFILE2_MESSAGE_COPY_OFFLOAD() {
        return (int)1L;
    }
    public static int LOGON_ZERO_PASSWORD_BUFFER() {
        return (int)2147483648L;
    }
    public static int DOCKINFO_UNDOCKED() {
        return (int)1L;
    }
    public static int DOCKINFO_DOCKED() {
        return (int)2L;
    }
    public static int DOCKINFO_USER_SUPPLIED() {
        return (int)4L;
    }
    public static int DOCKINFO_USER_UNDOCKED() {
        return (int)5L;
    }
    public static int DOCKINFO_USER_DOCKED() {
        return (int)6L;
    }
    public static int ERROR_SUCCESS() {
        return (int)0L;
    }
    public static int NO_ERROR() {
        return (int)0L;
    }
    public static int SEC_E_OK() {
        return (int)0L;
    }
    public static int ERROR_INVALID_FUNCTION() {
        return (int)1L;
    }
    public static int ERROR_FILE_NOT_FOUND() {
        return (int)2L;
    }
    public static int ERROR_PATH_NOT_FOUND() {
        return (int)3L;
    }
    public static int ERROR_TOO_MANY_OPEN_FILES() {
        return (int)4L;
    }
    public static int ERROR_ACCESS_DENIED() {
        return (int)5L;
    }
    public static int ERROR_INVALID_HANDLE() {
        return (int)6L;
    }
    public static int ERROR_ARENA_TRASHED() {
        return (int)7L;
    }
    public static int ERROR_NOT_ENOUGH_MEMORY() {
        return (int)8L;
    }
    public static int ERROR_INVALID_BLOCK() {
        return (int)9L;
    }
    public static int ERROR_BAD_ENVIRONMENT() {
        return (int)10L;
    }
    public static int ERROR_BAD_FORMAT() {
        return (int)11L;
    }
    public static int ERROR_INVALID_ACCESS() {
        return (int)12L;
    }
    public static int ERROR_INVALID_DATA() {
        return (int)13L;
    }
    public static int ERROR_OUTOFMEMORY() {
        return (int)14L;
    }
    public static int ERROR_INVALID_DRIVE() {
        return (int)15L;
    }
    public static int ERROR_CURRENT_DIRECTORY() {
        return (int)16L;
    }
    public static int ERROR_NOT_SAME_DEVICE() {
        return (int)17L;
    }
    public static int ERROR_NO_MORE_FILES() {
        return (int)18L;
    }
    public static int ERROR_WRITE_PROTECT() {
        return (int)19L;
    }
    public static int ERROR_BAD_UNIT() {
        return (int)20L;
    }
    public static int ERROR_NOT_READY() {
        return (int)21L;
    }
    public static int ERROR_BAD_COMMAND() {
        return (int)22L;
    }
    public static int ERROR_CRC() {
        return (int)23L;
    }
    public static int ERROR_BAD_LENGTH() {
        return (int)24L;
    }
    public static int ERROR_SEEK() {
        return (int)25L;
    }
    public static int ERROR_NOT_DOS_DISK() {
        return (int)26L;
    }
    public static int ERROR_SECTOR_NOT_FOUND() {
        return (int)27L;
    }
    public static int ERROR_OUT_OF_PAPER() {
        return (int)28L;
    }
    public static int ERROR_WRITE_FAULT() {
        return (int)29L;
    }
    public static int ERROR_READ_FAULT() {
        return (int)30L;
    }
    public static int ERROR_GEN_FAILURE() {
        return (int)31L;
    }
    public static int ERROR_SHARING_VIOLATION() {
        return (int)32L;
    }
    public static int ERROR_LOCK_VIOLATION() {
        return (int)33L;
    }
    public static int ERROR_WRONG_DISK() {
        return (int)34L;
    }
    public static int ERROR_SHARING_BUFFER_EXCEEDED() {
        return (int)36L;
    }
    public static int ERROR_HANDLE_EOF() {
        return (int)38L;
    }
    public static int ERROR_HANDLE_DISK_FULL() {
        return (int)39L;
    }
    public static int ERROR_NOT_SUPPORTED() {
        return (int)50L;
    }
    public static int ERROR_REM_NOT_LIST() {
        return (int)51L;
    }
    public static int ERROR_DUP_NAME() {
        return (int)52L;
    }
    public static int ERROR_BAD_NETPATH() {
        return (int)53L;
    }
    public static int ERROR_NETWORK_BUSY() {
        return (int)54L;
    }
    public static int ERROR_DEV_NOT_EXIST() {
        return (int)55L;
    }
    public static int ERROR_TOO_MANY_CMDS() {
        return (int)56L;
    }
    public static int ERROR_ADAP_HDW_ERR() {
        return (int)57L;
    }
    public static int ERROR_BAD_NET_RESP() {
        return (int)58L;
    }
    public static int ERROR_UNEXP_NET_ERR() {
        return (int)59L;
    }
    public static int ERROR_BAD_REM_ADAP() {
        return (int)60L;
    }
    public static int ERROR_PRINTQ_FULL() {
        return (int)61L;
    }
    public static int ERROR_NO_SPOOL_SPACE() {
        return (int)62L;
    }
    public static int ERROR_PRINT_CANCELLED() {
        return (int)63L;
    }
    public static int ERROR_NETNAME_DELETED() {
        return (int)64L;
    }
    public static int ERROR_NETWORK_ACCESS_DENIED() {
        return (int)65L;
    }
    public static int ERROR_BAD_DEV_TYPE() {
        return (int)66L;
    }
    public static int ERROR_BAD_NET_NAME() {
        return (int)67L;
    }
    public static int ERROR_TOO_MANY_NAMES() {
        return (int)68L;
    }
    public static int ERROR_TOO_MANY_SESS() {
        return (int)69L;
    }
    public static int ERROR_SHARING_PAUSED() {
        return (int)70L;
    }
    public static int ERROR_REQ_NOT_ACCEP() {
        return (int)71L;
    }
    public static int ERROR_REDIR_PAUSED() {
        return (int)72L;
    }
    public static int ERROR_FILE_EXISTS() {
        return (int)80L;
    }
    public static int ERROR_CANNOT_MAKE() {
        return (int)82L;
    }
    public static int ERROR_FAIL_I24() {
        return (int)83L;
    }
    public static int ERROR_OUT_OF_STRUCTURES() {
        return (int)84L;
    }
    public static int ERROR_ALREADY_ASSIGNED() {
        return (int)85L;
    }
    public static int ERROR_INVALID_PASSWORD() {
        return (int)86L;
    }
    public static int ERROR_INVALID_PARAMETER() {
        return (int)87L;
    }
    public static int ERROR_NET_WRITE_FAULT() {
        return (int)88L;
    }
    public static int ERROR_NO_PROC_SLOTS() {
        return (int)89L;
    }
    public static int ERROR_TOO_MANY_SEMAPHORES() {
        return (int)100L;
    }
    public static int ERROR_EXCL_SEM_ALREADY_OWNED() {
        return (int)101L;
    }
    public static int ERROR_SEM_IS_SET() {
        return (int)102L;
    }
    public static int ERROR_TOO_MANY_SEM_REQUESTS() {
        return (int)103L;
    }
    public static int ERROR_INVALID_AT_INTERRUPT_TIME() {
        return (int)104L;
    }
    public static int ERROR_SEM_OWNER_DIED() {
        return (int)105L;
    }
    public static int ERROR_SEM_USER_LIMIT() {
        return (int)106L;
    }
    public static int ERROR_DISK_CHANGE() {
        return (int)107L;
    }
    public static int ERROR_DRIVE_LOCKED() {
        return (int)108L;
    }
    public static int ERROR_BROKEN_PIPE() {
        return (int)109L;
    }
    public static int ERROR_OPEN_FAILED() {
        return (int)110L;
    }
    public static int ERROR_BUFFER_OVERFLOW() {
        return (int)111L;
    }
    public static int ERROR_DISK_FULL() {
        return (int)112L;
    }
    public static int ERROR_NO_MORE_SEARCH_HANDLES() {
        return (int)113L;
    }
    public static int ERROR_INVALID_TARGET_HANDLE() {
        return (int)114L;
    }
    public static int ERROR_INVALID_CATEGORY() {
        return (int)117L;
    }
    public static int ERROR_INVALID_VERIFY_SWITCH() {
        return (int)118L;
    }
    public static int ERROR_BAD_DRIVER_LEVEL() {
        return (int)119L;
    }
    public static int ERROR_CALL_NOT_IMPLEMENTED() {
        return (int)120L;
    }
    public static int ERROR_SEM_TIMEOUT() {
        return (int)121L;
    }
    public static int ERROR_INSUFFICIENT_BUFFER() {
        return (int)122L;
    }
    public static int ERROR_INVALID_NAME() {
        return (int)123L;
    }
    public static int ERROR_INVALID_LEVEL() {
        return (int)124L;
    }
    public static int ERROR_NO_VOLUME_LABEL() {
        return (int)125L;
    }
    public static int ERROR_MOD_NOT_FOUND() {
        return (int)126L;
    }
    public static int ERROR_PROC_NOT_FOUND() {
        return (int)127L;
    }
    public static int ERROR_WAIT_NO_CHILDREN() {
        return (int)128L;
    }
    public static int ERROR_CHILD_NOT_COMPLETE() {
        return (int)129L;
    }
    public static int ERROR_DIRECT_ACCESS_HANDLE() {
        return (int)130L;
    }
    public static int ERROR_NEGATIVE_SEEK() {
        return (int)131L;
    }
    public static int ERROR_SEEK_ON_DEVICE() {
        return (int)132L;
    }
    public static int ERROR_IS_JOIN_TARGET() {
        return (int)133L;
    }
    public static int ERROR_IS_JOINED() {
        return (int)134L;
    }
    public static int ERROR_IS_SUBSTED() {
        return (int)135L;
    }
    public static int ERROR_NOT_JOINED() {
        return (int)136L;
    }
    public static int ERROR_NOT_SUBSTED() {
        return (int)137L;
    }
    public static int ERROR_JOIN_TO_JOIN() {
        return (int)138L;
    }
    public static int ERROR_SUBST_TO_SUBST() {
        return (int)139L;
    }
    public static int ERROR_JOIN_TO_SUBST() {
        return (int)140L;
    }
    public static int ERROR_SUBST_TO_JOIN() {
        return (int)141L;
    }
    public static int ERROR_BUSY_DRIVE() {
        return (int)142L;
    }
    public static int ERROR_SAME_DRIVE() {
        return (int)143L;
    }
    public static int ERROR_DIR_NOT_ROOT() {
        return (int)144L;
    }
    public static int ERROR_DIR_NOT_EMPTY() {
        return (int)145L;
    }
    public static int ERROR_IS_SUBST_PATH() {
        return (int)146L;
    }
    public static int ERROR_IS_JOIN_PATH() {
        return (int)147L;
    }
    public static int ERROR_PATH_BUSY() {
        return (int)148L;
    }
    public static int ERROR_IS_SUBST_TARGET() {
        return (int)149L;
    }
    public static int ERROR_SYSTEM_TRACE() {
        return (int)150L;
    }
    public static int ERROR_INVALID_EVENT_COUNT() {
        return (int)151L;
    }
    public static int ERROR_TOO_MANY_MUXWAITERS() {
        return (int)152L;
    }
    public static int ERROR_INVALID_LIST_FORMAT() {
        return (int)153L;
    }
    public static int ERROR_LABEL_TOO_LONG() {
        return (int)154L;
    }
    public static int ERROR_TOO_MANY_TCBS() {
        return (int)155L;
    }
    public static int ERROR_SIGNAL_REFUSED() {
        return (int)156L;
    }
    public static int ERROR_DISCARDED() {
        return (int)157L;
    }
    public static int ERROR_NOT_LOCKED() {
        return (int)158L;
    }
    public static int ERROR_BAD_THREADID_ADDR() {
        return (int)159L;
    }
    public static int ERROR_BAD_ARGUMENTS() {
        return (int)160L;
    }
    public static int ERROR_BAD_PATHNAME() {
        return (int)161L;
    }
    public static int ERROR_SIGNAL_PENDING() {
        return (int)162L;
    }
    public static int ERROR_MAX_THRDS_REACHED() {
        return (int)164L;
    }
    public static int ERROR_LOCK_FAILED() {
        return (int)167L;
    }
    public static int ERROR_BUSY() {
        return (int)170L;
    }
    public static int ERROR_CANCEL_VIOLATION() {
        return (int)173L;
    }
    public static int ERROR_ATOMIC_LOCKS_NOT_SUPPORTED() {
        return (int)174L;
    }
    public static int ERROR_INVALID_SEGMENT_NUMBER() {
        return (int)180L;
    }
    public static int ERROR_INVALID_ORDINAL() {
        return (int)182L;
    }
    public static int ERROR_ALREADY_EXISTS() {
        return (int)183L;
    }
    public static int ERROR_INVALID_FLAG_NUMBER() {
        return (int)186L;
    }
    public static int ERROR_SEM_NOT_FOUND() {
        return (int)187L;
    }
    public static int ERROR_INVALID_STARTING_CODESEG() {
        return (int)188L;
    }
    public static int ERROR_INVALID_STACKSEG() {
        return (int)189L;
    }
    public static int ERROR_INVALID_MODULETYPE() {
        return (int)190L;
    }
    public static int ERROR_INVALID_EXE_SIGNATURE() {
        return (int)191L;
    }
    public static int ERROR_EXE_MARKED_INVALID() {
        return (int)192L;
    }
    public static int ERROR_BAD_EXE_FORMAT() {
        return (int)193L;
    }
    public static int ERROR_ITERATED_DATA_EXCEEDS_64k() {
        return (int)194L;
    }
    public static int ERROR_INVALID_MINALLOCSIZE() {
        return (int)195L;
    }
    public static int ERROR_DYNLINK_FROM_INVALID_RING() {
        return (int)196L;
    }
    public static int ERROR_IOPL_NOT_ENABLED() {
        return (int)197L;
    }
    public static int ERROR_INVALID_SEGDPL() {
        return (int)198L;
    }
    public static int ERROR_AUTODATASEG_EXCEEDS_64k() {
        return (int)199L;
    }
    public static int ERROR_RING2SEG_MUST_BE_MOVABLE() {
        return (int)200L;
    }
    public static int ERROR_RELOC_CHAIN_XEEDS_SEGLIM() {
        return (int)201L;
    }
    public static int ERROR_INFLOOP_IN_RELOC_CHAIN() {
        return (int)202L;
    }
    public static int ERROR_ENVVAR_NOT_FOUND() {
        return (int)203L;
    }
    public static int ERROR_NO_SIGNAL_SENT() {
        return (int)205L;
    }
    public static int ERROR_FILENAME_EXCED_RANGE() {
        return (int)206L;
    }
    public static int ERROR_RING2_STACK_IN_USE() {
        return (int)207L;
    }
    public static int ERROR_META_EXPANSION_TOO_LONG() {
        return (int)208L;
    }
    public static int ERROR_INVALID_SIGNAL_NUMBER() {
        return (int)209L;
    }
    public static int ERROR_THREAD_1_INACTIVE() {
        return (int)210L;
    }
    public static int ERROR_LOCKED() {
        return (int)212L;
    }
    public static int ERROR_TOO_MANY_MODULES() {
        return (int)214L;
    }
    public static int ERROR_NESTING_NOT_ALLOWED() {
        return (int)215L;
    }
    public static int ERROR_EXE_MACHINE_TYPE_MISMATCH() {
        return (int)216L;
    }
    public static int ERROR_EXE_CANNOT_MODIFY_SIGNED_BINARY() {
        return (int)217L;
    }
    public static int ERROR_EXE_CANNOT_MODIFY_STRONG_SIGNED_BINARY() {
        return (int)218L;
    }
    public static int ERROR_FILE_CHECKED_OUT() {
        return (int)220L;
    }
    public static int ERROR_CHECKOUT_REQUIRED() {
        return (int)221L;
    }
    public static int ERROR_BAD_FILE_TYPE() {
        return (int)222L;
    }
    public static int ERROR_FILE_TOO_LARGE() {
        return (int)223L;
    }
    public static int ERROR_FORMS_AUTH_REQUIRED() {
        return (int)224L;
    }
    public static int ERROR_PIPE_LOCAL() {
        return (int)229L;
    }
    public static int ERROR_BAD_PIPE() {
        return (int)230L;
    }
    public static int ERROR_PIPE_BUSY() {
        return (int)231L;
    }
    public static int ERROR_NO_DATA() {
        return (int)232L;
    }
    public static int ERROR_PIPE_NOT_CONNECTED() {
        return (int)233L;
    }
    public static int ERROR_MORE_DATA() {
        return (int)234L;
    }
    public static int ERROR_VC_DISCONNECTED() {
        return (int)240L;
    }
    public static int ERROR_INVALID_EA_NAME() {
        return (int)254L;
    }
    public static int ERROR_EA_LIST_INCONSISTENT() {
        return (int)255L;
    }
    public static int WAIT_TIMEOUT() {
        return (int)258L;
    }
    public static int ERROR_NO_MORE_ITEMS() {
        return (int)259L;
    }
    public static int ERROR_CANNOT_COPY() {
        return (int)266L;
    }
    public static int ERROR_DIRECTORY() {
        return (int)267L;
    }
    public static int ERROR_EAS_DIDNT_FIT() {
        return (int)275L;
    }
    public static int ERROR_EA_FILE_CORRUPT() {
        return (int)276L;
    }
    public static int ERROR_EA_TABLE_FULL() {
        return (int)277L;
    }
    public static int ERROR_INVALID_EA_HANDLE() {
        return (int)278L;
    }
    public static int ERROR_EAS_NOT_SUPPORTED() {
        return (int)282L;
    }
    public static int ERROR_NOT_OWNER() {
        return (int)288L;
    }
    public static int ERROR_TOO_MANY_POSTS() {
        return (int)298L;
    }
    public static int ERROR_PARTIAL_COPY() {
        return (int)299L;
    }
    public static int ERROR_OPLOCK_NOT_GRANTED() {
        return (int)300L;
    }
    public static int ERROR_INVALID_OPLOCK_PROTOCOL() {
        return (int)301L;
    }
    public static int ERROR_DISK_TOO_FRAGMENTED() {
        return (int)302L;
    }
    public static int ERROR_DELETE_PENDING() {
        return (int)303L;
    }
    public static int ERROR_INVALID_TOKEN() {
        return (int)315L;
    }
    public static int ERROR_MR_MID_NOT_FOUND() {
        return (int)317L;
    }
    public static int ERROR_SCOPE_NOT_FOUND() {
        return (int)318L;
    }
    public static int ERROR_OBJECT_NOT_EXTERNALLY_BACKED() {
        return (int)342L;
    }
    public static int ERROR_EXTERNAL_BACKING_PROVIDER_UNKNOWN() {
        return (int)343L;
    }
    public static int ERROR_COMPRESSION_NOT_BENEFICIAL() {
        return (int)344L;
    }
    public static int ERROR_INVALID_ADDRESS() {
        return (int)487L;
    }
    public static int ERROR_ARITHMETIC_OVERFLOW() {
        return (int)534L;
    }
    public static int ERROR_PIPE_CONNECTED() {
        return (int)535L;
    }
    public static int ERROR_PIPE_LISTENING() {
        return (int)536L;
    }
    public static int ERROR_WAKE_SYSTEM() {
        return (int)730L;
    }
    public static int ERROR_WAIT_1() {
        return (int)731L;
    }
    public static int ERROR_WAIT_2() {
        return (int)732L;
    }
    public static int ERROR_WAIT_3() {
        return (int)733L;
    }
    public static int ERROR_WAIT_63() {
        return (int)734L;
    }
    public static int ERROR_ABANDONED_WAIT_0() {
        return (int)735L;
    }
    public static int ERROR_ABANDONED_WAIT_63() {
        return (int)736L;
    }
    public static int ERROR_USER_APC() {
        return (int)737L;
    }
    public static int ERROR_KERNEL_APC() {
        return (int)738L;
    }
    public static int ERROR_ALERTED() {
        return (int)739L;
    }
    public static int ERROR_EA_ACCESS_DENIED() {
        return (int)994L;
    }
    public static int ERROR_OPERATION_ABORTED() {
        return (int)995L;
    }
    public static int ERROR_IO_INCOMPLETE() {
        return (int)996L;
    }
    public static int ERROR_IO_PENDING() {
        return (int)997L;
    }
    public static int ERROR_NOACCESS() {
        return (int)998L;
    }
    public static int ERROR_SWAPERROR() {
        return (int)999L;
    }
    public static int ERROR_STACK_OVERFLOW() {
        return (int)1001L;
    }
    public static int ERROR_INVALID_MESSAGE() {
        return (int)1002L;
    }
    public static int ERROR_CAN_NOT_COMPLETE() {
        return (int)1003L;
    }
    public static int ERROR_INVALID_FLAGS() {
        return (int)1004L;
    }
    public static int ERROR_UNRECOGNIZED_VOLUME() {
        return (int)1005L;
    }
    public static int ERROR_FILE_INVALID() {
        return (int)1006L;
    }
    public static int ERROR_FULLSCREEN_MODE() {
        return (int)1007L;
    }
    public static int ERROR_NO_TOKEN() {
        return (int)1008L;
    }
    public static int ERROR_BADDB() {
        return (int)1009L;
    }
    public static int ERROR_BADKEY() {
        return (int)1010L;
    }
    public static int ERROR_CANTOPEN() {
        return (int)1011L;
    }
    public static int ERROR_CANTREAD() {
        return (int)1012L;
    }
    public static int ERROR_CANTWRITE() {
        return (int)1013L;
    }
    public static int ERROR_REGISTRY_RECOVERED() {
        return (int)1014L;
    }
    public static int ERROR_REGISTRY_CORRUPT() {
        return (int)1015L;
    }
    public static int ERROR_REGISTRY_IO_FAILED() {
        return (int)1016L;
    }
    public static int ERROR_NOT_REGISTRY_FILE() {
        return (int)1017L;
    }
    public static int ERROR_KEY_DELETED() {
        return (int)1018L;
    }
    public static int ERROR_NO_LOG_SPACE() {
        return (int)1019L;
    }
    public static int ERROR_KEY_HAS_CHILDREN() {
        return (int)1020L;
    }
    public static int ERROR_CHILD_MUST_BE_VOLATILE() {
        return (int)1021L;
    }
    public static int ERROR_NOTIFY_ENUM_DIR() {
        return (int)1022L;
    }
    public static int ERROR_DEPENDENT_SERVICES_RUNNING() {
        return (int)1051L;
    }
    public static int ERROR_INVALID_SERVICE_CONTROL() {
        return (int)1052L;
    }
    public static int ERROR_SERVICE_REQUEST_TIMEOUT() {
        return (int)1053L;
    }
    public static int ERROR_SERVICE_NO_THREAD() {
        return (int)1054L;
    }
    public static int ERROR_SERVICE_DATABASE_LOCKED() {
        return (int)1055L;
    }
    public static int ERROR_SERVICE_ALREADY_RUNNING() {
        return (int)1056L;
    }
    public static int ERROR_INVALID_SERVICE_ACCOUNT() {
        return (int)1057L;
    }
    public static int ERROR_SERVICE_DISABLED() {
        return (int)1058L;
    }
    public static int ERROR_CIRCULAR_DEPENDENCY() {
        return (int)1059L;
    }
    public static int ERROR_SERVICE_DOES_NOT_EXIST() {
        return (int)1060L;
    }
    public static int ERROR_SERVICE_CANNOT_ACCEPT_CTRL() {
        return (int)1061L;
    }
    public static int ERROR_SERVICE_NOT_ACTIVE() {
        return (int)1062L;
    }
    public static int ERROR_FAILED_SERVICE_CONTROLLER_CONNECT() {
        return (int)1063L;
    }
    public static int ERROR_EXCEPTION_IN_SERVICE() {
        return (int)1064L;
    }
    public static int ERROR_DATABASE_DOES_NOT_EXIST() {
        return (int)1065L;
    }
    public static int ERROR_SERVICE_SPECIFIC_ERROR() {
        return (int)1066L;
    }
    public static int ERROR_PROCESS_ABORTED() {
        return (int)1067L;
    }
    public static int ERROR_SERVICE_DEPENDENCY_FAIL() {
        return (int)1068L;
    }
    public static int ERROR_SERVICE_LOGON_FAILED() {
        return (int)1069L;
    }
    public static int ERROR_SERVICE_START_HANG() {
        return (int)1070L;
    }
    public static int ERROR_INVALID_SERVICE_LOCK() {
        return (int)1071L;
    }
    public static int ERROR_SERVICE_MARKED_FOR_DELETE() {
        return (int)1072L;
    }
    public static int ERROR_SERVICE_EXISTS() {
        return (int)1073L;
    }
    public static int ERROR_ALREADY_RUNNING_LKG() {
        return (int)1074L;
    }
    public static int ERROR_SERVICE_DEPENDENCY_DELETED() {
        return (int)1075L;
    }
    public static int ERROR_BOOT_ALREADY_ACCEPTED() {
        return (int)1076L;
    }
    public static int ERROR_SERVICE_NEVER_STARTED() {
        return (int)1077L;
    }
    public static int ERROR_DUPLICATE_SERVICE_NAME() {
        return (int)1078L;
    }
    public static int ERROR_DIFFERENT_SERVICE_ACCOUNT() {
        return (int)1079L;
    }
    public static int ERROR_CANNOT_DETECT_DRIVER_FAILURE() {
        return (int)1080L;
    }
    public static int ERROR_CANNOT_DETECT_PROCESS_ABORT() {
        return (int)1081L;
    }
    public static int ERROR_NO_RECOVERY_PROGRAM() {
        return (int)1082L;
    }
    public static int ERROR_SERVICE_NOT_IN_EXE() {
        return (int)1083L;
    }
    public static int ERROR_NOT_SAFEBOOT_SERVICE() {
        return (int)1084L;
    }
    public static int ERROR_END_OF_MEDIA() {
        return (int)1100L;
    }
    public static int ERROR_FILEMARK_DETECTED() {
        return (int)1101L;
    }
    public static int ERROR_BEGINNING_OF_MEDIA() {
        return (int)1102L;
    }
    public static int ERROR_SETMARK_DETECTED() {
        return (int)1103L;
    }
    public static int ERROR_NO_DATA_DETECTED() {
        return (int)1104L;
    }
    public static int ERROR_PARTITION_FAILURE() {
        return (int)1105L;
    }
    public static int ERROR_INVALID_BLOCK_LENGTH() {
        return (int)1106L;
    }
    public static int ERROR_DEVICE_NOT_PARTITIONED() {
        return (int)1107L;
    }
    public static int ERROR_UNABLE_TO_LOCK_MEDIA() {
        return (int)1108L;
    }
    public static int ERROR_UNABLE_TO_UNLOAD_MEDIA() {
        return (int)1109L;
    }
    public static int ERROR_MEDIA_CHANGED() {
        return (int)1110L;
    }
    public static int ERROR_BUS_RESET() {
        return (int)1111L;
    }
    public static int ERROR_NO_MEDIA_IN_DRIVE() {
        return (int)1112L;
    }
    public static int ERROR_NO_UNICODE_TRANSLATION() {
        return (int)1113L;
    }
    public static int ERROR_DLL_INIT_FAILED() {
        return (int)1114L;
    }
    public static int ERROR_SHUTDOWN_IN_PROGRESS() {
        return (int)1115L;
    }
    public static int ERROR_NO_SHUTDOWN_IN_PROGRESS() {
        return (int)1116L;
    }
    public static int ERROR_IO_DEVICE() {
        return (int)1117L;
    }
    public static int ERROR_SERIAL_NO_DEVICE() {
        return (int)1118L;
    }
    public static int ERROR_IRQ_BUSY() {
        return (int)1119L;
    }
    public static int ERROR_MORE_WRITES() {
        return (int)1120L;
    }
    public static int ERROR_COUNTER_TIMEOUT() {
        return (int)1121L;
    }
    public static int ERROR_FLOPPY_ID_MARK_NOT_FOUND() {
        return (int)1122L;
    }
    public static int ERROR_FLOPPY_WRONG_CYLINDER() {
        return (int)1123L;
    }
    public static int ERROR_FLOPPY_UNKNOWN_ERROR() {
        return (int)1124L;
    }
    public static int ERROR_FLOPPY_BAD_REGISTERS() {
        return (int)1125L;
    }
    public static int ERROR_DISK_RECALIBRATE_FAILED() {
        return (int)1126L;
    }
    public static int ERROR_DISK_OPERATION_FAILED() {
        return (int)1127L;
    }
    public static int ERROR_DISK_RESET_FAILED() {
        return (int)1128L;
    }
    public static int ERROR_EOM_OVERFLOW() {
        return (int)1129L;
    }
    public static int ERROR_NOT_ENOUGH_SERVER_MEMORY() {
        return (int)1130L;
    }
    public static int ERROR_POSSIBLE_DEADLOCK() {
        return (int)1131L;
    }
    public static int ERROR_MAPPED_ALIGNMENT() {
        return (int)1132L;
    }
    public static int ERROR_SET_POWER_STATE_VETOED() {
        return (int)1140L;
    }
    public static int ERROR_SET_POWER_STATE_FAILED() {
        return (int)1141L;
    }
    public static int ERROR_TOO_MANY_LINKS() {
        return (int)1142L;
    }
    public static int ERROR_OLD_WIN_VERSION() {
        return (int)1150L;
    }
    public static int ERROR_APP_WRONG_OS() {
        return (int)1151L;
    }
    public static int ERROR_SINGLE_INSTANCE_APP() {
        return (int)1152L;
    }
    public static int ERROR_RMODE_APP() {
        return (int)1153L;
    }
    public static int ERROR_INVALID_DLL() {
        return (int)1154L;
    }
    public static int ERROR_NO_ASSOCIATION() {
        return (int)1155L;
    }
    public static int ERROR_DDE_FAIL() {
        return (int)1156L;
    }
    public static int ERROR_DLL_NOT_FOUND() {
        return (int)1157L;
    }
    public static int ERROR_NO_MORE_USER_HANDLES() {
        return (int)1158L;
    }
    public static int ERROR_MESSAGE_SYNC_ONLY() {
        return (int)1159L;
    }
    public static int ERROR_SOURCE_ELEMENT_EMPTY() {
        return (int)1160L;
    }
    public static int ERROR_DESTINATION_ELEMENT_FULL() {
        return (int)1161L;
    }
    public static int ERROR_ILLEGAL_ELEMENT_ADDRESS() {
        return (int)1162L;
    }
    public static int ERROR_MAGAZINE_NOT_PRESENT() {
        return (int)1163L;
    }
    public static int ERROR_DEVICE_REINITIALIZATION_NEEDED() {
        return (int)1164L;
    }
    public static int ERROR_DEVICE_REQUIRES_CLEANING() {
        return (int)1165L;
    }
    public static int ERROR_DEVICE_DOOR_OPEN() {
        return (int)1166L;
    }
    public static int ERROR_DEVICE_NOT_CONNECTED() {
        return (int)1167L;
    }
    public static int ERROR_NOT_FOUND() {
        return (int)1168L;
    }
    public static int ERROR_NO_MATCH() {
        return (int)1169L;
    }
    public static int ERROR_SET_NOT_FOUND() {
        return (int)1170L;
    }
    public static int ERROR_POINT_NOT_FOUND() {
        return (int)1171L;
    }
    public static int ERROR_NO_TRACKING_SERVICE() {
        return (int)1172L;
    }
    public static int ERROR_NO_VOLUME_ID() {
        return (int)1173L;
    }
    public static int ERROR_UNABLE_TO_REMOVE_REPLACED() {
        return (int)1175L;
    }
    public static int ERROR_UNABLE_TO_MOVE_REPLACEMENT() {
        return (int)1176L;
    }
    public static int ERROR_UNABLE_TO_MOVE_REPLACEMENT_2() {
        return (int)1177L;
    }
    public static int ERROR_JOURNAL_DELETE_IN_PROGRESS() {
        return (int)1178L;
    }
    public static int ERROR_JOURNAL_NOT_ACTIVE() {
        return (int)1179L;
    }
    public static int ERROR_POTENTIAL_FILE_FOUND() {
        return (int)1180L;
    }
    public static int ERROR_JOURNAL_ENTRY_DELETED() {
        return (int)1181L;
    }
    public static int ERROR_BAD_DEVICE() {
        return (int)1200L;
    }
    public static int ERROR_CONNECTION_UNAVAIL() {
        return (int)1201L;
    }
    public static int ERROR_DEVICE_ALREADY_REMEMBERED() {
        return (int)1202L;
    }
    public static int ERROR_NO_NET_OR_BAD_PATH() {
        return (int)1203L;
    }
    public static int ERROR_BAD_PROVIDER() {
        return (int)1204L;
    }
    public static int ERROR_CANNOT_OPEN_PROFILE() {
        return (int)1205L;
    }
    public static int ERROR_BAD_PROFILE() {
        return (int)1206L;
    }
    public static int ERROR_NOT_CONTAINER() {
        return (int)1207L;
    }
    public static int ERROR_EXTENDED_ERROR() {
        return (int)1208L;
    }
    public static int ERROR_INVALID_GROUPNAME() {
        return (int)1209L;
    }
    public static int ERROR_INVALID_COMPUTERNAME() {
        return (int)1210L;
    }
    public static int ERROR_INVALID_EVENTNAME() {
        return (int)1211L;
    }
    public static int ERROR_INVALID_DOMAINNAME() {
        return (int)1212L;
    }
    public static int ERROR_INVALID_SERVICENAME() {
        return (int)1213L;
    }
    public static int ERROR_INVALID_NETNAME() {
        return (int)1214L;
    }
    public static int ERROR_INVALID_SHARENAME() {
        return (int)1215L;
    }
    public static int ERROR_INVALID_PASSWORDNAME() {
        return (int)1216L;
    }
    public static int ERROR_INVALID_MESSAGENAME() {
        return (int)1217L;
    }
    public static int ERROR_INVALID_MESSAGEDEST() {
        return (int)1218L;
    }
    public static int ERROR_SESSION_CREDENTIAL_CONFLICT() {
        return (int)1219L;
    }
    public static int ERROR_REMOTE_SESSION_LIMIT_EXCEEDED() {
        return (int)1220L;
    }
    public static int ERROR_DUP_DOMAINNAME() {
        return (int)1221L;
    }
    public static int ERROR_NO_NETWORK() {
        return (int)1222L;
    }
    public static int ERROR_CANCELLED() {
        return (int)1223L;
    }
    public static int ERROR_USER_MAPPED_FILE() {
        return (int)1224L;
    }
    public static int ERROR_CONNECTION_REFUSED() {
        return (int)1225L;
    }
    public static int ERROR_GRACEFUL_DISCONNECT() {
        return (int)1226L;
    }
    public static int ERROR_ADDRESS_ALREADY_ASSOCIATED() {
        return (int)1227L;
    }
    public static int ERROR_ADDRESS_NOT_ASSOCIATED() {
        return (int)1228L;
    }
    public static int ERROR_CONNECTION_INVALID() {
        return (int)1229L;
    }
    public static int ERROR_CONNECTION_ACTIVE() {
        return (int)1230L;
    }
    public static int ERROR_NETWORK_UNREACHABLE() {
        return (int)1231L;
    }
    public static int ERROR_HOST_UNREACHABLE() {
        return (int)1232L;
    }
    public static int ERROR_PROTOCOL_UNREACHABLE() {
        return (int)1233L;
    }
    public static int ERROR_PORT_UNREACHABLE() {
        return (int)1234L;
    }
    public static int ERROR_REQUEST_ABORTED() {
        return (int)1235L;
    }
    public static int ERROR_CONNECTION_ABORTED() {
        return (int)1236L;
    }
    public static int ERROR_RETRY() {
        return (int)1237L;
    }
    public static int ERROR_CONNECTION_COUNT_LIMIT() {
        return (int)1238L;
    }
    public static int ERROR_LOGIN_TIME_RESTRICTION() {
        return (int)1239L;
    }
    public static int ERROR_LOGIN_WKSTA_RESTRICTION() {
        return (int)1240L;
    }
    public static int ERROR_INCORRECT_ADDRESS() {
        return (int)1241L;
    }
    public static int ERROR_ALREADY_REGISTERED() {
        return (int)1242L;
    }
    public static int ERROR_SERVICE_NOT_FOUND() {
        return (int)1243L;
    }
    public static int ERROR_NOT_AUTHENTICATED() {
        return (int)1244L;
    }
    public static int ERROR_NOT_LOGGED_ON() {
        return (int)1245L;
    }
    public static int ERROR_CONTINUE() {
        return (int)1246L;
    }
    public static int ERROR_ALREADY_INITIALIZED() {
        return (int)1247L;
    }
    public static int ERROR_NO_MORE_DEVICES() {
        return (int)1248L;
    }
    public static int ERROR_NO_SUCH_SITE() {
        return (int)1249L;
    }
    public static int ERROR_DOMAIN_CONTROLLER_EXISTS() {
        return (int)1250L;
    }
    public static int ERROR_ONLY_IF_CONNECTED() {
        return (int)1251L;
    }
    public static int ERROR_OVERRIDE_NOCHANGES() {
        return (int)1252L;
    }
    public static int ERROR_BAD_USER_PROFILE() {
        return (int)1253L;
    }
    public static int ERROR_NOT_SUPPORTED_ON_SBS() {
        return (int)1254L;
    }
    public static int ERROR_SERVER_SHUTDOWN_IN_PROGRESS() {
        return (int)1255L;
    }
    public static int ERROR_HOST_DOWN() {
        return (int)1256L;
    }
    public static int ERROR_NON_ACCOUNT_SID() {
        return (int)1257L;
    }
    public static int ERROR_NON_DOMAIN_SID() {
        return (int)1258L;
    }
    public static int ERROR_APPHELP_BLOCK() {
        return (int)1259L;
    }
    public static int ERROR_ACCESS_DISABLED_BY_POLICY() {
        return (int)1260L;
    }
    public static int ERROR_REG_NAT_CONSUMPTION() {
        return (int)1261L;
    }
    public static int ERROR_CSCSHARE_OFFLINE() {
        return (int)1262L;
    }
    public static int ERROR_PKINIT_FAILURE() {
        return (int)1263L;
    }
    public static int ERROR_SMARTCARD_SUBSYSTEM_FAILURE() {
        return (int)1264L;
    }
    public static int ERROR_DOWNGRADE_DETECTED() {
        return (int)1265L;
    }
    public static int ERROR_MACHINE_LOCKED() {
        return (int)1271L;
    }
    public static int ERROR_CALLBACK_SUPPLIED_INVALID_DATA() {
        return (int)1273L;
    }
    public static int ERROR_SYNC_FOREGROUND_REFRESH_REQUIRED() {
        return (int)1274L;
    }
    public static int ERROR_DRIVER_BLOCKED() {
        return (int)1275L;
    }
    public static int ERROR_INVALID_IMPORT_OF_NON_DLL() {
        return (int)1276L;
    }
    public static int ERROR_ACCESS_DISABLED_WEBBLADE() {
        return (int)1277L;
    }
    public static int ERROR_ACCESS_DISABLED_WEBBLADE_TAMPER() {
        return (int)1278L;
    }
    public static int ERROR_RECOVERY_FAILURE() {
        return (int)1279L;
    }
    public static int ERROR_ALREADY_FIBER() {
        return (int)1280L;
    }
    public static int ERROR_ALREADY_THREAD() {
        return (int)1281L;
    }
    public static int ERROR_STACK_BUFFER_OVERRUN() {
        return (int)1282L;
    }
    public static int ERROR_PARAMETER_QUOTA_EXCEEDED() {
        return (int)1283L;
    }
    public static int ERROR_DEBUGGER_INACTIVE() {
        return (int)1284L;
    }
    public static int ERROR_DELAY_LOAD_FAILED() {
        return (int)1285L;
    }
    public static int ERROR_VDM_DISALLOWED() {
        return (int)1286L;
    }
    public static int ERROR_UNIDENTIFIED_ERROR() {
        return (int)1287L;
    }
    public static int ERROR_NOT_ALL_ASSIGNED() {
        return (int)1300L;
    }
    public static int ERROR_SOME_NOT_MAPPED() {
        return (int)1301L;
    }
    public static int ERROR_NO_QUOTAS_FOR_ACCOUNT() {
        return (int)1302L;
    }
    public static int ERROR_LOCAL_USER_SESSION_KEY() {
        return (int)1303L;
    }
    public static int ERROR_NULL_LM_PASSWORD() {
        return (int)1304L;
    }
    public static int ERROR_UNKNOWN_REVISION() {
        return (int)1305L;
    }
    public static int ERROR_REVISION_MISMATCH() {
        return (int)1306L;
    }
    public static int ERROR_INVALID_OWNER() {
        return (int)1307L;
    }
    public static int ERROR_INVALID_PRIMARY_GROUP() {
        return (int)1308L;
    }
    public static int ERROR_NO_IMPERSONATION_TOKEN() {
        return (int)1309L;
    }
    public static int ERROR_CANT_DISABLE_MANDATORY() {
        return (int)1310L;
    }
    public static int ERROR_NO_LOGON_SERVERS() {
        return (int)1311L;
    }
    public static int ERROR_NO_SUCH_LOGON_SESSION() {
        return (int)1312L;
    }
    public static int ERROR_NO_SUCH_PRIVILEGE() {
        return (int)1313L;
    }
    public static int ERROR_PRIVILEGE_NOT_HELD() {
        return (int)1314L;
    }
    public static int ERROR_INVALID_ACCOUNT_NAME() {
        return (int)1315L;
    }
    public static int ERROR_USER_EXISTS() {
        return (int)1316L;
    }
    public static int ERROR_NO_SUCH_USER() {
        return (int)1317L;
    }
    public static int ERROR_GROUP_EXISTS() {
        return (int)1318L;
    }
    public static int ERROR_NO_SUCH_GROUP() {
        return (int)1319L;
    }
    public static int ERROR_MEMBER_IN_GROUP() {
        return (int)1320L;
    }
    public static int ERROR_MEMBER_NOT_IN_GROUP() {
        return (int)1321L;
    }
    public static int ERROR_LAST_ADMIN() {
        return (int)1322L;
    }
    public static int ERROR_WRONG_PASSWORD() {
        return (int)1323L;
    }
    public static int ERROR_ILL_FORMED_PASSWORD() {
        return (int)1324L;
    }
    public static int ERROR_PASSWORD_RESTRICTION() {
        return (int)1325L;
    }
    public static int ERROR_LOGON_FAILURE() {
        return (int)1326L;
    }
    public static int ERROR_ACCOUNT_RESTRICTION() {
        return (int)1327L;
    }
    public static int ERROR_INVALID_LOGON_HOURS() {
        return (int)1328L;
    }
    public static int ERROR_INVALID_WORKSTATION() {
        return (int)1329L;
    }
    public static int ERROR_PASSWORD_EXPIRED() {
        return (int)1330L;
    }
    public static int ERROR_ACCOUNT_DISABLED() {
        return (int)1331L;
    }
    public static int ERROR_NONE_MAPPED() {
        return (int)1332L;
    }
    public static int ERROR_TOO_MANY_LUIDS_REQUESTED() {
        return (int)1333L;
    }
    public static int ERROR_LUIDS_EXHAUSTED() {
        return (int)1334L;
    }
    public static int ERROR_INVALID_SUB_AUTHORITY() {
        return (int)1335L;
    }
    public static int ERROR_INVALID_ACL() {
        return (int)1336L;
    }
    public static int ERROR_INVALID_SID() {
        return (int)1337L;
    }
    public static int ERROR_INVALID_SECURITY_DESCR() {
        return (int)1338L;
    }
    public static int ERROR_BAD_INHERITANCE_ACL() {
        return (int)1340L;
    }
    public static int ERROR_SERVER_DISABLED() {
        return (int)1341L;
    }
    public static int ERROR_SERVER_NOT_DISABLED() {
        return (int)1342L;
    }
    public static int ERROR_INVALID_ID_AUTHORITY() {
        return (int)1343L;
    }
    public static int ERROR_ALLOTTED_SPACE_EXCEEDED() {
        return (int)1344L;
    }
    public static int ERROR_INVALID_GROUP_ATTRIBUTES() {
        return (int)1345L;
    }
    public static int ERROR_BAD_IMPERSONATION_LEVEL() {
        return (int)1346L;
    }
    public static int ERROR_CANT_OPEN_ANONYMOUS() {
        return (int)1347L;
    }
    public static int ERROR_BAD_VALIDATION_CLASS() {
        return (int)1348L;
    }
    public static int ERROR_BAD_TOKEN_TYPE() {
        return (int)1349L;
    }
    public static int ERROR_NO_SECURITY_ON_OBJECT() {
        return (int)1350L;
    }
    public static int ERROR_CANT_ACCESS_DOMAIN_INFO() {
        return (int)1351L;
    }
    public static int ERROR_INVALID_SERVER_STATE() {
        return (int)1352L;
    }
    public static int ERROR_INVALID_DOMAIN_STATE() {
        return (int)1353L;
    }
    public static int ERROR_INVALID_DOMAIN_ROLE() {
        return (int)1354L;
    }
    public static int ERROR_NO_SUCH_DOMAIN() {
        return (int)1355L;
    }
    public static int ERROR_DOMAIN_EXISTS() {
        return (int)1356L;
    }
    public static int ERROR_DOMAIN_LIMIT_EXCEEDED() {
        return (int)1357L;
    }
    public static int ERROR_INTERNAL_DB_CORRUPTION() {
        return (int)1358L;
    }
    public static int ERROR_INTERNAL_ERROR() {
        return (int)1359L;
    }
    public static int ERROR_GENERIC_NOT_MAPPED() {
        return (int)1360L;
    }
    public static int ERROR_BAD_DESCRIPTOR_FORMAT() {
        return (int)1361L;
    }
    public static int ERROR_NOT_LOGON_PROCESS() {
        return (int)1362L;
    }
    public static int ERROR_LOGON_SESSION_EXISTS() {
        return (int)1363L;
    }
    public static int ERROR_NO_SUCH_PACKAGE() {
        return (int)1364L;
    }
    public static int ERROR_BAD_LOGON_SESSION_STATE() {
        return (int)1365L;
    }
    public static int ERROR_LOGON_SESSION_COLLISION() {
        return (int)1366L;
    }
    public static int ERROR_INVALID_LOGON_TYPE() {
        return (int)1367L;
    }
    public static int ERROR_CANNOT_IMPERSONATE() {
        return (int)1368L;
    }
    public static int ERROR_RXACT_INVALID_STATE() {
        return (int)1369L;
    }
    public static int ERROR_RXACT_COMMIT_FAILURE() {
        return (int)1370L;
    }
    public static int ERROR_SPECIAL_ACCOUNT() {
        return (int)1371L;
    }
    public static int ERROR_SPECIAL_GROUP() {
        return (int)1372L;
    }
    public static int ERROR_SPECIAL_USER() {
        return (int)1373L;
    }
    public static int ERROR_MEMBERS_PRIMARY_GROUP() {
        return (int)1374L;
    }
    public static int ERROR_TOKEN_ALREADY_IN_USE() {
        return (int)1375L;
    }
    public static int ERROR_NO_SUCH_ALIAS() {
        return (int)1376L;
    }
    public static int ERROR_MEMBER_NOT_IN_ALIAS() {
        return (int)1377L;
    }
    public static int ERROR_MEMBER_IN_ALIAS() {
        return (int)1378L;
    }
    public static int ERROR_ALIAS_EXISTS() {
        return (int)1379L;
    }
    public static int ERROR_LOGON_NOT_GRANTED() {
        return (int)1380L;
    }
    public static int ERROR_TOO_MANY_SECRETS() {
        return (int)1381L;
    }
    public static int ERROR_SECRET_TOO_LONG() {
        return (int)1382L;
    }
    public static int ERROR_INTERNAL_DB_ERROR() {
        return (int)1383L;
    }
    public static int ERROR_TOO_MANY_CONTEXT_IDS() {
        return (int)1384L;
    }
    public static int ERROR_LOGON_TYPE_NOT_GRANTED() {
        return (int)1385L;
    }
    public static int ERROR_NT_CROSS_ENCRYPTION_REQUIRED() {
        return (int)1386L;
    }
    public static int ERROR_NO_SUCH_MEMBER() {
        return (int)1387L;
    }
    public static int ERROR_INVALID_MEMBER() {
        return (int)1388L;
    }
    public static int ERROR_TOO_MANY_SIDS() {
        return (int)1389L;
    }
    public static int ERROR_LM_CROSS_ENCRYPTION_REQUIRED() {
        return (int)1390L;
    }
    public static int ERROR_NO_INHERITANCE() {
        return (int)1391L;
    }
    public static int ERROR_FILE_CORRUPT() {
        return (int)1392L;
    }
    public static int ERROR_DISK_CORRUPT() {
        return (int)1393L;
    }
    public static int ERROR_NO_USER_SESSION_KEY() {
        return (int)1394L;
    }
    public static int ERROR_LICENSE_QUOTA_EXCEEDED() {
        return (int)1395L;
    }
    public static int ERROR_WRONG_TARGET_NAME() {
        return (int)1396L;
    }
    public static int ERROR_MUTUAL_AUTH_FAILED() {
        return (int)1397L;
    }
    public static int ERROR_TIME_SKEW() {
        return (int)1398L;
    }
    public static int ERROR_CURRENT_DOMAIN_NOT_ALLOWED() {
        return (int)1399L;
    }
    public static int ERROR_INVALID_WINDOW_HANDLE() {
        return (int)1400L;
    }
    public static int ERROR_INVALID_MENU_HANDLE() {
        return (int)1401L;
    }
    public static int ERROR_INVALID_CURSOR_HANDLE() {
        return (int)1402L;
    }
    public static int ERROR_INVALID_ACCEL_HANDLE() {
        return (int)1403L;
    }
    public static int ERROR_INVALID_HOOK_HANDLE() {
        return (int)1404L;
    }
    public static int ERROR_INVALID_DWP_HANDLE() {
        return (int)1405L;
    }
    public static int ERROR_TLW_WITH_WSCHILD() {
        return (int)1406L;
    }
    public static int ERROR_CANNOT_FIND_WND_CLASS() {
        return (int)1407L;
    }
    public static int ERROR_WINDOW_OF_OTHER_THREAD() {
        return (int)1408L;
    }
    public static int ERROR_HOTKEY_ALREADY_REGISTERED() {
        return (int)1409L;
    }
    public static int ERROR_CLASS_ALREADY_EXISTS() {
        return (int)1410L;
    }
    public static int ERROR_CLASS_DOES_NOT_EXIST() {
        return (int)1411L;
    }
    public static int ERROR_CLASS_HAS_WINDOWS() {
        return (int)1412L;
    }
    public static int ERROR_INVALID_INDEX() {
        return (int)1413L;
    }
    public static int ERROR_INVALID_ICON_HANDLE() {
        return (int)1414L;
    }
    public static int ERROR_PRIVATE_DIALOG_INDEX() {
        return (int)1415L;
    }
    public static int ERROR_LISTBOX_ID_NOT_FOUND() {
        return (int)1416L;
    }
    public static int ERROR_NO_WILDCARD_CHARACTERS() {
        return (int)1417L;
    }
    public static int ERROR_CLIPBOARD_NOT_OPEN() {
        return (int)1418L;
    }
    public static int ERROR_HOTKEY_NOT_REGISTERED() {
        return (int)1419L;
    }
    public static int ERROR_WINDOW_NOT_DIALOG() {
        return (int)1420L;
    }
    public static int ERROR_CONTROL_ID_NOT_FOUND() {
        return (int)1421L;
    }
    public static int ERROR_INVALID_COMBOBOX_MESSAGE() {
        return (int)1422L;
    }
    public static int ERROR_WINDOW_NOT_COMBOBOX() {
        return (int)1423L;
    }
    public static int ERROR_INVALID_EDIT_HEIGHT() {
        return (int)1424L;
    }
    public static int ERROR_DC_NOT_FOUND() {
        return (int)1425L;
    }
    public static int ERROR_INVALID_HOOK_FILTER() {
        return (int)1426L;
    }
    public static int ERROR_INVALID_FILTER_PROC() {
        return (int)1427L;
    }
    public static int ERROR_HOOK_NEEDS_HMOD() {
        return (int)1428L;
    }
    public static int ERROR_GLOBAL_ONLY_HOOK() {
        return (int)1429L;
    }
    public static int ERROR_JOURNAL_HOOK_SET() {
        return (int)1430L;
    }
    public static int ERROR_HOOK_NOT_INSTALLED() {
        return (int)1431L;
    }
    public static int ERROR_INVALID_LB_MESSAGE() {
        return (int)1432L;
    }
    public static int ERROR_SETCOUNT_ON_BAD_LB() {
        return (int)1433L;
    }
    public static int ERROR_LB_WITHOUT_TABSTOPS() {
        return (int)1434L;
    }
    public static int ERROR_DESTROY_OBJECT_OF_OTHER_THREAD() {
        return (int)1435L;
    }
    public static int ERROR_CHILD_WINDOW_MENU() {
        return (int)1436L;
    }
    public static int ERROR_NO_SYSTEM_MENU() {
        return (int)1437L;
    }
    public static int ERROR_INVALID_MSGBOX_STYLE() {
        return (int)1438L;
    }
    public static int ERROR_INVALID_SPI_VALUE() {
        return (int)1439L;
    }
    public static int ERROR_SCREEN_ALREADY_LOCKED() {
        return (int)1440L;
    }
    public static int ERROR_HWNDS_HAVE_DIFF_PARENT() {
        return (int)1441L;
    }
    public static int ERROR_NOT_CHILD_WINDOW() {
        return (int)1442L;
    }
    public static int ERROR_INVALID_GW_COMMAND() {
        return (int)1443L;
    }
    public static int ERROR_INVALID_THREAD_ID() {
        return (int)1444L;
    }
    public static int ERROR_NON_MDICHILD_WINDOW() {
        return (int)1445L;
    }
    public static int ERROR_POPUP_ALREADY_ACTIVE() {
        return (int)1446L;
    }
    public static int ERROR_NO_SCROLLBARS() {
        return (int)1447L;
    }
    public static int ERROR_INVALID_SCROLLBAR_RANGE() {
        return (int)1448L;
    }
    public static int ERROR_INVALID_SHOWWIN_COMMAND() {
        return (int)1449L;
    }
    public static int ERROR_NO_SYSTEM_RESOURCES() {
        return (int)1450L;
    }
    public static int ERROR_NONPAGED_SYSTEM_RESOURCES() {
        return (int)1451L;
    }
    public static int ERROR_PAGED_SYSTEM_RESOURCES() {
        return (int)1452L;
    }
    public static int ERROR_WORKING_SET_QUOTA() {
        return (int)1453L;
    }
    public static int ERROR_PAGEFILE_QUOTA() {
        return (int)1454L;
    }
    public static int ERROR_COMMITMENT_LIMIT() {
        return (int)1455L;
    }
    public static int ERROR_MENU_ITEM_NOT_FOUND() {
        return (int)1456L;
    }
    public static int ERROR_INVALID_KEYBOARD_HANDLE() {
        return (int)1457L;
    }
    public static int ERROR_HOOK_TYPE_NOT_ALLOWED() {
        return (int)1458L;
    }
    public static int ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION() {
        return (int)1459L;
    }
    public static int ERROR_TIMEOUT() {
        return (int)1460L;
    }
    public static int ERROR_INVALID_MONITOR_HANDLE() {
        return (int)1461L;
    }
    public static int ERROR_INCORRECT_SIZE() {
        return (int)1462L;
    }
    public static int ERROR_SYMLINK_CLASS_DISABLED() {
        return (int)1463L;
    }
    public static int ERROR_SYMLINK_NOT_SUPPORTED() {
        return (int)1464L;
    }
    public static int ERROR_XML_PARSE_ERROR() {
        return (int)1465L;
    }
    public static int ERROR_XMLDSIG_ERROR() {
        return (int)1466L;
    }
    public static int ERROR_RESTART_APPLICATION() {
        return (int)1467L;
    }
    public static int ERROR_WRONG_COMPARTMENT() {
        return (int)1468L;
    }
    public static int ERROR_AUTHIP_FAILURE() {
        return (int)1469L;
    }
    public static int ERROR_NO_NVRAM_RESOURCES() {
        return (int)1470L;
    }
    public static int ERROR_NOT_GUI_PROCESS() {
        return (int)1471L;
    }
    public static int ERROR_EVENTLOG_FILE_CORRUPT() {
        return (int)1500L;
    }
    public static int ERROR_EVENTLOG_CANT_START() {
        return (int)1501L;
    }
    public static int ERROR_LOG_FILE_FULL() {
        return (int)1502L;
    }
    public static int ERROR_EVENTLOG_FILE_CHANGED() {
        return (int)1503L;
    }
    public static int ERROR_INSTALL_SERVICE_FAILURE() {
        return (int)1601L;
    }
    public static int ERROR_INSTALL_USEREXIT() {
        return (int)1602L;
    }
    public static int ERROR_INSTALL_FAILURE() {
        return (int)1603L;
    }
    public static int ERROR_INSTALL_SUSPEND() {
        return (int)1604L;
    }
    public static int ERROR_UNKNOWN_PRODUCT() {
        return (int)1605L;
    }
    public static int ERROR_UNKNOWN_FEATURE() {
        return (int)1606L;
    }
    public static int ERROR_UNKNOWN_COMPONENT() {
        return (int)1607L;
    }
    public static int ERROR_UNKNOWN_PROPERTY() {
        return (int)1608L;
    }
    public static int ERROR_INVALID_HANDLE_STATE() {
        return (int)1609L;
    }
    public static int ERROR_BAD_CONFIGURATION() {
        return (int)1610L;
    }
    public static int ERROR_INDEX_ABSENT() {
        return (int)1611L;
    }
    public static int ERROR_INSTALL_SOURCE_ABSENT() {
        return (int)1612L;
    }
    public static int ERROR_INSTALL_PACKAGE_VERSION() {
        return (int)1613L;
    }
    public static int ERROR_PRODUCT_UNINSTALLED() {
        return (int)1614L;
    }
    public static int ERROR_BAD_QUERY_SYNTAX() {
        return (int)1615L;
    }
    public static int ERROR_INVALID_FIELD() {
        return (int)1616L;
    }
    public static int ERROR_DEVICE_REMOVED() {
        return (int)1617L;
    }
    public static int ERROR_INSTALL_ALREADY_RUNNING() {
        return (int)1618L;
    }
    public static int ERROR_INSTALL_PACKAGE_OPEN_FAILED() {
        return (int)1619L;
    }
    public static int ERROR_INSTALL_PACKAGE_INVALID() {
        return (int)1620L;
    }
    public static int ERROR_INSTALL_UI_FAILURE() {
        return (int)1621L;
    }
    public static int ERROR_INSTALL_LOG_FAILURE() {
        return (int)1622L;
    }
    public static int ERROR_INSTALL_LANGUAGE_UNSUPPORTED() {
        return (int)1623L;
    }
    public static int ERROR_INSTALL_TRANSFORM_FAILURE() {
        return (int)1624L;
    }
    public static int ERROR_INSTALL_PACKAGE_REJECTED() {
        return (int)1625L;
    }
    public static int ERROR_FUNCTION_NOT_CALLED() {
        return (int)1626L;
    }
    public static int ERROR_FUNCTION_FAILED() {
        return (int)1627L;
    }
    public static int ERROR_INVALID_TABLE() {
        return (int)1628L;
    }
    public static int ERROR_DATATYPE_MISMATCH() {
        return (int)1629L;
    }
    public static int ERROR_UNSUPPORTED_TYPE() {
        return (int)1630L;
    }
    public static int ERROR_CREATE_FAILED() {
        return (int)1631L;
    }
    public static int ERROR_INSTALL_TEMP_UNWRITABLE() {
        return (int)1632L;
    }
    public static int ERROR_INSTALL_PLATFORM_UNSUPPORTED() {
        return (int)1633L;
    }
    public static int ERROR_INSTALL_NOTUSED() {
        return (int)1634L;
    }
    public static int ERROR_PATCH_PACKAGE_OPEN_FAILED() {
        return (int)1635L;
    }
    public static int ERROR_PATCH_PACKAGE_INVALID() {
        return (int)1636L;
    }
    public static int ERROR_PATCH_PACKAGE_UNSUPPORTED() {
        return (int)1637L;
    }
    public static int ERROR_PRODUCT_VERSION() {
        return (int)1638L;
    }
    public static int ERROR_INVALID_COMMAND_LINE() {
        return (int)1639L;
    }
    public static int ERROR_INSTALL_REMOTE_DISALLOWED() {
        return (int)1640L;
    }
    public static int ERROR_SUCCESS_REBOOT_INITIATED() {
        return (int)1641L;
    }
    public static int ERROR_PATCH_TARGET_NOT_FOUND() {
        return (int)1642L;
    }
    public static int ERROR_PATCH_PACKAGE_REJECTED() {
        return (int)1643L;
    }
    public static int ERROR_INSTALL_TRANSFORM_REJECTED() {
        return (int)1644L;
    }
    public static int ERROR_INSTALL_REMOTE_PROHIBITED() {
        return (int)1645L;
    }
    public static int RPC_S_INVALID_STRING_BINDING() {
        return (int)1700L;
    }
    public static int RPC_S_WRONG_KIND_OF_BINDING() {
        return (int)1701L;
    }
    public static int RPC_S_INVALID_BINDING() {
        return (int)1702L;
    }
    public static int RPC_S_PROTSEQ_NOT_SUPPORTED() {
        return (int)1703L;
    }
    public static int RPC_S_INVALID_RPC_PROTSEQ() {
        return (int)1704L;
    }
    public static int RPC_S_INVALID_STRING_UUID() {
        return (int)1705L;
    }
    public static int RPC_S_INVALID_ENDPOINT_FORMAT() {
        return (int)1706L;
    }
    public static int RPC_S_INVALID_NET_ADDR() {
        return (int)1707L;
    }
    public static int RPC_S_NO_ENDPOINT_FOUND() {
        return (int)1708L;
    }
    public static int RPC_S_INVALID_TIMEOUT() {
        return (int)1709L;
    }
    public static int RPC_S_OBJECT_NOT_FOUND() {
        return (int)1710L;
    }
    public static int RPC_S_ALREADY_REGISTERED() {
        return (int)1711L;
    }
    public static int RPC_S_TYPE_ALREADY_REGISTERED() {
        return (int)1712L;
    }
    public static int RPC_S_ALREADY_LISTENING() {
        return (int)1713L;
    }
    public static int RPC_S_NO_PROTSEQS_REGISTERED() {
        return (int)1714L;
    }
    public static int RPC_S_NOT_LISTENING() {
        return (int)1715L;
    }
    public static int RPC_S_UNKNOWN_MGR_TYPE() {
        return (int)1716L;
    }
    public static int RPC_S_UNKNOWN_IF() {
        return (int)1717L;
    }
    public static int RPC_S_NO_BINDINGS() {
        return (int)1718L;
    }
    public static int RPC_S_NO_PROTSEQS() {
        return (int)1719L;
    }
    public static int RPC_S_CANT_CREATE_ENDPOINT() {
        return (int)1720L;
    }
    public static int RPC_S_OUT_OF_RESOURCES() {
        return (int)1721L;
    }
    public static int RPC_S_SERVER_UNAVAILABLE() {
        return (int)1722L;
    }
    public static int RPC_S_SERVER_TOO_BUSY() {
        return (int)1723L;
    }
    public static int RPC_S_INVALID_NETWORK_OPTIONS() {
        return (int)1724L;
    }
    public static int RPC_S_NO_CALL_ACTIVE() {
        return (int)1725L;
    }
    public static int RPC_S_CALL_FAILED() {
        return (int)1726L;
    }
    public static int RPC_S_CALL_FAILED_DNE() {
        return (int)1727L;
    }
    public static int RPC_S_PROTOCOL_ERROR() {
        return (int)1728L;
    }
}


