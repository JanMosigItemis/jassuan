// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$517 {

    static final FunctionDescriptor SetTextColor$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle SetTextColor$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetTextColor",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$517.SetTextColor$FUNC, false
    );
    static final FunctionDescriptor SetTextAlign$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle SetTextAlign$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetTextAlign",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$517.SetTextAlign$FUNC, false
    );
    static final FunctionDescriptor SetTextJustification$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle SetTextJustification$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetTextJustification",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$517.SetTextJustification$FUNC, false
    );
    static final FunctionDescriptor UpdateColors$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle UpdateColors$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "UpdateColors",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$517.UpdateColors$FUNC, false
    );
    static final FunctionDescriptor AlphaBlend$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        MemoryLayout.structLayout(
            C_CHAR.withName("BlendOp"),
            C_CHAR.withName("BlendFlags"),
            C_CHAR.withName("SourceConstantAlpha"),
            C_CHAR.withName("AlphaFormat")
        ).withName("_BLENDFUNCTION")
    );
    static final MethodHandle AlphaBlend$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AlphaBlend",
        "(Ljdk/incubator/foreign/MemoryAddress;IIIILjdk/incubator/foreign/MemoryAddress;IIIILjdk/incubator/foreign/MemorySegment;)I",
        constants$517.AlphaBlend$FUNC, false
    );
    static final FunctionDescriptor GdiAlphaBlend$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT,
        MemoryLayout.structLayout(
            C_CHAR.withName("BlendOp"),
            C_CHAR.withName("BlendFlags"),
            C_CHAR.withName("SourceConstantAlpha"),
            C_CHAR.withName("AlphaFormat")
        ).withName("_BLENDFUNCTION")
    );
    static final MethodHandle GdiAlphaBlend$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GdiAlphaBlend",
        "(Ljdk/incubator/foreign/MemoryAddress;IIIILjdk/incubator/foreign/MemoryAddress;IIIILjdk/incubator/foreign/MemorySegment;)I",
        constants$517.GdiAlphaBlend$FUNC, false
    );
}


