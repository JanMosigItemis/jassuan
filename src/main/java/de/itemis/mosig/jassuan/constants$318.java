// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$318 {

    static final FunctionDescriptor LockResource$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle LockResource$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LockResource",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$318.LockResource$FUNC, false
    );
    static final FunctionDescriptor SizeofResource$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SizeofResource$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SizeofResource",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$318.SizeofResource$FUNC, false
    );
    static final FunctionDescriptor AddDllDirectory$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle AddDllDirectory$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddDllDirectory",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$318.AddDllDirectory$FUNC, false
    );
    static final FunctionDescriptor RemoveDllDirectory$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle RemoveDllDirectory$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RemoveDllDirectory",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$318.RemoveDllDirectory$FUNC, false
    );
    static final FunctionDescriptor SetDefaultDllDirectories$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final MethodHandle SetDefaultDllDirectories$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetDefaultDllDirectories",
        "(I)I",
        constants$318.SetDefaultDllDirectories$FUNC, false
    );
    static final FunctionDescriptor GetModuleHandleExA$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetModuleHandleExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetModuleHandleExA",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$318.GetModuleHandleExA$FUNC, false
    );
}


