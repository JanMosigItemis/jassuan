// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$350 {

    static final FunctionDescriptor AddAuditAccessAce$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle AddAuditAccessAce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAuditAccessAce",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;II)I",
        constants$350.AddAuditAccessAce$FUNC, false
    );
    static final FunctionDescriptor AddAuditAccessAceEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle AddAuditAccessAceEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAuditAccessAceEx",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;II)I",
        constants$350.AddAuditAccessAceEx$FUNC, false
    );
    static final FunctionDescriptor AddAuditAccessObjectAce$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle AddAuditAccessObjectAce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAuditAccessObjectAce",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$350.AddAuditAccessObjectAce$FUNC, false
    );
    static final FunctionDescriptor AreAllAccessesGranted$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_LONG
    );
    static final MethodHandle AreAllAccessesGranted$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AreAllAccessesGranted",
        "(II)I",
        constants$350.AreAllAccessesGranted$FUNC, false
    );
    static final FunctionDescriptor AreAnyAccessesGranted$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_LONG
    );
    static final MethodHandle AreAnyAccessesGranted$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AreAnyAccessesGranted",
        "(II)I",
        constants$350.AreAnyAccessesGranted$FUNC, false
    );
    static final FunctionDescriptor ConvertToAutoInheritPrivateObjectSecurity$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_CHAR,
        C_POINTER
    );
    static final MethodHandle ConvertToAutoInheritPrivateObjectSecurity$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ConvertToAutoInheritPrivateObjectSecurity",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;BLjdk/incubator/foreign/MemoryAddress;)I",
        constants$350.ConvertToAutoInheritPrivateObjectSecurity$FUNC, false
    );
}


