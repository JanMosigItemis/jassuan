// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$380 {

    static final FunctionDescriptor CreateThreadpool$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle CreateThreadpool$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateThreadpool",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$380.CreateThreadpool$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolThreadMaximum$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final MethodHandle SetThreadpoolThreadMaximum$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetThreadpoolThreadMaximum",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$380.SetThreadpoolThreadMaximum$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolThreadMinimum$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle SetThreadpoolThreadMinimum$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetThreadpoolThreadMinimum",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$380.SetThreadpoolThreadMinimum$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolStackInformation$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetThreadpoolStackInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetThreadpoolStackInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$380.SetThreadpoolStackInformation$FUNC, false
    );
    static final FunctionDescriptor QueryThreadpoolStackInformation$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle QueryThreadpoolStackInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryThreadpoolStackInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$380.QueryThreadpoolStackInformation$FUNC, false
    );
    static final FunctionDescriptor CloseThreadpool$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle CloseThreadpool$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CloseThreadpool",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$380.CloseThreadpool$FUNC, false
    );
}


