// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1061 {

    static final FunctionDescriptor HGLOBAL_UserMarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HGLOBAL_UserMarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HGLOBAL_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1061.HGLOBAL_UserMarshal$FUNC, false
    );
    static final FunctionDescriptor HGLOBAL_UserUnmarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HGLOBAL_UserUnmarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HGLOBAL_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1061.HGLOBAL_UserUnmarshal$FUNC, false
    );
    static final FunctionDescriptor HGLOBAL_UserFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HGLOBAL_UserFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HGLOBAL_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1061.HGLOBAL_UserFree$FUNC, false
    );
    static final FunctionDescriptor HACCEL_UserSize$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle HACCEL_UserSize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HACCEL_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1061.HACCEL_UserSize$FUNC, false
    );
    static final FunctionDescriptor HACCEL_UserMarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HACCEL_UserMarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HACCEL_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1061.HACCEL_UserMarshal$FUNC, false
    );
    static final FunctionDescriptor HACCEL_UserUnmarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HACCEL_UserUnmarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HACCEL_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1061.HACCEL_UserUnmarshal$FUNC, false
    );
}


