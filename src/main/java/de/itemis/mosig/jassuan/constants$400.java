// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$400 {

    static final FunctionDescriptor CreateFiber$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CreateFiber$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateFiber",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$400.CreateFiber$FUNC, false
    );
    static final FunctionDescriptor ConvertThreadToFiber$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle ConvertThreadToFiber$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ConvertThreadToFiber",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$400.ConvertThreadToFiber$FUNC, false
    );
    static final FunctionDescriptor SetProcessDEPPolicy$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG
    );
    static final MethodHandle SetProcessDEPPolicy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetProcessDEPPolicy",
        "(I)I",
        constants$400.SetProcessDEPPolicy$FUNC, false
    );
    static final FunctionDescriptor GetProcessDEPPolicy$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetProcessDEPPolicy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetProcessDEPPolicy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$400.GetProcessDEPPolicy$FUNC, false
    );
    static final FunctionDescriptor RequestWakeupLatency$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle RequestWakeupLatency$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RequestWakeupLatency",
        "(I)I",
        constants$400.RequestWakeupLatency$FUNC, false
    );
    static final FunctionDescriptor IsSystemResumeAutomatic$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle IsSystemResumeAutomatic$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsSystemResumeAutomatic",
        "()I",
        constants$400.IsSystemResumeAutomatic$FUNC, false
    );
}


