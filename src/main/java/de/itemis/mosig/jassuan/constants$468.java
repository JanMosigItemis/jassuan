// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$468 {

    static final FunctionDescriptor AddRefActCtx$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle AddRefActCtx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddRefActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$468.AddRefActCtx$FUNC, false
    );
    static final FunctionDescriptor ReleaseActCtx$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle ReleaseActCtx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReleaseActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$468.ReleaseActCtx$FUNC, false
    );
    static final FunctionDescriptor ZombifyActCtx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ZombifyActCtx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ZombifyActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$468.ZombifyActCtx$FUNC, false
    );
    static final FunctionDescriptor ActivateActCtx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle ActivateActCtx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ActivateActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$468.ActivateActCtx$FUNC, false
    );
    static final FunctionDescriptor DeactivateActCtx$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_LONG_LONG
    );
    static final MethodHandle DeactivateActCtx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DeactivateActCtx",
        "(IJ)I",
        constants$468.DeactivateActCtx$FUNC, false
    );
    static final FunctionDescriptor GetCurrentActCtx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle GetCurrentActCtx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCurrentActCtx",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$468.GetCurrentActCtx$FUNC, false
    );
}


