// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class _TRANSACTION_PROPERTIES_INFORMATION {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("IsolationLevel"),
        C_LONG.withName("IsolationFlags"),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("$anon$0"),
            MemoryLayout.structLayout(
                C_LONG.withName("LowPart"),
                C_LONG.withName("HighPart")
            ).withName("u"),
            C_LONG_LONG.withName("QuadPart")
        ).withName("Timeout"),
        C_LONG.withName("Outcome"),
        C_LONG.withName("DescriptionLength"),
        MemoryLayout.sequenceLayout(1, C_SHORT).withName("Description"),
        MemoryLayout.paddingLayout(48)
    ).withName("_TRANSACTION_PROPERTIES_INFORMATION");
    public static MemoryLayout $LAYOUT() {
        return _TRANSACTION_PROPERTIES_INFORMATION.$struct$LAYOUT;
    }
    static final VarHandle IsolationLevel$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationLevel"));
    public static VarHandle IsolationLevel$VH() {
        return _TRANSACTION_PROPERTIES_INFORMATION.IsolationLevel$VH;
    }
    public static int IsolationLevel$get(MemorySegment seg) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.IsolationLevel$VH.get(seg);
    }
    public static void IsolationLevel$set( MemorySegment seg, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.IsolationLevel$VH.set(seg, x);
    }
    public static int IsolationLevel$get(MemorySegment seg, long index) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.IsolationLevel$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void IsolationLevel$set(MemorySegment seg, long index, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.IsolationLevel$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle IsolationFlags$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("IsolationFlags"));
    public static VarHandle IsolationFlags$VH() {
        return _TRANSACTION_PROPERTIES_INFORMATION.IsolationFlags$VH;
    }
    public static int IsolationFlags$get(MemorySegment seg) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.IsolationFlags$VH.get(seg);
    }
    public static void IsolationFlags$set( MemorySegment seg, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.IsolationFlags$VH.set(seg, x);
    }
    public static int IsolationFlags$get(MemorySegment seg, long index) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.IsolationFlags$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void IsolationFlags$set(MemorySegment seg, long index, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.IsolationFlags$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Timeout$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    static final VarHandle Outcome$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("Outcome"));
    public static VarHandle Outcome$VH() {
        return _TRANSACTION_PROPERTIES_INFORMATION.Outcome$VH;
    }
    public static int Outcome$get(MemorySegment seg) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.Outcome$VH.get(seg);
    }
    public static void Outcome$set( MemorySegment seg, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.Outcome$VH.set(seg, x);
    }
    public static int Outcome$get(MemorySegment seg, long index) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.Outcome$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void Outcome$set(MemorySegment seg, long index, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.Outcome$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle DescriptionLength$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("DescriptionLength"));
    public static VarHandle DescriptionLength$VH() {
        return _TRANSACTION_PROPERTIES_INFORMATION.DescriptionLength$VH;
    }
    public static int DescriptionLength$get(MemorySegment seg) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.DescriptionLength$VH.get(seg);
    }
    public static void DescriptionLength$set( MemorySegment seg, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.DescriptionLength$VH.set(seg, x);
    }
    public static int DescriptionLength$get(MemorySegment seg, long index) {
        return (int)_TRANSACTION_PROPERTIES_INFORMATION.DescriptionLength$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void DescriptionLength$set(MemorySegment seg, long index, int x) {
        _TRANSACTION_PROPERTIES_INFORMATION.DescriptionLength$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static MemorySegment Description$slice(MemorySegment seg) {
        return seg.asSlice(24, 2);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


