// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$749 {

    static final FunctionDescriptor waveOutPause$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveOutPause$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutPause",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$749.waveOutPause$FUNC, false
    );
    static final FunctionDescriptor waveOutRestart$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveOutRestart$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutRestart",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$749.waveOutRestart$FUNC, false
    );
    static final FunctionDescriptor waveOutReset$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveOutReset$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutReset",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$749.waveOutReset$FUNC, false
    );
    static final FunctionDescriptor waveOutBreakLoop$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle waveOutBreakLoop$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutBreakLoop",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$749.waveOutBreakLoop$FUNC, false
    );
    static final FunctionDescriptor waveOutGetPosition$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutGetPosition$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetPosition",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$749.waveOutGetPosition$FUNC, false
    );
    static final FunctionDescriptor waveOutGetPitch$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle waveOutGetPitch$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetPitch",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$749.waveOutGetPitch$FUNC, false
    );
}


