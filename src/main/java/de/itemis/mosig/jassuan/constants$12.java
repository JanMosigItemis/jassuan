// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$12 {

    static final FunctionDescriptor _ftelli64$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle _ftelli64$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_ftelli64",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$12._ftelli64$FUNC, false
    );
    static final FunctionDescriptor fseeko64$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_INT
    );
    static final MethodHandle fseeko64$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fseeko64",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$12.fseeko64$FUNC, false
    );
    static final FunctionDescriptor fseeko$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle fseeko$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fseeko",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$12.fseeko$FUNC, false
    );
    static final FunctionDescriptor ftello$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle ftello$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ftello",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$12.ftello$FUNC, false
    );
    static final FunctionDescriptor ftello64$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle ftello64$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ftello64",
        "(Ljdk/incubator/foreign/MemoryAddress;)J",
        constants$12.ftello64$FUNC, false
    );
    static final FunctionDescriptor fwrite$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle fwrite$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fwrite",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;)J",
        constants$12.fwrite$FUNC, false
    );
}


