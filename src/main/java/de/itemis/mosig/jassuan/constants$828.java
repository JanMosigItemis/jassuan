// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$828 {

    static final FunctionDescriptor RpcDiagnoseError$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RpcDiagnoseError$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcDiagnoseError",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$828.RpcDiagnoseError$FUNC, false
    );
    static final FunctionDescriptor DragQueryFileA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle DragQueryFileA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DragQueryFileA",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$828.DragQueryFileA$FUNC, false
    );
    static final FunctionDescriptor DragQueryFileW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle DragQueryFileW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DragQueryFileW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$828.DragQueryFileW$FUNC, false
    );
    static final FunctionDescriptor DragQueryPoint$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle DragQueryPoint$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DragQueryPoint",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$828.DragQueryPoint$FUNC, false
    );
    static final FunctionDescriptor DragFinish$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle DragFinish$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DragFinish",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$828.DragFinish$FUNC, false
    );
    static final FunctionDescriptor DragAcceptFiles$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle DragAcceptFiles$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DragAcceptFiles",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$828.DragAcceptFiles$FUNC, false
    );
}


