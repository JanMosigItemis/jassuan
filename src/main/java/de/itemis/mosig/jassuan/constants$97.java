// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$97 {

    static final FunctionDescriptor _register_onexit_function$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle _register_onexit_function$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_register_onexit_function",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$97._register_onexit_function$FUNC, false
    );
    static final FunctionDescriptor _execute_onexit_table$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _execute_onexit_table$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_execute_onexit_table",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$97._execute_onexit_table$FUNC, false
    );
    static final FunctionDescriptor _crt_atexit$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _crt_atexit$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_crt_atexit",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$97._crt_atexit$FUNC, false
    );
    static final FunctionDescriptor _crt_at_quick_exit$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _crt_at_quick_exit$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_crt_at_quick_exit",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$97._crt_at_quick_exit$FUNC, false
    );
    static final FunctionDescriptor _beginthread_proc_type$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle _beginthread_proc_type$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$97._beginthread_proc_type$FUNC, false
    );
}


