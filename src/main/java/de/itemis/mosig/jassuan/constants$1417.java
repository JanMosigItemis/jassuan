// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1417 {

    static final FunctionDescriptor assuan_register_command$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle assuan_register_command$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "assuan_register_command",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1417.assuan_register_command$FUNC, false
    );
    static final FunctionDescriptor assuan_register_pre_cmd_notify$fnc$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle assuan_register_pre_cmd_notify$fnc$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1417.assuan_register_pre_cmd_notify$fnc$FUNC, false
    );
    static final FunctionDescriptor assuan_register_pre_cmd_notify$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle assuan_register_pre_cmd_notify$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "assuan_register_pre_cmd_notify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1417.assuan_register_pre_cmd_notify$FUNC, false
    );
    static final FunctionDescriptor assuan_register_post_cmd_notify$fnc$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle assuan_register_post_cmd_notify$fnc$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$1417.assuan_register_post_cmd_notify$fnc$FUNC, false
    );
}


