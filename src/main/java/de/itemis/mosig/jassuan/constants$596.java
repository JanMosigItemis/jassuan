// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$596 {

    static final FunctionDescriptor GetLastInputInfo$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle GetLastInputInfo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetLastInputInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$596.GetLastInputInfo$FUNC, false
    );
    static final FunctionDescriptor MapVirtualKeyA$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle MapVirtualKeyA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MapVirtualKeyA",
        "(II)I",
        constants$596.MapVirtualKeyA$FUNC, false
    );
    static final FunctionDescriptor MapVirtualKeyW$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle MapVirtualKeyW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MapVirtualKeyW",
        "(II)I",
        constants$596.MapVirtualKeyW$FUNC, false
    );
    static final FunctionDescriptor MapVirtualKeyExA$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle MapVirtualKeyExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MapVirtualKeyExA",
        "(IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$596.MapVirtualKeyExA$FUNC, false
    );
    static final FunctionDescriptor MapVirtualKeyExW$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle MapVirtualKeyExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MapVirtualKeyExW",
        "(IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$596.MapVirtualKeyExW$FUNC, false
    );
    static final FunctionDescriptor GetInputState$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle GetInputState$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetInputState",
        "()I",
        constants$596.GetInputState$FUNC, false
    );
}


