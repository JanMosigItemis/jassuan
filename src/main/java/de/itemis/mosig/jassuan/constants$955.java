// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$955 {

    static final FunctionDescriptor NdrClientCall$FUNC = FunctionDescriptor.of(MemoryLayout.unionLayout(
        C_POINTER.withName("Pointer"),
        C_LONG_LONG.withName("Simple")
    ).withName("_CLIENT_CALL_RETURN"),
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrClientCall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrClientCall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)Ljdk/incubator/foreign/MemorySegment;",
        constants$955.NdrClientCall$FUNC, true
    );
    static final FunctionDescriptor NdrAsyncClientCall$FUNC = FunctionDescriptor.of(MemoryLayout.unionLayout(
        C_POINTER.withName("Pointer"),
        C_LONG_LONG.withName("Simple")
    ).withName("_CLIENT_CALL_RETURN"),
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrAsyncClientCall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrAsyncClientCall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)Ljdk/incubator/foreign/MemorySegment;",
        constants$955.NdrAsyncClientCall$FUNC, true
    );
    static final FunctionDescriptor NdrDcomAsyncClientCall$FUNC = FunctionDescriptor.of(MemoryLayout.unionLayout(
        C_POINTER.withName("Pointer"),
        C_LONG_LONG.withName("Simple")
    ).withName("_CLIENT_CALL_RETURN"),
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrDcomAsyncClientCall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrDcomAsyncClientCall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)Ljdk/incubator/foreign/MemorySegment;",
        constants$955.NdrDcomAsyncClientCall$FUNC, true
    );
    static final FunctionDescriptor NdrAsyncServerCall$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle NdrAsyncServerCall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrAsyncServerCall",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$955.NdrAsyncServerCall$FUNC, false
    );
    static final FunctionDescriptor NdrAsyncStubCall$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrAsyncStubCall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrAsyncStubCall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$955.NdrAsyncStubCall$FUNC, false
    );
    static final FunctionDescriptor NdrDcomAsyncStubCall$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle NdrDcomAsyncStubCall$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrDcomAsyncStubCall",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$955.NdrDcomAsyncStubCall$FUNC, false
    );
}


