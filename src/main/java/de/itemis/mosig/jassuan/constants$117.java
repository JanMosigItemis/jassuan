// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$117 {

    static final FunctionDescriptor iscntrl$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle iscntrl$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "iscntrl",
        "(I)I",
        constants$117.iscntrl$FUNC, false
    );
    static final FunctionDescriptor _iscntrl_l$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle _iscntrl_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_iscntrl_l",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$117._iscntrl_l$FUNC, false
    );
    static final FunctionDescriptor toupper$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle toupper$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "toupper",
        "(I)I",
        constants$117.toupper$FUNC, false
    );
    static final FunctionDescriptor tolower$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle tolower$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "tolower",
        "(I)I",
        constants$117.tolower$FUNC, false
    );
    static final FunctionDescriptor _tolower$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle _tolower$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_tolower",
        "(I)I",
        constants$117._tolower$FUNC, false
    );
    static final FunctionDescriptor _tolower_l$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle _tolower_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_tolower_l",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$117._tolower_l$FUNC, false
    );
}


