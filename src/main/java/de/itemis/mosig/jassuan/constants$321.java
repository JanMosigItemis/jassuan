// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$321 {

    static final FunctionDescriptor LoadLibraryA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle LoadLibraryA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LoadLibraryA",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$321.LoadLibraryA$FUNC, false
    );
    static final FunctionDescriptor LoadLibraryW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle LoadLibraryW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LoadLibraryW",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$321.LoadLibraryW$FUNC, false
    );
    static final FunctionDescriptor FreeLibraryAndExitThread$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final MethodHandle FreeLibraryAndExitThread$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FreeLibraryAndExitThread",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$321.FreeLibraryAndExitThread$FUNC, false
    );
    static final FunctionDescriptor DisableThreadLibraryCalls$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle DisableThreadLibraryCalls$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DisableThreadLibraryCalls",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$321.DisableThreadLibraryCalls$FUNC, false
    );
    static final FunctionDescriptor FreeLibrary$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle FreeLibrary$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FreeLibrary",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$321.FreeLibrary$FUNC, false
    );
    static final FunctionDescriptor GetProcAddress$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetProcAddress$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetProcAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$321.GetProcAddress$FUNC, false
    );
}


