// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$44 {

    static final FunctionDescriptor _snprintf_c_l$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle _snprintf_c_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_snprintf_c_l",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$44._snprintf_c_l$FUNC, true
    );
    static final FunctionDescriptor _vsnprintf_l$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle _vsnprintf_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_vsnprintf_l",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44._vsnprintf_l$FUNC, false
    );
    static final FunctionDescriptor _vsnprintf_c_l$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle _vsnprintf_c_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_vsnprintf_c_l",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44._vsnprintf_c_l$FUNC, false
    );
    static final FunctionDescriptor fopen_s$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fopen_s$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fopen_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44.fopen_s$FUNC, false
    );
    static final FunctionDescriptor freopen_s$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle freopen_s$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "freopen_s",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$44.freopen_s$FUNC, false
    );
    static final FunctionDescriptor gets_s$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle gets_s$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "gets_s",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$44.gets_s$FUNC, false
    );
}


