// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$747 {

    static final FunctionDescriptor waveOutGetNumDevs$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle waveOutGetNumDevs$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetNumDevs",
        "()I",
        constants$747.waveOutGetNumDevs$FUNC, false
    );
    static final FunctionDescriptor waveOutGetDevCapsA$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutGetDevCapsA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetDevCapsA",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        constants$747.waveOutGetDevCapsA$FUNC, false
    );
    static final FunctionDescriptor waveOutGetDevCapsW$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutGetDevCapsW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetDevCapsW",
        "(JLjdk/incubator/foreign/MemoryAddress;I)I",
        constants$747.waveOutGetDevCapsW$FUNC, false
    );
    static final FunctionDescriptor waveOutGetVolume$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle waveOutGetVolume$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetVolume",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$747.waveOutGetVolume$FUNC, false
    );
    static final FunctionDescriptor waveOutSetVolume$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle waveOutSetVolume$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutSetVolume",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$747.waveOutSetVolume$FUNC, false
    );
    static final FunctionDescriptor waveOutGetErrorTextA$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveOutGetErrorTextA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveOutGetErrorTextA",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$747.waveOutGetErrorTextA$FUNC, false
    );
}


