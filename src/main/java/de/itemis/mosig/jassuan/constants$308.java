// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$308 {

    static final FunctionDescriptor DuplicateHandle$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT,
        C_LONG
    );
    static final MethodHandle DuplicateHandle$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DuplicateHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;III)I",
        constants$308.DuplicateHandle$FUNC, false
    );
    static final FunctionDescriptor GetHandleInformation$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetHandleInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetHandleInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$308.GetHandleInformation$FUNC, false
    );
    static final FunctionDescriptor SetHandleInformation$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle SetHandleInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetHandleInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$308.SetHandleInformation$FUNC, false
    );
    static final FunctionDescriptor HeapValidate$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle HeapValidate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapValidate",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$308.HeapValidate$FUNC, false
    );
    static final FunctionDescriptor HeapSummary$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle HeapSummary$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapSummary",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$308.HeapSummary$FUNC, false
    );
    static final FunctionDescriptor GetProcessHeaps$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle GetProcessHeaps$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetProcessHeaps",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$308.GetProcessHeaps$FUNC, false
    );
}


