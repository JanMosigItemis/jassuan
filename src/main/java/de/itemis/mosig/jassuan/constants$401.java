// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$401 {

    static final FunctionDescriptor GetThreadIOPendingFlag$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetThreadIOPendingFlag$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetThreadIOPendingFlag",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$401.GetThreadIOPendingFlag$FUNC, false
    );
    static final FunctionDescriptor GetThreadSelectorEntry$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle GetThreadSelectorEntry$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetThreadSelectorEntry",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$401.GetThreadSelectorEntry$FUNC, false
    );
    static final FunctionDescriptor SetThreadExecutionState$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG
    );
    static final MethodHandle SetThreadExecutionState$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetThreadExecutionState",
        "(I)I",
        constants$401.SetThreadExecutionState$FUNC, false
    );
    static final FunctionDescriptor PowerCreateRequest$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle PowerCreateRequest$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PowerCreateRequest",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$401.PowerCreateRequest$FUNC, false
    );
    static final FunctionDescriptor PowerSetRequest$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle PowerSetRequest$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PowerSetRequest",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$401.PowerSetRequest$FUNC, false
    );
    static final FunctionDescriptor PowerClearRequest$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle PowerClearRequest$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "PowerClearRequest",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$401.PowerClearRequest$FUNC, false
    );
}


