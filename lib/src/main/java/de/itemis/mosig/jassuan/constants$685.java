// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$685 {

    static final FunctionDescriptor TIMEFMT_ENUMPROCEX$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle TIMEFMT_ENUMPROCEX$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$685.TIMEFMT_ENUMPROCEX$FUNC, false
    );
    static final FunctionDescriptor LOCALE_ENUMPROCEX$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG_LONG
    );
    static final MethodHandle LOCALE_ENUMPROCEX$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)I",
        constants$685.LOCALE_ENUMPROCEX$FUNC, false
    );
    static final FunctionDescriptor NormalizeString$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle NormalizeString$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NormalizeString",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$685.NormalizeString$FUNC, false
    );
    static final FunctionDescriptor IsNormalizedString$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle IsNormalizedString$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsNormalizedString",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$685.IsNormalizedString$FUNC, false
    );
    static final FunctionDescriptor IdnToAscii$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle IdnToAscii$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IdnToAscii",
        "(ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$685.IdnToAscii$FUNC, false
    );
}


