// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class _userSTGMEDIUM {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        MemoryLayout.paddingLayout(128),
        C_POINTER.withName("pUnkForRelease")
    ).withName("_userSTGMEDIUM");
    public static MemoryLayout $LAYOUT() {
        return _userSTGMEDIUM.$struct$LAYOUT;
    }
    public static class _STGMEDIUM_UNION {

        static final MemoryLayout _STGMEDIUM_UNION$struct$LAYOUT = MemoryLayout.structLayout(
            C_LONG.withName("tymed"),
            MemoryLayout.paddingLayout(32),
            MemoryLayout.unionLayout(
                C_POINTER.withName("hMetaFilePict"),
                C_POINTER.withName("hHEnhMetaFile"),
                C_POINTER.withName("hGdiHandle"),
                C_POINTER.withName("hGlobal"),
                C_POINTER.withName("lpszFileName"),
                C_POINTER.withName("pstm"),
                C_POINTER.withName("pstg")
            ).withName("u")
        ).withName("_STGMEDIUM_UNION");
        public static MemoryLayout $LAYOUT() {
            return _STGMEDIUM_UNION._STGMEDIUM_UNION$struct$LAYOUT;
        }
        static final VarHandle tymed$VH = _STGMEDIUM_UNION$struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("tymed"));
        public static VarHandle tymed$VH() {
            return _STGMEDIUM_UNION.tymed$VH;
        }
        public static int tymed$get(MemorySegment seg) {
            return (int)_STGMEDIUM_UNION.tymed$VH.get(seg);
        }
        public static void tymed$set( MemorySegment seg, int x) {
            _STGMEDIUM_UNION.tymed$VH.set(seg, x);
        }
        public static int tymed$get(MemorySegment seg, long index) {
            return (int)_STGMEDIUM_UNION.tymed$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void tymed$set(MemorySegment seg, long index, int x) {
            _STGMEDIUM_UNION.tymed$VH.set(seg.asSlice(index*sizeof()), x);
        }
        public static class __WIDL_objidl_generated_name_0000000D {

            static final MemoryLayout _STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT = MemoryLayout.unionLayout(
                C_POINTER.withName("hMetaFilePict"),
                C_POINTER.withName("hHEnhMetaFile"),
                C_POINTER.withName("hGdiHandle"),
                C_POINTER.withName("hGlobal"),
                C_POINTER.withName("lpszFileName"),
                C_POINTER.withName("pstm"),
                C_POINTER.withName("pstg")
            ).withName("__WIDL_objidl_generated_name_0000000D");
            public static MemoryLayout $LAYOUT() {
                return __WIDL_objidl_generated_name_0000000D._STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT;
            }
            static final VarHandle hMetaFilePict$VH = MemoryHandles.asAddressVarHandle(_STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("hMetaFilePict")));
            public static VarHandle hMetaFilePict$VH() {
                return __WIDL_objidl_generated_name_0000000D.hMetaFilePict$VH;
            }
            public static MemoryAddress hMetaFilePict$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hMetaFilePict$VH.get(seg);
            }
            public static void hMetaFilePict$set( MemorySegment seg, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hMetaFilePict$VH.set(seg, x);
            }
            public static MemoryAddress hMetaFilePict$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hMetaFilePict$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void hMetaFilePict$set(MemorySegment seg, long index, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hMetaFilePict$VH.set(seg.asSlice(index*sizeof()), x);
            }
            static final VarHandle hHEnhMetaFile$VH = MemoryHandles.asAddressVarHandle(_STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("hHEnhMetaFile")));
            public static VarHandle hHEnhMetaFile$VH() {
                return __WIDL_objidl_generated_name_0000000D.hHEnhMetaFile$VH;
            }
            public static MemoryAddress hHEnhMetaFile$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hHEnhMetaFile$VH.get(seg);
            }
            public static void hHEnhMetaFile$set( MemorySegment seg, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hHEnhMetaFile$VH.set(seg, x);
            }
            public static MemoryAddress hHEnhMetaFile$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hHEnhMetaFile$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void hHEnhMetaFile$set(MemorySegment seg, long index, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hHEnhMetaFile$VH.set(seg.asSlice(index*sizeof()), x);
            }
            static final VarHandle hGdiHandle$VH = MemoryHandles.asAddressVarHandle(_STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("hGdiHandle")));
            public static VarHandle hGdiHandle$VH() {
                return __WIDL_objidl_generated_name_0000000D.hGdiHandle$VH;
            }
            public static MemoryAddress hGdiHandle$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hGdiHandle$VH.get(seg);
            }
            public static void hGdiHandle$set( MemorySegment seg, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hGdiHandle$VH.set(seg, x);
            }
            public static MemoryAddress hGdiHandle$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hGdiHandle$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void hGdiHandle$set(MemorySegment seg, long index, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hGdiHandle$VH.set(seg.asSlice(index*sizeof()), x);
            }
            static final VarHandle hGlobal$VH = MemoryHandles.asAddressVarHandle(_STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("hGlobal")));
            public static VarHandle hGlobal$VH() {
                return __WIDL_objidl_generated_name_0000000D.hGlobal$VH;
            }
            public static MemoryAddress hGlobal$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hGlobal$VH.get(seg);
            }
            public static void hGlobal$set( MemorySegment seg, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hGlobal$VH.set(seg, x);
            }
            public static MemoryAddress hGlobal$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.hGlobal$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void hGlobal$set(MemorySegment seg, long index, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.hGlobal$VH.set(seg.asSlice(index*sizeof()), x);
            }
            static final VarHandle lpszFileName$VH = MemoryHandles.asAddressVarHandle(_STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("lpszFileName")));
            public static VarHandle lpszFileName$VH() {
                return __WIDL_objidl_generated_name_0000000D.lpszFileName$VH;
            }
            public static MemoryAddress lpszFileName$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.lpszFileName$VH.get(seg);
            }
            public static void lpszFileName$set( MemorySegment seg, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.lpszFileName$VH.set(seg, x);
            }
            public static MemoryAddress lpszFileName$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.lpszFileName$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void lpszFileName$set(MemorySegment seg, long index, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.lpszFileName$VH.set(seg.asSlice(index*sizeof()), x);
            }
            static final VarHandle pstm$VH = MemoryHandles.asAddressVarHandle(_STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pstm")));
            public static VarHandle pstm$VH() {
                return __WIDL_objidl_generated_name_0000000D.pstm$VH;
            }
            public static MemoryAddress pstm$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.pstm$VH.get(seg);
            }
            public static void pstm$set( MemorySegment seg, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.pstm$VH.set(seg, x);
            }
            public static MemoryAddress pstm$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.pstm$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void pstm$set(MemorySegment seg, long index, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.pstm$VH.set(seg.asSlice(index*sizeof()), x);
            }
            static final VarHandle pstg$VH = MemoryHandles.asAddressVarHandle(_STGMEDIUM_UNION$__WIDL_objidl_generated_name_0000000D$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pstg")));
            public static VarHandle pstg$VH() {
                return __WIDL_objidl_generated_name_0000000D.pstg$VH;
            }
            public static MemoryAddress pstg$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.pstg$VH.get(seg);
            }
            public static void pstg$set( MemorySegment seg, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.pstg$VH.set(seg, x);
            }
            public static MemoryAddress pstg$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)__WIDL_objidl_generated_name_0000000D.pstg$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void pstg$set(MemorySegment seg, long index, MemoryAddress x) {
                __WIDL_objidl_generated_name_0000000D.pstg$VH.set(seg.asSlice(index*sizeof()), x);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
            public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
            public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
                return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
            }
            public static MemorySegment allocateArray(int len, ResourceScope scope) {
                return allocateArray(len, SegmentAllocator.ofScope(scope));
            }
            public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
        }

        public static MemorySegment u$slice(MemorySegment seg) {
            return seg.asSlice(8, 8);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
        public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment allocateArray(int len, ResourceScope scope) {
            return allocateArray(len, SegmentAllocator.ofScope(scope));
        }
        public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
    }

    static final VarHandle pUnkForRelease$VH = MemoryHandles.asAddressVarHandle($struct$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pUnkForRelease")));
    public static VarHandle pUnkForRelease$VH() {
        return _userSTGMEDIUM.pUnkForRelease$VH;
    }
    public static MemoryAddress pUnkForRelease$get(MemorySegment seg) {
        return (jdk.incubator.foreign.MemoryAddress)_userSTGMEDIUM.pUnkForRelease$VH.get(seg);
    }
    public static void pUnkForRelease$set( MemorySegment seg, MemoryAddress x) {
        _userSTGMEDIUM.pUnkForRelease$VH.set(seg, x);
    }
    public static MemoryAddress pUnkForRelease$get(MemorySegment seg, long index) {
        return (jdk.incubator.foreign.MemoryAddress)_userSTGMEDIUM.pUnkForRelease$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void pUnkForRelease$set(MemorySegment seg, long index, MemoryAddress x) {
        _userSTGMEDIUM.pUnkForRelease$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


