// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$622 {

    static final FunctionDescriptor MSGBOXCALLBACK$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle MSGBOXCALLBACK$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$622.MSGBOXCALLBACK$FUNC, false
    );
    static final FunctionDescriptor MessageBoxIndirectA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle MessageBoxIndirectA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MessageBoxIndirectA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$622.MessageBoxIndirectA$FUNC, false
    );
    static final FunctionDescriptor MessageBoxIndirectW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle MessageBoxIndirectW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MessageBoxIndirectW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$622.MessageBoxIndirectW$FUNC, false
    );
    static final FunctionDescriptor MessageBeep$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle MessageBeep$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MessageBeep",
        "(I)I",
        constants$622.MessageBeep$FUNC, false
    );
    static final FunctionDescriptor ShowCursor$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle ShowCursor$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ShowCursor",
        "(I)I",
        constants$622.ShowCursor$FUNC, false
    );
    static final FunctionDescriptor SetCursorPos$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle SetCursorPos$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetCursorPos",
        "(II)I",
        constants$622.SetCursorPos$FUNC, false
    );
}


