// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$641 {

    static final FunctionDescriptor LookupIconIdFromDirectoryEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle LookupIconIdFromDirectoryEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LookupIconIdFromDirectoryEx",
        "(Ljdk/incubator/foreign/MemoryAddress;IIII)I",
        constants$641.LookupIconIdFromDirectoryEx$FUNC, false
    );
    static final FunctionDescriptor CreateIconFromResource$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT,
        C_LONG
    );
    static final MethodHandle CreateIconFromResource$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateIconFromResource",
        "(Ljdk/incubator/foreign/MemoryAddress;III)Ljdk/incubator/foreign/MemoryAddress;",
        constants$641.CreateIconFromResource$FUNC, false
    );
    static final FunctionDescriptor CreateIconFromResourceEx$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG,
        C_INT,
        C_LONG,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle CreateIconFromResourceEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateIconFromResourceEx",
        "(Ljdk/incubator/foreign/MemoryAddress;IIIIII)Ljdk/incubator/foreign/MemoryAddress;",
        constants$641.CreateIconFromResourceEx$FUNC, false
    );
    static final FunctionDescriptor LoadImageA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle LoadImageA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LoadImageA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIII)Ljdk/incubator/foreign/MemoryAddress;",
        constants$641.LoadImageA$FUNC, false
    );
    static final FunctionDescriptor LoadImageW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle LoadImageW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "LoadImageW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIII)Ljdk/incubator/foreign/MemoryAddress;",
        constants$641.LoadImageW$FUNC, false
    );
    static final FunctionDescriptor CopyImage$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle CopyImage$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CopyImage",
        "(Ljdk/incubator/foreign/MemoryAddress;IIII)Ljdk/incubator/foreign/MemoryAddress;",
        constants$641.CopyImage$FUNC, false
    );
}


