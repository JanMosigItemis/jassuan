// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$812 {

    static final FunctionDescriptor I_RpcPerformCalloutFn$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle I_RpcPerformCalloutFn$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$812.I_RpcPerformCalloutFn$FUNC, false
    );
    static final FunctionDescriptor I_RpcFreeCalloutStateFn$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle I_RpcFreeCalloutStateFn$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$812.I_RpcFreeCalloutStateFn$FUNC, false
    );
    static final FunctionDescriptor I_RpcProxyNewConnection$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle I_RpcProxyNewConnection$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "I_RpcProxyNewConnection",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$812.I_RpcProxyNewConnection$FUNC, false
    );
    static final FunctionDescriptor I_RpcReplyToClientWithStatus$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle I_RpcReplyToClientWithStatus$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "I_RpcReplyToClientWithStatus",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$812.I_RpcReplyToClientWithStatus$FUNC, false
    );
}


