// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$15 {

    static final FunctionDescriptor remove$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle remove$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "remove",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$15.remove$FUNC, false
    );
    static final FunctionDescriptor rename$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle rename$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "rename",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$15.rename$FUNC, false
    );
    static final FunctionDescriptor _unlink$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _unlink$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_unlink",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$15._unlink$FUNC, false
    );
    static final FunctionDescriptor unlink$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle unlink$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "unlink",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$15.unlink$FUNC, false
    );
    static final FunctionDescriptor rewind$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle rewind$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "rewind",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$15.rewind$FUNC, false
    );
    static final FunctionDescriptor _rmtmp$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle _rmtmp$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_rmtmp",
        "()I",
        constants$15._rmtmp$FUNC, false
    );
}


