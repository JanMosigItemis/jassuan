// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$590 {

    static final FunctionDescriptor IsCharAlphaA$FUNC = FunctionDescriptor.of(C_INT,
        C_CHAR
    );
    static final MethodHandle IsCharAlphaA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsCharAlphaA",
        "(B)I",
        constants$590.IsCharAlphaA$FUNC, false
    );
    static final FunctionDescriptor IsCharAlphaW$FUNC = FunctionDescriptor.of(C_INT,
        C_SHORT
    );
    static final MethodHandle IsCharAlphaW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsCharAlphaW",
        "(S)I",
        constants$590.IsCharAlphaW$FUNC, false
    );
    static final FunctionDescriptor IsCharAlphaNumericA$FUNC = FunctionDescriptor.of(C_INT,
        C_CHAR
    );
    static final MethodHandle IsCharAlphaNumericA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsCharAlphaNumericA",
        "(B)I",
        constants$590.IsCharAlphaNumericA$FUNC, false
    );
    static final FunctionDescriptor IsCharAlphaNumericW$FUNC = FunctionDescriptor.of(C_INT,
        C_SHORT
    );
    static final MethodHandle IsCharAlphaNumericW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsCharAlphaNumericW",
        "(S)I",
        constants$590.IsCharAlphaNumericW$FUNC, false
    );
    static final FunctionDescriptor IsCharUpperA$FUNC = FunctionDescriptor.of(C_INT,
        C_CHAR
    );
    static final MethodHandle IsCharUpperA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsCharUpperA",
        "(B)I",
        constants$590.IsCharUpperA$FUNC, false
    );
    static final FunctionDescriptor IsCharUpperW$FUNC = FunctionDescriptor.of(C_INT,
        C_SHORT
    );
    static final MethodHandle IsCharUpperW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsCharUpperW",
        "(S)I",
        constants$590.IsCharUpperW$FUNC, false
    );
}


