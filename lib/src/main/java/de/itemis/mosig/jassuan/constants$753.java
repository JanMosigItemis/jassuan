// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$753 {

    static final FunctionDescriptor waveInGetPosition$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle waveInGetPosition$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInGetPosition",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$753.waveInGetPosition$FUNC, false
    );
    static final FunctionDescriptor waveInGetID$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle waveInGetID$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInGetID",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$753.waveInGetID$FUNC, false
    );
    static final FunctionDescriptor waveInMessage$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle waveInMessage$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "waveInMessage",
        "(Ljdk/incubator/foreign/MemoryAddress;IJJ)I",
        constants$753.waveInMessage$FUNC, false
    );
    static final FunctionDescriptor MIDICALLBACK$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle MIDICALLBACK$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;IJJJ)V",
        constants$753.MIDICALLBACK$FUNC, false
    );
    static final FunctionDescriptor LPMIDICALLBACK$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG_LONG
    );
}


