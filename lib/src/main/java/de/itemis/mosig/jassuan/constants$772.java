// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$772 {

    static final FunctionDescriptor mmioCreateChunk$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle mmioCreateChunk$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mmioCreateChunk",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$772.mmioCreateChunk$FUNC, false
    );
    static final FunctionDescriptor YIELDPROC$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_LONG
    );
    static final MethodHandle YIELDPROC$MH = RuntimeHelper.downcallHandle(
        "(II)I",
        constants$772.YIELDPROC$FUNC, false
    );
    static final FunctionDescriptor mciSendCommandA$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT,
        C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle mciSendCommandA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mciSendCommandA",
        "(IIJJ)I",
        constants$772.mciSendCommandA$FUNC, false
    );
    static final FunctionDescriptor mciSendCommandW$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_INT,
        C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle mciSendCommandW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mciSendCommandW",
        "(IIJJ)I",
        constants$772.mciSendCommandW$FUNC, false
    );
    static final FunctionDescriptor mciSendStringA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle mciSendStringA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "mciSendStringA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$772.mciSendStringA$FUNC, false
    );
}


