// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$352 {

    static final FunctionDescriptor EqualSid$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle EqualSid$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EqualSid",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$352.EqualSid$FUNC, false
    );
    static final FunctionDescriptor FindFirstFreeAce$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle FindFirstFreeAce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FindFirstFreeAce",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$352.FindFirstFreeAce$FUNC, false
    );
    static final FunctionDescriptor GetFileSecurityW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle GetFileSecurityW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetFileSecurityW",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$352.GetFileSecurityW$FUNC, false
    );
    static final FunctionDescriptor GetPrivateObjectSecurity$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle GetPrivateObjectSecurity$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetPrivateObjectSecurity",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$352.GetPrivateObjectSecurity$FUNC, false
    );
    static final FunctionDescriptor ImpersonateAnonymousToken$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ImpersonateAnonymousToken$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ImpersonateAnonymousToken",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$352.ImpersonateAnonymousToken$FUNC, false
    );
    static final FunctionDescriptor ImpersonateLoggedOnUser$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ImpersonateLoggedOnUser$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ImpersonateLoggedOnUser",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$352.ImpersonateLoggedOnUser$FUNC, false
    );
}


