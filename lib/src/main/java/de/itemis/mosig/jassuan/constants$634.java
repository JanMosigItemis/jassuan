// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$634 {

    static final FunctionDescriptor SetParent$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetParent$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetParent",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$634.SetParent$FUNC, false
    );
    static final FunctionDescriptor EnumChildWindows$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle EnumChildWindows$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EnumChildWindows",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$634.EnumChildWindows$FUNC, false
    );
    static final FunctionDescriptor FindWindowA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle FindWindowA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FindWindowA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$634.FindWindowA$FUNC, false
    );
    static final FunctionDescriptor FindWindowW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle FindWindowW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FindWindowW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$634.FindWindowW$FUNC, false
    );
    static final FunctionDescriptor FindWindowExA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle FindWindowExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FindWindowExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$634.FindWindowExA$FUNC, false
    );
    static final FunctionDescriptor FindWindowExW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle FindWindowExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FindWindowExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$634.FindWindowExW$FUNC, false
    );
}


