// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$825 {

    static final FunctionDescriptor RpcErrorGetNumberOfRecords$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcErrorGetNumberOfRecords$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcErrorGetNumberOfRecords",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$825.RpcErrorGetNumberOfRecords$FUNC, false
    );
    static final FunctionDescriptor RpcErrorSaveErrorInfo$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcErrorSaveErrorInfo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcErrorSaveErrorInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$825.RpcErrorSaveErrorInfo$FUNC, false
    );
    static final FunctionDescriptor RpcErrorLoadErrorInfo$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle RpcErrorLoadErrorInfo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcErrorLoadErrorInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$825.RpcErrorLoadErrorInfo$FUNC, false
    );
    static final FunctionDescriptor RpcErrorAddRecord$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle RpcErrorAddRecord$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcErrorAddRecord",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$825.RpcErrorAddRecord$FUNC, false
    );
    static final FunctionDescriptor RpcErrorClearInformation$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle RpcErrorClearInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcErrorClearInformation",
        "()V",
        constants$825.RpcErrorClearInformation$FUNC, false
    );
    static final FunctionDescriptor RpcGetAuthorizationContextForClient$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER,
        MemoryLayout.structLayout(
            C_LONG.withName("LowPart"),
            C_LONG.withName("HighPart")
        ).withName("_LUID"),
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcGetAuthorizationContextForClient$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcGetAuthorizationContextForClient",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$825.RpcGetAuthorizationContextForClient$FUNC, false
    );
}


