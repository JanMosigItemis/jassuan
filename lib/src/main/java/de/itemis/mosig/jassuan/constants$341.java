// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$341 {

    static final FunctionDescriptor DeleteProcThreadAttributeList$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle DeleteProcThreadAttributeList$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "DeleteProcThreadAttributeList",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$341.DeleteProcThreadAttributeList$FUNC, false
    );
    static final FunctionDescriptor SetProcessAffinityUpdateMode$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle SetProcessAffinityUpdateMode$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetProcessAffinityUpdateMode",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$341.SetProcessAffinityUpdateMode$FUNC, false
    );
    static final FunctionDescriptor QueryProcessAffinityUpdateMode$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle QueryProcessAffinityUpdateMode$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryProcessAffinityUpdateMode",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$341.QueryProcessAffinityUpdateMode$FUNC, false
    );
    static final FunctionDescriptor UpdateProcThreadAttribute$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle UpdateProcThreadAttribute$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "UpdateProcThreadAttribute",
        "(Ljdk/incubator/foreign/MemoryAddress;IJLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$341.UpdateProcThreadAttribute$FUNC, false
    );
    static final FunctionDescriptor CreateProcessA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CreateProcessA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateProcessA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$341.CreateProcessA$FUNC, false
    );
    static final FunctionDescriptor CreateProcessW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CreateProcessW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateProcessW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$341.CreateProcessW$FUNC, false
    );
}


