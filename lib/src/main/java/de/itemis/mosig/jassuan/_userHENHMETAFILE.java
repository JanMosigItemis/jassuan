// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class _userHENHMETAFILE {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("fContext"),
        MemoryLayout.paddingLayout(32),
        MemoryLayout.unionLayout(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONG_LONG.withName("hInproc64")
        ).withName("u")
    ).withName("_userHENHMETAFILE");
    public static MemoryLayout $LAYOUT() {
        return _userHENHMETAFILE.$struct$LAYOUT;
    }
    static final VarHandle fContext$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("fContext"));
    public static VarHandle fContext$VH() {
        return _userHENHMETAFILE.fContext$VH;
    }
    public static int fContext$get(MemorySegment seg) {
        return (int)_userHENHMETAFILE.fContext$VH.get(seg);
    }
    public static void fContext$set( MemorySegment seg, int x) {
        _userHENHMETAFILE.fContext$VH.set(seg, x);
    }
    public static int fContext$get(MemorySegment seg, long index) {
        return (int)_userHENHMETAFILE.fContext$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void fContext$set(MemorySegment seg, long index, int x) {
        _userHENHMETAFILE.fContext$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static class __WIDL_wtypes_generated_name_00000006 {

        static final MemoryLayout __WIDL_wtypes_generated_name_00000006$union$LAYOUT = MemoryLayout.unionLayout(
            C_LONG.withName("hInproc"),
            C_POINTER.withName("hRemote"),
            C_LONG_LONG.withName("hInproc64")
        ).withName("__WIDL_wtypes_generated_name_00000006");
        public static MemoryLayout $LAYOUT() {
            return __WIDL_wtypes_generated_name_00000006.__WIDL_wtypes_generated_name_00000006$union$LAYOUT;
        }
        static final VarHandle hInproc$VH = __WIDL_wtypes_generated_name_00000006$union$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("hInproc"));
        public static VarHandle hInproc$VH() {
            return __WIDL_wtypes_generated_name_00000006.hInproc$VH;
        }
        public static int hInproc$get(MemorySegment seg) {
            return (int)__WIDL_wtypes_generated_name_00000006.hInproc$VH.get(seg);
        }
        public static void hInproc$set( MemorySegment seg, int x) {
            __WIDL_wtypes_generated_name_00000006.hInproc$VH.set(seg, x);
        }
        public static int hInproc$get(MemorySegment seg, long index) {
            return (int)__WIDL_wtypes_generated_name_00000006.hInproc$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void hInproc$set(MemorySegment seg, long index, int x) {
            __WIDL_wtypes_generated_name_00000006.hInproc$VH.set(seg.asSlice(index*sizeof()), x);
        }
        static final VarHandle hRemote$VH = MemoryHandles.asAddressVarHandle(__WIDL_wtypes_generated_name_00000006$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("hRemote")));
        public static VarHandle hRemote$VH() {
            return __WIDL_wtypes_generated_name_00000006.hRemote$VH;
        }
        public static MemoryAddress hRemote$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_00000006.hRemote$VH.get(seg);
        }
        public static void hRemote$set( MemorySegment seg, MemoryAddress x) {
            __WIDL_wtypes_generated_name_00000006.hRemote$VH.set(seg, x);
        }
        public static MemoryAddress hRemote$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_00000006.hRemote$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void hRemote$set(MemorySegment seg, long index, MemoryAddress x) {
            __WIDL_wtypes_generated_name_00000006.hRemote$VH.set(seg.asSlice(index*sizeof()), x);
        }
        static final VarHandle hInproc64$VH = __WIDL_wtypes_generated_name_00000006$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("hInproc64"));
        public static VarHandle hInproc64$VH() {
            return __WIDL_wtypes_generated_name_00000006.hInproc64$VH;
        }
        public static long hInproc64$get(MemorySegment seg) {
            return (long)__WIDL_wtypes_generated_name_00000006.hInproc64$VH.get(seg);
        }
        public static void hInproc64$set( MemorySegment seg, long x) {
            __WIDL_wtypes_generated_name_00000006.hInproc64$VH.set(seg, x);
        }
        public static long hInproc64$get(MemorySegment seg, long index) {
            return (long)__WIDL_wtypes_generated_name_00000006.hInproc64$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void hInproc64$set(MemorySegment seg, long index, long x) {
            __WIDL_wtypes_generated_name_00000006.hInproc64$VH.set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
        public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment allocateArray(int len, ResourceScope scope) {
            return allocateArray(len, SegmentAllocator.ofScope(scope));
        }
        public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
    }

    public static MemorySegment u$slice(MemorySegment seg) {
        return seg.asSlice(8, 8);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


