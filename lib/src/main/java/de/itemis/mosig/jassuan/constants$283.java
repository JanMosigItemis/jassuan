// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$283 {

    static final FunctionDescriptor PTP_TIMER_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle PTP_TIMER_CALLBACK$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$283.PTP_TIMER_CALLBACK$FUNC, false
    );
    static final FunctionDescriptor PTP_WAIT_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle PTP_WAIT_CALLBACK$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$283.PTP_WAIT_CALLBACK$FUNC, false
    );
    static final FunctionDescriptor TpInitializeCallbackEnviron$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle TpInitializeCallbackEnviron$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "TpInitializeCallbackEnviron",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$283.TpInitializeCallbackEnviron$FUNC, false
    );
    static final FunctionDescriptor TpSetCallbackThreadpool$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle TpSetCallbackThreadpool$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "TpSetCallbackThreadpool",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$283.TpSetCallbackThreadpool$FUNC, false
    );
    static final FunctionDescriptor TpSetCallbackCleanupGroup$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle TpSetCallbackCleanupGroup$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "TpSetCallbackCleanupGroup",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$283.TpSetCallbackCleanupGroup$FUNC, false
    );
}


