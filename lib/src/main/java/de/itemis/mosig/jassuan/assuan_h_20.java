// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_20 extends assuan_h_19 {

    public static MethodHandle VarI2FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.VarI2FromUI1$MH,"VarI2FromUI1");
    }
    public static int VarI2FromUI1 ( byte bIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1212.VarI2FromUI1$MH, "VarI2FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.VarI2FromI4$MH,"VarI2FromI4");
    }
    public static int VarI2FromI4 ( int lIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1212.VarI2FromI4$MH, "VarI2FromI4");
        try {
            return (int)mh$.invokeExact(lIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.VarI2FromI8$MH,"VarI2FromI8");
    }
    public static int VarI2FromI8 ( long i64In,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1212.VarI2FromI8$MH, "VarI2FromI8");
        try {
            return (int)mh$.invokeExact(i64In, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.VarI2FromR4$MH,"VarI2FromR4");
    }
    public static int VarI2FromR4 ( float fltIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1212.VarI2FromR4$MH, "VarI2FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.VarI2FromR8$MH,"VarI2FromR8");
    }
    public static int VarI2FromR8 ( double dblIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1212.VarI2FromR8$MH, "VarI2FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1212.VarI2FromCy$MH,"VarI2FromCy");
    }
    public static int VarI2FromCy ( MemorySegment cyIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1212.VarI2FromCy$MH, "VarI2FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.VarI2FromDate$MH,"VarI2FromDate");
    }
    public static int VarI2FromDate ( double dateIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1213.VarI2FromDate$MH, "VarI2FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.VarI2FromStr$MH,"VarI2FromStr");
    }
    public static int VarI2FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1213.VarI2FromStr$MH, "VarI2FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.VarI2FromDisp$MH,"VarI2FromDisp");
    }
    public static int VarI2FromDisp ( Addressable pdispIn,  int lcid,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1213.VarI2FromDisp$MH, "VarI2FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.VarI2FromBool$MH,"VarI2FromBool");
    }
    public static int VarI2FromBool ( short boolIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1213.VarI2FromBool$MH, "VarI2FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.VarI2FromI1$MH,"VarI2FromI1");
    }
    public static int VarI2FromI1 ( byte cIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1213.VarI2FromI1$MH, "VarI2FromI1");
        try {
            return (int)mh$.invokeExact(cIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1213.VarI2FromUI2$MH,"VarI2FromUI2");
    }
    public static int VarI2FromUI2 ( short uiIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1213.VarI2FromUI2$MH, "VarI2FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.VarI2FromUI4$MH,"VarI2FromUI4");
    }
    public static int VarI2FromUI4 ( int ulIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1214.VarI2FromUI4$MH, "VarI2FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.VarI2FromUI8$MH,"VarI2FromUI8");
    }
    public static int VarI2FromUI8 ( long ui64In,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1214.VarI2FromUI8$MH, "VarI2FromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI2FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.VarI2FromDec$MH,"VarI2FromDec");
    }
    public static int VarI2FromDec ( Addressable pdecIn,  Addressable psOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1214.VarI2FromDec$MH, "VarI2FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), psOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.VarI4FromUI1$MH,"VarI4FromUI1");
    }
    public static int VarI4FromUI1 ( byte bIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1214.VarI4FromUI1$MH, "VarI4FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.VarI4FromI2$MH,"VarI4FromI2");
    }
    public static int VarI4FromI2 ( short sIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1214.VarI4FromI2$MH, "VarI4FromI2");
        try {
            return (int)mh$.invokeExact(sIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1214.VarI4FromI8$MH,"VarI4FromI8");
    }
    public static int VarI4FromI8 ( long i64In,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1214.VarI4FromI8$MH, "VarI4FromI8");
        try {
            return (int)mh$.invokeExact(i64In, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.VarI4FromR4$MH,"VarI4FromR4");
    }
    public static int VarI4FromR4 ( float fltIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1215.VarI4FromR4$MH, "VarI4FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.VarI4FromR8$MH,"VarI4FromR8");
    }
    public static int VarI4FromR8 ( double dblIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1215.VarI4FromR8$MH, "VarI4FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.VarI4FromCy$MH,"VarI4FromCy");
    }
    public static int VarI4FromCy ( MemorySegment cyIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1215.VarI4FromCy$MH, "VarI4FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.VarI4FromDate$MH,"VarI4FromDate");
    }
    public static int VarI4FromDate ( double dateIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1215.VarI4FromDate$MH, "VarI4FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.VarI4FromStr$MH,"VarI4FromStr");
    }
    public static int VarI4FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1215.VarI4FromStr$MH, "VarI4FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1215.VarI4FromDisp$MH,"VarI4FromDisp");
    }
    public static int VarI4FromDisp ( Addressable pdispIn,  int lcid,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1215.VarI4FromDisp$MH, "VarI4FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.VarI4FromBool$MH,"VarI4FromBool");
    }
    public static int VarI4FromBool ( short boolIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1216.VarI4FromBool$MH, "VarI4FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.VarI4FromI1$MH,"VarI4FromI1");
    }
    public static int VarI4FromI1 ( byte cIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1216.VarI4FromI1$MH, "VarI4FromI1");
        try {
            return (int)mh$.invokeExact(cIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.VarI4FromUI2$MH,"VarI4FromUI2");
    }
    public static int VarI4FromUI2 ( short uiIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1216.VarI4FromUI2$MH, "VarI4FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.VarI4FromUI4$MH,"VarI4FromUI4");
    }
    public static int VarI4FromUI4 ( int ulIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1216.VarI4FromUI4$MH, "VarI4FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.VarI4FromUI8$MH,"VarI4FromUI8");
    }
    public static int VarI4FromUI8 ( long ui64In,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1216.VarI4FromUI8$MH, "VarI4FromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1216.VarI4FromDec$MH,"VarI4FromDec");
    }
    public static int VarI4FromDec ( Addressable pdecIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1216.VarI4FromDec$MH, "VarI4FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI4FromInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.VarI4FromInt$MH,"VarI4FromInt");
    }
    public static int VarI4FromInt ( int intIn,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1217.VarI4FromInt$MH, "VarI4FromInt");
        try {
            return (int)mh$.invokeExact(intIn, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.VarI8FromUI1$MH,"VarI8FromUI1");
    }
    public static int VarI8FromUI1 ( byte bIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1217.VarI8FromUI1$MH, "VarI8FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.VarI8FromI2$MH,"VarI8FromI2");
    }
    public static int VarI8FromI2 ( short sIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1217.VarI8FromI2$MH, "VarI8FromI2");
        try {
            return (int)mh$.invokeExact(sIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.VarI8FromI4$MH,"VarI8FromI4");
    }
    public static int VarI8FromI4 ( int lIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1217.VarI8FromI4$MH, "VarI8FromI4");
        try {
            return (int)mh$.invokeExact(lIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.VarI8FromR4$MH,"VarI8FromR4");
    }
    public static int VarI8FromR4 ( float fltIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1217.VarI8FromR4$MH, "VarI8FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1217.VarI8FromR8$MH,"VarI8FromR8");
    }
    public static int VarI8FromR8 ( double dblIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1217.VarI8FromR8$MH, "VarI8FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.VarI8FromCy$MH,"VarI8FromCy");
    }
    public static int VarI8FromCy ( MemorySegment cyIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1218.VarI8FromCy$MH, "VarI8FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.VarI8FromDate$MH,"VarI8FromDate");
    }
    public static int VarI8FromDate ( double dateIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1218.VarI8FromDate$MH, "VarI8FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.VarI8FromStr$MH,"VarI8FromStr");
    }
    public static int VarI8FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1218.VarI8FromStr$MH, "VarI8FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.VarI8FromDisp$MH,"VarI8FromDisp");
    }
    public static int VarI8FromDisp ( Addressable pdispIn,  int lcid,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1218.VarI8FromDisp$MH, "VarI8FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.VarI8FromBool$MH,"VarI8FromBool");
    }
    public static int VarI8FromBool ( short boolIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1218.VarI8FromBool$MH, "VarI8FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1218.VarI8FromI1$MH,"VarI8FromI1");
    }
    public static int VarI8FromI1 ( byte cIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1218.VarI8FromI1$MH, "VarI8FromI1");
        try {
            return (int)mh$.invokeExact(cIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.VarI8FromUI2$MH,"VarI8FromUI2");
    }
    public static int VarI8FromUI2 ( short uiIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1219.VarI8FromUI2$MH, "VarI8FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.VarI8FromUI4$MH,"VarI8FromUI4");
    }
    public static int VarI8FromUI4 ( int ulIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1219.VarI8FromUI4$MH, "VarI8FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.VarI8FromUI8$MH,"VarI8FromUI8");
    }
    public static int VarI8FromUI8 ( long ui64In,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1219.VarI8FromUI8$MH, "VarI8FromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.VarI8FromDec$MH,"VarI8FromDec");
    }
    public static int VarI8FromDec ( Addressable pdecIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1219.VarI8FromDec$MH, "VarI8FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI8FromInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.VarI8FromInt$MH,"VarI8FromInt");
    }
    public static int VarI8FromInt ( int intIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1219.VarI8FromInt$MH, "VarI8FromInt");
        try {
            return (int)mh$.invokeExact(intIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1219.VarR4FromUI1$MH,"VarR4FromUI1");
    }
    public static int VarR4FromUI1 ( byte bIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1219.VarR4FromUI1$MH, "VarR4FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.VarR4FromI2$MH,"VarR4FromI2");
    }
    public static int VarR4FromI2 ( short sIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1220.VarR4FromI2$MH, "VarR4FromI2");
        try {
            return (int)mh$.invokeExact(sIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.VarR4FromI4$MH,"VarR4FromI4");
    }
    public static int VarR4FromI4 ( int lIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1220.VarR4FromI4$MH, "VarR4FromI4");
        try {
            return (int)mh$.invokeExact(lIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.VarR4FromI8$MH,"VarR4FromI8");
    }
    public static int VarR4FromI8 ( long i64In,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1220.VarR4FromI8$MH, "VarR4FromI8");
        try {
            return (int)mh$.invokeExact(i64In, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.VarR4FromR8$MH,"VarR4FromR8");
    }
    public static int VarR4FromR8 ( double dblIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1220.VarR4FromR8$MH, "VarR4FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.VarR4FromCy$MH,"VarR4FromCy");
    }
    public static int VarR4FromCy ( MemorySegment cyIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1220.VarR4FromCy$MH, "VarR4FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1220.VarR4FromDate$MH,"VarR4FromDate");
    }
    public static int VarR4FromDate ( double dateIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1220.VarR4FromDate$MH, "VarR4FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.VarR4FromStr$MH,"VarR4FromStr");
    }
    public static int VarR4FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1221.VarR4FromStr$MH, "VarR4FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.VarR4FromDisp$MH,"VarR4FromDisp");
    }
    public static int VarR4FromDisp ( Addressable pdispIn,  int lcid,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1221.VarR4FromDisp$MH, "VarR4FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.VarR4FromBool$MH,"VarR4FromBool");
    }
    public static int VarR4FromBool ( short boolIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1221.VarR4FromBool$MH, "VarR4FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.VarR4FromI1$MH,"VarR4FromI1");
    }
    public static int VarR4FromI1 ( byte cIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1221.VarR4FromI1$MH, "VarR4FromI1");
        try {
            return (int)mh$.invokeExact(cIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.VarR4FromUI2$MH,"VarR4FromUI2");
    }
    public static int VarR4FromUI2 ( short uiIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1221.VarR4FromUI2$MH, "VarR4FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1221.VarR4FromUI4$MH,"VarR4FromUI4");
    }
    public static int VarR4FromUI4 ( int ulIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1221.VarR4FromUI4$MH, "VarR4FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.VarR4FromUI8$MH,"VarR4FromUI8");
    }
    public static int VarR4FromUI8 ( long ui64In,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1222.VarR4FromUI8$MH, "VarR4FromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.VarR4FromDec$MH,"VarR4FromDec");
    }
    public static int VarR4FromDec ( Addressable pdecIn,  Addressable pfltOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1222.VarR4FromDec$MH, "VarR4FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pfltOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.VarR8FromUI1$MH,"VarR8FromUI1");
    }
    public static int VarR8FromUI1 ( byte bIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1222.VarR8FromUI1$MH, "VarR8FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.VarR8FromI2$MH,"VarR8FromI2");
    }
    public static int VarR8FromI2 ( short sIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1222.VarR8FromI2$MH, "VarR8FromI2");
        try {
            return (int)mh$.invokeExact(sIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.VarR8FromI4$MH,"VarR8FromI4");
    }
    public static int VarR8FromI4 ( int lIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1222.VarR8FromI4$MH, "VarR8FromI4");
        try {
            return (int)mh$.invokeExact(lIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1222.VarR8FromI8$MH,"VarR8FromI8");
    }
    public static int VarR8FromI8 ( long i64In,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1222.VarR8FromI8$MH, "VarR8FromI8");
        try {
            return (int)mh$.invokeExact(i64In, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.VarR8FromR4$MH,"VarR8FromR4");
    }
    public static int VarR8FromR4 ( float fltIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1223.VarR8FromR4$MH, "VarR8FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.VarR8FromCy$MH,"VarR8FromCy");
    }
    public static int VarR8FromCy ( MemorySegment cyIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1223.VarR8FromCy$MH, "VarR8FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.VarR8FromDate$MH,"VarR8FromDate");
    }
    public static int VarR8FromDate ( double dateIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1223.VarR8FromDate$MH, "VarR8FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.VarR8FromStr$MH,"VarR8FromStr");
    }
    public static int VarR8FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1223.VarR8FromStr$MH, "VarR8FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.VarR8FromDisp$MH,"VarR8FromDisp");
    }
    public static int VarR8FromDisp ( Addressable pdispIn,  int lcid,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1223.VarR8FromDisp$MH, "VarR8FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1223.VarR8FromBool$MH,"VarR8FromBool");
    }
    public static int VarR8FromBool ( short boolIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1223.VarR8FromBool$MH, "VarR8FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.VarR8FromI1$MH,"VarR8FromI1");
    }
    public static int VarR8FromI1 ( byte cIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1224.VarR8FromI1$MH, "VarR8FromI1");
        try {
            return (int)mh$.invokeExact(cIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.VarR8FromUI2$MH,"VarR8FromUI2");
    }
    public static int VarR8FromUI2 ( short uiIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1224.VarR8FromUI2$MH, "VarR8FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.VarR8FromUI4$MH,"VarR8FromUI4");
    }
    public static int VarR8FromUI4 ( int ulIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1224.VarR8FromUI4$MH, "VarR8FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.VarR8FromUI8$MH,"VarR8FromUI8");
    }
    public static int VarR8FromUI8 ( long ui64In,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1224.VarR8FromUI8$MH, "VarR8FromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.VarR8FromDec$MH,"VarR8FromDec");
    }
    public static int VarR8FromDec ( Addressable pdecIn,  Addressable pdblOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1224.VarR8FromDec$MH, "VarR8FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pdblOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1224.VarDateFromUI1$MH,"VarDateFromUI1");
    }
    public static int VarDateFromUI1 ( byte bIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1224.VarDateFromUI1$MH, "VarDateFromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.VarDateFromI2$MH,"VarDateFromI2");
    }
    public static int VarDateFromI2 ( short sIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1225.VarDateFromI2$MH, "VarDateFromI2");
        try {
            return (int)mh$.invokeExact(sIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.VarDateFromI4$MH,"VarDateFromI4");
    }
    public static int VarDateFromI4 ( int lIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1225.VarDateFromI4$MH, "VarDateFromI4");
        try {
            return (int)mh$.invokeExact(lIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.VarDateFromI8$MH,"VarDateFromI8");
    }
    public static int VarDateFromI8 ( long i64In,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1225.VarDateFromI8$MH, "VarDateFromI8");
        try {
            return (int)mh$.invokeExact(i64In, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.VarDateFromR4$MH,"VarDateFromR4");
    }
    public static int VarDateFromR4 ( float fltIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1225.VarDateFromR4$MH, "VarDateFromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.VarDateFromR8$MH,"VarDateFromR8");
    }
    public static int VarDateFromR8 ( double dblIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1225.VarDateFromR8$MH, "VarDateFromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1225.VarDateFromCy$MH,"VarDateFromCy");
    }
    public static int VarDateFromCy ( MemorySegment cyIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1225.VarDateFromCy$MH, "VarDateFromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.VarDateFromStr$MH,"VarDateFromStr");
    }
    public static int VarDateFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1226.VarDateFromStr$MH, "VarDateFromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.VarDateFromDisp$MH,"VarDateFromDisp");
    }
    public static int VarDateFromDisp ( Addressable pdispIn,  int lcid,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1226.VarDateFromDisp$MH, "VarDateFromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.VarDateFromBool$MH,"VarDateFromBool");
    }
    public static int VarDateFromBool ( short boolIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1226.VarDateFromBool$MH, "VarDateFromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.VarDateFromI1$MH,"VarDateFromI1");
    }
    public static int VarDateFromI1 ( byte cIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1226.VarDateFromI1$MH, "VarDateFromI1");
        try {
            return (int)mh$.invokeExact(cIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.VarDateFromUI2$MH,"VarDateFromUI2");
    }
    public static int VarDateFromUI2 ( short uiIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1226.VarDateFromUI2$MH, "VarDateFromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1226.VarDateFromUI4$MH,"VarDateFromUI4");
    }
    public static int VarDateFromUI4 ( int ulIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1226.VarDateFromUI4$MH, "VarDateFromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.VarDateFromUI8$MH,"VarDateFromUI8");
    }
    public static int VarDateFromUI8 ( long ui64In,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1227.VarDateFromUI8$MH, "VarDateFromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.VarDateFromDec$MH,"VarDateFromDec");
    }
    public static int VarDateFromDec ( Addressable pdecIn,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1227.VarDateFromDec$MH, "VarDateFromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.VarCyFromUI1$MH,"VarCyFromUI1");
    }
    public static int VarCyFromUI1 ( byte bIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1227.VarCyFromUI1$MH, "VarCyFromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.VarCyFromI2$MH,"VarCyFromI2");
    }
    public static int VarCyFromI2 ( short sIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1227.VarCyFromI2$MH, "VarCyFromI2");
        try {
            return (int)mh$.invokeExact(sIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.VarCyFromI4$MH,"VarCyFromI4");
    }
    public static int VarCyFromI4 ( int lIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1227.VarCyFromI4$MH, "VarCyFromI4");
        try {
            return (int)mh$.invokeExact(lIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1227.VarCyFromI8$MH,"VarCyFromI8");
    }
    public static int VarCyFromI8 ( long i64In,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1227.VarCyFromI8$MH, "VarCyFromI8");
        try {
            return (int)mh$.invokeExact(i64In, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.VarCyFromR4$MH,"VarCyFromR4");
    }
    public static int VarCyFromR4 ( float fltIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1228.VarCyFromR4$MH, "VarCyFromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.VarCyFromR8$MH,"VarCyFromR8");
    }
    public static int VarCyFromR8 ( double dblIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1228.VarCyFromR8$MH, "VarCyFromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.VarCyFromDate$MH,"VarCyFromDate");
    }
    public static int VarCyFromDate ( double dateIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1228.VarCyFromDate$MH, "VarCyFromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.VarCyFromStr$MH,"VarCyFromStr");
    }
    public static int VarCyFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1228.VarCyFromStr$MH, "VarCyFromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.VarCyFromDisp$MH,"VarCyFromDisp");
    }
    public static int VarCyFromDisp ( Addressable pdispIn,  int lcid,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1228.VarCyFromDisp$MH, "VarCyFromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1228.VarCyFromBool$MH,"VarCyFromBool");
    }
    public static int VarCyFromBool ( short boolIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1228.VarCyFromBool$MH, "VarCyFromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.VarCyFromI1$MH,"VarCyFromI1");
    }
    public static int VarCyFromI1 ( byte cIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1229.VarCyFromI1$MH, "VarCyFromI1");
        try {
            return (int)mh$.invokeExact(cIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.VarCyFromUI2$MH,"VarCyFromUI2");
    }
    public static int VarCyFromUI2 ( short uiIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1229.VarCyFromUI2$MH, "VarCyFromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.VarCyFromUI4$MH,"VarCyFromUI4");
    }
    public static int VarCyFromUI4 ( int ulIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1229.VarCyFromUI4$MH, "VarCyFromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.VarCyFromUI8$MH,"VarCyFromUI8");
    }
    public static int VarCyFromUI8 ( long ui64In,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1229.VarCyFromUI8$MH, "VarCyFromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.VarCyFromDec$MH,"VarCyFromDec");
    }
    public static int VarCyFromDec ( Addressable pdecIn,  Addressable pcyOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1229.VarCyFromDec$MH, "VarCyFromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pcyOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1229.VarBstrFromUI1$MH,"VarBstrFromUI1");
    }
    public static int VarBstrFromUI1 ( byte bVal,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1229.VarBstrFromUI1$MH, "VarBstrFromUI1");
        try {
            return (int)mh$.invokeExact(bVal, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.VarBstrFromI2$MH,"VarBstrFromI2");
    }
    public static int VarBstrFromI2 ( short iVal,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1230.VarBstrFromI2$MH, "VarBstrFromI2");
        try {
            return (int)mh$.invokeExact(iVal, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.VarBstrFromI4$MH,"VarBstrFromI4");
    }
    public static int VarBstrFromI4 ( int lIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1230.VarBstrFromI4$MH, "VarBstrFromI4");
        try {
            return (int)mh$.invokeExact(lIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.VarBstrFromI8$MH,"VarBstrFromI8");
    }
    public static int VarBstrFromI8 ( long i64In,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1230.VarBstrFromI8$MH, "VarBstrFromI8");
        try {
            return (int)mh$.invokeExact(i64In, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.VarBstrFromR4$MH,"VarBstrFromR4");
    }
    public static int VarBstrFromR4 ( float fltIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1230.VarBstrFromR4$MH, "VarBstrFromR4");
        try {
            return (int)mh$.invokeExact(fltIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.VarBstrFromR8$MH,"VarBstrFromR8");
    }
    public static int VarBstrFromR8 ( double dblIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1230.VarBstrFromR8$MH, "VarBstrFromR8");
        try {
            return (int)mh$.invokeExact(dblIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1230.VarBstrFromCy$MH,"VarBstrFromCy");
    }
    public static int VarBstrFromCy ( MemorySegment cyIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1230.VarBstrFromCy$MH, "VarBstrFromCy");
        try {
            return (int)mh$.invokeExact(cyIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.VarBstrFromDate$MH,"VarBstrFromDate");
    }
    public static int VarBstrFromDate ( double dateIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1231.VarBstrFromDate$MH, "VarBstrFromDate");
        try {
            return (int)mh$.invokeExact(dateIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.VarBstrFromDisp$MH,"VarBstrFromDisp");
    }
    public static int VarBstrFromDisp ( Addressable pdispIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1231.VarBstrFromDisp$MH, "VarBstrFromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.VarBstrFromBool$MH,"VarBstrFromBool");
    }
    public static int VarBstrFromBool ( short boolIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1231.VarBstrFromBool$MH, "VarBstrFromBool");
        try {
            return (int)mh$.invokeExact(boolIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.VarBstrFromI1$MH,"VarBstrFromI1");
    }
    public static int VarBstrFromI1 ( byte cIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1231.VarBstrFromI1$MH, "VarBstrFromI1");
        try {
            return (int)mh$.invokeExact(cIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.VarBstrFromUI2$MH,"VarBstrFromUI2");
    }
    public static int VarBstrFromUI2 ( short uiIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1231.VarBstrFromUI2$MH, "VarBstrFromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1231.VarBstrFromUI4$MH,"VarBstrFromUI4");
    }
    public static int VarBstrFromUI4 ( int ulIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1231.VarBstrFromUI4$MH, "VarBstrFromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.VarBstrFromUI8$MH,"VarBstrFromUI8");
    }
    public static int VarBstrFromUI8 ( long ui64In,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1232.VarBstrFromUI8$MH, "VarBstrFromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.VarBstrFromDec$MH,"VarBstrFromDec");
    }
    public static int VarBstrFromDec ( Addressable pdecIn,  int lcid,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1232.VarBstrFromDec$MH, "VarBstrFromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), lcid, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.VarBoolFromUI1$MH,"VarBoolFromUI1");
    }
    public static int VarBoolFromUI1 ( byte bIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1232.VarBoolFromUI1$MH, "VarBoolFromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.VarBoolFromI2$MH,"VarBoolFromI2");
    }
    public static int VarBoolFromI2 ( short sIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1232.VarBoolFromI2$MH, "VarBoolFromI2");
        try {
            return (int)mh$.invokeExact(sIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.VarBoolFromI4$MH,"VarBoolFromI4");
    }
    public static int VarBoolFromI4 ( int lIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1232.VarBoolFromI4$MH, "VarBoolFromI4");
        try {
            return (int)mh$.invokeExact(lIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1232.VarBoolFromI8$MH,"VarBoolFromI8");
    }
    public static int VarBoolFromI8 ( long i64In,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1232.VarBoolFromI8$MH, "VarBoolFromI8");
        try {
            return (int)mh$.invokeExact(i64In, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.VarBoolFromR4$MH,"VarBoolFromR4");
    }
    public static int VarBoolFromR4 ( float fltIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1233.VarBoolFromR4$MH, "VarBoolFromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.VarBoolFromR8$MH,"VarBoolFromR8");
    }
    public static int VarBoolFromR8 ( double dblIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1233.VarBoolFromR8$MH, "VarBoolFromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.VarBoolFromDate$MH,"VarBoolFromDate");
    }
    public static int VarBoolFromDate ( double dateIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1233.VarBoolFromDate$MH, "VarBoolFromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.VarBoolFromCy$MH,"VarBoolFromCy");
    }
    public static int VarBoolFromCy ( MemorySegment cyIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1233.VarBoolFromCy$MH, "VarBoolFromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.VarBoolFromStr$MH,"VarBoolFromStr");
    }
    public static int VarBoolFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1233.VarBoolFromStr$MH, "VarBoolFromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1233.VarBoolFromDisp$MH,"VarBoolFromDisp");
    }
    public static int VarBoolFromDisp ( Addressable pdispIn,  int lcid,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1233.VarBoolFromDisp$MH, "VarBoolFromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.VarBoolFromI1$MH,"VarBoolFromI1");
    }
    public static int VarBoolFromI1 ( byte cIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1234.VarBoolFromI1$MH, "VarBoolFromI1");
        try {
            return (int)mh$.invokeExact(cIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.VarBoolFromUI2$MH,"VarBoolFromUI2");
    }
    public static int VarBoolFromUI2 ( short uiIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1234.VarBoolFromUI2$MH, "VarBoolFromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.VarBoolFromUI4$MH,"VarBoolFromUI4");
    }
    public static int VarBoolFromUI4 ( int ulIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1234.VarBoolFromUI4$MH, "VarBoolFromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.VarBoolFromUI8$MH,"VarBoolFromUI8");
    }
    public static int VarBoolFromUI8 ( long i64In,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1234.VarBoolFromUI8$MH, "VarBoolFromUI8");
        try {
            return (int)mh$.invokeExact(i64In, pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBoolFromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.VarBoolFromDec$MH,"VarBoolFromDec");
    }
    public static int VarBoolFromDec ( Addressable pdecIn,  Addressable pboolOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1234.VarBoolFromDec$MH, "VarBoolFromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pboolOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1234.VarI1FromUI1$MH,"VarI1FromUI1");
    }
    public static int VarI1FromUI1 ( byte bIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1234.VarI1FromUI1$MH, "VarI1FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.VarI1FromI2$MH,"VarI1FromI2");
    }
    public static int VarI1FromI2 ( short uiIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1235.VarI1FromI2$MH, "VarI1FromI2");
        try {
            return (int)mh$.invokeExact(uiIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.VarI1FromI4$MH,"VarI1FromI4");
    }
    public static int VarI1FromI4 ( int lIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1235.VarI1FromI4$MH, "VarI1FromI4");
        try {
            return (int)mh$.invokeExact(lIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.VarI1FromI8$MH,"VarI1FromI8");
    }
    public static int VarI1FromI8 ( long i64In,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1235.VarI1FromI8$MH, "VarI1FromI8");
        try {
            return (int)mh$.invokeExact(i64In, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.VarI1FromR4$MH,"VarI1FromR4");
    }
    public static int VarI1FromR4 ( float fltIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1235.VarI1FromR4$MH, "VarI1FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.VarI1FromR8$MH,"VarI1FromR8");
    }
    public static int VarI1FromR8 ( double dblIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1235.VarI1FromR8$MH, "VarI1FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1235.VarI1FromDate$MH,"VarI1FromDate");
    }
    public static int VarI1FromDate ( double dateIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1235.VarI1FromDate$MH, "VarI1FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.VarI1FromCy$MH,"VarI1FromCy");
    }
    public static int VarI1FromCy ( MemorySegment cyIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1236.VarI1FromCy$MH, "VarI1FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.VarI1FromStr$MH,"VarI1FromStr");
    }
    public static int VarI1FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1236.VarI1FromStr$MH, "VarI1FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.VarI1FromDisp$MH,"VarI1FromDisp");
    }
    public static int VarI1FromDisp ( Addressable pdispIn,  int lcid,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1236.VarI1FromDisp$MH, "VarI1FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.VarI1FromBool$MH,"VarI1FromBool");
    }
    public static int VarI1FromBool ( short boolIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1236.VarI1FromBool$MH, "VarI1FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.VarI1FromUI2$MH,"VarI1FromUI2");
    }
    public static int VarI1FromUI2 ( short uiIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1236.VarI1FromUI2$MH, "VarI1FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1236.VarI1FromUI4$MH,"VarI1FromUI4");
    }
    public static int VarI1FromUI4 ( int ulIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1236.VarI1FromUI4$MH, "VarI1FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.VarI1FromUI8$MH,"VarI1FromUI8");
    }
    public static int VarI1FromUI8 ( long i64In,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1237.VarI1FromUI8$MH, "VarI1FromUI8");
        try {
            return (int)mh$.invokeExact(i64In, pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarI1FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.VarI1FromDec$MH,"VarI1FromDec");
    }
    public static int VarI1FromDec ( Addressable pdecIn,  Addressable pcOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1237.VarI1FromDec$MH, "VarI1FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pcOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.VarUI2FromUI1$MH,"VarUI2FromUI1");
    }
    public static int VarUI2FromUI1 ( byte bIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1237.VarUI2FromUI1$MH, "VarUI2FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.VarUI2FromI2$MH,"VarUI2FromI2");
    }
    public static int VarUI2FromI2 ( short uiIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1237.VarUI2FromI2$MH, "VarUI2FromI2");
        try {
            return (int)mh$.invokeExact(uiIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.VarUI2FromI4$MH,"VarUI2FromI4");
    }
    public static int VarUI2FromI4 ( int lIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1237.VarUI2FromI4$MH, "VarUI2FromI4");
        try {
            return (int)mh$.invokeExact(lIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1237.VarUI2FromI8$MH,"VarUI2FromI8");
    }
    public static int VarUI2FromI8 ( long i64In,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1237.VarUI2FromI8$MH, "VarUI2FromI8");
        try {
            return (int)mh$.invokeExact(i64In, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.VarUI2FromR4$MH,"VarUI2FromR4");
    }
    public static int VarUI2FromR4 ( float fltIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1238.VarUI2FromR4$MH, "VarUI2FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.VarUI2FromR8$MH,"VarUI2FromR8");
    }
    public static int VarUI2FromR8 ( double dblIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1238.VarUI2FromR8$MH, "VarUI2FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.VarUI2FromDate$MH,"VarUI2FromDate");
    }
    public static int VarUI2FromDate ( double dateIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1238.VarUI2FromDate$MH, "VarUI2FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.VarUI2FromCy$MH,"VarUI2FromCy");
    }
    public static int VarUI2FromCy ( MemorySegment cyIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1238.VarUI2FromCy$MH, "VarUI2FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.VarUI2FromStr$MH,"VarUI2FromStr");
    }
    public static int VarUI2FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1238.VarUI2FromStr$MH, "VarUI2FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1238.VarUI2FromDisp$MH,"VarUI2FromDisp");
    }
    public static int VarUI2FromDisp ( Addressable pdispIn,  int lcid,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1238.VarUI2FromDisp$MH, "VarUI2FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.VarUI2FromBool$MH,"VarUI2FromBool");
    }
    public static int VarUI2FromBool ( short boolIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1239.VarUI2FromBool$MH, "VarUI2FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.VarUI2FromI1$MH,"VarUI2FromI1");
    }
    public static int VarUI2FromI1 ( byte cIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1239.VarUI2FromI1$MH, "VarUI2FromI1");
        try {
            return (int)mh$.invokeExact(cIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.VarUI2FromUI4$MH,"VarUI2FromUI4");
    }
    public static int VarUI2FromUI4 ( int ulIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1239.VarUI2FromUI4$MH, "VarUI2FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.VarUI2FromUI8$MH,"VarUI2FromUI8");
    }
    public static int VarUI2FromUI8 ( long i64In,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1239.VarUI2FromUI8$MH, "VarUI2FromUI8");
        try {
            return (int)mh$.invokeExact(i64In, puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI2FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.VarUI2FromDec$MH,"VarUI2FromDec");
    }
    public static int VarUI2FromDec ( Addressable pdecIn,  Addressable puiOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1239.VarUI2FromDec$MH, "VarUI2FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), puiOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1239.VarUI4FromUI1$MH,"VarUI4FromUI1");
    }
    public static int VarUI4FromUI1 ( byte bIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1239.VarUI4FromUI1$MH, "VarUI4FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.VarUI4FromI2$MH,"VarUI4FromI2");
    }
    public static int VarUI4FromI2 ( short uiIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1240.VarUI4FromI2$MH, "VarUI4FromI2");
        try {
            return (int)mh$.invokeExact(uiIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.VarUI4FromI4$MH,"VarUI4FromI4");
    }
    public static int VarUI4FromI4 ( int lIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1240.VarUI4FromI4$MH, "VarUI4FromI4");
        try {
            return (int)mh$.invokeExact(lIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.VarUI4FromI8$MH,"VarUI4FromI8");
    }
    public static int VarUI4FromI8 ( long i64In,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1240.VarUI4FromI8$MH, "VarUI4FromI8");
        try {
            return (int)mh$.invokeExact(i64In, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.VarUI4FromR4$MH,"VarUI4FromR4");
    }
    public static int VarUI4FromR4 ( float fltIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1240.VarUI4FromR4$MH, "VarUI4FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.VarUI4FromR8$MH,"VarUI4FromR8");
    }
    public static int VarUI4FromR8 ( double dblIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1240.VarUI4FromR8$MH, "VarUI4FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1240.VarUI4FromDate$MH,"VarUI4FromDate");
    }
    public static int VarUI4FromDate ( double dateIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1240.VarUI4FromDate$MH, "VarUI4FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VarUI4FromCy$MH,"VarUI4FromCy");
    }
    public static int VarUI4FromCy ( MemorySegment cyIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1241.VarUI4FromCy$MH, "VarUI4FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VarUI4FromStr$MH,"VarUI4FromStr");
    }
    public static int VarUI4FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1241.VarUI4FromStr$MH, "VarUI4FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VarUI4FromDisp$MH,"VarUI4FromDisp");
    }
    public static int VarUI4FromDisp ( Addressable pdispIn,  int lcid,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1241.VarUI4FromDisp$MH, "VarUI4FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VarUI4FromBool$MH,"VarUI4FromBool");
    }
    public static int VarUI4FromBool ( short boolIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1241.VarUI4FromBool$MH, "VarUI4FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VarUI4FromI1$MH,"VarUI4FromI1");
    }
    public static int VarUI4FromI1 ( byte cIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1241.VarUI4FromI1$MH, "VarUI4FromI1");
        try {
            return (int)mh$.invokeExact(cIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1241.VarUI4FromUI2$MH,"VarUI4FromUI2");
    }
    public static int VarUI4FromUI2 ( short uiIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1241.VarUI4FromUI2$MH, "VarUI4FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.VarUI4FromUI8$MH,"VarUI4FromUI8");
    }
    public static int VarUI4FromUI8 ( long ui64In,  Addressable plOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1242.VarUI4FromUI8$MH, "VarUI4FromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, plOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI4FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.VarUI4FromDec$MH,"VarUI4FromDec");
    }
    public static int VarUI4FromDec ( Addressable pdecIn,  Addressable pulOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1242.VarUI4FromDec$MH, "VarUI4FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pulOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.VarUI8FromUI1$MH,"VarUI8FromUI1");
    }
    public static int VarUI8FromUI1 ( byte bIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1242.VarUI8FromUI1$MH, "VarUI8FromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.VarUI8FromI2$MH,"VarUI8FromI2");
    }
    public static int VarUI8FromI2 ( short sIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1242.VarUI8FromI2$MH, "VarUI8FromI2");
        try {
            return (int)mh$.invokeExact(sIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.VarUI8FromI4$MH,"VarUI8FromI4");
    }
    public static int VarUI8FromI4 ( int lIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1242.VarUI8FromI4$MH, "VarUI8FromI4");
        try {
            return (int)mh$.invokeExact(lIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1242.VarUI8FromI8$MH,"VarUI8FromI8");
    }
    public static int VarUI8FromI8 ( long ui64In,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1242.VarUI8FromI8$MH, "VarUI8FromI8");
        try {
            return (int)mh$.invokeExact(ui64In, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.VarUI8FromR4$MH,"VarUI8FromR4");
    }
    public static int VarUI8FromR4 ( float fltIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1243.VarUI8FromR4$MH, "VarUI8FromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.VarUI8FromR8$MH,"VarUI8FromR8");
    }
    public static int VarUI8FromR8 ( double dblIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1243.VarUI8FromR8$MH, "VarUI8FromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.VarUI8FromCy$MH,"VarUI8FromCy");
    }
    public static int VarUI8FromCy ( MemorySegment cyIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1243.VarUI8FromCy$MH, "VarUI8FromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.VarUI8FromDate$MH,"VarUI8FromDate");
    }
    public static int VarUI8FromDate ( double dateIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1243.VarUI8FromDate$MH, "VarUI8FromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.VarUI8FromStr$MH,"VarUI8FromStr");
    }
    public static int VarUI8FromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1243.VarUI8FromStr$MH, "VarUI8FromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1243.VarUI8FromDisp$MH,"VarUI8FromDisp");
    }
    public static int VarUI8FromDisp ( Addressable pdispIn,  int lcid,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1243.VarUI8FromDisp$MH, "VarUI8FromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.VarUI8FromBool$MH,"VarUI8FromBool");
    }
    public static int VarUI8FromBool ( short boolIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1244.VarUI8FromBool$MH, "VarUI8FromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.VarUI8FromI1$MH,"VarUI8FromI1");
    }
    public static int VarUI8FromI1 ( byte cIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1244.VarUI8FromI1$MH, "VarUI8FromI1");
        try {
            return (int)mh$.invokeExact(cIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.VarUI8FromUI2$MH,"VarUI8FromUI2");
    }
    public static int VarUI8FromUI2 ( short uiIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1244.VarUI8FromUI2$MH, "VarUI8FromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.VarUI8FromUI4$MH,"VarUI8FromUI4");
    }
    public static int VarUI8FromUI4 ( int ulIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1244.VarUI8FromUI4$MH, "VarUI8FromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromDec$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.VarUI8FromDec$MH,"VarUI8FromDec");
    }
    public static int VarUI8FromDec ( Addressable pdecIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1244.VarUI8FromDec$MH, "VarUI8FromDec");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUI8FromInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1244.VarUI8FromInt$MH,"VarUI8FromInt");
    }
    public static int VarUI8FromInt ( int intIn,  Addressable pi64Out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1244.VarUI8FromInt$MH, "VarUI8FromInt");
        try {
            return (int)mh$.invokeExact(intIn, pi64Out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.VarDecFromUI1$MH,"VarDecFromUI1");
    }
    public static int VarDecFromUI1 ( byte bIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1245.VarDecFromUI1$MH, "VarDecFromUI1");
        try {
            return (int)mh$.invokeExact(bIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.VarDecFromI2$MH,"VarDecFromI2");
    }
    public static int VarDecFromI2 ( short uiIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1245.VarDecFromI2$MH, "VarDecFromI2");
        try {
            return (int)mh$.invokeExact(uiIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.VarDecFromI4$MH,"VarDecFromI4");
    }
    public static int VarDecFromI4 ( int lIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1245.VarDecFromI4$MH, "VarDecFromI4");
        try {
            return (int)mh$.invokeExact(lIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.VarDecFromI8$MH,"VarDecFromI8");
    }
    public static int VarDecFromI8 ( long i64In,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1245.VarDecFromI8$MH, "VarDecFromI8");
        try {
            return (int)mh$.invokeExact(i64In, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromR4$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.VarDecFromR4$MH,"VarDecFromR4");
    }
    public static int VarDecFromR4 ( float fltIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1245.VarDecFromR4$MH, "VarDecFromR4");
        try {
            return (int)mh$.invokeExact(fltIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1245.VarDecFromR8$MH,"VarDecFromR8");
    }
    public static int VarDecFromR8 ( double dblIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1245.VarDecFromR8$MH, "VarDecFromR8");
        try {
            return (int)mh$.invokeExact(dblIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.VarDecFromDate$MH,"VarDecFromDate");
    }
    public static int VarDecFromDate ( double dateIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1246.VarDecFromDate$MH, "VarDecFromDate");
        try {
            return (int)mh$.invokeExact(dateIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromCy$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.VarDecFromCy$MH,"VarDecFromCy");
    }
    public static int VarDecFromCy ( MemorySegment cyIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1246.VarDecFromCy$MH, "VarDecFromCy");
        try {
            return (int)mh$.invokeExact(cyIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.VarDecFromStr$MH,"VarDecFromStr");
    }
    public static int VarDecFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1246.VarDecFromStr$MH, "VarDecFromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromDisp$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.VarDecFromDisp$MH,"VarDecFromDisp");
    }
    public static int VarDecFromDisp ( Addressable pdispIn,  int lcid,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1246.VarDecFromDisp$MH, "VarDecFromDisp");
        try {
            return (int)mh$.invokeExact(pdispIn.address(), lcid, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromBool$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.VarDecFromBool$MH,"VarDecFromBool");
    }
    public static int VarDecFromBool ( short boolIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1246.VarDecFromBool$MH, "VarDecFromBool");
        try {
            return (int)mh$.invokeExact(boolIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromI1$MH() {
        return RuntimeHelper.requireNonNull(constants$1246.VarDecFromI1$MH,"VarDecFromI1");
    }
    public static int VarDecFromI1 ( byte cIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1246.VarDecFromI1$MH, "VarDecFromI1");
        try {
            return (int)mh$.invokeExact(cIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI2$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VarDecFromUI2$MH,"VarDecFromUI2");
    }
    public static int VarDecFromUI2 ( short uiIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1247.VarDecFromUI2$MH, "VarDecFromUI2");
        try {
            return (int)mh$.invokeExact(uiIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VarDecFromUI4$MH,"VarDecFromUI4");
    }
    public static int VarDecFromUI4 ( int ulIn,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1247.VarDecFromUI4$MH, "VarDecFromUI4");
        try {
            return (int)mh$.invokeExact(ulIn, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFromUI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VarDecFromUI8$MH,"VarDecFromUI8");
    }
    public static int VarDecFromUI8 ( long ui64In,  Addressable pdecOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1247.VarDecFromUI8$MH, "VarDecFromUI8");
        try {
            return (int)mh$.invokeExact(ui64In, pdecOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarParseNumFromStr$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VarParseNumFromStr$MH,"VarParseNumFromStr");
    }
    public static int VarParseNumFromStr ( Addressable strIn,  int lcid,  int dwFlags,  Addressable pnumprs,  Addressable rgbDig) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1247.VarParseNumFromStr$MH, "VarParseNumFromStr");
        try {
            return (int)mh$.invokeExact(strIn.address(), lcid, dwFlags, pnumprs.address(), rgbDig.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarNumFromParseNum$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VarNumFromParseNum$MH,"VarNumFromParseNum");
    }
    public static int VarNumFromParseNum ( Addressable pnumprs,  Addressable rgbDig,  int dwVtBits,  Addressable pvar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1247.VarNumFromParseNum$MH, "VarNumFromParseNum");
        try {
            return (int)mh$.invokeExact(pnumprs.address(), rgbDig.address(), dwVtBits, pvar.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarAdd$MH() {
        return RuntimeHelper.requireNonNull(constants$1247.VarAdd$MH,"VarAdd");
    }
    public static int VarAdd ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1247.VarAdd$MH, "VarAdd");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarAnd$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarAnd$MH,"VarAnd");
    }
    public static int VarAnd ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1248.VarAnd$MH, "VarAnd");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCat$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarCat$MH,"VarCat");
    }
    public static int VarCat ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1248.VarCat$MH, "VarCat");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDiv$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarDiv$MH,"VarDiv");
    }
    public static int VarDiv ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1248.VarDiv$MH, "VarDiv");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarEqv$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarEqv$MH,"VarEqv");
    }
    public static int VarEqv ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1248.VarEqv$MH, "VarEqv");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarIdiv$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarIdiv$MH,"VarIdiv");
    }
    public static int VarIdiv ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1248.VarIdiv$MH, "VarIdiv");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarImp$MH() {
        return RuntimeHelper.requireNonNull(constants$1248.VarImp$MH,"VarImp");
    }
    public static int VarImp ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1248.VarImp$MH, "VarImp");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarMod$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarMod$MH,"VarMod");
    }
    public static int VarMod ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1249.VarMod$MH, "VarMod");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarMul$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarMul$MH,"VarMul");
    }
    public static int VarMul ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1249.VarMul$MH, "VarMul");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarOr$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarOr$MH,"VarOr");
    }
    public static int VarOr ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1249.VarOr$MH, "VarOr");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarPow$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarPow$MH,"VarPow");
    }
    public static int VarPow ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1249.VarPow$MH, "VarPow");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarSub$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarSub$MH,"VarSub");
    }
    public static int VarSub ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1249.VarSub$MH, "VarSub");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarXor$MH() {
        return RuntimeHelper.requireNonNull(constants$1249.VarXor$MH,"VarXor");
    }
    public static int VarXor ( Addressable pvarLeft,  Addressable pvarRight,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1249.VarXor$MH, "VarXor");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarAbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarAbs$MH,"VarAbs");
    }
    public static int VarAbs ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1250.VarAbs$MH, "VarAbs");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFix$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarFix$MH,"VarFix");
    }
    public static int VarFix ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1250.VarFix$MH, "VarFix");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarInt$MH,"VarInt");
    }
    public static int VarInt ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1250.VarInt$MH, "VarInt");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarNeg$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarNeg$MH,"VarNeg");
    }
    public static int VarNeg ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1250.VarNeg$MH, "VarNeg");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarNot$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarNot$MH,"VarNot");
    }
    public static int VarNot ( Addressable pvarIn,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1250.VarNot$MH, "VarNot");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarRound$MH() {
        return RuntimeHelper.requireNonNull(constants$1250.VarRound$MH,"VarRound");
    }
    public static int VarRound ( Addressable pvarIn,  int cDecimals,  Addressable pvarResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1250.VarRound$MH, "VarRound");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), cDecimals, pvarResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarCmp$MH,"VarCmp");
    }
    public static int VarCmp ( Addressable pvarLeft,  Addressable pvarRight,  int lcid,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1251.VarCmp$MH, "VarCmp");
        try {
            return (int)mh$.invokeExact(pvarLeft.address(), pvarRight.address(), lcid, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecAdd$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarDecAdd$MH,"VarDecAdd");
    }
    public static int VarDecAdd ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1251.VarDecAdd$MH, "VarDecAdd");
        try {
            return (int)mh$.invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecDiv$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarDecDiv$MH,"VarDecDiv");
    }
    public static int VarDecDiv ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1251.VarDecDiv$MH, "VarDecDiv");
        try {
            return (int)mh$.invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecMul$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarDecMul$MH,"VarDecMul");
    }
    public static int VarDecMul ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1251.VarDecMul$MH, "VarDecMul");
        try {
            return (int)mh$.invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecSub$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarDecSub$MH,"VarDecSub");
    }
    public static int VarDecSub ( Addressable pdecLeft,  Addressable pdecRight,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1251.VarDecSub$MH, "VarDecSub");
        try {
            return (int)mh$.invokeExact(pdecLeft.address(), pdecRight.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecAbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1251.VarDecAbs$MH,"VarDecAbs");
    }
    public static int VarDecAbs ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1251.VarDecAbs$MH, "VarDecAbs");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecFix$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarDecFix$MH,"VarDecFix");
    }
    public static int VarDecFix ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1252.VarDecFix$MH, "VarDecFix");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarDecInt$MH,"VarDecInt");
    }
    public static int VarDecInt ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1252.VarDecInt$MH, "VarDecInt");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecNeg$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarDecNeg$MH,"VarDecNeg");
    }
    public static int VarDecNeg ( Addressable pdecIn,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1252.VarDecNeg$MH, "VarDecNeg");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecRound$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarDecRound$MH,"VarDecRound");
    }
    public static int VarDecRound ( Addressable pdecIn,  int cDecimals,  Addressable pdecResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1252.VarDecRound$MH, "VarDecRound");
        try {
            return (int)mh$.invokeExact(pdecIn.address(), cDecimals, pdecResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarDecCmp$MH,"VarDecCmp");
    }
    public static int VarDecCmp ( Addressable pdecLeft,  Addressable pdecRight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1252.VarDecCmp$MH, "VarDecCmp");
        try {
            return (int)mh$.invokeExact(pdecLeft.address(), pdecRight.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDecCmpR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1252.VarDecCmpR8$MH,"VarDecCmpR8");
    }
    public static int VarDecCmpR8 ( Addressable pdecLeft,  double dblRight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1252.VarDecCmpR8$MH, "VarDecCmpR8");
        try {
            return (int)mh$.invokeExact(pdecLeft.address(), dblRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyAdd$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarCyAdd$MH,"VarCyAdd");
    }
    public static int VarCyAdd ( MemorySegment cyLeft,  MemorySegment cyRight,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1253.VarCyAdd$MH, "VarCyAdd");
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyMul$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarCyMul$MH,"VarCyMul");
    }
    public static int VarCyMul ( MemorySegment cyLeft,  MemorySegment cyRight,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1253.VarCyMul$MH, "VarCyMul");
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyMulI4$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarCyMulI4$MH,"VarCyMulI4");
    }
    public static int VarCyMulI4 ( MemorySegment cyLeft,  int lRight,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1253.VarCyMulI4$MH, "VarCyMulI4");
        try {
            return (int)mh$.invokeExact(cyLeft, lRight, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyMulI8$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarCyMulI8$MH,"VarCyMulI8");
    }
    public static int VarCyMulI8 ( MemorySegment cyLeft,  long lRight,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1253.VarCyMulI8$MH, "VarCyMulI8");
        try {
            return (int)mh$.invokeExact(cyLeft, lRight, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCySub$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarCySub$MH,"VarCySub");
    }
    public static int VarCySub ( MemorySegment cyLeft,  MemorySegment cyRight,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1253.VarCySub$MH, "VarCySub");
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyAbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1253.VarCyAbs$MH,"VarCyAbs");
    }
    public static int VarCyAbs ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1253.VarCyAbs$MH, "VarCyAbs");
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyFix$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarCyFix$MH,"VarCyFix");
    }
    public static int VarCyFix ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1254.VarCyFix$MH, "VarCyFix");
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyInt$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarCyInt$MH,"VarCyInt");
    }
    public static int VarCyInt ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1254.VarCyInt$MH, "VarCyInt");
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyNeg$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarCyNeg$MH,"VarCyNeg");
    }
    public static int VarCyNeg ( MemorySegment cyIn,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1254.VarCyNeg$MH, "VarCyNeg");
        try {
            return (int)mh$.invokeExact(cyIn, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyRound$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarCyRound$MH,"VarCyRound");
    }
    public static int VarCyRound ( MemorySegment cyIn,  int cDecimals,  Addressable pcyResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1254.VarCyRound$MH, "VarCyRound");
        try {
            return (int)mh$.invokeExact(cyIn, cDecimals, pcyResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarCyCmp$MH,"VarCyCmp");
    }
    public static int VarCyCmp ( MemorySegment cyLeft,  MemorySegment cyRight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1254.VarCyCmp$MH, "VarCyCmp");
        try {
            return (int)mh$.invokeExact(cyLeft, cyRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarCyCmpR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1254.VarCyCmpR8$MH,"VarCyCmpR8");
    }
    public static int VarCyCmpR8 ( MemorySegment cyLeft,  double dblRight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1254.VarCyCmpR8$MH, "VarCyCmpR8");
        try {
            return (int)mh$.invokeExact(cyLeft, dblRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrCat$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarBstrCat$MH,"VarBstrCat");
    }
    public static int VarBstrCat ( Addressable bstrLeft,  Addressable bstrRight,  Addressable pbstrResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1255.VarBstrCat$MH, "VarBstrCat");
        try {
            return (int)mh$.invokeExact(bstrLeft.address(), bstrRight.address(), pbstrResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarBstrCmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarBstrCmp$MH,"VarBstrCmp");
    }
    public static int VarBstrCmp ( Addressable bstrLeft,  Addressable bstrRight,  int lcid,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1255.VarBstrCmp$MH, "VarBstrCmp");
        try {
            return (int)mh$.invokeExact(bstrLeft.address(), bstrRight.address(), lcid, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8Pow$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarR8Pow$MH,"VarR8Pow");
    }
    public static int VarR8Pow ( double dblLeft,  double dblRight,  Addressable pdblResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1255.VarR8Pow$MH, "VarR8Pow");
        try {
            return (int)mh$.invokeExact(dblLeft, dblRight, pdblResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR4CmpR8$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarR4CmpR8$MH,"VarR4CmpR8");
    }
    public static int VarR4CmpR8 ( float fltLeft,  double dblRight) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1255.VarR4CmpR8$MH, "VarR4CmpR8");
        try {
            return (int)mh$.invokeExact(fltLeft, dblRight);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarR8Round$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarR8Round$MH,"VarR8Round");
    }
    public static int VarR8Round ( double dblIn,  int cDecimals,  Addressable pdblResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1255.VarR8Round$MH, "VarR8Round");
        try {
            return (int)mh$.invokeExact(dblIn, cDecimals, pdblResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUdate$MH() {
        return RuntimeHelper.requireNonNull(constants$1255.VarDateFromUdate$MH,"VarDateFromUdate");
    }
    public static int VarDateFromUdate ( Addressable pudateIn,  int dwFlags,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1255.VarDateFromUdate$MH, "VarDateFromUdate");
        try {
            return (int)mh$.invokeExact(pudateIn.address(), dwFlags, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarDateFromUdateEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarDateFromUdateEx$MH,"VarDateFromUdateEx");
    }
    public static int VarDateFromUdateEx ( Addressable pudateIn,  int lcid,  int dwFlags,  Addressable pdateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1256.VarDateFromUdateEx$MH, "VarDateFromUdateEx");
        try {
            return (int)mh$.invokeExact(pudateIn.address(), lcid, dwFlags, pdateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarUdateFromDate$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarUdateFromDate$MH,"VarUdateFromDate");
    }
    public static int VarUdateFromDate ( double dateIn,  int dwFlags,  Addressable pudateOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1256.VarUdateFromDate$MH, "VarUdateFromDate");
        try {
            return (int)mh$.invokeExact(dateIn, dwFlags, pudateOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetAltMonthNames$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.GetAltMonthNames$MH,"GetAltMonthNames");
    }
    public static int GetAltMonthNames ( int lcid,  Addressable prgp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1256.GetAltMonthNames$MH, "GetAltMonthNames");
        try {
            return (int)mh$.invokeExact(lcid, prgp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormat$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarFormat$MH,"VarFormat");
    }
    public static int VarFormat ( Addressable pvarIn,  Addressable pstrFormat,  int iFirstDay,  int iFirstWeek,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1256.VarFormat$MH, "VarFormat");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), pstrFormat.address(), iFirstDay, iFirstWeek, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatDateTime$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarFormatDateTime$MH,"VarFormatDateTime");
    }
    public static int VarFormatDateTime ( Addressable pvarIn,  int iNamedFormat,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1256.VarFormatDateTime$MH, "VarFormatDateTime");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), iNamedFormat, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatNumber$MH() {
        return RuntimeHelper.requireNonNull(constants$1256.VarFormatNumber$MH,"VarFormatNumber");
    }
    public static int VarFormatNumber ( Addressable pvarIn,  int iNumDig,  int iIncLead,  int iUseParens,  int iGroup,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1256.VarFormatNumber$MH, "VarFormatNumber");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatPercent$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarFormatPercent$MH,"VarFormatPercent");
    }
    public static int VarFormatPercent ( Addressable pvarIn,  int iNumDig,  int iIncLead,  int iUseParens,  int iGroup,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1257.VarFormatPercent$MH, "VarFormatPercent");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatCurrency$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarFormatCurrency$MH,"VarFormatCurrency");
    }
    public static int VarFormatCurrency ( Addressable pvarIn,  int iNumDig,  int iIncLead,  int iUseParens,  int iGroup,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1257.VarFormatCurrency$MH, "VarFormatCurrency");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), iNumDig, iIncLead, iUseParens, iGroup, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarWeekdayName$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarWeekdayName$MH,"VarWeekdayName");
    }
    public static int VarWeekdayName ( int iWeekday,  int fAbbrev,  int iFirstDay,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1257.VarWeekdayName$MH, "VarWeekdayName");
        try {
            return (int)mh$.invokeExact(iWeekday, fAbbrev, iFirstDay, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarMonthName$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarMonthName$MH,"VarMonthName");
    }
    public static int VarMonthName ( int iMonth,  int fAbbrev,  int dwFlags,  Addressable pbstrOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1257.VarMonthName$MH, "VarMonthName");
        try {
            return (int)mh$.invokeExact(iMonth, fAbbrev, dwFlags, pbstrOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarFormatFromTokens$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarFormatFromTokens$MH,"VarFormatFromTokens");
    }
    public static int VarFormatFromTokens ( Addressable pvarIn,  Addressable pstrFormat,  Addressable pbTokCur,  int dwFlags,  Addressable pbstrOut,  int lcid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1257.VarFormatFromTokens$MH, "VarFormatFromTokens");
        try {
            return (int)mh$.invokeExact(pvarIn.address(), pstrFormat.address(), pbTokCur.address(), dwFlags, pbstrOut.address(), lcid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VarTokenizeFormatString$MH() {
        return RuntimeHelper.requireNonNull(constants$1257.VarTokenizeFormatString$MH,"VarTokenizeFormatString");
    }
    public static int VarTokenizeFormatString ( Addressable pstrFormat,  Addressable rgbTok,  int cbTok,  int iFirstDay,  int iFirstWeek,  int lcid,  Addressable pcbActual) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1257.VarTokenizeFormatString$MH, "VarTokenizeFormatString");
        try {
            return (int)mh$.invokeExact(pstrFormat.address(), rgbTok.address(), cbTok, iFirstDay, iFirstWeek, lcid, pcbActual.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static ValueLayout DISPID = C_LONG;
    public static ValueLayout MEMBERID = C_LONG;
    public static MethodHandle LHashValOfNameSysA$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.LHashValOfNameSysA$MH,"LHashValOfNameSysA");
    }
    public static int LHashValOfNameSysA ( int syskind,  int lcid,  Addressable szName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1258.LHashValOfNameSysA$MH, "LHashValOfNameSysA");
        try {
            return (int)mh$.invokeExact(syskind, lcid, szName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LHashValOfNameSys$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.LHashValOfNameSys$MH,"LHashValOfNameSys");
    }
    public static int LHashValOfNameSys ( int syskind,  int lcid,  Addressable szName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1258.LHashValOfNameSys$MH, "LHashValOfNameSys");
        try {
            return (int)mh$.invokeExact(syskind, lcid, szName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.LoadTypeLib$MH,"LoadTypeLib");
    }
    public static int LoadTypeLib ( Addressable szFile,  Addressable pptlib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1258.LoadTypeLib$MH, "LoadTypeLib");
        try {
            return (int)mh$.invokeExact(szFile.address(), pptlib.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int REGKIND_DEFAULT() {
        return (int)0L;
    }
    public static int REGKIND_REGISTER() {
        return (int)1L;
    }
    public static int REGKIND_NONE() {
        return (int)2L;
    }
    public static MethodHandle LoadTypeLibEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.LoadTypeLibEx$MH,"LoadTypeLibEx");
    }
    public static int LoadTypeLibEx ( Addressable szFile,  int regkind,  Addressable pptlib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1258.LoadTypeLibEx$MH, "LoadTypeLibEx");
        try {
            return (int)mh$.invokeExact(szFile.address(), regkind, pptlib.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LoadRegTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.LoadRegTypeLib$MH,"LoadRegTypeLib");
    }
    public static int LoadRegTypeLib ( Addressable rguid,  short wVerMajor,  short wVerMinor,  int lcid,  Addressable pptlib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1258.LoadRegTypeLib$MH, "LoadRegTypeLib");
        try {
            return (int)mh$.invokeExact(rguid.address(), wVerMajor, wVerMinor, lcid, pptlib.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryPathOfRegTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1258.QueryPathOfRegTypeLib$MH,"QueryPathOfRegTypeLib");
    }
    public static int QueryPathOfRegTypeLib ( Addressable guid,  short wMaj,  short wMin,  int lcid,  Addressable lpbstrPathName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1258.QueryPathOfRegTypeLib$MH, "QueryPathOfRegTypeLib");
        try {
            return (int)mh$.invokeExact(guid.address(), wMaj, wMin, lcid, lpbstrPathName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.RegisterTypeLib$MH,"RegisterTypeLib");
    }
    public static int RegisterTypeLib ( Addressable ptlib,  Addressable szFullPath,  Addressable szHelpDir) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1259.RegisterTypeLib$MH, "RegisterTypeLib");
        try {
            return (int)mh$.invokeExact(ptlib.address(), szFullPath.address(), szHelpDir.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnRegisterTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.UnRegisterTypeLib$MH,"UnRegisterTypeLib");
    }
    public static int UnRegisterTypeLib ( Addressable libID,  short wVerMajor,  short wVerMinor,  int lcid,  int syskind) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1259.UnRegisterTypeLib$MH, "UnRegisterTypeLib");
        try {
            return (int)mh$.invokeExact(libID.address(), wVerMajor, wVerMinor, lcid, syskind);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateTypeLib$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.CreateTypeLib$MH,"CreateTypeLib");
    }
    public static int CreateTypeLib ( int syskind,  Addressable szFile,  Addressable ppctlib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1259.CreateTypeLib$MH, "CreateTypeLib");
        try {
            return (int)mh$.invokeExact(syskind, szFile.address(), ppctlib.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateTypeLib2$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.CreateTypeLib2$MH,"CreateTypeLib2");
    }
    public static int CreateTypeLib2 ( int syskind,  Addressable szFile,  Addressable ppctlib) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1259.CreateTypeLib2$MH, "CreateTypeLib2");
        try {
            return (int)mh$.invokeExact(syskind, szFile.address(), ppctlib.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispGetParam$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.DispGetParam$MH,"DispGetParam");
    }
    public static int DispGetParam ( Addressable pdispparams,  int position,  short vtTarg,  Addressable pvarResult,  Addressable puArgErr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1259.DispGetParam$MH, "DispGetParam");
        try {
            return (int)mh$.invokeExact(pdispparams.address(), position, vtTarg, pvarResult.address(), puArgErr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispGetIDsOfNames$MH() {
        return RuntimeHelper.requireNonNull(constants$1259.DispGetIDsOfNames$MH,"DispGetIDsOfNames");
    }
    public static int DispGetIDsOfNames ( Addressable ptinfo,  Addressable rgszNames,  int cNames,  Addressable rgdispid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1259.DispGetIDsOfNames$MH, "DispGetIDsOfNames");
        try {
            return (int)mh$.invokeExact(ptinfo.address(), rgszNames.address(), cNames, rgdispid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispInvoke$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.DispInvoke$MH,"DispInvoke");
    }
    public static int DispInvoke ( Addressable _this,  Addressable ptinfo,  int dispidMember,  short wFlags,  Addressable pparams,  Addressable pvarResult,  Addressable pexcepinfo,  Addressable puArgErr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1260.DispInvoke$MH, "DispInvoke");
        try {
            return (int)mh$.invokeExact(_this.address(), ptinfo.address(), dispidMember, wFlags, pparams.address(), pvarResult.address(), pexcepinfo.address(), puArgErr.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateDispTypeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.CreateDispTypeInfo$MH,"CreateDispTypeInfo");
    }
    public static int CreateDispTypeInfo ( Addressable pidata,  int lcid,  Addressable pptinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1260.CreateDispTypeInfo$MH, "CreateDispTypeInfo");
        try {
            return (int)mh$.invokeExact(pidata.address(), lcid, pptinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateStdDispatch$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.CreateStdDispatch$MH,"CreateStdDispatch");
    }
    public static int CreateStdDispatch ( Addressable punkOuter,  Addressable pvThis,  Addressable ptinfo,  Addressable ppunkStdDisp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1260.CreateStdDispatch$MH, "CreateStdDispatch");
        try {
            return (int)mh$.invokeExact(punkOuter.address(), pvThis.address(), ptinfo.address(), ppunkStdDisp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DispCallFunc$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.DispCallFunc$MH,"DispCallFunc");
    }
    public static int DispCallFunc ( Addressable pvInstance,  long oVft,  int cc,  short vtReturn,  int cActuals,  Addressable prgvt,  Addressable prgpvarg,  Addressable pvargResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1260.DispCallFunc$MH, "DispCallFunc");
        try {
            return (int)mh$.invokeExact(pvInstance.address(), oVft, cc, vtReturn, cActuals, prgvt.address(), prgpvarg.address(), pvargResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterActiveObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.RegisterActiveObject$MH,"RegisterActiveObject");
    }
    public static int RegisterActiveObject ( Addressable punk,  Addressable rclsid,  int dwFlags,  Addressable pdwRegister) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1260.RegisterActiveObject$MH, "RegisterActiveObject");
        try {
            return (int)mh$.invokeExact(punk.address(), rclsid.address(), dwFlags, pdwRegister.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RevokeActiveObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1260.RevokeActiveObject$MH,"RevokeActiveObject");
    }
    public static int RevokeActiveObject ( int dwRegister,  Addressable pvReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1260.RevokeActiveObject$MH, "RevokeActiveObject");
        try {
            return (int)mh$.invokeExact(dwRegister, pvReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetActiveObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.GetActiveObject$MH,"GetActiveObject");
    }
    public static int GetActiveObject ( Addressable rclsid,  Addressable pvReserved,  Addressable ppunk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1261.GetActiveObject$MH, "GetActiveObject");
        try {
            return (int)mh$.invokeExact(rclsid.address(), pvReserved.address(), ppunk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.SetErrorInfo$MH,"SetErrorInfo");
    }
    public static int SetErrorInfo ( int dwReserved,  Addressable perrinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1261.SetErrorInfo$MH, "SetErrorInfo");
        try {
            return (int)mh$.invokeExact(dwReserved, perrinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.GetErrorInfo$MH,"GetErrorInfo");
    }
    public static int GetErrorInfo ( int dwReserved,  Addressable pperrinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1261.GetErrorInfo$MH, "GetErrorInfo");
        try {
            return (int)mh$.invokeExact(dwReserved, pperrinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.CreateErrorInfo$MH,"CreateErrorInfo");
    }
    public static int CreateErrorInfo ( Addressable pperrinfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1261.CreateErrorInfo$MH, "CreateErrorInfo");
        try {
            return (int)mh$.invokeExact(pperrinfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRecordInfoFromTypeInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.GetRecordInfoFromTypeInfo$MH,"GetRecordInfoFromTypeInfo");
    }
    public static int GetRecordInfoFromTypeInfo ( Addressable pTypeInfo,  Addressable ppRecInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1261.GetRecordInfoFromTypeInfo$MH, "GetRecordInfoFromTypeInfo");
        try {
            return (int)mh$.invokeExact(pTypeInfo.address(), ppRecInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetRecordInfoFromGuids$MH() {
        return RuntimeHelper.requireNonNull(constants$1261.GetRecordInfoFromGuids$MH,"GetRecordInfoFromGuids");
    }
    public static int GetRecordInfoFromGuids ( Addressable rGuidTypeLib,  int uVerMajor,  int uVerMinor,  int lcid,  Addressable rGuidTypeInfo,  Addressable ppRecInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1261.GetRecordInfoFromGuids$MH, "GetRecordInfoFromGuids");
        try {
            return (int)mh$.invokeExact(rGuidTypeLib.address(), uVerMajor, uVerMinor, lcid, rGuidTypeInfo.address(), ppRecInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OaBuildVersion$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.OaBuildVersion$MH,"OaBuildVersion");
    }
    public static int OaBuildVersion () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1262.OaBuildVersion$MH, "OaBuildVersion");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClearCustData$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.ClearCustData$MH,"ClearCustData");
    }
    public static void ClearCustData ( Addressable pCustData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1262.ClearCustData$MH, "ClearCustData");
        try {
            mh$.invokeExact(pCustData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleBuildVersion$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.OleBuildVersion$MH,"OleBuildVersion");
    }
    public static int OleBuildVersion () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1262.OleBuildVersion$MH, "OleBuildVersion");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadClassStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.ReadClassStg$MH,"ReadClassStg");
    }
    public static int ReadClassStg ( Addressable pStg,  Addressable pclsid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1262.ReadClassStg$MH, "ReadClassStg");
        try {
            return (int)mh$.invokeExact(pStg.address(), pclsid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteClassStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.WriteClassStg$MH,"WriteClassStg");
    }
    public static int WriteClassStg ( Addressable pStg,  Addressable rclsid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1262.WriteClassStg$MH, "WriteClassStg");
        try {
            return (int)mh$.invokeExact(pStg.address(), rclsid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadClassStm$MH() {
        return RuntimeHelper.requireNonNull(constants$1262.ReadClassStm$MH,"ReadClassStm");
    }
    public static int ReadClassStm ( Addressable pStm,  Addressable pclsid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1262.ReadClassStm$MH, "ReadClassStm");
        try {
            return (int)mh$.invokeExact(pStm.address(), pclsid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteClassStm$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.WriteClassStm$MH,"WriteClassStm");
    }
    public static int WriteClassStm ( Addressable pStm,  Addressable rclsid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1263.WriteClassStm$MH, "WriteClassStm");
        try {
            return (int)mh$.invokeExact(pStm.address(), rclsid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteFmtUserTypeStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.WriteFmtUserTypeStg$MH,"WriteFmtUserTypeStg");
    }
    public static int WriteFmtUserTypeStg ( Addressable pstg,  short cf,  Addressable lpszUserType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1263.WriteFmtUserTypeStg$MH, "WriteFmtUserTypeStg");
        try {
            return (int)mh$.invokeExact(pstg.address(), cf, lpszUserType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadFmtUserTypeStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.ReadFmtUserTypeStg$MH,"ReadFmtUserTypeStg");
    }
    public static int ReadFmtUserTypeStg ( Addressable pstg,  Addressable pcf,  Addressable lplpszUserType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1263.ReadFmtUserTypeStg$MH, "ReadFmtUserTypeStg");
        try {
            return (int)mh$.invokeExact(pstg.address(), pcf.address(), lplpszUserType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleInitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.OleInitialize$MH,"OleInitialize");
    }
    public static int OleInitialize ( Addressable pvReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1263.OleInitialize$MH, "OleInitialize");
        try {
            return (int)mh$.invokeExact(pvReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleUninitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.OleUninitialize$MH,"OleUninitialize");
    }
    public static void OleUninitialize () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1263.OleUninitialize$MH, "OleUninitialize");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleQueryLinkFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1263.OleQueryLinkFromData$MH,"OleQueryLinkFromData");
    }
    public static int OleQueryLinkFromData ( Addressable pSrcDataObject) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1263.OleQueryLinkFromData$MH, "OleQueryLinkFromData");
        try {
            return (int)mh$.invokeExact(pSrcDataObject.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleQueryCreateFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.OleQueryCreateFromData$MH,"OleQueryCreateFromData");
    }
    public static int OleQueryCreateFromData ( Addressable pSrcDataObject) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1264.OleQueryCreateFromData$MH, "OleQueryCreateFromData");
        try {
            return (int)mh$.invokeExact(pSrcDataObject.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.OleCreate$MH,"OleCreate");
    }
    public static int OleCreate ( Addressable rclsid,  Addressable riid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1264.OleCreate$MH, "OleCreate");
        try {
            return (int)mh$.invokeExact(rclsid.address(), riid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.OleCreateEx$MH,"OleCreateEx");
    }
    public static int OleCreateEx ( Addressable rclsid,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1264.OleCreateEx$MH, "OleCreateEx");
        try {
            return (int)mh$.invokeExact(rclsid.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.OleCreateFromData$MH,"OleCreateFromData");
    }
    public static int OleCreateFromData ( Addressable pSrcDataObj,  Addressable riid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1264.OleCreateFromData$MH, "OleCreateFromData");
        try {
            return (int)mh$.invokeExact(pSrcDataObj.address(), riid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromDataEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.OleCreateFromDataEx$MH,"OleCreateFromDataEx");
    }
    public static int OleCreateFromDataEx ( Addressable pSrcDataObj,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1264.OleCreateFromDataEx$MH, "OleCreateFromDataEx");
        try {
            return (int)mh$.invokeExact(pSrcDataObj.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1264.OleCreateLinkFromData$MH,"OleCreateLinkFromData");
    }
    public static int OleCreateLinkFromData ( Addressable pSrcDataObj,  Addressable riid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1264.OleCreateLinkFromData$MH, "OleCreateLinkFromData");
        try {
            return (int)mh$.invokeExact(pSrcDataObj.address(), riid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkFromDataEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkFromDataEx$MH,"OleCreateLinkFromDataEx");
    }
    public static int OleCreateLinkFromDataEx ( Addressable pSrcDataObj,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkFromDataEx$MH, "OleCreateLinkFromDataEx");
        try {
            return (int)mh$.invokeExact(pSrcDataObj.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateStaticFromData$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.OleCreateStaticFromData$MH,"OleCreateStaticFromData");
    }
    public static int OleCreateStaticFromData ( Addressable pSrcDataObj,  Addressable iid,  int renderopt,  Addressable pFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1265.OleCreateStaticFromData$MH, "OleCreateStaticFromData");
        try {
            return (int)mh$.invokeExact(pSrcDataObj.address(), iid.address(), renderopt, pFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLink$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.OleCreateLink$MH,"OleCreateLink");
    }
    public static int OleCreateLink ( Addressable pmkLinkSrc,  Addressable riid,  int renderopt,  Addressable lpFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1265.OleCreateLink$MH, "OleCreateLink");
        try {
            return (int)mh$.invokeExact(pmkLinkSrc.address(), riid.address(), renderopt, lpFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkEx$MH,"OleCreateLinkEx");
    }
    public static int OleCreateLinkEx ( Addressable pmkLinkSrc,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkEx$MH, "OleCreateLinkEx");
        try {
            return (int)mh$.invokeExact(pmkLinkSrc.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkToFile$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkToFile$MH,"OleCreateLinkToFile");
    }
    public static int OleCreateLinkToFile ( Addressable lpszFileName,  Addressable riid,  int renderopt,  Addressable lpFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkToFile$MH, "OleCreateLinkToFile");
        try {
            return (int)mh$.invokeExact(lpszFileName.address(), riid.address(), renderopt, lpFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateLinkToFileEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkToFileEx$MH,"OleCreateLinkToFileEx");
    }
    public static int OleCreateLinkToFileEx ( Addressable lpszFileName,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1265.OleCreateLinkToFileEx$MH, "OleCreateLinkToFileEx");
        try {
            return (int)mh$.invokeExact(lpszFileName.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromFile$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.OleCreateFromFile$MH,"OleCreateFromFile");
    }
    public static int OleCreateFromFile ( Addressable rclsid,  Addressable lpszFileName,  Addressable riid,  int renderopt,  Addressable lpFormatEtc,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1266.OleCreateFromFile$MH, "OleCreateFromFile");
        try {
            return (int)mh$.invokeExact(rclsid.address(), lpszFileName.address(), riid.address(), renderopt, lpFormatEtc.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateFromFileEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.OleCreateFromFileEx$MH,"OleCreateFromFileEx");
    }
    public static int OleCreateFromFileEx ( Addressable rclsid,  Addressable lpszFileName,  Addressable riid,  int dwFlags,  int renderopt,  int cFormats,  Addressable rgAdvf,  Addressable rgFormatEtc,  Addressable lpAdviseSink,  Addressable rgdwConnection,  Addressable pClientSite,  Addressable pStg,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1266.OleCreateFromFileEx$MH, "OleCreateFromFileEx");
        try {
            return (int)mh$.invokeExact(rclsid.address(), lpszFileName.address(), riid.address(), dwFlags, renderopt, cFormats, rgAdvf.address(), rgFormatEtc.address(), lpAdviseSink.address(), rgdwConnection.address(), pClientSite.address(), pStg.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleLoad$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.OleLoad$MH,"OleLoad");
    }
    public static int OleLoad ( Addressable pStg,  Addressable riid,  Addressable pClientSite,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1266.OleLoad$MH, "OleLoad");
        try {
            return (int)mh$.invokeExact(pStg.address(), riid.address(), pClientSite.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSave$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.OleSave$MH,"OleSave");
    }
    public static int OleSave ( Addressable pPS,  Addressable pStg,  int fSameAsLoad) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1266.OleSave$MH, "OleSave");
        try {
            return (int)mh$.invokeExact(pPS.address(), pStg.address(), fSameAsLoad);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleLoadFromStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.OleLoadFromStream$MH,"OleLoadFromStream");
    }
    public static int OleLoadFromStream ( Addressable pStm,  Addressable iidInterface,  Addressable ppvObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1266.OleLoadFromStream$MH, "OleLoadFromStream");
        try {
            return (int)mh$.invokeExact(pStm.address(), iidInterface.address(), ppvObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSaveToStream$MH() {
        return RuntimeHelper.requireNonNull(constants$1266.OleSaveToStream$MH,"OleSaveToStream");
    }
    public static int OleSaveToStream ( Addressable pPStm,  Addressable pStm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1266.OleSaveToStream$MH, "OleSaveToStream");
        try {
            return (int)mh$.invokeExact(pPStm.address(), pStm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetContainedObject$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.OleSetContainedObject$MH,"OleSetContainedObject");
    }
    public static int OleSetContainedObject ( Addressable pUnknown,  int fContained) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1267.OleSetContainedObject$MH, "OleSetContainedObject");
        try {
            return (int)mh$.invokeExact(pUnknown.address(), fContained);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleNoteObjectVisible$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.OleNoteObjectVisible$MH,"OleNoteObjectVisible");
    }
    public static int OleNoteObjectVisible ( Addressable pUnknown,  int fVisible) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1267.OleNoteObjectVisible$MH, "OleNoteObjectVisible");
        try {
            return (int)mh$.invokeExact(pUnknown.address(), fVisible);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterDragDrop$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.RegisterDragDrop$MH,"RegisterDragDrop");
    }
    public static int RegisterDragDrop ( Addressable hwnd,  Addressable pDropTarget) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1267.RegisterDragDrop$MH, "RegisterDragDrop");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pDropTarget.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RevokeDragDrop$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.RevokeDragDrop$MH,"RevokeDragDrop");
    }
    public static int RevokeDragDrop ( Addressable hwnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1267.RevokeDragDrop$MH, "RevokeDragDrop");
        try {
            return (int)mh$.invokeExact(hwnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DoDragDrop$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.DoDragDrop$MH,"DoDragDrop");
    }
    public static int DoDragDrop ( Addressable pDataObj,  Addressable pDropSource,  int dwOKEffects,  Addressable pdwEffect) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1267.DoDragDrop$MH, "DoDragDrop");
        try {
            return (int)mh$.invokeExact(pDataObj.address(), pDropSource.address(), dwOKEffects, pdwEffect.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1267.OleSetClipboard$MH,"OleSetClipboard");
    }
    public static int OleSetClipboard ( Addressable pDataObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1267.OleSetClipboard$MH, "OleSetClipboard");
        try {
            return (int)mh$.invokeExact(pDataObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.OleGetClipboard$MH,"OleGetClipboard");
    }
    public static int OleGetClipboard ( Addressable ppDataObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1268.OleGetClipboard$MH, "OleGetClipboard");
        try {
            return (int)mh$.invokeExact(ppDataObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleFlushClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.OleFlushClipboard$MH,"OleFlushClipboard");
    }
    public static int OleFlushClipboard () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1268.OleFlushClipboard$MH, "OleFlushClipboard");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleIsCurrentClipboard$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.OleIsCurrentClipboard$MH,"OleIsCurrentClipboard");
    }
    public static int OleIsCurrentClipboard ( Addressable pDataObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1268.OleIsCurrentClipboard$MH, "OleIsCurrentClipboard");
        try {
            return (int)mh$.invokeExact(pDataObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateMenuDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.OleCreateMenuDescriptor$MH,"OleCreateMenuDescriptor");
    }
    public static MemoryAddress OleCreateMenuDescriptor ( Addressable hmenuCombined,  Addressable lpMenuWidths) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1268.OleCreateMenuDescriptor$MH, "OleCreateMenuDescriptor");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hmenuCombined.address(), lpMenuWidths.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetMenuDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.OleSetMenuDescriptor$MH,"OleSetMenuDescriptor");
    }
    public static int OleSetMenuDescriptor ( Addressable holemenu,  Addressable hwndFrame,  Addressable hwndActiveObject,  Addressable lpFrame,  Addressable lpActiveObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1268.OleSetMenuDescriptor$MH, "OleSetMenuDescriptor");
        try {
            return (int)mh$.invokeExact(holemenu.address(), hwndFrame.address(), hwndActiveObject.address(), lpFrame.address(), lpActiveObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDestroyMenuDescriptor$MH() {
        return RuntimeHelper.requireNonNull(constants$1268.OleDestroyMenuDescriptor$MH,"OleDestroyMenuDescriptor");
    }
    public static int OleDestroyMenuDescriptor ( Addressable holemenu) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1268.OleDestroyMenuDescriptor$MH, "OleDestroyMenuDescriptor");
        try {
            return (int)mh$.invokeExact(holemenu.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleTranslateAccelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.OleTranslateAccelerator$MH,"OleTranslateAccelerator");
    }
    public static int OleTranslateAccelerator ( Addressable lpFrame,  Addressable lpFrameInfo,  Addressable lpmsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1269.OleTranslateAccelerator$MH, "OleTranslateAccelerator");
        try {
            return (int)mh$.invokeExact(lpFrame.address(), lpFrameInfo.address(), lpmsg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDuplicateData$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.OleDuplicateData$MH,"OleDuplicateData");
    }
    public static MemoryAddress OleDuplicateData ( Addressable hSrc,  short cfFormat,  int uiFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1269.OleDuplicateData$MH, "OleDuplicateData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hSrc.address(), cfFormat, uiFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDraw$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.OleDraw$MH,"OleDraw");
    }
    public static int OleDraw ( Addressable pUnknown,  int dwAspect,  Addressable hdcDraw,  Addressable lprcBounds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1269.OleDraw$MH, "OleDraw");
        try {
            return (int)mh$.invokeExact(pUnknown.address(), dwAspect, hdcDraw.address(), lprcBounds.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRun$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.OleRun$MH,"OleRun");
    }
    public static int OleRun ( Addressable pUnknown) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1269.OleRun$MH, "OleRun");
        try {
            return (int)mh$.invokeExact(pUnknown.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleIsRunning$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.OleIsRunning$MH,"OleIsRunning");
    }
    public static int OleIsRunning ( Addressable pObject) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1269.OleIsRunning$MH, "OleIsRunning");
        try {
            return (int)mh$.invokeExact(pObject.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleLockRunning$MH() {
        return RuntimeHelper.requireNonNull(constants$1269.OleLockRunning$MH,"OleLockRunning");
    }
    public static int OleLockRunning ( Addressable pUnknown,  int fLock,  int fLastUnlockCloses) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1269.OleLockRunning$MH, "OleLockRunning");
        try {
            return (int)mh$.invokeExact(pUnknown.address(), fLock, fLastUnlockCloses);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReleaseStgMedium$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.ReleaseStgMedium$MH,"ReleaseStgMedium");
    }
    public static void ReleaseStgMedium ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1270.ReleaseStgMedium$MH, "ReleaseStgMedium");
        try {
            mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateOleAdviseHolder$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.CreateOleAdviseHolder$MH,"CreateOleAdviseHolder");
    }
    public static int CreateOleAdviseHolder ( Addressable ppOAHolder) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1270.CreateOleAdviseHolder$MH, "CreateOleAdviseHolder");
        try {
            return (int)mh$.invokeExact(ppOAHolder.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateDefaultHandler$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.OleCreateDefaultHandler$MH,"OleCreateDefaultHandler");
    }
    public static int OleCreateDefaultHandler ( Addressable clsid,  Addressable pUnkOuter,  Addressable riid,  Addressable lplpObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1270.OleCreateDefaultHandler$MH, "OleCreateDefaultHandler");
        try {
            return (int)mh$.invokeExact(clsid.address(), pUnkOuter.address(), riid.address(), lplpObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleCreateEmbeddingHelper$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.OleCreateEmbeddingHelper$MH,"OleCreateEmbeddingHelper");
    }
    public static int OleCreateEmbeddingHelper ( Addressable clsid,  Addressable pUnkOuter,  int flags,  Addressable pCF,  Addressable riid,  Addressable lplpObj) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1270.OleCreateEmbeddingHelper$MH, "OleCreateEmbeddingHelper");
        try {
            return (int)mh$.invokeExact(clsid.address(), pUnkOuter.address(), flags, pCF.address(), riid.address(), lplpObj.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsAccelerator$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.IsAccelerator$MH,"IsAccelerator");
    }
    public static int IsAccelerator ( Addressable hAccel,  int cAccelEntries,  Addressable lpMsg,  Addressable lpwCmd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1270.IsAccelerator$MH, "IsAccelerator");
        try {
            return (int)mh$.invokeExact(hAccel.address(), cAccelEntries, lpMsg.address(), lpwCmd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetIconOfFile$MH() {
        return RuntimeHelper.requireNonNull(constants$1270.OleGetIconOfFile$MH,"OleGetIconOfFile");
    }
    public static MemoryAddress OleGetIconOfFile ( Addressable lpszPath,  int fUseFileAsLabel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1270.OleGetIconOfFile$MH, "OleGetIconOfFile");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszPath.address(), fUseFileAsLabel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetIconOfClass$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.OleGetIconOfClass$MH,"OleGetIconOfClass");
    }
    public static MemoryAddress OleGetIconOfClass ( Addressable rclsid,  Addressable lpszLabel,  int fUseTypeAsLabel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1271.OleGetIconOfClass$MH, "OleGetIconOfClass");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(rclsid.address(), lpszLabel.address(), fUseTypeAsLabel);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleMetafilePictFromIconAndLabel$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.OleMetafilePictFromIconAndLabel$MH,"OleMetafilePictFromIconAndLabel");
    }
    public static MemoryAddress OleMetafilePictFromIconAndLabel ( Addressable hIcon,  Addressable lpszLabel,  Addressable lpszSourceFile,  int iIconIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1271.OleMetafilePictFromIconAndLabel$MH, "OleMetafilePictFromIconAndLabel");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hIcon.address(), lpszLabel.address(), lpszSourceFile.address(), iIconIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegGetUserType$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.OleRegGetUserType$MH,"OleRegGetUserType");
    }
    public static int OleRegGetUserType ( Addressable clsid,  int dwFormOfType,  Addressable pszUserType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1271.OleRegGetUserType$MH, "OleRegGetUserType");
        try {
            return (int)mh$.invokeExact(clsid.address(), dwFormOfType, pszUserType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegGetMiscStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.OleRegGetMiscStatus$MH,"OleRegGetMiscStatus");
    }
    public static int OleRegGetMiscStatus ( Addressable clsid,  int dwAspect,  Addressable pdwStatus) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1271.OleRegGetMiscStatus$MH, "OleRegGetMiscStatus");
        try {
            return (int)mh$.invokeExact(clsid.address(), dwAspect, pdwStatus.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegEnumFormatEtc$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.OleRegEnumFormatEtc$MH,"OleRegEnumFormatEtc");
    }
    public static int OleRegEnumFormatEtc ( Addressable clsid,  int dwDirection,  Addressable ppenum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1271.OleRegEnumFormatEtc$MH, "OleRegEnumFormatEtc");
        try {
            return (int)mh$.invokeExact(clsid.address(), dwDirection, ppenum.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleRegEnumVerbs$MH() {
        return RuntimeHelper.requireNonNull(constants$1271.OleRegEnumVerbs$MH,"OleRegEnumVerbs");
    }
    public static int OleRegEnumVerbs ( Addressable clsid,  Addressable ppenum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1271.OleRegEnumVerbs$MH, "OleRegEnumVerbs");
        try {
            return (int)mh$.invokeExact(clsid.address(), ppenum.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleConvertOLESTREAMToIStorage$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.OleConvertOLESTREAMToIStorage$MH,"OleConvertOLESTREAMToIStorage");
    }
    public static int OleConvertOLESTREAMToIStorage ( Addressable lpolestream,  Addressable pstg,  Addressable ptd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1272.OleConvertOLESTREAMToIStorage$MH, "OleConvertOLESTREAMToIStorage");
        try {
            return (int)mh$.invokeExact(lpolestream.address(), pstg.address(), ptd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleConvertIStorageToOLESTREAM$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.OleConvertIStorageToOLESTREAM$MH,"OleConvertIStorageToOLESTREAM");
    }
    public static int OleConvertIStorageToOLESTREAM ( Addressable pstg,  Addressable lpolestream) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1272.OleConvertIStorageToOLESTREAM$MH, "OleConvertIStorageToOLESTREAM");
        try {
            return (int)mh$.invokeExact(pstg.address(), lpolestream.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetHGlobalFromILockBytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.GetHGlobalFromILockBytes$MH,"GetHGlobalFromILockBytes");
    }
    public static int GetHGlobalFromILockBytes ( Addressable plkbyt,  Addressable phglobal) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1272.GetHGlobalFromILockBytes$MH, "GetHGlobalFromILockBytes");
        try {
            return (int)mh$.invokeExact(plkbyt.address(), phglobal.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateILockBytesOnHGlobal$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.CreateILockBytesOnHGlobal$MH,"CreateILockBytesOnHGlobal");
    }
    public static int CreateILockBytesOnHGlobal ( Addressable hGlobal,  int fDeleteOnRelease,  Addressable pplkbyt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1272.CreateILockBytesOnHGlobal$MH, "CreateILockBytesOnHGlobal");
        try {
            return (int)mh$.invokeExact(hGlobal.address(), fDeleteOnRelease, pplkbyt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleDoAutoConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.OleDoAutoConvert$MH,"OleDoAutoConvert");
    }
    public static int OleDoAutoConvert ( Addressable pStg,  Addressable pClsidNew) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1272.OleDoAutoConvert$MH, "OleDoAutoConvert");
        try {
            return (int)mh$.invokeExact(pStg.address(), pClsidNew.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleGetAutoConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$1272.OleGetAutoConvert$MH,"OleGetAutoConvert");
    }
    public static int OleGetAutoConvert ( Addressable clsidOld,  Addressable pClsidNew) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1272.OleGetAutoConvert$MH, "OleGetAutoConvert");
        try {
            return (int)mh$.invokeExact(clsidOld.address(), pClsidNew.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleSetAutoConvert$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.OleSetAutoConvert$MH,"OleSetAutoConvert");
    }
    public static int OleSetAutoConvert ( Addressable clsidOld,  Addressable clsidNew) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1273.OleSetAutoConvert$MH, "OleSetAutoConvert");
        try {
            return (int)mh$.invokeExact(clsidOld.address(), clsidNew.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConvertStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.GetConvertStg$MH,"GetConvertStg");
    }
    public static int GetConvertStg ( Addressable pStg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1273.GetConvertStg$MH, "GetConvertStg");
        try {
            return (int)mh$.invokeExact(pStg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConvertStg$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.SetConvertStg$MH,"SetConvertStg");
    }
    public static int SetConvertStg ( Addressable pStg,  int fConvert) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1273.SetConvertStg$MH, "SetConvertStg");
        try {
            return (int)mh$.invokeExact(pStg.address(), fConvert);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleConvertIStorageToOLESTREAMEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.OleConvertIStorageToOLESTREAMEx$MH,"OleConvertIStorageToOLESTREAMEx");
    }
    public static int OleConvertIStorageToOLESTREAMEx ( Addressable pstg,  short cfFormat,  int lWidth,  int lHeight,  int dwSize,  Addressable pmedium,  Addressable polestm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1273.OleConvertIStorageToOLESTREAMEx$MH, "OleConvertIStorageToOLESTREAMEx");
        try {
            return (int)mh$.invokeExact(pstg.address(), cfFormat, lWidth, lHeight, dwSize, pmedium.address(), polestm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OleConvertOLESTREAMToIStorageEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1273.OleConvertOLESTREAMToIStorageEx$MH,"OleConvertOLESTREAMToIStorageEx");
    }
    public static int OleConvertOLESTREAMToIStorageEx ( Addressable polestm,  Addressable pstg,  Addressable pcfFormat,  Addressable plwWidth,  Addressable plHeight,  Addressable pdwSize,  Addressable pmedium) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1273.OleConvertOLESTREAMToIStorageEx$MH, "OleConvertOLESTREAMToIStorageEx");
        try {
            return (int)mh$.invokeExact(polestm.address(), pstg.address(), pcfFormat.address(), plwWidth.address(), plHeight.address(), pdwSize.address(), pmedium.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment GUID_DEVINTERFACE_DISK$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1273.GUID_DEVINTERFACE_DISK$SEGMENT,"GUID_DEVINTERFACE_DISK");
    }
    public static MemorySegment GUID_DEVINTERFACE_CDROM$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1274.GUID_DEVINTERFACE_CDROM$SEGMENT,"GUID_DEVINTERFACE_CDROM");
    }
    public static MemorySegment GUID_DEVINTERFACE_PARTITION$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1274.GUID_DEVINTERFACE_PARTITION$SEGMENT,"GUID_DEVINTERFACE_PARTITION");
    }
    public static MemorySegment GUID_DEVINTERFACE_TAPE$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1274.GUID_DEVINTERFACE_TAPE$SEGMENT,"GUID_DEVINTERFACE_TAPE");
    }
    public static MemorySegment GUID_DEVINTERFACE_WRITEONCEDISK$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1274.GUID_DEVINTERFACE_WRITEONCEDISK$SEGMENT,"GUID_DEVINTERFACE_WRITEONCEDISK");
    }
    public static MemorySegment GUID_DEVINTERFACE_VOLUME$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1274.GUID_DEVINTERFACE_VOLUME$SEGMENT,"GUID_DEVINTERFACE_VOLUME");
    }
    public static MemorySegment GUID_DEVINTERFACE_MEDIUMCHANGER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1274.GUID_DEVINTERFACE_MEDIUMCHANGER$SEGMENT,"GUID_DEVINTERFACE_MEDIUMCHANGER");
    }
    public static MemorySegment GUID_DEVINTERFACE_FLOPPY$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1275.GUID_DEVINTERFACE_FLOPPY$SEGMENT,"GUID_DEVINTERFACE_FLOPPY");
    }
    public static MemorySegment GUID_DEVINTERFACE_CDCHANGER$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1275.GUID_DEVINTERFACE_CDCHANGER$SEGMENT,"GUID_DEVINTERFACE_CDCHANGER");
    }
    public static MemorySegment GUID_DEVINTERFACE_STORAGEPORT$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1275.GUID_DEVINTERFACE_STORAGEPORT$SEGMENT,"GUID_DEVINTERFACE_STORAGEPORT");
    }
    public static MemorySegment GUID_DEVINTERFACE_HIDDEN_VOLUME$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1275.GUID_DEVINTERFACE_HIDDEN_VOLUME$SEGMENT,"GUID_DEVINTERFACE_HIDDEN_VOLUME");
    }
    public static MemorySegment GUID_DEVINTERFACE_COMPORT$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1275.GUID_DEVINTERFACE_COMPORT$SEGMENT,"GUID_DEVINTERFACE_COMPORT");
    }
    public static MemorySegment GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1275.GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR$SEGMENT,"GUID_DEVINTERFACE_SERENUM_BUS_ENUMERATOR");
    }
    public static int DDS_4mm() {
        return (int)32L;
    }
    public static int MiniQic() {
        return (int)33L;
    }
    public static int Travan() {
        return (int)34L;
    }
    public static int QIC() {
        return (int)35L;
    }
    public static int MP_8mm() {
        return (int)36L;
    }
    public static int AME_8mm() {
        return (int)37L;
    }
    public static int AIT1_8mm() {
        return (int)38L;
    }
    public static int DLT() {
        return (int)39L;
    }
    public static int NCTP() {
        return (int)40L;
    }
    public static int IBM_3480() {
        return (int)41L;
    }
    public static int IBM_3490E() {
        return (int)42L;
    }
    public static int IBM_Magstar_3590() {
        return (int)43L;
    }
    public static int IBM_Magstar_MP() {
        return (int)44L;
    }
    public static int STK_DATA_D3() {
        return (int)45L;
    }
    public static int SONY_DTF() {
        return (int)46L;
    }
    public static int DV_6mm() {
        return (int)47L;
    }
    public static int DMI() {
        return (int)48L;
    }
    public static int SONY_D2() {
        return (int)49L;
    }
    public static int CLEANER_CARTRIDGE() {
        return (int)50L;
    }
    public static int CD_ROM() {
        return (int)51L;
    }
    public static int CD_R() {
        return (int)52L;
    }
    public static int CD_RW() {
        return (int)53L;
    }
    public static int DVD_ROM() {
        return (int)54L;
    }
    public static int DVD_R() {
        return (int)55L;
    }
    public static int DVD_RW() {
        return (int)56L;
    }
    public static int MO_3_RW() {
        return (int)57L;
    }
    public static int MO_5_WO() {
        return (int)58L;
    }
    public static int MO_5_RW() {
        return (int)59L;
    }
    public static int MO_5_LIMDOW() {
        return (int)60L;
    }
    public static int PC_5_WO() {
        return (int)61L;
    }
    public static int PC_5_RW() {
        return (int)62L;
    }
    public static int PD_5_RW() {
        return (int)63L;
    }
    public static int ABL_5_WO() {
        return (int)64L;
    }
    public static int PINNACLE_APEX_5_RW() {
        return (int)65L;
    }
    public static int SONY_12_WO() {
        return (int)66L;
    }
    public static int PHILIPS_12_WO() {
        return (int)67L;
    }
    public static int HITACHI_12_WO() {
        return (int)68L;
    }
    public static int CYGNET_12_WO() {
        return (int)69L;
    }
    public static int KODAK_14_WO() {
        return (int)70L;
    }
    public static int MO_NFR_525() {
        return (int)71L;
    }
    public static int NIKON_12_RW() {
        return (int)72L;
    }
    public static int IOMEGA_ZIP() {
        return (int)73L;
    }
    public static int IOMEGA_JAZ() {
        return (int)74L;
    }
    public static int SYQUEST_EZ135() {
        return (int)75L;
    }
    public static int SYQUEST_EZFLYER() {
        return (int)76L;
    }
    public static int SYQUEST_SYJET() {
        return (int)77L;
    }
    public static int AVATAR_F2() {
        return (int)78L;
    }
    public static int MP2_8mm() {
        return (int)79L;
    }
    public static int DST_S() {
        return (int)80L;
    }
    public static int DST_M() {
        return (int)81L;
    }
    public static int DST_L() {
        return (int)82L;
    }
    public static int VXATape_1() {
        return (int)83L;
    }
    public static int VXATape_2() {
        return (int)84L;
    }
    public static int STK_9840() {
        return (int)85L;
    }
    public static int LTO_Ultrium() {
        return (int)86L;
    }
    public static int LTO_Accelis() {
        return (int)87L;
    }
    public static int DVD_RAM() {
        return (int)88L;
    }
    public static int AIT_8mm() {
        return (int)89L;
    }
    public static int ADR_1() {
        return (int)90L;
    }
    public static int ADR_2() {
        return (int)91L;
    }
    public static int STK_9940() {
        return (int)92L;
    }
    public static int SAIT() {
        return (int)93L;
    }
    public static int VXATape() {
        return (int)94L;
    }
    public static int BusTypeUnknown() {
        return (int)0L;
    }
    public static int BusTypeScsi() {
        return (int)1L;
    }
    public static int BusTypeAtapi() {
        return (int)2L;
    }
    public static int BusTypeAta() {
        return (int)3L;
    }
    public static int BusType1394() {
        return (int)4L;
    }
    public static int BusTypeSsa() {
        return (int)5L;
    }
    public static int BusTypeFibre() {
        return (int)6L;
    }
    public static int BusTypeUsb() {
        return (int)7L;
    }
    public static int BusTypeRAID() {
        return (int)8L;
    }
    public static int BusTypeiScsi() {
        return (int)9L;
    }
    public static int BusTypeSas() {
        return (int)10L;
    }
    public static int BusTypeSata() {
        return (int)11L;
    }
    public static int BusTypeSd() {
        return (int)12L;
    }
    public static int BusTypeMmc() {
        return (int)13L;
    }
    public static int BusTypeVirtual() {
        return (int)14L;
    }
    public static int BusTypeFileBackedVirtual() {
        return (int)15L;
    }
    public static int BusTypeSpaces() {
        return (int)16L;
    }
    public static int BusTypeNvme() {
        return (int)17L;
    }
    public static int BusTypeSCM() {
        return (int)18L;
    }
    public static int BusTypeUfs() {
        return (int)19L;
    }
    public static int BusTypeMax() {
        return (int)20L;
    }
    public static int BusTypeMaxReserved() {
        return (int)127L;
    }
    public static int Unknown() {
        return (int)0L;
    }
    public static int F5_1Pt2_512() {
        return (int)1L;
    }
    public static int F3_1Pt44_512() {
        return (int)2L;
    }
    public static int F3_2Pt88_512() {
        return (int)3L;
    }
    public static int F3_20Pt8_512() {
        return (int)4L;
    }
    public static int F3_720_512() {
        return (int)5L;
    }
    public static int F5_360_512() {
        return (int)6L;
    }
    public static int F5_320_512() {
        return (int)7L;
    }
    public static int F5_320_1024() {
        return (int)8L;
    }
    public static int F5_180_512() {
        return (int)9L;
    }
    public static int F5_160_512() {
        return (int)10L;
    }
    public static int RemovableMedia() {
        return (int)11L;
    }
    public static int FixedMedia() {
        return (int)12L;
    }
    public static int F3_120M_512() {
        return (int)13L;
    }
    public static int F3_640_512() {
        return (int)14L;
    }
    public static int F5_640_512() {
        return (int)15L;
    }
    public static int F5_720_512() {
        return (int)16L;
    }
    public static int F3_1Pt2_512() {
        return (int)17L;
    }
    public static int F3_1Pt23_1024() {
        return (int)18L;
    }
    public static int F5_1Pt23_1024() {
        return (int)19L;
    }
    public static int F3_128Mb_512() {
        return (int)20L;
    }
    public static int F3_230Mb_512() {
        return (int)21L;
    }
    public static int F8_256_128() {
        return (int)22L;
    }
    public static int F3_200Mb_512() {
        return (int)23L;
    }
    public static int F3_240M_512() {
        return (int)24L;
    }
    public static int F3_32M_512() {
        return (int)25L;
    }
    public static int PARTITION_STYLE_MBR() {
        return (int)0L;
    }
    public static int PARTITION_STYLE_GPT() {
        return (int)1L;
    }
    public static int PARTITION_STYLE_RAW() {
        return (int)2L;
    }
    public static int DetectNone() {
        return (int)0L;
    }
    public static int DetectInt13() {
        return (int)1L;
    }
    public static int DetectExInt13() {
        return (int)2L;
    }
    public static int EqualPriority() {
        return (int)0L;
    }
    public static int KeepPrefetchedData() {
        return (int)1L;
    }
    public static int KeepReadData() {
        return (int)2L;
    }
    public static int RequestSize() {
        return (int)0L;
    }
    public static int RequestLocation() {
        return (int)1L;
    }
    public static int AllElements() {
        return (int)0L;
    }
    public static int ChangerTransport() {
        return (int)1L;
    }
    public static int ChangerSlot() {
        return (int)2L;
    }
    public static int ChangerIEPort() {
        return (int)3L;
    }
    public static int ChangerDrive() {
        return (int)4L;
    }
    public static int ChangerDoor() {
        return (int)5L;
    }
    public static int ChangerKeypad() {
        return (int)6L;
    }
    public static int ChangerMaxElement() {
        return (int)7L;
    }
    public static int DeviceProblemNone() {
        return (int)0L;
    }
    public static int DeviceProblemHardware() {
        return (int)1L;
    }
    public static int DeviceProblemCHMError() {
        return (int)2L;
    }
    public static int DeviceProblemDoorOpen() {
        return (int)3L;
    }
    public static int DeviceProblemCalibrationError() {
        return (int)4L;
    }
    public static int DeviceProblemTargetFailure() {
        return (int)5L;
    }
    public static int DeviceProblemCHMMoveError() {
        return (int)6L;
    }
    public static int DeviceProblemCHMZeroError() {
        return (int)7L;
    }
    public static int DeviceProblemCartridgeInsertError() {
        return (int)8L;
    }
    public static int DeviceProblemPositionError() {
        return (int)9L;
    }
    public static int DeviceProblemSensorError() {
        return (int)10L;
    }
    public static int DeviceProblemCartridgeEjectError() {
        return (int)11L;
    }
    public static int DeviceProblemGripperError() {
        return (int)12L;
    }
    public static int DeviceProblemDriveError() {
        return (int)13L;
    }
    public static int StorageDeviceProperty() {
        return (int)0L;
    }
    public static int StorageAdapterProperty() {
        return (int)1L;
    }
    public static int StorageDeviceIdProperty() {
        return (int)2L;
    }
    public static int StorageDeviceUniqueIdProperty() {
        return (int)3L;
    }
    public static int StorageDeviceWriteCacheProperty() {
        return (int)4L;
    }
    public static int StorageMiniportProperty() {
        return (int)5L;
    }
    public static int StorageAccessAlignmentProperty() {
        return (int)6L;
    }
    public static int StorageDeviceSeekPenaltyProperty() {
        return (int)7L;
    }
    public static int StorageDeviceTrimProperty() {
        return (int)8L;
    }
    public static int StorageDeviceWriteAggregationProperty() {
        return (int)9L;
    }
    public static int PropertyStandardQuery() {
        return (int)0L;
    }
    public static int PropertyExistsQuery() {
        return (int)1L;
    }
    public static int PropertyMaskQuery() {
        return (int)2L;
    }
    public static int PropertyQueryMaxDefined() {
        return (int)3L;
    }
    public static int ShrinkPrepare() {
        return (int)1L;
    }
    public static int ShrinkCommit() {
        return (int)2L;
    }
    public static int ShrinkAbort() {
        return (int)3L;
    }
    public static int WriteCacheTypeUnknown() {
        return (int)0L;
    }
    public static int WriteCacheTypeNone() {
        return (int)1L;
    }
    public static int WriteCacheTypeWriteBack() {
        return (int)2L;
    }
    public static int WriteCacheTypeWriteThrough() {
        return (int)3L;
    }
    public static int WriteCacheEnableUnknown() {
        return (int)0L;
    }
    public static int WriteCacheDisabled() {
        return (int)1L;
    }
    public static int WriteCacheEnabled() {
        return (int)2L;
    }
    public static int WriteCacheChangeUnknown() {
        return (int)0L;
    }
    public static int WriteCacheNotChangeable() {
        return (int)1L;
    }
    public static int WriteCacheChangeable() {
        return (int)2L;
    }
    public static int WriteThroughUnknown() {
        return (int)0L;
    }
    public static int WriteThroughNotSupported() {
        return (int)1L;
    }
    public static int WriteThroughSupported() {
        return (int)2L;
    }
    public static int StoragePortCodeSetReserved() {
        return (int)0L;
    }
    public static int StoragePortCodeSetStorport() {
        return (int)1L;
    }
    public static int StoragePortCodeSetSCSIport() {
        return (int)2L;
    }
    public static int StorageIdCodeSetReserved() {
        return (int)0L;
    }
    public static int StorageIdCodeSetBinary() {
        return (int)1L;
    }
    public static int StorageIdCodeSetAscii() {
        return (int)2L;
    }
    public static int StorageIdCodeSetUtf8() {
        return (int)3L;
    }
    public static int StorageIdTypeVendorSpecific() {
        return (int)0L;
    }
    public static int StorageIdTypeVendorId() {
        return (int)1L;
    }
    public static int StorageIdTypeEUI64() {
        return (int)2L;
    }
    public static int StorageIdTypeFCPHName() {
        return (int)3L;
    }
    public static int StorageIdTypePortRelative() {
        return (int)4L;
    }
    public static int StorageIdTypeTargetPortGroup() {
        return (int)5L;
    }
    public static int StorageIdTypeLogicalUnitGroup() {
        return (int)6L;
    }
    public static int StorageIdTypeMD5LogicalUnitIdentifier() {
        return (int)7L;
    }
    public static int StorageIdTypeScsiNameString() {
        return (int)8L;
    }
    public static int StorageIdNAAFormatIEEEExtended() {
        return (int)2L;
    }
    public static int StorageIdNAAFormatIEEERegistered() {
        return (int)3L;
    }
    public static int StorageIdNAAFormatIEEEERegisteredExtended() {
        return (int)5L;
    }
    public static int StorageIdAssocDevice() {
        return (int)0L;
    }
    public static int StorageIdAssocPort() {
        return (int)1L;
    }
    public static int StorageIdAssocTarget() {
        return (int)2L;
    }
    public static MemorySegment g_rgSCardT0Pci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1276.g_rgSCardT0Pci$SEGMENT,"g_rgSCardT0Pci");
    }
    public static MemorySegment g_rgSCardT1Pci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1276.g_rgSCardT1Pci$SEGMENT,"g_rgSCardT1Pci");
    }
    public static MemorySegment g_rgSCardRawPci$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1276.g_rgSCardRawPci$SEGMENT,"g_rgSCardRawPci");
    }
    public static MethodHandle SCardEstablishContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.SCardEstablishContext$MH,"SCardEstablishContext");
    }
    public static int SCardEstablishContext ( int dwScope,  Addressable pvReserved1,  Addressable pvReserved2,  Addressable phContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1276.SCardEstablishContext$MH, "SCardEstablishContext");
        try {
            return (int)mh$.invokeExact(dwScope, pvReserved1.address(), pvReserved2.address(), phContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReleaseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.SCardReleaseContext$MH,"SCardReleaseContext");
    }
    public static int SCardReleaseContext ( long hContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1276.SCardReleaseContext$MH, "SCardReleaseContext");
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIsValidContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1276.SCardIsValidContext$MH,"SCardIsValidContext");
    }
    public static int SCardIsValidContext ( long hContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1276.SCardIsValidContext$MH, "SCardIsValidContext");
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReaderGroupsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.SCardListReaderGroupsA$MH,"SCardListReaderGroupsA");
    }
    public static int SCardListReaderGroupsA ( long hContext,  Addressable mszGroups,  Addressable pcchGroups) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1277.SCardListReaderGroupsA$MH, "SCardListReaderGroupsA");
        try {
            return (int)mh$.invokeExact(hContext, mszGroups.address(), pcchGroups.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReaderGroupsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.SCardListReaderGroupsW$MH,"SCardListReaderGroupsW");
    }
    public static int SCardListReaderGroupsW ( long hContext,  Addressable mszGroups,  Addressable pcchGroups) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1277.SCardListReaderGroupsW$MH, "SCardListReaderGroupsW");
        try {
            return (int)mh$.invokeExact(hContext, mszGroups.address(), pcchGroups.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersA$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.SCardListReadersA$MH,"SCardListReadersA");
    }
    public static int SCardListReadersA ( long hContext,  Addressable mszGroups,  Addressable mszReaders,  Addressable pcchReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1277.SCardListReadersA$MH, "SCardListReadersA");
        try {
            return (int)mh$.invokeExact(hContext, mszGroups.address(), mszReaders.address(), pcchReaders.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListReadersW$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.SCardListReadersW$MH,"SCardListReadersW");
    }
    public static int SCardListReadersW ( long hContext,  Addressable mszGroups,  Addressable mszReaders,  Addressable pcchReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1277.SCardListReadersW$MH, "SCardListReadersW");
        try {
            return (int)mh$.invokeExact(hContext, mszGroups.address(), mszReaders.address(), pcchReaders.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListCardsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.SCardListCardsA$MH,"SCardListCardsA");
    }
    public static int SCardListCardsA ( long hContext,  Addressable pbAtr,  Addressable rgquidInterfaces,  int cguidInterfaceCount,  Addressable mszCards,  Addressable pcchCards) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1277.SCardListCardsA$MH, "SCardListCardsA");
        try {
            return (int)mh$.invokeExact(hContext, pbAtr.address(), rgquidInterfaces.address(), cguidInterfaceCount, mszCards.address(), pcchCards.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListCardsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1277.SCardListCardsW$MH,"SCardListCardsW");
    }
    public static int SCardListCardsW ( long hContext,  Addressable pbAtr,  Addressable rgquidInterfaces,  int cguidInterfaceCount,  Addressable mszCards,  Addressable pcchCards) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1277.SCardListCardsW$MH, "SCardListCardsW");
        try {
            return (int)mh$.invokeExact(hContext, pbAtr.address(), rgquidInterfaces.address(), cguidInterfaceCount, mszCards.address(), pcchCards.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListInterfacesA$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.SCardListInterfacesA$MH,"SCardListInterfacesA");
    }
    public static int SCardListInterfacesA ( long hContext,  Addressable szCard,  Addressable pguidInterfaces,  Addressable pcguidInterfaces) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1278.SCardListInterfacesA$MH, "SCardListInterfacesA");
        try {
            return (int)mh$.invokeExact(hContext, szCard.address(), pguidInterfaces.address(), pcguidInterfaces.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardListInterfacesW$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.SCardListInterfacesW$MH,"SCardListInterfacesW");
    }
    public static int SCardListInterfacesW ( long hContext,  Addressable szCard,  Addressable pguidInterfaces,  Addressable pcguidInterfaces) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1278.SCardListInterfacesW$MH, "SCardListInterfacesW");
        try {
            return (int)mh$.invokeExact(hContext, szCard.address(), pguidInterfaces.address(), pcguidInterfaces.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetProviderIdA$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.SCardGetProviderIdA$MH,"SCardGetProviderIdA");
    }
    public static int SCardGetProviderIdA ( long hContext,  Addressable szCard,  Addressable pguidProviderId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1278.SCardGetProviderIdA$MH, "SCardGetProviderIdA");
        try {
            return (int)mh$.invokeExact(hContext, szCard.address(), pguidProviderId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetProviderIdW$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.SCardGetProviderIdW$MH,"SCardGetProviderIdW");
    }
    public static int SCardGetProviderIdW ( long hContext,  Addressable szCard,  Addressable pguidProviderId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1278.SCardGetProviderIdW$MH, "SCardGetProviderIdW");
        try {
            return (int)mh$.invokeExact(hContext, szCard.address(), pguidProviderId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetCardTypeProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.SCardGetCardTypeProviderNameA$MH,"SCardGetCardTypeProviderNameA");
    }
    public static int SCardGetCardTypeProviderNameA ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider,  Addressable pcchProvider) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1278.SCardGetCardTypeProviderNameA$MH, "SCardGetCardTypeProviderNameA");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address(), pcchProvider.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetCardTypeProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1278.SCardGetCardTypeProviderNameW$MH,"SCardGetCardTypeProviderNameW");
    }
    public static int SCardGetCardTypeProviderNameW ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider,  Addressable pcchProvider) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1278.SCardGetCardTypeProviderNameW$MH, "SCardGetCardTypeProviderNameW");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address(), pcchProvider.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderGroupA$MH,"SCardIntroduceReaderGroupA");
    }
    public static int SCardIntroduceReaderGroupA ( long hContext,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderGroupA$MH, "SCardIntroduceReaderGroupA");
        try {
            return (int)mh$.invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderGroupW$MH,"SCardIntroduceReaderGroupW");
    }
    public static int SCardIntroduceReaderGroupW ( long hContext,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderGroupW$MH, "SCardIntroduceReaderGroupW");
        try {
            return (int)mh$.invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.SCardForgetReaderGroupA$MH,"SCardForgetReaderGroupA");
    }
    public static int SCardForgetReaderGroupA ( long hContext,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1279.SCardForgetReaderGroupA$MH, "SCardForgetReaderGroupA");
        try {
            return (int)mh$.invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.SCardForgetReaderGroupW$MH,"SCardForgetReaderGroupW");
    }
    public static int SCardForgetReaderGroupW ( long hContext,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1279.SCardForgetReaderGroupW$MH, "SCardForgetReaderGroupW");
        try {
            return (int)mh$.invokeExact(hContext, szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderA$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderA$MH,"SCardIntroduceReaderA");
    }
    public static int SCardIntroduceReaderA ( long hContext,  Addressable szReaderName,  Addressable szDeviceName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderA$MH, "SCardIntroduceReaderA");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address(), szDeviceName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceReaderW$MH() {
        return RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderW$MH,"SCardIntroduceReaderW");
    }
    public static int SCardIntroduceReaderW ( long hContext,  Addressable szReaderName,  Addressable szDeviceName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1279.SCardIntroduceReaderW$MH, "SCardIntroduceReaderW");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address(), szDeviceName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderA$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.SCardForgetReaderA$MH,"SCardForgetReaderA");
    }
    public static int SCardForgetReaderA ( long hContext,  Addressable szReaderName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1280.SCardForgetReaderA$MH, "SCardForgetReaderA");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetReaderW$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.SCardForgetReaderW$MH,"SCardForgetReaderW");
    }
    public static int SCardForgetReaderW ( long hContext,  Addressable szReaderName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1280.SCardForgetReaderW$MH, "SCardForgetReaderW");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAddReaderToGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.SCardAddReaderToGroupA$MH,"SCardAddReaderToGroupA");
    }
    public static int SCardAddReaderToGroupA ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1280.SCardAddReaderToGroupA$MH, "SCardAddReaderToGroupA");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAddReaderToGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.SCardAddReaderToGroupW$MH,"SCardAddReaderToGroupW");
    }
    public static int SCardAddReaderToGroupW ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1280.SCardAddReaderToGroupW$MH, "SCardAddReaderToGroupW");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardRemoveReaderFromGroupA$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.SCardRemoveReaderFromGroupA$MH,"SCardRemoveReaderFromGroupA");
    }
    public static int SCardRemoveReaderFromGroupA ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1280.SCardRemoveReaderFromGroupA$MH, "SCardRemoveReaderFromGroupA");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardRemoveReaderFromGroupW$MH() {
        return RuntimeHelper.requireNonNull(constants$1280.SCardRemoveReaderFromGroupW$MH,"SCardRemoveReaderFromGroupW");
    }
    public static int SCardRemoveReaderFromGroupW ( long hContext,  Addressable szReaderName,  Addressable szGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1280.SCardRemoveReaderFromGroupW$MH, "SCardRemoveReaderFromGroupW");
        try {
            return (int)mh$.invokeExact(hContext, szReaderName.address(), szGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceCardTypeA$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.SCardIntroduceCardTypeA$MH,"SCardIntroduceCardTypeA");
    }
    public static int SCardIntroduceCardTypeA ( long hContext,  Addressable szCardName,  Addressable pguidPrimaryProvider,  Addressable rgguidInterfaces,  int dwInterfaceCount,  Addressable pbAtr,  Addressable pbAtrMask,  int cbAtrLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1281.SCardIntroduceCardTypeA$MH, "SCardIntroduceCardTypeA");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address(), pguidPrimaryProvider.address(), rgguidInterfaces.address(), dwInterfaceCount, pbAtr.address(), pbAtrMask.address(), cbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardIntroduceCardTypeW$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.SCardIntroduceCardTypeW$MH,"SCardIntroduceCardTypeW");
    }
    public static int SCardIntroduceCardTypeW ( long hContext,  Addressable szCardName,  Addressable pguidPrimaryProvider,  Addressable rgguidInterfaces,  int dwInterfaceCount,  Addressable pbAtr,  Addressable pbAtrMask,  int cbAtrLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1281.SCardIntroduceCardTypeW$MH, "SCardIntroduceCardTypeW");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address(), pguidPrimaryProvider.address(), rgguidInterfaces.address(), dwInterfaceCount, pbAtr.address(), pbAtrMask.address(), cbAtrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetCardTypeProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.SCardSetCardTypeProviderNameA$MH,"SCardSetCardTypeProviderNameA");
    }
    public static int SCardSetCardTypeProviderNameA ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1281.SCardSetCardTypeProviderNameA$MH, "SCardSetCardTypeProviderNameA");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetCardTypeProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.SCardSetCardTypeProviderNameW$MH,"SCardSetCardTypeProviderNameW");
    }
    public static int SCardSetCardTypeProviderNameW ( long hContext,  Addressable szCardName,  int dwProviderId,  Addressable szProvider) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1281.SCardSetCardTypeProviderNameW$MH, "SCardSetCardTypeProviderNameW");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address(), dwProviderId, szProvider.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetCardTypeA$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.SCardForgetCardTypeA$MH,"SCardForgetCardTypeA");
    }
    public static int SCardForgetCardTypeA ( long hContext,  Addressable szCardName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1281.SCardForgetCardTypeA$MH, "SCardForgetCardTypeA");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardForgetCardTypeW$MH() {
        return RuntimeHelper.requireNonNull(constants$1281.SCardForgetCardTypeW$MH,"SCardForgetCardTypeW");
    }
    public static int SCardForgetCardTypeW ( long hContext,  Addressable szCardName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1281.SCardForgetCardTypeW$MH, "SCardForgetCardTypeW");
        try {
            return (int)mh$.invokeExact(hContext, szCardName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardFreeMemory$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.SCardFreeMemory$MH,"SCardFreeMemory");
    }
    public static int SCardFreeMemory ( long hContext,  Addressable pvMem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1282.SCardFreeMemory$MH, "SCardFreeMemory");
        try {
            return (int)mh$.invokeExact(hContext, pvMem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardAccessStartedEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.SCardAccessStartedEvent$MH,"SCardAccessStartedEvent");
    }
    public static MemoryAddress SCardAccessStartedEvent () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1282.SCardAccessStartedEvent$MH, "SCardAccessStartedEvent");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReleaseStartedEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.SCardReleaseStartedEvent$MH,"SCardReleaseStartedEvent");
    }
    public static void SCardReleaseStartedEvent () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1282.SCardReleaseStartedEvent$MH, "SCardReleaseStartedEvent");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.SCardLocateCardsA$MH,"SCardLocateCardsA");
    }
    public static int SCardLocateCardsA ( long hContext,  Addressable mszCards,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1282.SCardLocateCardsA$MH, "SCardLocateCardsA");
        try {
            return (int)mh$.invokeExact(hContext, mszCards.address(), rgReaderStates.address(), cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.SCardLocateCardsW$MH,"SCardLocateCardsW");
    }
    public static int SCardLocateCardsW ( long hContext,  Addressable mszCards,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1282.SCardLocateCardsW$MH, "SCardLocateCardsW");
        try {
            return (int)mh$.invokeExact(hContext, mszCards.address(), rgReaderStates.address(), cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsByATRA$MH() {
        return RuntimeHelper.requireNonNull(constants$1282.SCardLocateCardsByATRA$MH,"SCardLocateCardsByATRA");
    }
    public static int SCardLocateCardsByATRA ( long hContext,  Addressable rgAtrMasks,  int cAtrs,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1282.SCardLocateCardsByATRA$MH, "SCardLocateCardsByATRA");
        try {
            return (int)mh$.invokeExact(hContext, rgAtrMasks.address(), cAtrs, rgReaderStates.address(), cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardLocateCardsByATRW$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.SCardLocateCardsByATRW$MH,"SCardLocateCardsByATRW");
    }
    public static int SCardLocateCardsByATRW ( long hContext,  Addressable rgAtrMasks,  int cAtrs,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1283.SCardLocateCardsByATRW$MH, "SCardLocateCardsByATRW");
        try {
            return (int)mh$.invokeExact(hContext, rgAtrMasks.address(), cAtrs, rgReaderStates.address(), cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetStatusChangeA$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.SCardGetStatusChangeA$MH,"SCardGetStatusChangeA");
    }
    public static int SCardGetStatusChangeA ( long hContext,  int dwTimeout,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1283.SCardGetStatusChangeA$MH, "SCardGetStatusChangeA");
        try {
            return (int)mh$.invokeExact(hContext, dwTimeout, rgReaderStates.address(), cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetStatusChangeW$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.SCardGetStatusChangeW$MH,"SCardGetStatusChangeW");
    }
    public static int SCardGetStatusChangeW ( long hContext,  int dwTimeout,  Addressable rgReaderStates,  int cReaders) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1283.SCardGetStatusChangeW$MH, "SCardGetStatusChangeW");
        try {
            return (int)mh$.invokeExact(hContext, dwTimeout, rgReaderStates.address(), cReaders);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.SCardCancel$MH,"SCardCancel");
    }
    public static int SCardCancel ( long hContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1283.SCardCancel$MH, "SCardCancel");
        try {
            return (int)mh$.invokeExact(hContext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardConnectA$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.SCardConnectA$MH,"SCardConnectA");
    }
    public static int SCardConnectA ( long hContext,  Addressable szReader,  int dwShareMode,  int dwPreferredProtocols,  Addressable phCard,  Addressable pdwActiveProtocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1283.SCardConnectA$MH, "SCardConnectA");
        try {
            return (int)mh$.invokeExact(hContext, szReader.address(), dwShareMode, dwPreferredProtocols, phCard.address(), pdwActiveProtocol.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardConnectW$MH() {
        return RuntimeHelper.requireNonNull(constants$1283.SCardConnectW$MH,"SCardConnectW");
    }
    public static int SCardConnectW ( long hContext,  Addressable szReader,  int dwShareMode,  int dwPreferredProtocols,  Addressable phCard,  Addressable pdwActiveProtocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1283.SCardConnectW$MH, "SCardConnectW");
        try {
            return (int)mh$.invokeExact(hContext, szReader.address(), dwShareMode, dwPreferredProtocols, phCard.address(), pdwActiveProtocol.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.SCardReconnect$MH,"SCardReconnect");
    }
    public static int SCardReconnect ( long hCard,  int dwShareMode,  int dwPreferredProtocols,  int dwInitialization,  Addressable pdwActiveProtocol) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1284.SCardReconnect$MH, "SCardReconnect");
        try {
            return (int)mh$.invokeExact(hCard, dwShareMode, dwPreferredProtocols, dwInitialization, pdwActiveProtocol.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.SCardDisconnect$MH,"SCardDisconnect");
    }
    public static int SCardDisconnect ( long hCard,  int dwDisposition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1284.SCardDisconnect$MH, "SCardDisconnect");
        try {
            return (int)mh$.invokeExact(hCard, dwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardBeginTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.SCardBeginTransaction$MH,"SCardBeginTransaction");
    }
    public static int SCardBeginTransaction ( long hCard) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1284.SCardBeginTransaction$MH, "SCardBeginTransaction");
        try {
            return (int)mh$.invokeExact(hCard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardEndTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.SCardEndTransaction$MH,"SCardEndTransaction");
    }
    public static int SCardEndTransaction ( long hCard,  int dwDisposition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1284.SCardEndTransaction$MH, "SCardEndTransaction");
        try {
            return (int)mh$.invokeExact(hCard, dwDisposition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardCancelTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.SCardCancelTransaction$MH,"SCardCancelTransaction");
    }
    public static int SCardCancelTransaction ( long hCard) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1284.SCardCancelTransaction$MH, "SCardCancelTransaction");
        try {
            return (int)mh$.invokeExact(hCard);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardState$MH() {
        return RuntimeHelper.requireNonNull(constants$1284.SCardState$MH,"SCardState");
    }
    public static int SCardState ( long hCard,  Addressable pdwState,  Addressable pdwProtocol,  Addressable pbAtr,  Addressable pcbAtrLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1284.SCardState$MH, "SCardState");
        try {
            return (int)mh$.invokeExact(hCard, pdwState.address(), pdwProtocol.address(), pbAtr.address(), pcbAtrLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardStatusA$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.SCardStatusA$MH,"SCardStatusA");
    }
    public static int SCardStatusA ( long hCard,  Addressable szReaderName,  Addressable pcchReaderLen,  Addressable pdwState,  Addressable pdwProtocol,  Addressable pbAtr,  Addressable pcbAtrLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1285.SCardStatusA$MH, "SCardStatusA");
        try {
            return (int)mh$.invokeExact(hCard, szReaderName.address(), pcchReaderLen.address(), pdwState.address(), pdwProtocol.address(), pbAtr.address(), pcbAtrLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardStatusW$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.SCardStatusW$MH,"SCardStatusW");
    }
    public static int SCardStatusW ( long hCard,  Addressable szReaderName,  Addressable pcchReaderLen,  Addressable pdwState,  Addressable pdwProtocol,  Addressable pbAtr,  Addressable pcbAtrLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1285.SCardStatusW$MH, "SCardStatusW");
        try {
            return (int)mh$.invokeExact(hCard, szReaderName.address(), pcchReaderLen.address(), pdwState.address(), pdwProtocol.address(), pbAtr.address(), pcbAtrLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardTransmit$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.SCardTransmit$MH,"SCardTransmit");
    }
    public static int SCardTransmit ( long hCard,  Addressable pioSendPci,  Addressable pbSendBuffer,  int cbSendLength,  Addressable pioRecvPci,  Addressable pbRecvBuffer,  Addressable pcbRecvLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1285.SCardTransmit$MH, "SCardTransmit");
        try {
            return (int)mh$.invokeExact(hCard, pioSendPci.address(), pbSendBuffer.address(), cbSendLength, pioRecvPci.address(), pbRecvBuffer.address(), pcbRecvLength.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardControl$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.SCardControl$MH,"SCardControl");
    }
    public static int SCardControl ( long hCard,  int dwControlCode,  Addressable lpInBuffer,  int nInBufferSize,  Addressable lpOutBuffer,  int nOutBufferSize,  Addressable lpBytesReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1285.SCardControl$MH, "SCardControl");
        try {
            return (int)mh$.invokeExact(hCard, dwControlCode, lpInBuffer.address(), nInBufferSize, lpOutBuffer.address(), nOutBufferSize, lpBytesReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.SCardGetAttrib$MH,"SCardGetAttrib");
    }
    public static int SCardGetAttrib ( long hCard,  int dwAttrId,  Addressable pbAttr,  Addressable pcbAttrLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1285.SCardGetAttrib$MH, "SCardGetAttrib");
        try {
            return (int)mh$.invokeExact(hCard, dwAttrId, pbAttr.address(), pcbAttrLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardSetAttrib$MH() {
        return RuntimeHelper.requireNonNull(constants$1285.SCardSetAttrib$MH,"SCardSetAttrib");
    }
    public static int SCardSetAttrib ( long hCard,  int dwAttrId,  Addressable pbAttr,  int cbAttrLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1285.SCardSetAttrib$MH, "SCardSetAttrib");
        try {
            return (int)mh$.invokeExact(hCard, dwAttrId, pbAttr.address(), cbAttrLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardUIDlgSelectCardA$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.SCardUIDlgSelectCardA$MH,"SCardUIDlgSelectCardA");
    }
    public static int SCardUIDlgSelectCardA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1287.SCardUIDlgSelectCardA$MH, "SCardUIDlgSelectCardA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardUIDlgSelectCardW$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.SCardUIDlgSelectCardW$MH,"SCardUIDlgSelectCardW");
    }
    public static int SCardUIDlgSelectCardW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1287.SCardUIDlgSelectCardW$MH, "SCardUIDlgSelectCardW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOpenCardNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.GetOpenCardNameA$MH,"GetOpenCardNameA");
    }
    public static int GetOpenCardNameA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1287.GetOpenCardNameA$MH, "GetOpenCardNameA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOpenCardNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1287.GetOpenCardNameW$MH,"GetOpenCardNameW");
    }
    public static int GetOpenCardNameW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1287.GetOpenCardNameW$MH, "GetOpenCardNameW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardDlgExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.SCardDlgExtendedError$MH,"SCardDlgExtendedError");
    }
    public static int SCardDlgExtendedError () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1288.SCardDlgExtendedError$MH, "SCardDlgExtendedError");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardGetTransmitCount$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.SCardGetTransmitCount$MH,"SCardGetTransmitCount");
    }
    public static int SCardGetTransmitCount ( long hCard,  Addressable pcTransmitCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1288.SCardGetTransmitCount$MH, "SCardGetTransmitCount");
        try {
            return (int)mh$.invokeExact(hCard, pcTransmitCount.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReadCacheA$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.SCardReadCacheA$MH,"SCardReadCacheA");
    }
    public static int SCardReadCacheA ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  Addressable DataLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1288.SCardReadCacheA$MH, "SCardReadCacheA");
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardReadCacheW$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.SCardReadCacheW$MH,"SCardReadCacheW");
    }
    public static int SCardReadCacheW ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  Addressable DataLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1288.SCardReadCacheW$MH, "SCardReadCacheW");
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardWriteCacheA$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.SCardWriteCacheA$MH,"SCardWriteCacheA");
    }
    public static int SCardWriteCacheA ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  int DataLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1288.SCardWriteCacheA$MH, "SCardWriteCacheA");
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SCardWriteCacheW$MH() {
        return RuntimeHelper.requireNonNull(constants$1288.SCardWriteCacheW$MH,"SCardWriteCacheW");
    }
    public static int SCardWriteCacheW ( long hContext,  Addressable CardIdentifier,  int FreshnessCounter,  Addressable LookupName,  Addressable Data,  int DataLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1288.SCardWriteCacheW$MH, "SCardWriteCacheW");
        try {
            return (int)mh$.invokeExact(hContext, CardIdentifier.address(), FreshnessCounter, LookupName.address(), Data.address(), DataLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreatePropertySheetPageA$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.CreatePropertySheetPageA$MH,"CreatePropertySheetPageA");
    }
    public static MemoryAddress CreatePropertySheetPageA ( Addressable constPropSheetPagePointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1290.CreatePropertySheetPageA$MH, "CreatePropertySheetPageA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(constPropSheetPagePointer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreatePropertySheetPageW$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.CreatePropertySheetPageW$MH,"CreatePropertySheetPageW");
    }
    public static MemoryAddress CreatePropertySheetPageW ( Addressable constPropSheetPagePointer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1290.CreatePropertySheetPageW$MH, "CreatePropertySheetPageW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(constPropSheetPagePointer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DestroyPropertySheetPage$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.DestroyPropertySheetPage$MH,"DestroyPropertySheetPage");
    }
    public static int DestroyPropertySheetPage ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1290.DestroyPropertySheetPage$MH, "DestroyPropertySheetPage");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropertySheetA$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.PropertySheetA$MH,"PropertySheetA");
    }
    public static long PropertySheetA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1290.PropertySheetA$MH, "PropertySheetA");
        try {
            return (long)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PropertySheetW$MH() {
        return RuntimeHelper.requireNonNull(constants$1290.PropertySheetW$MH,"PropertySheetW");
    }
    public static long PropertySheetW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1290.PropertySheetW$MH, "PropertySheetW");
        try {
            return (long)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintersA$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.EnumPrintersA$MH,"EnumPrintersA");
    }
    public static int EnumPrintersA ( int Flags,  Addressable Name,  int Level,  Addressable pPrinterEnum,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1291.EnumPrintersA$MH, "EnumPrintersA");
        try {
            return (int)mh$.invokeExact(Flags, Name.address(), Level, pPrinterEnum.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintersW$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.EnumPrintersW$MH,"EnumPrintersW");
    }
    public static int EnumPrintersW ( int Flags,  Addressable Name,  int Level,  Addressable pPrinterEnum,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1291.EnumPrintersW$MH, "EnumPrintersW");
        try {
            return (int)mh$.invokeExact(Flags, Name.address(), Level, pPrinterEnum.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1291.OpenPrinterA$MH,"OpenPrinterA");
    }
    public static int OpenPrinterA ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1291.OpenPrinterA$MH, "OpenPrinterA");
        try {
            return (int)mh$.invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.OpenPrinterW$MH,"OpenPrinterW");
    }
    public static int OpenPrinterW ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1292.OpenPrinterW$MH, "OpenPrinterW");
        try {
            return (int)mh$.invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.ResetPrinterA$MH,"ResetPrinterA");
    }
    public static int ResetPrinterA ( Addressable hPrinter,  Addressable pDefault) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1292.ResetPrinterA$MH, "ResetPrinterA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pDefault.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.ResetPrinterW$MH,"ResetPrinterW");
    }
    public static int ResetPrinterW ( Addressable hPrinter,  Addressable pDefault) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1292.ResetPrinterW$MH, "ResetPrinterW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pDefault.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.SetJobA$MH,"SetJobA");
    }
    public static int SetJobA ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1292.SetJobA$MH, "SetJobA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), JobId, Level, pJob.address(), Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.SetJobW$MH,"SetJobW");
    }
    public static int SetJobW ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1292.SetJobW$MH, "SetJobW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), JobId, Level, pJob.address(), Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$1292.GetJobA$MH,"GetJobA");
    }
    public static int GetJobA ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1292.GetJobA$MH, "GetJobA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), JobId, Level, pJob.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.GetJobW$MH,"GetJobW");
    }
    public static int GetJobW ( Addressable hPrinter,  int JobId,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1293.GetJobW$MH, "GetJobW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), JobId, Level, pJob.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.EnumJobsA$MH,"EnumJobsA");
    }
    public static int EnumJobsA ( Addressable hPrinter,  int FirstJob,  int NoJobs,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1293.EnumJobsA$MH, "EnumJobsA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), FirstJob, NoJobs, Level, pJob.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumJobsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.EnumJobsW$MH,"EnumJobsW");
    }
    public static int EnumJobsW ( Addressable hPrinter,  int FirstJob,  int NoJobs,  int Level,  Addressable pJob,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1293.EnumJobsW$MH, "EnumJobsW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), FirstJob, NoJobs, Level, pJob.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.AddPrinterA$MH,"AddPrinterA");
    }
    public static MemoryAddress AddPrinterA ( Addressable pName,  int Level,  Addressable pPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1293.AddPrinterA$MH, "AddPrinterA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pName.address(), Level, pPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.AddPrinterW$MH,"AddPrinterW");
    }
    public static MemoryAddress AddPrinterW ( Addressable pName,  int Level,  Addressable pPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1293.AddPrinterW$MH, "AddPrinterW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pName.address(), Level, pPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1293.DeletePrinter$MH,"DeletePrinter");
    }
    public static int DeletePrinter ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1293.DeletePrinter$MH, "DeletePrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.SetPrinterA$MH,"SetPrinterA");
    }
    public static int SetPrinterA ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1294.SetPrinterA$MH, "SetPrinterA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pPrinter.address(), Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.SetPrinterW$MH,"SetPrinterW");
    }
    public static int SetPrinterW ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int Command) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1294.SetPrinterW$MH, "SetPrinterW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pPrinter.address(), Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.GetPrinterA$MH,"GetPrinterA");
    }
    public static int GetPrinterA ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1294.GetPrinterA$MH, "GetPrinterA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pPrinter.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.GetPrinterW$MH,"GetPrinterW");
    }
    public static int GetPrinterW ( Addressable hPrinter,  int Level,  Addressable pPrinter,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1294.GetPrinterW$MH, "GetPrinterW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pPrinter.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.AddPrinterDriverA$MH,"AddPrinterDriverA");
    }
    public static int AddPrinterDriverA ( Addressable pName,  int Level,  Addressable pDriverInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1294.AddPrinterDriverA$MH, "AddPrinterDriverA");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pDriverInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$1294.AddPrinterDriverW$MH,"AddPrinterDriverW");
    }
    public static int AddPrinterDriverW ( Addressable pName,  int Level,  Addressable pDriverInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1294.AddPrinterDriverW$MH, "AddPrinterDriverW");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pDriverInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.AddPrinterDriverExA$MH,"AddPrinterDriverExA");
    }
    public static int AddPrinterDriverExA ( Addressable pName,  int Level,  Addressable pDriverInfo,  int dwFileCopyFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1295.AddPrinterDriverExA$MH, "AddPrinterDriverExA");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pDriverInfo.address(), dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.AddPrinterDriverExW$MH,"AddPrinterDriverExW");
    }
    public static int AddPrinterDriverExW ( Addressable pName,  int Level,  Addressable pDriverInfo,  int dwFileCopyFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1295.AddPrinterDriverExW$MH, "AddPrinterDriverExW");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pDriverInfo.address(), dwFileCopyFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.EnumPrinterDriversA$MH,"EnumPrinterDriversA");
    }
    public static int EnumPrinterDriversA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1295.EnumPrinterDriversA$MH, "EnumPrinterDriversA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.EnumPrinterDriversW$MH,"EnumPrinterDriversW");
    }
    public static int EnumPrinterDriversW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1295.EnumPrinterDriversW$MH, "EnumPrinterDriversW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.GetPrinterDriverA$MH,"GetPrinterDriverA");
    }
    public static int GetPrinterDriverA ( Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1295.GetPrinterDriverA$MH, "GetPrinterDriverA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$1295.GetPrinterDriverW$MH,"GetPrinterDriverW");
    }
    public static int GetPrinterDriverW ( Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1295.GetPrinterDriverW$MH, "GetPrinterDriverW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.GetPrinterDriverDirectoryA$MH,"GetPrinterDriverDirectoryA");
    }
    public static int GetPrinterDriverDirectoryA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverDirectory,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1296.GetPrinterDriverDirectoryA$MH, "GetPrinterDriverDirectoryA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pDriverDirectory.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.GetPrinterDriverDirectoryW$MH,"GetPrinterDriverDirectoryW");
    }
    public static int GetPrinterDriverDirectoryW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pDriverDirectory,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1296.GetPrinterDriverDirectoryW$MH, "GetPrinterDriverDirectoryW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pDriverDirectory.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverA$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverA$MH,"DeletePrinterDriverA");
    }
    public static int DeletePrinterDriverA ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverA$MH, "DeletePrinterDriverA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pDriverName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverW$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverW$MH,"DeletePrinterDriverW");
    }
    public static int DeletePrinterDriverW ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverW$MH, "DeletePrinterDriverW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pDriverName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverExA$MH,"DeletePrinterDriverExA");
    }
    public static int DeletePrinterDriverExA ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName,  int dwDeleteFlag,  int dwVersionFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverExA$MH, "DeletePrinterDriverExA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pDriverName.address(), dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverExW$MH,"DeletePrinterDriverExW");
    }
    public static int DeletePrinterDriverExW ( Addressable pName,  Addressable pEnvironment,  Addressable pDriverName,  int dwDeleteFlag,  int dwVersionFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1296.DeletePrinterDriverExW$MH, "DeletePrinterDriverExW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pDriverName.address(), dwDeleteFlag, dwVersionFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.AddPrintProcessorA$MH,"AddPrintProcessorA");
    }
    public static int AddPrintProcessorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPathName,  Addressable pPrintProcessorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1297.AddPrintProcessorA$MH, "AddPrintProcessorA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pPathName.address(), pPrintProcessorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.AddPrintProcessorW$MH,"AddPrintProcessorW");
    }
    public static int AddPrintProcessorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPathName,  Addressable pPrintProcessorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1297.AddPrintProcessorW$MH, "AddPrintProcessorW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pPathName.address(), pPrintProcessorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.EnumPrintProcessorsA$MH,"EnumPrintProcessorsA");
    }
    public static int EnumPrintProcessorsA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1297.EnumPrintProcessorsA$MH, "EnumPrintProcessorsA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.EnumPrintProcessorsW$MH,"EnumPrintProcessorsW");
    }
    public static int EnumPrintProcessorsW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1297.EnumPrintProcessorsW$MH, "EnumPrintProcessorsW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.GetPrintProcessorDirectoryA$MH,"GetPrintProcessorDirectoryA");
    }
    public static int GetPrintProcessorDirectoryA ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1297.GetPrintProcessorDirectoryA$MH, "GetPrintProcessorDirectoryA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrintProcessorDirectoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$1297.GetPrintProcessorDirectoryW$MH,"GetPrintProcessorDirectoryW");
    }
    public static int GetPrintProcessorDirectoryW ( Addressable pName,  Addressable pEnvironment,  int Level,  Addressable pPrintProcessorInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1297.GetPrintProcessorDirectoryW$MH, "GetPrintProcessorDirectoryW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), Level, pPrintProcessorInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesA$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.EnumPrintProcessorDatatypesA$MH,"EnumPrintProcessorDatatypesA");
    }
    public static int EnumPrintProcessorDatatypesA ( Addressable pName,  Addressable pPrintProcessorName,  int Level,  Addressable pDatatypes,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1298.EnumPrintProcessorDatatypesA$MH, "EnumPrintProcessorDatatypesA");
        try {
            return (int)mh$.invokeExact(pName.address(), pPrintProcessorName.address(), Level, pDatatypes.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrintProcessorDatatypesW$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.EnumPrintProcessorDatatypesW$MH,"EnumPrintProcessorDatatypesW");
    }
    public static int EnumPrintProcessorDatatypesW ( Addressable pName,  Addressable pPrintProcessorName,  int Level,  Addressable pDatatypes,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1298.EnumPrintProcessorDatatypesW$MH, "EnumPrintProcessorDatatypesW");
        try {
            return (int)mh$.invokeExact(pName.address(), pPrintProcessorName.address(), Level, pDatatypes.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.DeletePrintProcessorA$MH,"DeletePrintProcessorA");
    }
    public static int DeletePrintProcessorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProcessorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1298.DeletePrintProcessorA$MH, "DeletePrintProcessorA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pPrintProcessorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProcessorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.DeletePrintProcessorW$MH,"DeletePrintProcessorW");
    }
    public static int DeletePrintProcessorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProcessorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1298.DeletePrintProcessorW$MH, "DeletePrintProcessorW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pPrintProcessorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.StartDocPrinterA$MH,"StartDocPrinterA");
    }
    public static int StartDocPrinterA ( Addressable hPrinter,  int Level,  Addressable pDocInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1298.StartDocPrinterA$MH, "StartDocPrinterA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pDocInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartDocPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1298.StartDocPrinterW$MH,"StartDocPrinterW");
    }
    public static int StartDocPrinterW ( Addressable hPrinter,  int Level,  Addressable pDocInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1298.StartDocPrinterW$MH, "StartDocPrinterW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pDocInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.StartPagePrinter$MH,"StartPagePrinter");
    }
    public static int StartPagePrinter ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1299.StartPagePrinter$MH, "StartPagePrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WritePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.WritePrinter$MH,"WritePrinter");
    }
    public static int WritePrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pcWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1299.WritePrinter$MH, "WritePrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pBuf.address(), cbBuf, pcWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlushPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.FlushPrinter$MH,"FlushPrinter");
    }
    public static int FlushPrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pcWritten,  int cSleep) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1299.FlushPrinter$MH, "FlushPrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pBuf.address(), cbBuf, pcWritten.address(), cSleep);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndPagePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.EndPagePrinter$MH,"EndPagePrinter");
    }
    public static int EndPagePrinter ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1299.EndPagePrinter$MH, "EndPagePrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.AbortPrinter$MH,"AbortPrinter");
    }
    public static int AbortPrinter ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1299.AbortPrinter$MH, "AbortPrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1299.ReadPrinter$MH,"ReadPrinter");
    }
    public static int ReadPrinter ( Addressable hPrinter,  Addressable pBuf,  int cbBuf,  Addressable pNoBytesRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1299.ReadPrinter$MH, "ReadPrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pBuf.address(), cbBuf, pNoBytesRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EndDocPrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.EndDocPrinter$MH,"EndDocPrinter");
    }
    public static int EndDocPrinter ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1300.EndDocPrinter$MH, "EndDocPrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobA$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.AddJobA$MH,"AddJobA");
    }
    public static int AddJobA ( Addressable hPrinter,  int Level,  Addressable pData,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1300.AddJobA$MH, "AddJobA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pData.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddJobW$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.AddJobW$MH,"AddJobW");
    }
    public static int AddJobW ( Addressable hPrinter,  int Level,  Addressable pData,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1300.AddJobW$MH, "AddJobW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pData.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScheduleJob$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.ScheduleJob$MH,"ScheduleJob");
    }
    public static int ScheduleJob ( Addressable hPrinter,  int JobId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1300.ScheduleJob$MH, "ScheduleJob");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), JobId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterProperties$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.PrinterProperties$MH,"PrinterProperties");
    }
    public static int PrinterProperties ( Addressable hWnd,  Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1300.PrinterProperties$MH, "PrinterProperties");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$1300.DocumentPropertiesA$MH,"DocumentPropertiesA");
    }
    public static int DocumentPropertiesA ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput,  int fMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1300.DocumentPropertiesA$MH, "DocumentPropertiesA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address(), fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.DocumentPropertiesW$MH,"DocumentPropertiesW");
    }
    public static int DocumentPropertiesW ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput,  int fMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1301.DocumentPropertiesW$MH, "DocumentPropertiesW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address(), fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesA$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.AdvancedDocumentPropertiesA$MH,"AdvancedDocumentPropertiesA");
    }
    public static int AdvancedDocumentPropertiesA ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1301.AdvancedDocumentPropertiesA$MH, "AdvancedDocumentPropertiesA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AdvancedDocumentPropertiesW$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.AdvancedDocumentPropertiesW$MH,"AdvancedDocumentPropertiesW");
    }
    public static int AdvancedDocumentPropertiesW ( Addressable hWnd,  Addressable hPrinter,  Addressable pDeviceName,  Addressable pDevModeOutput,  Addressable pDevModeInput) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1301.AdvancedDocumentPropertiesW$MH, "AdvancedDocumentPropertiesW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hPrinter.address(), pDeviceName.address(), pDevModeOutput.address(), pDevModeInput.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtDeviceMode$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.ExtDeviceMode$MH,"ExtDeviceMode");
    }
    public static int ExtDeviceMode ( Addressable hWnd,  Addressable hInst,  Addressable pDevModeOutput,  Addressable pDeviceName,  Addressable pPort,  Addressable pDevModeInput,  Addressable pProfile,  int fMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1301.ExtDeviceMode$MH, "ExtDeviceMode");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hInst.address(), pDevModeOutput.address(), pDeviceName.address(), pPort.address(), pDevModeInput.address(), pProfile.address(), fMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.GetPrinterDataA$MH,"GetPrinterDataA");
    }
    public static int GetPrinterDataA ( Addressable hPrinter,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1301.GetPrinterDataA$MH, "GetPrinterDataA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$1301.GetPrinterDataW$MH,"GetPrinterDataW");
    }
    public static int GetPrinterDataW ( Addressable hPrinter,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1301.GetPrinterDataW$MH, "GetPrinterDataW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.GetPrinterDataExA$MH,"GetPrinterDataExA");
    }
    public static int GetPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1302.GetPrinterDataExA$MH, "GetPrinterDataExA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.GetPrinterDataExW$MH,"GetPrinterDataExW");
    }
    public static int GetPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  Addressable pType,  Addressable pData,  int nSize,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1302.GetPrinterDataExW$MH, "GetPrinterDataExW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), pType.address(), pData.address(), nSize, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataA$MH,"EnumPrinterDataA");
    }
    public static int EnumPrinterDataA ( Addressable hPrinter,  int dwIndex,  Addressable pValueName,  int cbValueName,  Addressable pcbValueName,  Addressable pType,  Addressable pData,  int cbData,  Addressable pcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataA$MH, "EnumPrinterDataA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), dwIndex, pValueName.address(), cbValueName, pcbValueName.address(), pType.address(), pData.address(), cbData, pcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataW$MH,"EnumPrinterDataW");
    }
    public static int EnumPrinterDataW ( Addressable hPrinter,  int dwIndex,  Addressable pValueName,  int cbValueName,  Addressable pcbValueName,  Addressable pType,  Addressable pData,  int cbData,  Addressable pcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataW$MH, "EnumPrinterDataW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), dwIndex, pValueName.address(), cbValueName, pcbValueName.address(), pType.address(), pData.address(), cbData, pcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataExA$MH,"EnumPrinterDataExA");
    }
    public static int EnumPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pEnumValues,  int cbEnumValues,  Addressable pcbEnumValues,  Addressable pnEnumValues) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataExA$MH, "EnumPrinterDataExA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pEnumValues.address(), cbEnumValues, pcbEnumValues.address(), pnEnumValues.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataExW$MH,"EnumPrinterDataExW");
    }
    public static int EnumPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pEnumValues,  int cbEnumValues,  Addressable pcbEnumValues,  Addressable pnEnumValues) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1302.EnumPrinterDataExW$MH, "EnumPrinterDataExW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pEnumValues.address(), cbEnumValues, pcbEnumValues.address(), pnEnumValues.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.EnumPrinterKeyA$MH,"EnumPrinterKeyA");
    }
    public static int EnumPrinterKeyA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pSubkey,  int cbSubkey,  Addressable pcbSubkey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1303.EnumPrinterKeyA$MH, "EnumPrinterKeyA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pSubkey.address(), cbSubkey, pcbSubkey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.EnumPrinterKeyW$MH,"EnumPrinterKeyW");
    }
    public static int EnumPrinterKeyW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pSubkey,  int cbSubkey,  Addressable pcbSubkey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1303.EnumPrinterKeyW$MH, "EnumPrinterKeyW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pSubkey.address(), cbSubkey, pcbSubkey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataA$MH,"SetPrinterDataA");
    }
    public static int SetPrinterDataA ( Addressable hPrinter,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataA$MH, "SetPrinterDataA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataW$MH,"SetPrinterDataW");
    }
    public static int SetPrinterDataW ( Addressable hPrinter,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataW$MH, "SetPrinterDataW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataExA$MH,"SetPrinterDataExA");
    }
    public static int SetPrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataExA$MH, "SetPrinterDataExA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataExW$MH,"SetPrinterDataExW");
    }
    public static int SetPrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName,  int Type,  Addressable pData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1303.SetPrinterDataExW$MH, "SetPrinterDataExW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address(), Type, pData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataA$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataA$MH,"DeletePrinterDataA");
    }
    public static int DeletePrinterDataA ( Addressable hPrinter,  Addressable pValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataA$MH, "DeletePrinterDataA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataW$MH,"DeletePrinterDataW");
    }
    public static int DeletePrinterDataW ( Addressable hPrinter,  Addressable pValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataW$MH, "DeletePrinterDataW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataExA$MH,"DeletePrinterDataExA");
    }
    public static int DeletePrinterDataExA ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataExA$MH, "DeletePrinterDataExA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDataExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataExW$MH,"DeletePrinterDataExW");
    }
    public static int DeletePrinterDataExW ( Addressable hPrinter,  Addressable pKeyName,  Addressable pValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1304.DeletePrinterDataExW$MH, "DeletePrinterDataExW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address(), pValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.DeletePrinterKeyA$MH,"DeletePrinterKeyA");
    }
    public static int DeletePrinterKeyA ( Addressable hPrinter,  Addressable pKeyName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1304.DeletePrinterKeyA$MH, "DeletePrinterKeyA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$1304.DeletePrinterKeyW$MH,"DeletePrinterKeyW");
    }
    public static int DeletePrinterKeyW ( Addressable hPrinter,  Addressable pKeyName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1304.DeletePrinterKeyW$MH, "DeletePrinterKeyW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pKeyName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int BIDI_NULL() {
        return (int)0L;
    }
    public static int BIDI_INT() {
        return (int)1L;
    }
    public static int BIDI_FLOAT() {
        return (int)2L;
    }
    public static int BIDI_BOOL() {
        return (int)3L;
    }
    public static int BIDI_STRING() {
        return (int)4L;
    }
    public static int BIDI_TEXT() {
        return (int)5L;
    }
    public static int BIDI_ENUM() {
        return (int)6L;
    }
    public static int BIDI_BLOB() {
        return (int)7L;
    }
    public static MethodHandle WaitForPrinterChange$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.WaitForPrinterChange$MH,"WaitForPrinterChange");
    }
    public static int WaitForPrinterChange ( Addressable hPrinter,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1305.WaitForPrinterChange$MH, "WaitForPrinterChange");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindFirstPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.FindFirstPrinterChangeNotification$MH,"FindFirstPrinterChangeNotification");
    }
    public static MemoryAddress FindFirstPrinterChangeNotification ( Addressable hPrinter,  int fdwFlags,  int fdwOptions,  Addressable pPrinterNotifyOptions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1305.FindFirstPrinterChangeNotification$MH, "FindFirstPrinterChangeNotification");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hPrinter.address(), fdwFlags, fdwOptions, pPrinterNotifyOptions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindNextPrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.FindNextPrinterChangeNotification$MH,"FindNextPrinterChangeNotification");
    }
    public static int FindNextPrinterChangeNotification ( Addressable hChange,  Addressable pdwChange,  Addressable pPrinterNotifyOptions,  Addressable ppPrinterNotifyInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1305.FindNextPrinterChangeNotification$MH, "FindNextPrinterChangeNotification");
        try {
            return (int)mh$.invokeExact(hChange.address(), pdwChange.address(), pPrinterNotifyOptions.address(), ppPrinterNotifyInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreePrinterNotifyInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.FreePrinterNotifyInfo$MH,"FreePrinterNotifyInfo");
    }
    public static int FreePrinterNotifyInfo ( Addressable pPrinterNotifyInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1305.FreePrinterNotifyInfo$MH, "FreePrinterNotifyInfo");
        try {
            return (int)mh$.invokeExact(pPrinterNotifyInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindClosePrinterChangeNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.FindClosePrinterChangeNotification$MH,"FindClosePrinterChangeNotification");
    }
    public static int FindClosePrinterChangeNotification ( Addressable hChange) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1305.FindClosePrinterChangeNotification$MH, "FindClosePrinterChangeNotification");
        try {
            return (int)mh$.invokeExact(hChange.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxA$MH() {
        return RuntimeHelper.requireNonNull(constants$1305.PrinterMessageBoxA$MH,"PrinterMessageBoxA");
    }
    public static int PrinterMessageBoxA ( Addressable hPrinter,  int Error,  Addressable hWnd,  Addressable pText,  Addressable pCaption,  int dwType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1305.PrinterMessageBoxA$MH, "PrinterMessageBoxA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Error, hWnd.address(), pText.address(), pCaption.address(), dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrinterMessageBoxW$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.PrinterMessageBoxW$MH,"PrinterMessageBoxW");
    }
    public static int PrinterMessageBoxW ( Addressable hPrinter,  int Error,  Addressable hWnd,  Addressable pText,  Addressable pCaption,  int dwType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1306.PrinterMessageBoxW$MH, "PrinterMessageBoxW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Error, hWnd.address(), pText.address(), pCaption.address(), dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ClosePrinter$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.ClosePrinter$MH,"ClosePrinter");
    }
    public static int ClosePrinter ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1306.ClosePrinter$MH, "ClosePrinter");
        try {
            return (int)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.AddFormA$MH,"AddFormA");
    }
    public static int AddFormA ( Addressable hPrinter,  int Level,  Addressable pForm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1306.AddFormA$MH, "AddFormA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pForm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.AddFormW$MH,"AddFormW");
    }
    public static int AddFormW ( Addressable hPrinter,  int Level,  Addressable pForm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1306.AddFormW$MH, "AddFormW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pForm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.DeleteFormA$MH,"DeleteFormA");
    }
    public static int DeleteFormA ( Addressable hPrinter,  Addressable pFormName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1306.DeleteFormA$MH, "DeleteFormA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pFormName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$1306.DeleteFormW$MH,"DeleteFormW");
    }
    public static int DeleteFormW ( Addressable hPrinter,  Addressable pFormName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1306.DeleteFormW$MH, "DeleteFormW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pFormName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.GetFormA$MH,"GetFormA");
    }
    public static int GetFormA ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1307.GetFormA$MH, "GetFormA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.GetFormW$MH,"GetFormW");
    }
    public static int GetFormW ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1307.GetFormW$MH, "GetFormW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormA$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.SetFormA$MH,"SetFormA");
    }
    public static int SetFormA ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1307.SetFormA$MH, "SetFormA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetFormW$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.SetFormW$MH,"SetFormW");
    }
    public static int SetFormW ( Addressable hPrinter,  Addressable pFormName,  int Level,  Addressable pForm) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1307.SetFormW$MH, "SetFormW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), pFormName.address(), Level, pForm.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.EnumFormsA$MH,"EnumFormsA");
    }
    public static int EnumFormsA ( Addressable hPrinter,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1307.EnumFormsA$MH, "EnumFormsA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pForm.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumFormsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1307.EnumFormsW$MH,"EnumFormsW");
    }
    public static int EnumFormsW ( Addressable hPrinter,  int Level,  Addressable pForm,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1307.EnumFormsW$MH, "EnumFormsW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), Level, pForm.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.EnumMonitorsA$MH,"EnumMonitorsA");
    }
    public static int EnumMonitorsA ( Addressable pName,  int Level,  Addressable pMonitor,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1308.EnumMonitorsA$MH, "EnumMonitorsA");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pMonitor.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumMonitorsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.EnumMonitorsW$MH,"EnumMonitorsW");
    }
    public static int EnumMonitorsW ( Addressable pName,  int Level,  Addressable pMonitor,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1308.EnumMonitorsW$MH, "EnumMonitorsW");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pMonitor.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.AddMonitorA$MH,"AddMonitorA");
    }
    public static int AddMonitorA ( Addressable pName,  int Level,  Addressable pMonitorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1308.AddMonitorA$MH, "AddMonitorA");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pMonitorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.AddMonitorW$MH,"AddMonitorW");
    }
    public static int AddMonitorW ( Addressable pName,  int Level,  Addressable pMonitorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1308.AddMonitorW$MH, "AddMonitorW");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pMonitorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.DeleteMonitorA$MH,"DeleteMonitorA");
    }
    public static int DeleteMonitorA ( Addressable pName,  Addressable pEnvironment,  Addressable pMonitorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1308.DeleteMonitorA$MH, "DeleteMonitorA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pMonitorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteMonitorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1308.DeleteMonitorW$MH,"DeleteMonitorW");
    }
    public static int DeleteMonitorW ( Addressable pName,  Addressable pEnvironment,  Addressable pMonitorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1308.DeleteMonitorW$MH, "DeleteMonitorW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pMonitorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.EnumPortsA$MH,"EnumPortsA");
    }
    public static int EnumPortsA ( Addressable pName,  int Level,  Addressable pPorts,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1309.EnumPortsA$MH, "EnumPortsA");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pPorts.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumPortsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.EnumPortsW$MH,"EnumPortsW");
    }
    public static int EnumPortsW ( Addressable pName,  int Level,  Addressable pPorts,  int cbBuf,  Addressable pcbNeeded,  Addressable pcReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1309.EnumPortsW$MH, "EnumPortsW");
        try {
            return (int)mh$.invokeExact(pName.address(), Level, pPorts.address(), cbBuf, pcbNeeded.address(), pcReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.AddPortA$MH,"AddPortA");
    }
    public static int AddPortA ( Addressable pName,  Addressable hWnd,  Addressable pMonitorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1309.AddPortA$MH, "AddPortA");
        try {
            return (int)mh$.invokeExact(pName.address(), hWnd.address(), pMonitorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.AddPortW$MH,"AddPortW");
    }
    public static int AddPortW ( Addressable pName,  Addressable hWnd,  Addressable pMonitorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1309.AddPortW$MH, "AddPortW");
        try {
            return (int)mh$.invokeExact(pName.address(), hWnd.address(), pMonitorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.ConfigurePortA$MH,"ConfigurePortA");
    }
    public static int ConfigurePortA ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1309.ConfigurePortA$MH, "ConfigurePortA");
        try {
            return (int)mh$.invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConfigurePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$1309.ConfigurePortW$MH,"ConfigurePortW");
    }
    public static int ConfigurePortW ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1309.ConfigurePortW$MH, "ConfigurePortW");
        try {
            return (int)mh$.invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortA$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.DeletePortA$MH,"DeletePortA");
    }
    public static int DeletePortA ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1310.DeletePortA$MH, "DeletePortA");
        try {
            return (int)mh$.invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePortW$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.DeletePortW$MH,"DeletePortW");
    }
    public static int DeletePortW ( Addressable pName,  Addressable hWnd,  Addressable pPortName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1310.DeletePortW$MH, "DeletePortW");
        try {
            return (int)mh$.invokeExact(pName.address(), hWnd.address(), pPortName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle XcvDataW$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.XcvDataW$MH,"XcvDataW");
    }
    public static int XcvDataW ( Addressable hXcv,  Addressable pszDataName,  Addressable pInputData,  int cbInputData,  Addressable pOutputData,  int cbOutputData,  Addressable pcbOutputNeeded,  Addressable pdwStatus) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1310.XcvDataW$MH, "XcvDataW");
        try {
            return (int)mh$.invokeExact(hXcv.address(), pszDataName.address(), pInputData.address(), cbInputData, pOutputData.address(), cbOutputData, pcbOutputNeeded.address(), pdwStatus.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.GetDefaultPrinterA$MH,"GetDefaultPrinterA");
    }
    public static int GetDefaultPrinterA ( Addressable pszBuffer,  Addressable pcchBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1310.GetDefaultPrinterA$MH, "GetDefaultPrinterA");
        try {
            return (int)mh$.invokeExact(pszBuffer.address(), pcchBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.GetDefaultPrinterW$MH,"GetDefaultPrinterW");
    }
    public static int GetDefaultPrinterW ( Addressable pszBuffer,  Addressable pcchBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1310.GetDefaultPrinterW$MH, "GetDefaultPrinterW");
        try {
            return (int)mh$.invokeExact(pszBuffer.address(), pcchBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterA$MH() {
        return RuntimeHelper.requireNonNull(constants$1310.SetDefaultPrinterA$MH,"SetDefaultPrinterA");
    }
    public static int SetDefaultPrinterA ( Addressable pszPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1310.SetDefaultPrinterA$MH, "SetDefaultPrinterA");
        try {
            return (int)mh$.invokeExact(pszPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetDefaultPrinterW$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.SetDefaultPrinterW$MH,"SetDefaultPrinterW");
    }
    public static int SetDefaultPrinterW ( Addressable pszPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1311.SetDefaultPrinterW$MH, "SetDefaultPrinterW");
        try {
            return (int)mh$.invokeExact(pszPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortA$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.SetPortA$MH,"SetPortA");
    }
    public static int SetPortA ( Addressable pName,  Addressable pPortName,  int dwLevel,  Addressable pPortInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1311.SetPortA$MH, "SetPortA");
        try {
            return (int)mh$.invokeExact(pName.address(), pPortName.address(), dwLevel, pPortInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetPortW$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.SetPortW$MH,"SetPortW");
    }
    public static int SetPortW ( Addressable pName,  Addressable pPortName,  int dwLevel,  Addressable pPortInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1311.SetPortW$MH, "SetPortW");
        try {
            return (int)mh$.invokeExact(pName.address(), pPortName.address(), dwLevel, pPortInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.AddPrinterConnectionA$MH,"AddPrinterConnectionA");
    }
    public static int AddPrinterConnectionA ( Addressable pName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1311.AddPrinterConnectionA$MH, "AddPrinterConnectionA");
        try {
            return (int)mh$.invokeExact(pName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.AddPrinterConnectionW$MH,"AddPrinterConnectionW");
    }
    public static int AddPrinterConnectionW ( Addressable pName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1311.AddPrinterConnectionW$MH, "AddPrinterConnectionW");
        try {
            return (int)mh$.invokeExact(pName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$1311.DeletePrinterConnectionA$MH,"DeletePrinterConnectionA");
    }
    public static int DeletePrinterConnectionA ( Addressable pName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1311.DeletePrinterConnectionA$MH, "DeletePrinterConnectionA");
        try {
            return (int)mh$.invokeExact(pName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.DeletePrinterConnectionW$MH,"DeletePrinterConnectionW");
    }
    public static int DeletePrinterConnectionW ( Addressable pName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.DeletePrinterConnectionW$MH, "DeletePrinterConnectionW");
        try {
            return (int)mh$.invokeExact(pName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConnectToPrinterDlg$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.ConnectToPrinterDlg$MH,"ConnectToPrinterDlg");
    }
    public static MemoryAddress ConnectToPrinterDlg ( Addressable hwnd,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.ConnectToPrinterDlg$MH, "ConnectToPrinterDlg");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hwnd.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.AddPrintProvidorA$MH,"AddPrintProvidorA");
    }
    public static int AddPrintProvidorA ( Addressable pName,  int level,  Addressable pProvidorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.AddPrintProvidorA$MH, "AddPrintProvidorA");
        try {
            return (int)mh$.invokeExact(pName.address(), level, pProvidorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.AddPrintProvidorW$MH,"AddPrintProvidorW");
    }
    public static int AddPrintProvidorW ( Addressable pName,  int level,  Addressable pProvidorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.AddPrintProvidorW$MH, "AddPrintProvidorW");
        try {
            return (int)mh$.invokeExact(pName.address(), level, pProvidorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.DeletePrintProvidorA$MH,"DeletePrintProvidorA");
    }
    public static int DeletePrintProvidorA ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProvidorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.DeletePrintProvidorA$MH, "DeletePrintProvidorA");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pPrintProvidorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrintProvidorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1312.DeletePrintProvidorW$MH,"DeletePrintProvidorW");
    }
    public static int DeletePrintProvidorW ( Addressable pName,  Addressable pEnvironment,  Addressable pPrintProvidorName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1312.DeletePrintProvidorW$MH, "DeletePrintProvidorW");
        try {
            return (int)mh$.invokeExact(pName.address(), pEnvironment.address(), pPrintProvidorName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeA$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.IsValidDevmodeA$MH,"IsValidDevmodeA");
    }
    public static int IsValidDevmodeA ( Addressable pDevmode,  long DevmodeSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.IsValidDevmodeA$MH, "IsValidDevmodeA");
        try {
            return (int)mh$.invokeExact(pDevmode.address(), DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidDevmodeW$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.IsValidDevmodeW$MH,"IsValidDevmodeW");
    }
    public static int IsValidDevmodeW ( Addressable pDevmode,  long DevmodeSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.IsValidDevmodeW$MH, "IsValidDevmodeW");
        try {
            return (int)mh$.invokeExact(pDevmode.address(), DevmodeSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PRINTER_OPTION_NO_CACHE() {
        return (int)0L;
    }
    public static int PRINTER_OPTION_CACHE() {
        return (int)1L;
    }
    public static int PRINTER_OPTION_CLIENT_CHANGE() {
        return (int)2L;
    }
    public static int kJobProduction() {
        return (int)0L;
    }
    public static int kJobConsumption() {
        return (int)1L;
    }
    public static int kAddingDocumentSequence() {
        return (int)0L;
    }
    public static int kDocumentSequenceAdded() {
        return (int)1L;
    }
    public static int kAddingFixedDocument() {
        return (int)2L;
    }
    public static int kFixedDocumentAdded() {
        return (int)3L;
    }
    public static int kAddingFixedPage() {
        return (int)4L;
    }
    public static int kFixedPageAdded() {
        return (int)5L;
    }
    public static int kResourceAdded() {
        return (int)6L;
    }
    public static int kFontAdded() {
        return (int)7L;
    }
    public static int kImageAdded() {
        return (int)8L;
    }
    public static int kXpsDocumentCommitted() {
        return (int)9L;
    }
    public static MethodHandle AddPrinterConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.AddPrinterConnection2W$MH,"AddPrinterConnection2W");
    }
    public static int AddPrinterConnection2W ( Addressable hWnd,  Addressable pszName,  int dwLevel,  Addressable pConnectionInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.AddPrinterConnection2W$MH, "AddPrinterConnection2W");
        try {
            return (int)mh$.invokeExact(hWnd.address(), pszName.address(), dwLevel, pConnectionInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddPrinterConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.AddPrinterConnection2A$MH,"AddPrinterConnection2A");
    }
    public static int AddPrinterConnection2A ( Addressable hWnd,  Addressable pszName,  int dwLevel,  Addressable pConnectionInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.AddPrinterConnection2A$MH, "AddPrinterConnection2A");
        try {
            return (int)mh$.invokeExact(hWnd.address(), pszName.address(), dwLevel, pConnectionInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.DeletePrinterDriverPackageA$MH,"DeletePrinterDriverPackageA");
    }
    public static int DeletePrinterDriverPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.DeletePrinterDriverPackageA$MH, "DeletePrinterDriverPackageA");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeletePrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$1313.DeletePrinterDriverPackageW$MH,"DeletePrinterDriverPackageW");
    }
    public static int DeletePrinterDriverPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1313.DeletePrinterDriverPackageW$MH, "DeletePrinterDriverPackageW");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentEventA$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.DocumentEventA$MH,"DocumentEventA");
    }
    public static int DocumentEventA ( Addressable hPrinter,  Addressable hdc,  int iEsc,  int cbIn,  Addressable pvIn,  int cbOut,  Addressable pvOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.DocumentEventA$MH, "DocumentEventA");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), hdc.address(), iEsc, cbIn, pvIn.address(), cbOut, pvOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DocumentEventW$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.DocumentEventW$MH,"DocumentEventW");
    }
    public static int DocumentEventW ( Addressable hPrinter,  Addressable hdc,  int iEsc,  int cbIn,  Addressable pvIn,  int cbOut,  Addressable pvOut) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.DocumentEventW$MH, "DocumentEventW");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), hdc.address(), iEsc, cbIn, pvIn.address(), cbOut, pvOut.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReportJobProcessingProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.ReportJobProcessingProgress$MH,"ReportJobProcessingProgress");
    }
    public static int ReportJobProcessingProgress ( Addressable printerHandle,  int jobId,  int jobOperation,  int jobProgress) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.ReportJobProcessingProgress$MH, "ReportJobProcessingProgress");
        try {
            return (int)mh$.invokeExact(printerHandle.address(), jobId, jobOperation, jobProgress);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCorePrinterDriversA$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.GetCorePrinterDriversA$MH,"GetCorePrinterDriversA");
    }
    public static int GetCorePrinterDriversA ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszzCoreDriverDependencies,  int cCorePrinterDrivers,  Addressable pCorePrinterDrivers) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.GetCorePrinterDriversA$MH, "GetCorePrinterDriversA");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszEnvironment.address(), pszzCoreDriverDependencies.address(), cCorePrinterDrivers, pCorePrinterDrivers.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCorePrinterDriversW$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.GetCorePrinterDriversW$MH,"GetCorePrinterDriversW");
    }
    public static int GetCorePrinterDriversW ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszzCoreDriverDependencies,  int cCorePrinterDrivers,  Addressable pCorePrinterDrivers) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.GetCorePrinterDriversW$MH, "GetCorePrinterDriversW");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszEnvironment.address(), pszzCoreDriverDependencies.address(), cCorePrinterDrivers, pCorePrinterDrivers.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2A$MH() {
        return RuntimeHelper.requireNonNull(constants$1314.GetPrinterDriver2A$MH,"GetPrinterDriver2A");
    }
    public static int GetPrinterDriver2A ( Addressable hWnd,  Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1314.GetPrinterDriver2A$MH, "GetPrinterDriver2A");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriver2W$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.GetPrinterDriver2W$MH,"GetPrinterDriver2W");
    }
    public static int GetPrinterDriver2W ( Addressable hWnd,  Addressable hPrinter,  Addressable pEnvironment,  int Level,  Addressable pDriverInfo,  int cbBuf,  Addressable pcbNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.GetPrinterDriver2W$MH, "GetPrinterDriver2W");
        try {
            return (int)mh$.invokeExact(hWnd.address(), hPrinter.address(), pEnvironment.address(), Level, pDriverInfo.address(), cbBuf, pcbNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathA$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.GetPrinterDriverPackagePathA$MH,"GetPrinterDriverPackagePathA");
    }
    public static int GetPrinterDriverPackagePathA ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszLanguage,  Addressable pszPackageID,  Addressable pszDriverPackageCab,  int cchDriverPackageCab,  Addressable pcchRequiredSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.GetPrinterDriverPackagePathA$MH, "GetPrinterDriverPackagePathA");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszEnvironment.address(), pszLanguage.address(), pszPackageID.address(), pszDriverPackageCab.address(), cchDriverPackageCab, pcchRequiredSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetPrinterDriverPackagePathW$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.GetPrinterDriverPackagePathW$MH,"GetPrinterDriverPackagePathW");
    }
    public static int GetPrinterDriverPackagePathW ( Addressable pszServer,  Addressable pszEnvironment,  Addressable pszLanguage,  Addressable pszPackageID,  Addressable pszDriverPackageCab,  int cchDriverPackageCab,  Addressable pcchRequiredSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.GetPrinterDriverPackagePathW$MH, "GetPrinterDriverPackagePathW");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszEnvironment.address(), pszLanguage.address(), pszPackageID.address(), pszDriverPackageCab.address(), cchDriverPackageCab, pcchRequiredSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSpoolFileHandleA$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.GetSpoolFileHandleA$MH,"GetSpoolFileHandleA");
    }
    public static MemoryAddress GetSpoolFileHandleA ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.GetSpoolFileHandleA$MH, "GetSpoolFileHandleA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSpoolFileHandleW$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.GetSpoolFileHandleW$MH,"GetSpoolFileHandleW");
    }
    public static MemoryAddress GetSpoolFileHandleW ( Addressable hPrinter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.GetSpoolFileHandleW$MH, "GetSpoolFileHandleW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hPrinter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CommitSpoolData$MH() {
        return RuntimeHelper.requireNonNull(constants$1315.CommitSpoolData$MH,"CommitSpoolData");
    }
    public static MemoryAddress CommitSpoolData ( Addressable hPrinter,  Addressable hSpoolFile,  int cbCommit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1315.CommitSpoolData$MH, "CommitSpoolData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hPrinter.address(), hSpoolFile.address(), cbCommit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseSpoolFileHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.CloseSpoolFileHandle$MH,"CloseSpoolFileHandle");
    }
    public static int CloseSpoolFileHandle ( Addressable hPrinter,  Addressable hSpoolFile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.CloseSpoolFileHandle$MH, "CloseSpoolFileHandle");
        try {
            return (int)mh$.invokeExact(hPrinter.address(), hSpoolFile.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinter2A$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.OpenPrinter2A$MH,"OpenPrinter2A");
    }
    public static int OpenPrinter2A ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault,  Addressable pOptions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.OpenPrinter2A$MH, "OpenPrinter2A");
        try {
            return (int)mh$.invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address(), pOptions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenPrinter2W$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.OpenPrinter2W$MH,"OpenPrinter2W");
    }
    public static int OpenPrinter2W ( Addressable pPrinterName,  Addressable phPrinter,  Addressable pDefault,  Addressable pOptions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.OpenPrinter2W$MH, "OpenPrinter2W");
        try {
            return (int)mh$.invokeExact(pPrinterName.address(), phPrinter.address(), pDefault.address(), pOptions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageA$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.UploadPrinterDriverPackageA$MH,"UploadPrinterDriverPackageA");
    }
    public static int UploadPrinterDriverPackageA ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment,  int dwFlags,  Addressable hwnd,  Addressable pszDestInfPath,  Addressable pcchDestInfPath) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.UploadPrinterDriverPackageA$MH, "UploadPrinterDriverPackageA");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address(), dwFlags, hwnd.address(), pszDestInfPath.address(), pcchDestInfPath.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UploadPrinterDriverPackageW$MH() {
        return RuntimeHelper.requireNonNull(constants$1316.UploadPrinterDriverPackageW$MH,"UploadPrinterDriverPackageW");
    }
    public static int UploadPrinterDriverPackageW ( Addressable pszServer,  Addressable pszInfPath,  Addressable pszEnvironment,  int dwFlags,  Addressable hwnd,  Addressable pszDestInfPath,  Addressable pcchDestInfPath) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1316.UploadPrinterDriverPackageW$MH, "UploadPrinterDriverPackageW");
        try {
            return (int)mh$.invokeExact(pszServer.address(), pszInfPath.address(), pszEnvironment.address(), dwFlags, hwnd.address(), pszDestInfPath.address(), pcchDestInfPath.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment IID_IPrintDialogCallback$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1316.IID_IPrintDialogCallback$SEGMENT,"IID_IPrintDialogCallback");
    }
    public static MemorySegment IID_IPrintDialogServices$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$1317.IID_IPrintDialogServices$SEGMENT,"IID_IPrintDialogServices");
    }
    public static MethodHandle GetOpenFileNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.GetOpenFileNameA$MH,"GetOpenFileNameA");
    }
    public static int GetOpenFileNameA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.GetOpenFileNameA$MH, "GetOpenFileNameA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetOpenFileNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.GetOpenFileNameW$MH,"GetOpenFileNameW");
    }
    public static int GetOpenFileNameW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.GetOpenFileNameW$MH, "GetOpenFileNameW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSaveFileNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1317.GetSaveFileNameA$MH,"GetSaveFileNameA");
    }
    public static int GetSaveFileNameA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1317.GetSaveFileNameA$MH, "GetSaveFileNameA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSaveFileNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.GetSaveFileNameW$MH,"GetSaveFileNameW");
    }
    public static int GetSaveFileNameW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.GetSaveFileNameW$MH, "GetSaveFileNameW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileTitleA$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.GetFileTitleA$MH,"GetFileTitleA");
    }
    public static short GetFileTitleA ( Addressable x0,  Addressable x1,  short x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.GetFileTitleA$MH, "GetFileTitleA");
        try {
            return (short)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileTitleW$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.GetFileTitleW$MH,"GetFileTitleW");
    }
    public static short GetFileTitleW ( Addressable x0,  Addressable x1,  short x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.GetFileTitleW$MH, "GetFileTitleW");
        try {
            return (short)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChooseColorA$MH() {
        return RuntimeHelper.requireNonNull(constants$1318.ChooseColorA$MH,"ChooseColorA");
    }
    public static int ChooseColorA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1318.ChooseColorA$MH, "ChooseColorA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChooseColorW$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.ChooseColorW$MH,"ChooseColorW");
    }
    public static int ChooseColorW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.ChooseColorW$MH, "ChooseColorW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.FindTextA$MH,"FindTextA");
    }
    public static MemoryAddress FindTextA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.FindTextA$MH, "FindTextA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.FindTextW$MH,"FindTextW");
    }
    public static MemoryAddress FindTextW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.FindTextW$MH, "FindTextW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReplaceTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$1319.ReplaceTextA$MH,"ReplaceTextA");
    }
    public static MemoryAddress ReplaceTextA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1319.ReplaceTextA$MH, "ReplaceTextA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReplaceTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ReplaceTextW$MH,"ReplaceTextW");
    }
    public static MemoryAddress ReplaceTextW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.ReplaceTextW$MH, "ReplaceTextW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChooseFontA$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ChooseFontA$MH,"ChooseFontA");
    }
    public static int ChooseFontA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.ChooseFontA$MH, "ChooseFontA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChooseFontW$MH() {
        return RuntimeHelper.requireNonNull(constants$1320.ChooseFontW$MH,"ChooseFontW");
    }
    public static int ChooseFontW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1320.ChooseFontW$MH, "ChooseFontW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrintDlgA$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.PrintDlgA$MH,"PrintDlgA");
    }
    public static int PrintDlgA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.PrintDlgA$MH, "PrintDlgA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrintDlgW$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.PrintDlgW$MH,"PrintDlgW");
    }
    public static int PrintDlgW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.PrintDlgW$MH, "PrintDlgW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrintDlgExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1321.PrintDlgExA$MH,"PrintDlgExA");
    }
    public static int PrintDlgExA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1321.PrintDlgExA$MH, "PrintDlgExA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PrintDlgExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.PrintDlgExW$MH,"PrintDlgExW");
    }
    public static int PrintDlgExW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.PrintDlgExW$MH, "PrintDlgExW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CommDlgExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$1322.CommDlgExtendedError$MH,"CommDlgExtendedError");
    }
    public static int CommDlgExtendedError () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1322.CommDlgExtendedError$MH, "CommDlgExtendedError");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PageSetupDlgA$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.PageSetupDlgA$MH,"PageSetupDlgA");
    }
    public static int PageSetupDlgA ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.PageSetupDlgA$MH, "PageSetupDlgA");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PageSetupDlgW$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.PageSetupDlgW$MH,"PageSetupDlgW");
    }
    public static int PageSetupDlgW ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.PageSetupDlgW$MH, "PageSetupDlgW");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_CharUpperW$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.uaw_CharUpperW$MH,"uaw_CharUpperW");
    }
    public static MemoryAddress uaw_CharUpperW ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.uaw_CharUpperW$MH, "uaw_CharUpperW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_lstrcmpW$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.uaw_lstrcmpW$MH,"uaw_lstrcmpW");
    }
    public static int uaw_lstrcmpW ( Addressable String1,  Addressable String2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.uaw_lstrcmpW$MH, "uaw_lstrcmpW");
        try {
            return (int)mh$.invokeExact(String1.address(), String2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_lstrcmpiW$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.uaw_lstrcmpiW$MH,"uaw_lstrcmpiW");
    }
    public static int uaw_lstrcmpiW ( Addressable String1,  Addressable String2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.uaw_lstrcmpiW$MH, "uaw_lstrcmpiW");
        try {
            return (int)mh$.invokeExact(String1.address(), String2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_lstrlenW$MH() {
        return RuntimeHelper.requireNonNull(constants$1323.uaw_lstrlenW$MH,"uaw_lstrlenW");
    }
    public static int uaw_lstrlenW ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1323.uaw_lstrlenW$MH, "uaw_lstrlenW");
        try {
            return (int)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcschr$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.uaw_wcschr$MH,"uaw_wcschr");
    }
    public static MemoryAddress uaw_wcschr ( Addressable String_,  short Character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.uaw_wcschr$MH, "uaw_wcschr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(String_.address(), Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcscpy$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.uaw_wcscpy$MH,"uaw_wcscpy");
    }
    public static MemoryAddress uaw_wcscpy ( Addressable Destination,  Addressable Source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.uaw_wcscpy$MH, "uaw_wcscpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(Destination.address(), Source.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.uaw_wcsicmp$MH,"uaw_wcsicmp");
    }
    public static int uaw_wcsicmp ( Addressable String1,  Addressable String2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.uaw_wcsicmp$MH, "uaw_wcsicmp");
        try {
            return (int)mh$.invokeExact(String1.address(), String2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcslen$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.uaw_wcslen$MH,"uaw_wcslen");
    }
    public static long uaw_wcslen ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.uaw_wcslen$MH, "uaw_wcslen");
        try {
            return (long)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle uaw_wcsrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.uaw_wcsrchr$MH,"uaw_wcsrchr");
    }
    public static MemoryAddress uaw_wcsrchr ( Addressable String_,  short Character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.uaw_wcsrchr$MH, "uaw_wcsrchr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(String_.address(), Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_CharUpperW$MH() {
        return RuntimeHelper.requireNonNull(constants$1324.ua_CharUpperW$MH,"ua_CharUpperW");
    }
    public static MemoryAddress ua_CharUpperW ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1324.ua_CharUpperW$MH, "ua_CharUpperW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_lstrcmpW$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.ua_lstrcmpW$MH,"ua_lstrcmpW");
    }
    public static int ua_lstrcmpW ( Addressable String1,  Addressable String2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.ua_lstrcmpW$MH, "ua_lstrcmpW");
        try {
            return (int)mh$.invokeExact(String1.address(), String2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_lstrcmpiW$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.ua_lstrcmpiW$MH,"ua_lstrcmpiW");
    }
    public static int ua_lstrcmpiW ( Addressable String1,  Addressable String2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.ua_lstrcmpiW$MH, "ua_lstrcmpiW");
        try {
            return (int)mh$.invokeExact(String1.address(), String2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_lstrlenW$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.ua_lstrlenW$MH,"ua_lstrlenW");
    }
    public static int ua_lstrlenW ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.ua_lstrlenW$MH, "ua_lstrlenW");
        try {
            return (int)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcschr$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.ua_wcschr$MH,"ua_wcschr");
    }
    public static MemoryAddress ua_wcschr ( Addressable String_,  short Character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.ua_wcschr$MH, "ua_wcschr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(String_.address(), Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcsrchr$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.ua_wcsrchr$MH,"ua_wcsrchr");
    }
    public static MemoryAddress ua_wcsrchr ( Addressable String_,  short Character) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.ua_wcsrchr$MH, "ua_wcsrchr");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(String_.address(), Character);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcscpy$MH() {
        return RuntimeHelper.requireNonNull(constants$1325.ua_wcscpy$MH,"ua_wcscpy");
    }
    public static MemoryAddress ua_wcscpy ( Addressable Destination,  Addressable Source) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1325.ua_wcscpy$MH, "ua_wcscpy");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(Destination.address(), Source.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcslen$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.ua_wcslen$MH,"ua_wcslen");
    }
    public static long ua_wcslen ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.ua_wcslen$MH, "ua_wcslen");
        try {
            return (long)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ua_wcsicmp$MH() {
        return RuntimeHelper.requireNonNull(constants$1326.ua_wcsicmp$MH,"ua_wcsicmp");
    }
    public static int ua_wcsicmp ( Addressable String1,  Addressable String2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1326.ua_wcsicmp$MH, "ua_wcsicmp");
        try {
            return (int)mh$.invokeExact(String1.address(), String2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int SC_ACTION_NONE() {
        return (int)0L;
    }
    public static int SC_ACTION_RESTART() {
        return (int)1L;
    }
    public static int SC_ACTION_REBOOT() {
        return (int)2L;
    }
    public static int SC_ACTION_RUN_COMMAND() {
        return (int)3L;
    }
    public static int SC_STATUS_PROCESS_INFO() {
        return (int)0L;
    }
    public static int SC_ENUM_PROCESS_INFO() {
        return (int)0L;
    }
    public static MethodHandle ChangeServiceConfigA$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.ChangeServiceConfigA$MH,"ChangeServiceConfigA");
    }
    public static int ChangeServiceConfigA ( Addressable hService,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword,  Addressable lpDisplayName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.ChangeServiceConfigA$MH, "ChangeServiceConfigA");
        try {
            return (int)mh$.invokeExact(hService.address(), dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address(), lpDisplayName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeServiceConfigW$MH() {
        return RuntimeHelper.requireNonNull(constants$1327.ChangeServiceConfigW$MH,"ChangeServiceConfigW");
    }
    public static int ChangeServiceConfigW ( Addressable hService,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword,  Addressable lpDisplayName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1327.ChangeServiceConfigW$MH, "ChangeServiceConfigW");
        try {
            return (int)mh$.invokeExact(hService.address(), dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address(), lpDisplayName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeServiceConfig2A$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.ChangeServiceConfig2A$MH,"ChangeServiceConfig2A");
    }
    public static int ChangeServiceConfig2A ( Addressable hService,  int dwInfoLevel,  Addressable lpInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.ChangeServiceConfig2A$MH, "ChangeServiceConfig2A");
        try {
            return (int)mh$.invokeExact(hService.address(), dwInfoLevel, lpInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ChangeServiceConfig2W$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.ChangeServiceConfig2W$MH,"ChangeServiceConfig2W");
    }
    public static int ChangeServiceConfig2W ( Addressable hService,  int dwInfoLevel,  Addressable lpInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.ChangeServiceConfig2W$MH, "ChangeServiceConfig2W");
        try {
            return (int)mh$.invokeExact(hService.address(), dwInfoLevel, lpInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseServiceHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.CloseServiceHandle$MH,"CloseServiceHandle");
    }
    public static int CloseServiceHandle ( Addressable hSCObject) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.CloseServiceHandle$MH, "CloseServiceHandle");
        try {
            return (int)mh$.invokeExact(hSCObject.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ControlService$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.ControlService$MH,"ControlService");
    }
    public static int ControlService ( Addressable hService,  int dwControl,  Addressable lpServiceStatus) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.ControlService$MH, "ControlService");
        try {
            return (int)mh$.invokeExact(hService.address(), dwControl, lpServiceStatus.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateServiceA$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.CreateServiceA$MH,"CreateServiceA");
    }
    public static MemoryAddress CreateServiceA ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  int dwDesiredAccess,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.CreateServiceA$MH, "CreateServiceA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateServiceW$MH() {
        return RuntimeHelper.requireNonNull(constants$1328.CreateServiceW$MH,"CreateServiceW");
    }
    public static MemoryAddress CreateServiceW ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  int dwDesiredAccess,  int dwServiceType,  int dwStartType,  int dwErrorControl,  Addressable lpBinaryPathName,  Addressable lpLoadOrderGroup,  Addressable lpdwTagId,  Addressable lpDependencies,  Addressable lpServiceStartName,  Addressable lpPassword) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1328.CreateServiceW$MH, "CreateServiceW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), dwDesiredAccess, dwServiceType, dwStartType, dwErrorControl, lpBinaryPathName.address(), lpLoadOrderGroup.address(), lpdwTagId.address(), lpDependencies.address(), lpServiceStartName.address(), lpPassword.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DeleteService$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.DeleteService$MH,"DeleteService");
    }
    public static int DeleteService ( Addressable hService) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.DeleteService$MH, "DeleteService");
        try {
            return (int)mh$.invokeExact(hService.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDependentServicesA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.EnumDependentServicesA$MH,"EnumDependentServicesA");
    }
    public static int EnumDependentServicesA ( Addressable hService,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.EnumDependentServicesA$MH, "EnumDependentServicesA");
        try {
            return (int)mh$.invokeExact(hService.address(), dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDependentServicesW$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.EnumDependentServicesW$MH,"EnumDependentServicesW");
    }
    public static int EnumDependentServicesW ( Addressable hService,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.EnumDependentServicesW$MH, "EnumDependentServicesW");
        try {
            return (int)mh$.invokeExact(hService.address(), dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.EnumServicesStatusA$MH,"EnumServicesStatusA");
    }
    public static int EnumServicesStatusA ( Addressable hSCManager,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.EnumServicesStatusA$MH, "EnumServicesStatusA");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusW$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.EnumServicesStatusW$MH,"EnumServicesStatusW");
    }
    public static int EnumServicesStatusW ( Addressable hSCManager,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.EnumServicesStatusW$MH, "EnumServicesStatusW");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1329.EnumServicesStatusExA$MH,"EnumServicesStatusExA");
    }
    public static int EnumServicesStatusExA ( Addressable hSCManager,  int InfoLevel,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle,  Addressable pszGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1329.EnumServicesStatusExA$MH, "EnumServicesStatusExA");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), InfoLevel, dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address(), pszGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumServicesStatusExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.EnumServicesStatusExW$MH,"EnumServicesStatusExW");
    }
    public static int EnumServicesStatusExW ( Addressable hSCManager,  int InfoLevel,  int dwServiceType,  int dwServiceState,  Addressable lpServices,  int cbBufSize,  Addressable pcbBytesNeeded,  Addressable lpServicesReturned,  Addressable lpResumeHandle,  Addressable pszGroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.EnumServicesStatusExW$MH, "EnumServicesStatusExW");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), InfoLevel, dwServiceType, dwServiceState, lpServices.address(), cbBufSize, pcbBytesNeeded.address(), lpServicesReturned.address(), lpResumeHandle.address(), pszGroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceKeyNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.GetServiceKeyNameA$MH,"GetServiceKeyNameA");
    }
    public static int GetServiceKeyNameA ( Addressable hSCManager,  Addressable lpDisplayName,  Addressable lpServiceName,  Addressable lpcchBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.GetServiceKeyNameA$MH, "GetServiceKeyNameA");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), lpDisplayName.address(), lpServiceName.address(), lpcchBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceKeyNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.GetServiceKeyNameW$MH,"GetServiceKeyNameW");
    }
    public static int GetServiceKeyNameW ( Addressable hSCManager,  Addressable lpDisplayName,  Addressable lpServiceName,  Addressable lpcchBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.GetServiceKeyNameW$MH, "GetServiceKeyNameW");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), lpDisplayName.address(), lpServiceName.address(), lpcchBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceDisplayNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.GetServiceDisplayNameA$MH,"GetServiceDisplayNameA");
    }
    public static int GetServiceDisplayNameA ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  Addressable lpcchBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.GetServiceDisplayNameA$MH, "GetServiceDisplayNameA");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), lpcchBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetServiceDisplayNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.GetServiceDisplayNameW$MH,"GetServiceDisplayNameW");
    }
    public static int GetServiceDisplayNameW ( Addressable hSCManager,  Addressable lpServiceName,  Addressable lpDisplayName,  Addressable lpcchBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.GetServiceDisplayNameW$MH, "GetServiceDisplayNameW");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), lpServiceName.address(), lpDisplayName.address(), lpcchBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LockServiceDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$1330.LockServiceDatabase$MH,"LockServiceDatabase");
    }
    public static MemoryAddress LockServiceDatabase ( Addressable hSCManager) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1330.LockServiceDatabase$MH, "LockServiceDatabase");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hSCManager.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyBootConfigStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.NotifyBootConfigStatus$MH,"NotifyBootConfigStatus");
    }
    public static int NotifyBootConfigStatus ( int BootAcceptable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.NotifyBootConfigStatus$MH, "NotifyBootConfigStatus");
        try {
            return (int)mh$.invokeExact(BootAcceptable);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenSCManagerA$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.OpenSCManagerA$MH,"OpenSCManagerA");
    }
    public static MemoryAddress OpenSCManagerA ( Addressable lpMachineName,  Addressable lpDatabaseName,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.OpenSCManagerA$MH, "OpenSCManagerA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpMachineName.address(), lpDatabaseName.address(), dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenSCManagerW$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.OpenSCManagerW$MH,"OpenSCManagerW");
    }
    public static MemoryAddress OpenSCManagerW ( Addressable lpMachineName,  Addressable lpDatabaseName,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.OpenSCManagerW$MH, "OpenSCManagerW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpMachineName.address(), lpDatabaseName.address(), dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenServiceA$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.OpenServiceA$MH,"OpenServiceA");
    }
    public static MemoryAddress OpenServiceA ( Addressable hSCManager,  Addressable lpServiceName,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.OpenServiceA$MH, "OpenServiceA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hSCManager.address(), lpServiceName.address(), dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenServiceW$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.OpenServiceW$MH,"OpenServiceW");
    }
    public static MemoryAddress OpenServiceW ( Addressable hSCManager,  Addressable lpServiceName,  int dwDesiredAccess) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.OpenServiceW$MH, "OpenServiceW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hSCManager.address(), lpServiceName.address(), dwDesiredAccess);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfigA$MH() {
        return RuntimeHelper.requireNonNull(constants$1331.QueryServiceConfigA$MH,"QueryServiceConfigA");
    }
    public static int QueryServiceConfigA ( Addressable hService,  Addressable lpServiceConfig,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1331.QueryServiceConfigA$MH, "QueryServiceConfigA");
        try {
            return (int)mh$.invokeExact(hService.address(), lpServiceConfig.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfigW$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.QueryServiceConfigW$MH,"QueryServiceConfigW");
    }
    public static int QueryServiceConfigW ( Addressable hService,  Addressable lpServiceConfig,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.QueryServiceConfigW$MH, "QueryServiceConfigW");
        try {
            return (int)mh$.invokeExact(hService.address(), lpServiceConfig.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfig2A$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.QueryServiceConfig2A$MH,"QueryServiceConfig2A");
    }
    public static int QueryServiceConfig2A ( Addressable hService,  int dwInfoLevel,  Addressable lpBuffer,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.QueryServiceConfig2A$MH, "QueryServiceConfig2A");
        try {
            return (int)mh$.invokeExact(hService.address(), dwInfoLevel, lpBuffer.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceConfig2W$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.QueryServiceConfig2W$MH,"QueryServiceConfig2W");
    }
    public static int QueryServiceConfig2W ( Addressable hService,  int dwInfoLevel,  Addressable lpBuffer,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.QueryServiceConfig2W$MH, "QueryServiceConfig2W");
        try {
            return (int)mh$.invokeExact(hService.address(), dwInfoLevel, lpBuffer.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceLockStatusA$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.QueryServiceLockStatusA$MH,"QueryServiceLockStatusA");
    }
    public static int QueryServiceLockStatusA ( Addressable hSCManager,  Addressable lpLockStatus,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.QueryServiceLockStatusA$MH, "QueryServiceLockStatusA");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), lpLockStatus.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceLockStatusW$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.QueryServiceLockStatusW$MH,"QueryServiceLockStatusW");
    }
    public static int QueryServiceLockStatusW ( Addressable hSCManager,  Addressable lpLockStatus,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.QueryServiceLockStatusW$MH, "QueryServiceLockStatusW");
        try {
            return (int)mh$.invokeExact(hSCManager.address(), lpLockStatus.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceObjectSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$1332.QueryServiceObjectSecurity$MH,"QueryServiceObjectSecurity");
    }
    public static int QueryServiceObjectSecurity ( Addressable hService,  int dwSecurityInformation,  Addressable lpSecurityDescriptor,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1332.QueryServiceObjectSecurity$MH, "QueryServiceObjectSecurity");
        try {
            return (int)mh$.invokeExact(hService.address(), dwSecurityInformation, lpSecurityDescriptor.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.QueryServiceStatus$MH,"QueryServiceStatus");
    }
    public static int QueryServiceStatus ( Addressable hService,  Addressable lpServiceStatus) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.QueryServiceStatus$MH, "QueryServiceStatus");
        try {
            return (int)mh$.invokeExact(hService.address(), lpServiceStatus.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle QueryServiceStatusEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.QueryServiceStatusEx$MH,"QueryServiceStatusEx");
    }
    public static int QueryServiceStatusEx ( Addressable hService,  int InfoLevel,  Addressable lpBuffer,  int cbBufSize,  Addressable pcbBytesNeeded) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.QueryServiceStatusEx$MH, "QueryServiceStatusEx");
        try {
            return (int)mh$.invokeExact(hService.address(), InfoLevel, lpBuffer.address(), cbBufSize, pcbBytesNeeded.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerA$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerA$MH,"RegisterServiceCtrlHandlerA");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerA ( Addressable lpServiceName,  Addressable lpHandlerProc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerA$MH, "RegisterServiceCtrlHandlerA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpServiceName.address(), lpHandlerProc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerW$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerW$MH,"RegisterServiceCtrlHandlerW");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerW ( Addressable lpServiceName,  Addressable lpHandlerProc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerW$MH, "RegisterServiceCtrlHandlerW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpServiceName.address(), lpHandlerProc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerExA$MH,"RegisterServiceCtrlHandlerExA");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerExA ( Addressable lpServiceName,  Addressable lpHandlerProc,  Addressable lpContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerExA$MH, "RegisterServiceCtrlHandlerExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpServiceName.address(), lpHandlerProc.address(), lpContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegisterServiceCtrlHandlerExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerExW$MH,"RegisterServiceCtrlHandlerExW");
    }
    public static MemoryAddress RegisterServiceCtrlHandlerExW ( Addressable lpServiceName,  Addressable lpHandlerProc,  Addressable lpContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1333.RegisterServiceCtrlHandlerExW$MH, "RegisterServiceCtrlHandlerExW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpServiceName.address(), lpHandlerProc.address(), lpContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetServiceObjectSecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.SetServiceObjectSecurity$MH,"SetServiceObjectSecurity");
    }
    public static int SetServiceObjectSecurity ( Addressable hService,  int dwSecurityInformation,  Addressable lpSecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.SetServiceObjectSecurity$MH, "SetServiceObjectSecurity");
        try {
            return (int)mh$.invokeExact(hService.address(), dwSecurityInformation, lpSecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetServiceStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.SetServiceStatus$MH,"SetServiceStatus");
    }
    public static int SetServiceStatus ( Addressable hServiceStatus,  Addressable lpServiceStatus) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.SetServiceStatus$MH, "SetServiceStatus");
        try {
            return (int)mh$.invokeExact(hServiceStatus.address(), lpServiceStatus.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceCtrlDispatcherA$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.StartServiceCtrlDispatcherA$MH,"StartServiceCtrlDispatcherA");
    }
    public static int StartServiceCtrlDispatcherA ( Addressable lpServiceStartTable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.StartServiceCtrlDispatcherA$MH, "StartServiceCtrlDispatcherA");
        try {
            return (int)mh$.invokeExact(lpServiceStartTable.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceCtrlDispatcherW$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.StartServiceCtrlDispatcherW$MH,"StartServiceCtrlDispatcherW");
    }
    public static int StartServiceCtrlDispatcherW ( Addressable lpServiceStartTable) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.StartServiceCtrlDispatcherW$MH, "StartServiceCtrlDispatcherW");
        try {
            return (int)mh$.invokeExact(lpServiceStartTable.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceA$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.StartServiceA$MH,"StartServiceA");
    }
    public static int StartServiceA ( Addressable hService,  int dwNumServiceArgs,  Addressable lpServiceArgVectors) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.StartServiceA$MH, "StartServiceA");
        try {
            return (int)mh$.invokeExact(hService.address(), dwNumServiceArgs, lpServiceArgVectors.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle StartServiceW$MH() {
        return RuntimeHelper.requireNonNull(constants$1334.StartServiceW$MH,"StartServiceW");
    }
    public static int StartServiceW ( Addressable hService,  int dwNumServiceArgs,  Addressable lpServiceArgVectors) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1334.StartServiceW$MH, "StartServiceW");
        try {
            return (int)mh$.invokeExact(hService.address(), dwNumServiceArgs, lpServiceArgVectors.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnlockServiceDatabase$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.UnlockServiceDatabase$MH,"UnlockServiceDatabase");
    }
    public static int UnlockServiceDatabase ( Addressable ScLock) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.UnlockServiceDatabase$MH, "UnlockServiceDatabase");
        try {
            return (int)mh$.invokeExact(ScLock.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ControlServiceExA$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.ControlServiceExA$MH,"ControlServiceExA");
    }
    public static int ControlServiceExA ( Addressable hService,  int dwControl,  int dwInfoLevel,  Addressable pControlParams) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.ControlServiceExA$MH, "ControlServiceExA");
        try {
            return (int)mh$.invokeExact(hService.address(), dwControl, dwInfoLevel, pControlParams.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ControlServiceExW$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.ControlServiceExW$MH,"ControlServiceExW");
    }
    public static int ControlServiceExW ( Addressable hService,  int dwControl,  int dwInfoLevel,  Addressable pControlParams) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.ControlServiceExW$MH, "ControlServiceExW");
        try {
            return (int)mh$.invokeExact(hService.address(), dwControl, dwInfoLevel, pControlParams.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyServiceStatusChangeA$MH() {
        return RuntimeHelper.requireNonNull(constants$1335.NotifyServiceStatusChangeA$MH,"NotifyServiceStatusChangeA");
    }
    public static int NotifyServiceStatusChangeA ( Addressable hService,  int dwNotifyMask,  Addressable pNotifyBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1335.NotifyServiceStatusChangeA$MH, "NotifyServiceStatusChangeA");
        try {
            return (int)mh$.invokeExact(hService.address(), dwNotifyMask, pNotifyBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyServiceStatusChangeW$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.NotifyServiceStatusChangeW$MH,"NotifyServiceStatusChangeW");
    }
    public static int NotifyServiceStatusChangeW ( Addressable hService,  int dwNotifyMask,  Addressable pNotifyBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.NotifyServiceStatusChangeW$MH, "NotifyServiceStatusChangeW");
        try {
            return (int)mh$.invokeExact(hService.address(), dwNotifyMask, pNotifyBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmInstallIMEA$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.ImmInstallIMEA$MH,"ImmInstallIMEA");
    }
    public static MemoryAddress ImmInstallIMEA ( Addressable lpszIMEFileName,  Addressable lpszLayoutText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.ImmInstallIMEA$MH, "ImmInstallIMEA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszIMEFileName.address(), lpszLayoutText.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmInstallIMEW$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.ImmInstallIMEW$MH,"ImmInstallIMEW");
    }
    public static MemoryAddress ImmInstallIMEW ( Addressable lpszIMEFileName,  Addressable lpszLayoutText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.ImmInstallIMEW$MH, "ImmInstallIMEW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpszIMEFileName.address(), lpszLayoutText.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetDefaultIMEWnd$MH() {
        return RuntimeHelper.requireNonNull(constants$1336.ImmGetDefaultIMEWnd$MH,"ImmGetDefaultIMEWnd");
    }
    public static MemoryAddress ImmGetDefaultIMEWnd ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1336.ImmGetDefaultIMEWnd$MH, "ImmGetDefaultIMEWnd");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetDescriptionA$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.ImmGetDescriptionA$MH,"ImmGetDescriptionA");
    }
    public static int ImmGetDescriptionA ( Addressable x0,  Addressable x1,  int uBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.ImmGetDescriptionA$MH, "ImmGetDescriptionA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), uBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetDescriptionW$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.ImmGetDescriptionW$MH,"ImmGetDescriptionW");
    }
    public static int ImmGetDescriptionW ( Addressable x0,  Addressable x1,  int uBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.ImmGetDescriptionW$MH, "ImmGetDescriptionW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), uBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetIMEFileNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.ImmGetIMEFileNameA$MH,"ImmGetIMEFileNameA");
    }
    public static int ImmGetIMEFileNameA ( Addressable x0,  Addressable x1,  int uBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.ImmGetIMEFileNameA$MH, "ImmGetIMEFileNameA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), uBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetIMEFileNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.ImmGetIMEFileNameW$MH,"ImmGetIMEFileNameW");
    }
    public static int ImmGetIMEFileNameW ( Addressable x0,  Addressable x1,  int uBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.ImmGetIMEFileNameW$MH, "ImmGetIMEFileNameW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), uBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.ImmGetProperty$MH,"ImmGetProperty");
    }
    public static int ImmGetProperty ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.ImmGetProperty$MH, "ImmGetProperty");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmIsIME$MH() {
        return RuntimeHelper.requireNonNull(constants$1337.ImmIsIME$MH,"ImmIsIME");
    }
    public static int ImmIsIME ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1337.ImmIsIME$MH, "ImmIsIME");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSimulateHotKey$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.ImmSimulateHotKey$MH,"ImmSimulateHotKey");
    }
    public static int ImmSimulateHotKey ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.ImmSimulateHotKey$MH, "ImmSimulateHotKey");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmCreateContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.ImmCreateContext$MH,"ImmCreateContext");
    }
    public static MemoryAddress ImmCreateContext () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.ImmCreateContext$MH, "ImmCreateContext");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmDestroyContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.ImmDestroyContext$MH,"ImmDestroyContext");
    }
    public static int ImmDestroyContext ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.ImmDestroyContext$MH, "ImmDestroyContext");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.ImmGetContext$MH,"ImmGetContext");
    }
    public static MemoryAddress ImmGetContext ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.ImmGetContext$MH, "ImmGetContext");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmReleaseContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.ImmReleaseContext$MH,"ImmReleaseContext");
    }
    public static int ImmReleaseContext ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.ImmReleaseContext$MH, "ImmReleaseContext");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmAssociateContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1338.ImmAssociateContext$MH,"ImmAssociateContext");
    }
    public static MemoryAddress ImmAssociateContext ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1338.ImmAssociateContext$MH, "ImmAssociateContext");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmAssociateContextEx$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.ImmAssociateContextEx$MH,"ImmAssociateContextEx");
    }
    public static int ImmAssociateContextEx ( Addressable x0,  Addressable x1,  int x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.ImmAssociateContextEx$MH, "ImmAssociateContextEx");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCompositionStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.ImmGetCompositionStringA$MH,"ImmGetCompositionStringA");
    }
    public static int ImmGetCompositionStringA ( Addressable x0,  int x1,  Addressable x2,  int x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.ImmGetCompositionStringA$MH, "ImmGetCompositionStringA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCompositionStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.ImmGetCompositionStringW$MH,"ImmGetCompositionStringW");
    }
    public static int ImmGetCompositionStringW ( Addressable x0,  int x1,  Addressable x2,  int x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.ImmGetCompositionStringW$MH, "ImmGetCompositionStringW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2.address(), x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetCompositionStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.ImmSetCompositionStringA$MH,"ImmSetCompositionStringA");
    }
    public static int ImmSetCompositionStringA ( Addressable x0,  int dwIndex,  Addressable lpComp,  int x3,  Addressable lpRead,  int x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.ImmSetCompositionStringA$MH, "ImmSetCompositionStringA");
        try {
            return (int)mh$.invokeExact(x0.address(), dwIndex, lpComp.address(), x3, lpRead.address(), x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetCompositionStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.ImmSetCompositionStringW$MH,"ImmSetCompositionStringW");
    }
    public static int ImmSetCompositionStringW ( Addressable x0,  int dwIndex,  Addressable lpComp,  int x3,  Addressable lpRead,  int x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.ImmSetCompositionStringW$MH, "ImmSetCompositionStringW");
        try {
            return (int)mh$.invokeExact(x0.address(), dwIndex, lpComp.address(), x3, lpRead.address(), x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCandidateListCountA$MH() {
        return RuntimeHelper.requireNonNull(constants$1339.ImmGetCandidateListCountA$MH,"ImmGetCandidateListCountA");
    }
    public static int ImmGetCandidateListCountA ( Addressable x0,  Addressable lpdwListCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1339.ImmGetCandidateListCountA$MH, "ImmGetCandidateListCountA");
        try {
            return (int)mh$.invokeExact(x0.address(), lpdwListCount.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCandidateListCountW$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.ImmGetCandidateListCountW$MH,"ImmGetCandidateListCountW");
    }
    public static int ImmGetCandidateListCountW ( Addressable x0,  Addressable lpdwListCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.ImmGetCandidateListCountW$MH, "ImmGetCandidateListCountW");
        try {
            return (int)mh$.invokeExact(x0.address(), lpdwListCount.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCandidateListA$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.ImmGetCandidateListA$MH,"ImmGetCandidateListA");
    }
    public static int ImmGetCandidateListA ( Addressable x0,  int deIndex,  Addressable x2,  int dwBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.ImmGetCandidateListA$MH, "ImmGetCandidateListA");
        try {
            return (int)mh$.invokeExact(x0.address(), deIndex, x2.address(), dwBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCandidateListW$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.ImmGetCandidateListW$MH,"ImmGetCandidateListW");
    }
    public static int ImmGetCandidateListW ( Addressable x0,  int deIndex,  Addressable x2,  int dwBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.ImmGetCandidateListW$MH, "ImmGetCandidateListW");
        try {
            return (int)mh$.invokeExact(x0.address(), deIndex, x2.address(), dwBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetGuideLineA$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.ImmGetGuideLineA$MH,"ImmGetGuideLineA");
    }
    public static int ImmGetGuideLineA ( Addressable x0,  int dwIndex,  Addressable x2,  int dwBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.ImmGetGuideLineA$MH, "ImmGetGuideLineA");
        try {
            return (int)mh$.invokeExact(x0.address(), dwIndex, x2.address(), dwBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetGuideLineW$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.ImmGetGuideLineW$MH,"ImmGetGuideLineW");
    }
    public static int ImmGetGuideLineW ( Addressable x0,  int dwIndex,  Addressable x2,  int dwBufLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.ImmGetGuideLineW$MH, "ImmGetGuideLineW");
        try {
            return (int)mh$.invokeExact(x0.address(), dwIndex, x2.address(), dwBufLen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetConversionStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1340.ImmGetConversionStatus$MH,"ImmGetConversionStatus");
    }
    public static int ImmGetConversionStatus ( Addressable x0,  Addressable x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1340.ImmGetConversionStatus$MH, "ImmGetConversionStatus");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetConversionStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.ImmSetConversionStatus$MH,"ImmSetConversionStatus");
    }
    public static int ImmSetConversionStatus ( Addressable x0,  int x1,  int x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.ImmSetConversionStatus$MH, "ImmSetConversionStatus");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetOpenStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.ImmGetOpenStatus$MH,"ImmGetOpenStatus");
    }
    public static int ImmGetOpenStatus ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.ImmGetOpenStatus$MH, "ImmGetOpenStatus");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetOpenStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.ImmSetOpenStatus$MH,"ImmSetOpenStatus");
    }
    public static int ImmSetOpenStatus ( Addressable x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.ImmSetOpenStatus$MH, "ImmSetOpenStatus");
        try {
            return (int)mh$.invokeExact(x0.address(), x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCompositionFontA$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.ImmGetCompositionFontA$MH,"ImmGetCompositionFontA");
    }
    public static int ImmGetCompositionFontA ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.ImmGetCompositionFontA$MH, "ImmGetCompositionFontA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCompositionFontW$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.ImmGetCompositionFontW$MH,"ImmGetCompositionFontW");
    }
    public static int ImmGetCompositionFontW ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.ImmGetCompositionFontW$MH, "ImmGetCompositionFontW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetCompositionFontA$MH() {
        return RuntimeHelper.requireNonNull(constants$1341.ImmSetCompositionFontA$MH,"ImmSetCompositionFontA");
    }
    public static int ImmSetCompositionFontA ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1341.ImmSetCompositionFontA$MH, "ImmSetCompositionFontA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetCompositionFontW$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.ImmSetCompositionFontW$MH,"ImmSetCompositionFontW");
    }
    public static int ImmSetCompositionFontW ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.ImmSetCompositionFontW$MH, "ImmSetCompositionFontW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmConfigureIMEA$MH() {
        return RuntimeHelper.requireNonNull(constants$1342.ImmConfigureIMEA$MH,"ImmConfigureIMEA");
    }
    public static int ImmConfigureIMEA ( Addressable x0,  Addressable x1,  int x2,  Addressable x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1342.ImmConfigureIMEA$MH, "ImmConfigureIMEA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2, x3.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmConfigureIMEW$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.ImmConfigureIMEW$MH,"ImmConfigureIMEW");
    }
    public static int ImmConfigureIMEW ( Addressable x0,  Addressable x1,  int x2,  Addressable x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.ImmConfigureIMEW$MH, "ImmConfigureIMEW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2, x3.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmEscapeA$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.ImmEscapeA$MH,"ImmEscapeA");
    }
    public static long ImmEscapeA ( Addressable x0,  Addressable x1,  int x2,  Addressable x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.ImmEscapeA$MH, "ImmEscapeA");
        try {
            return (long)mh$.invokeExact(x0.address(), x1.address(), x2, x3.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmEscapeW$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.ImmEscapeW$MH,"ImmEscapeW");
    }
    public static long ImmEscapeW ( Addressable x0,  Addressable x1,  int x2,  Addressable x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.ImmEscapeW$MH, "ImmEscapeW");
        try {
            return (long)mh$.invokeExact(x0.address(), x1.address(), x2, x3.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetConversionListA$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.ImmGetConversionListA$MH,"ImmGetConversionListA");
    }
    public static int ImmGetConversionListA ( Addressable x0,  Addressable x1,  Addressable x2,  Addressable x3,  int dwBufLen,  int uFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.ImmGetConversionListA$MH, "ImmGetConversionListA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address(), x3.address(), dwBufLen, uFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetConversionListW$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.ImmGetConversionListW$MH,"ImmGetConversionListW");
    }
    public static int ImmGetConversionListW ( Addressable x0,  Addressable x1,  Addressable x2,  Addressable x3,  int dwBufLen,  int uFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.ImmGetConversionListW$MH, "ImmGetConversionListW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2.address(), x3.address(), dwBufLen, uFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmNotifyIME$MH() {
        return RuntimeHelper.requireNonNull(constants$1343.ImmNotifyIME$MH,"ImmNotifyIME");
    }
    public static int ImmNotifyIME ( Addressable x0,  int dwAction,  int dwIndex,  int dwValue) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1343.ImmNotifyIME$MH, "ImmNotifyIME");
        try {
            return (int)mh$.invokeExact(x0.address(), dwAction, dwIndex, dwValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetStatusWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.ImmGetStatusWindowPos$MH,"ImmGetStatusWindowPos");
    }
    public static int ImmGetStatusWindowPos ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.ImmGetStatusWindowPos$MH, "ImmGetStatusWindowPos");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetStatusWindowPos$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.ImmSetStatusWindowPos$MH,"ImmSetStatusWindowPos");
    }
    public static int ImmSetStatusWindowPos ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.ImmSetStatusWindowPos$MH, "ImmSetStatusWindowPos");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCompositionWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.ImmGetCompositionWindow$MH,"ImmGetCompositionWindow");
    }
    public static int ImmGetCompositionWindow ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.ImmGetCompositionWindow$MH, "ImmGetCompositionWindow");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetCompositionWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.ImmSetCompositionWindow$MH,"ImmSetCompositionWindow");
    }
    public static int ImmSetCompositionWindow ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.ImmSetCompositionWindow$MH, "ImmSetCompositionWindow");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetCandidateWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.ImmGetCandidateWindow$MH,"ImmGetCandidateWindow");
    }
    public static int ImmGetCandidateWindow ( Addressable x0,  int x1,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.ImmGetCandidateWindow$MH, "ImmGetCandidateWindow");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmSetCandidateWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$1344.ImmSetCandidateWindow$MH,"ImmSetCandidateWindow");
    }
    public static int ImmSetCandidateWindow ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1344.ImmSetCandidateWindow$MH, "ImmSetCandidateWindow");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmIsUIMessageA$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.ImmIsUIMessageA$MH,"ImmIsUIMessageA");
    }
    public static int ImmIsUIMessageA ( Addressable x0,  int x1,  long x2,  long x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.ImmIsUIMessageA$MH, "ImmIsUIMessageA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmIsUIMessageW$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.ImmIsUIMessageW$MH,"ImmIsUIMessageW");
    }
    public static int ImmIsUIMessageW ( Addressable x0,  int x1,  long x2,  long x3) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.ImmIsUIMessageW$MH, "ImmIsUIMessageW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetVirtualKey$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.ImmGetVirtualKey$MH,"ImmGetVirtualKey");
    }
    public static int ImmGetVirtualKey ( Addressable x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.ImmGetVirtualKey$MH, "ImmGetVirtualKey");
        try {
            return (int)mh$.invokeExact(x0.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmRegisterWordA$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.ImmRegisterWordA$MH,"ImmRegisterWordA");
    }
    public static int ImmRegisterWordA ( Addressable x0,  Addressable lpszReading,  int x2,  Addressable lpszRegister) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.ImmRegisterWordA$MH, "ImmRegisterWordA");
        try {
            return (int)mh$.invokeExact(x0.address(), lpszReading.address(), x2, lpszRegister.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmRegisterWordW$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.ImmRegisterWordW$MH,"ImmRegisterWordW");
    }
    public static int ImmRegisterWordW ( Addressable x0,  Addressable lpszReading,  int x2,  Addressable lpszRegister) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.ImmRegisterWordW$MH, "ImmRegisterWordW");
        try {
            return (int)mh$.invokeExact(x0.address(), lpszReading.address(), x2, lpszRegister.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmUnregisterWordA$MH() {
        return RuntimeHelper.requireNonNull(constants$1345.ImmUnregisterWordA$MH,"ImmUnregisterWordA");
    }
    public static int ImmUnregisterWordA ( Addressable x0,  Addressable lpszReading,  int x2,  Addressable lpszUnregister) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1345.ImmUnregisterWordA$MH, "ImmUnregisterWordA");
        try {
            return (int)mh$.invokeExact(x0.address(), lpszReading.address(), x2, lpszUnregister.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmUnregisterWordW$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.ImmUnregisterWordW$MH,"ImmUnregisterWordW");
    }
    public static int ImmUnregisterWordW ( Addressable x0,  Addressable lpszReading,  int x2,  Addressable lpszUnregister) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.ImmUnregisterWordW$MH, "ImmUnregisterWordW");
        try {
            return (int)mh$.invokeExact(x0.address(), lpszReading.address(), x2, lpszUnregister.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetRegisterWordStyleA$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.ImmGetRegisterWordStyleA$MH,"ImmGetRegisterWordStyleA");
    }
    public static int ImmGetRegisterWordStyleA ( Addressable x0,  int nItem,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.ImmGetRegisterWordStyleA$MH, "ImmGetRegisterWordStyleA");
        try {
            return (int)mh$.invokeExact(x0.address(), nItem, x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetRegisterWordStyleW$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.ImmGetRegisterWordStyleW$MH,"ImmGetRegisterWordStyleW");
    }
    public static int ImmGetRegisterWordStyleW ( Addressable x0,  int nItem,  Addressable x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.ImmGetRegisterWordStyleW$MH, "ImmGetRegisterWordStyleW");
        try {
            return (int)mh$.invokeExact(x0.address(), nItem, x2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmEnumRegisterWordA$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.ImmEnumRegisterWordA$MH,"ImmEnumRegisterWordA");
    }
    public static int ImmEnumRegisterWordA ( Addressable x0,  Addressable x1,  Addressable lpszReading,  int x3,  Addressable lpszRegister,  Addressable x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.ImmEnumRegisterWordA$MH, "ImmEnumRegisterWordA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), lpszReading.address(), x3, lpszRegister.address(), x5.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmEnumRegisterWordW$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.ImmEnumRegisterWordW$MH,"ImmEnumRegisterWordW");
    }
    public static int ImmEnumRegisterWordW ( Addressable x0,  Addressable x1,  Addressable lpszReading,  int x3,  Addressable lpszRegister,  Addressable x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.ImmEnumRegisterWordW$MH, "ImmEnumRegisterWordW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), lpszReading.address(), x3, lpszRegister.address(), x5.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmDisableIME$MH() {
        return RuntimeHelper.requireNonNull(constants$1346.ImmDisableIME$MH,"ImmDisableIME");
    }
    public static int ImmDisableIME ( int x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1346.ImmDisableIME$MH, "ImmDisableIME");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmEnumInputContext$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.ImmEnumInputContext$MH,"ImmEnumInputContext");
    }
    public static int ImmEnumInputContext ( int idThread,  Addressable lpfn,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1347.ImmEnumInputContext$MH, "ImmEnumInputContext");
        try {
            return (int)mh$.invokeExact(idThread, lpfn.address(), lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetImeMenuItemsA$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.ImmGetImeMenuItemsA$MH,"ImmGetImeMenuItemsA");
    }
    public static int ImmGetImeMenuItemsA ( Addressable x0,  int x1,  int x2,  Addressable x3,  Addressable x4,  int x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1347.ImmGetImeMenuItemsA$MH, "ImmGetImeMenuItemsA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3.address(), x4.address(), x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmGetImeMenuItemsW$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.ImmGetImeMenuItemsW$MH,"ImmGetImeMenuItemsW");
    }
    public static int ImmGetImeMenuItemsW ( Addressable x0,  int x1,  int x2,  Addressable x3,  Addressable x4,  int x5) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1347.ImmGetImeMenuItemsW$MH, "ImmGetImeMenuItemsW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1, x2, x3.address(), x4.address(), x5);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImmDisableTextFrameService$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.ImmDisableTextFrameService$MH,"ImmDisableTextFrameService");
    }
    public static int ImmDisableTextFrameService ( int idThread) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1347.ImmDisableTextFrameService$MH, "ImmDisableTextFrameService");
        try {
            return (int)mh$.invokeExact(idThread);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __WSAFDIsSet$MH() {
        return RuntimeHelper.requireNonNull(constants$1347.__WSAFDIsSet$MH,"__WSAFDIsSet");
    }
    public static int __WSAFDIsSet ( long x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1347.__WSAFDIsSet$MH, "__WSAFDIsSet");
        try {
            return (int)mh$.invokeExact(x0, x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ScopeLevelInterface() {
        return (int)1L;
    }
    public static int ScopeLevelLink() {
        return (int)2L;
    }
    public static int ScopeLevelSubnet() {
        return (int)3L;
    }
    public static int ScopeLevelAdmin() {
        return (int)4L;
    }
    public static int ScopeLevelSite() {
        return (int)5L;
    }
}


