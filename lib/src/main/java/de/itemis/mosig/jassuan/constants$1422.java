// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1422 {

    static final FunctionDescriptor assuan_init_pipe_server$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle assuan_init_pipe_server$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "assuan_init_pipe_server",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1422.assuan_init_pipe_server$FUNC, false
    );
    static final FunctionDescriptor assuan_init_socket_server$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle assuan_init_socket_server$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "assuan_init_socket_server",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$1422.assuan_init_socket_server$FUNC, false
    );
    static final FunctionDescriptor assuan_set_sock_nonce$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle assuan_set_sock_nonce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "assuan_set_sock_nonce",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1422.assuan_set_sock_nonce$FUNC, false
    );
    static final FunctionDescriptor assuan_pipe_connect$atfork$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle assuan_pipe_connect$atfork$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$1422.assuan_pipe_connect$atfork$FUNC, false
    );
    static final FunctionDescriptor assuan_pipe_connect$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle assuan_pipe_connect$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "assuan_pipe_connect",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$1422.assuan_pipe_connect$FUNC, false
    );
}


