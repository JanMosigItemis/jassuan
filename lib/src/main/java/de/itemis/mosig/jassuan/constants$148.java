// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$148 {

    static final FunctionDescriptor _invalid_parameter_handler$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final MethodHandle _invalid_parameter_handler$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IJ)V",
        constants$148._invalid_parameter_handler$FUNC, false
    );
    static final FunctionDescriptor _set_invalid_parameter_handler$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle _set_invalid_parameter_handler$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_set_invalid_parameter_handler",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$148._set_invalid_parameter_handler$FUNC, false
    );
    static final FunctionDescriptor _get_invalid_parameter_handler$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle _get_invalid_parameter_handler$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_get_invalid_parameter_handler",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$148._get_invalid_parameter_handler$FUNC, false
    );
    static final FunctionDescriptor _errno$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle _errno$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_errno",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$148._errno$FUNC, false
    );
    static final FunctionDescriptor _set_errno$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle _set_errno$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_set_errno",
        "(I)I",
        constants$148._set_errno$FUNC, false
    );
}


