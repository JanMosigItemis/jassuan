// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$164 {

    static final FunctionDescriptor _wctomb_l$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_SHORT,
        C_POINTER
    );
    static final MethodHandle _wctomb_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wctomb_l",
        "(Ljdk/incubator/foreign/MemoryAddress;SLjdk/incubator/foreign/MemoryAddress;)I",
        constants$164._wctomb_l$FUNC, false
    );
    static final FunctionDescriptor wcstombs$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle wcstombs$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "wcstombs",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)J",
        constants$164.wcstombs$FUNC, false
    );
    static final FunctionDescriptor _wcstombs_l$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle _wcstombs_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wcstombs_l",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)J",
        constants$164._wcstombs_l$FUNC, false
    );
    static final FunctionDescriptor calloc$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle calloc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "calloc",
        "(JJ)Ljdk/incubator/foreign/MemoryAddress;",
        constants$164.calloc$FUNC, false
    );
    static final FunctionDescriptor free$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle free$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "free",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$164.free$FUNC, false
    );
    static final FunctionDescriptor malloc$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle malloc$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "malloc",
        "(J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$164.malloc$FUNC, false
    );
}


