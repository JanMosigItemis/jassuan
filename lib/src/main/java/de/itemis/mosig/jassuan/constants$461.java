// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$461 {

    static final FunctionDescriptor SetVolumeLabelA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetVolumeLabelA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetVolumeLabelA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$461.SetVolumeLabelA$FUNC, false
    );
    static final FunctionDescriptor CreatePrivateNamespaceA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CreatePrivateNamespaceA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreatePrivateNamespaceA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$461.CreatePrivateNamespaceA$FUNC, false
    );
    static final FunctionDescriptor OpenPrivateNamespaceA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle OpenPrivateNamespaceA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenPrivateNamespaceA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$461.OpenPrivateNamespaceA$FUNC, false
    );
    static final FunctionDescriptor CreateBoundaryDescriptorA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle CreateBoundaryDescriptorA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateBoundaryDescriptorA",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$461.CreateBoundaryDescriptorA$FUNC, false
    );
    static final FunctionDescriptor SetVolumeLabelW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetVolumeLabelW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetVolumeLabelW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$461.SetVolumeLabelW$FUNC, false
    );
    static final FunctionDescriptor GetComputerNameA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetComputerNameA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetComputerNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$461.GetComputerNameA$FUNC, false
    );
}


