// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$470 {

    static final FunctionDescriptor WTSGetActiveConsoleSessionId$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle WTSGetActiveConsoleSessionId$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WTSGetActiveConsoleSessionId",
        "()I",
        constants$470.WTSGetActiveConsoleSessionId$FUNC, false
    );
    static final FunctionDescriptor GetNumaProcessorNode$FUNC = FunctionDescriptor.of(C_INT,
        C_CHAR,
        C_POINTER
    );
    static final MethodHandle GetNumaProcessorNode$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetNumaProcessorNode",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        constants$470.GetNumaProcessorNode$FUNC, false
    );
    static final FunctionDescriptor GetNumaNodeProcessorMask$FUNC = FunctionDescriptor.of(C_INT,
        C_CHAR,
        C_POINTER
    );
    static final MethodHandle GetNumaNodeProcessorMask$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetNumaNodeProcessorMask",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        constants$470.GetNumaNodeProcessorMask$FUNC, false
    );
    static final FunctionDescriptor GetNumaAvailableMemoryNode$FUNC = FunctionDescriptor.of(C_INT,
        C_CHAR,
        C_POINTER
    );
    static final MethodHandle GetNumaAvailableMemoryNode$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetNumaAvailableMemoryNode",
        "(BLjdk/incubator/foreign/MemoryAddress;)I",
        constants$470.GetNumaAvailableMemoryNode$FUNC, false
    );
    static final FunctionDescriptor GetNumaProximityNode$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle GetNumaProximityNode$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetNumaProximityNode",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$470.GetNumaProximityNode$FUNC, false
    );
    static final FunctionDescriptor GetActiveProcessorGroupCount$FUNC = FunctionDescriptor.of(C_SHORT);
    static final MethodHandle GetActiveProcessorGroupCount$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetActiveProcessorGroupCount",
        "()S",
        constants$470.GetActiveProcessorGroupCount$FUNC, false
    );
}


