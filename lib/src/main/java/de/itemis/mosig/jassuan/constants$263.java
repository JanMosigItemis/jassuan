// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$263 {

    static final MemoryLayout GUID_PROCESSOR_PERF_TIME_CHECK$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_PERF_TIME_CHECK$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_PROCESSOR_PERF_TIME_CHECK", constants$263.GUID_PROCESSOR_PERF_TIME_CHECK$LAYOUT);
    static final MemoryLayout GUID_PROCESSOR_PERF_BOOST_POLICY$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_PERF_BOOST_POLICY$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_PROCESSOR_PERF_BOOST_POLICY", constants$263.GUID_PROCESSOR_PERF_BOOST_POLICY$LAYOUT);
    static final MemoryLayout GUID_PROCESSOR_PERF_BOOST_MODE$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_PERF_BOOST_MODE$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_PROCESSOR_PERF_BOOST_MODE", constants$263.GUID_PROCESSOR_PERF_BOOST_MODE$LAYOUT);
    static final MemoryLayout GUID_PROCESSOR_IDLE_ALLOW_SCALING$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_IDLE_ALLOW_SCALING$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_PROCESSOR_IDLE_ALLOW_SCALING", constants$263.GUID_PROCESSOR_IDLE_ALLOW_SCALING$LAYOUT);
    static final MemoryLayout GUID_PROCESSOR_IDLE_DISABLE$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_IDLE_DISABLE$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_PROCESSOR_IDLE_DISABLE", constants$263.GUID_PROCESSOR_IDLE_DISABLE$LAYOUT);
    static final MemoryLayout GUID_PROCESSOR_IDLE_STATE_MAXIMUM$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment GUID_PROCESSOR_IDLE_STATE_MAXIMUM$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "GUID_PROCESSOR_IDLE_STATE_MAXIMUM", constants$263.GUID_PROCESSOR_IDLE_STATE_MAXIMUM$LAYOUT);
}


