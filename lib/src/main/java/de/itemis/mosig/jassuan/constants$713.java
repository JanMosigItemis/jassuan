// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$713 {

    static final FunctionDescriptor RegLoadKeyW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegLoadKeyW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegLoadKeyW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$713.RegLoadKeyW$FUNC, false
    );
    static final FunctionDescriptor RegNotifyChangeKeyValue$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_LONG,
        C_POINTER,
        C_INT
    );
    static final MethodHandle RegNotifyChangeKeyValue$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegNotifyChangeKeyValue",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$713.RegNotifyChangeKeyValue$FUNC, false
    );
    static final FunctionDescriptor RegOpenKeyA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegOpenKeyA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegOpenKeyA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$713.RegOpenKeyA$FUNC, false
    );
    static final FunctionDescriptor RegOpenKeyW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RegOpenKeyW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegOpenKeyW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$713.RegOpenKeyW$FUNC, false
    );
    static final FunctionDescriptor RegOpenKeyExA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RegOpenKeyExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegOpenKeyExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$713.RegOpenKeyExA$FUNC, false
    );
    static final FunctionDescriptor RegOpenKeyExW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle RegOpenKeyExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RegOpenKeyExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$713.RegOpenKeyExW$FUNC, false
    );
}


