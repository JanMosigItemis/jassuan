// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_16 extends assuan_h_15 {

    public static MethodHandle EnumSystemGeoID$MH() {
        return RuntimeHelper.requireNonNull(constants$677.EnumSystemGeoID$MH,"EnumSystemGeoID");
    }
    public static int EnumSystemGeoID ( int GeoClass,  int ParentGeoId,  Addressable lpGeoEnumProc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.EnumSystemGeoID$MH, "EnumSystemGeoID");
        try {
            return (int)mh$.invokeExact(GeoClass, ParentGeoId, lpGeoEnumProc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserGeoID$MH() {
        return RuntimeHelper.requireNonNull(constants$677.GetUserGeoID$MH,"GetUserGeoID");
    }
    public static int GetUserGeoID ( int GeoClass) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.GetUserGeoID$MH, "GetUserGeoID");
        try {
            return (int)mh$.invokeExact(GeoClass);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserDefaultGeoName$MH() {
        return RuntimeHelper.requireNonNull(constants$677.GetUserDefaultGeoName$MH,"GetUserDefaultGeoName");
    }
    public static int GetUserDefaultGeoName ( Addressable geoName,  int geoNameCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.GetUserDefaultGeoName$MH, "GetUserDefaultGeoName");
        try {
            return (int)mh$.invokeExact(geoName.address(), geoNameCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCPInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$677.GetCPInfo$MH,"GetCPInfo");
    }
    public static int GetCPInfo ( int CodePage,  Addressable lpCPInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.GetCPInfo$MH, "GetCPInfo");
        try {
            return (int)mh$.invokeExact(CodePage, lpCPInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCPInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$677.GetCPInfoExA$MH,"GetCPInfoExA");
    }
    public static int GetCPInfoExA ( int CodePage,  int dwFlags,  Addressable lpCPInfoEx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.GetCPInfoExA$MH, "GetCPInfoExA");
        try {
            return (int)mh$.invokeExact(CodePage, dwFlags, lpCPInfoEx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCPInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$677.GetCPInfoExW$MH,"GetCPInfoExW");
    }
    public static int GetCPInfoExW ( int CodePage,  int dwFlags,  Addressable lpCPInfoEx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$677.GetCPInfoExW$MH, "GetCPInfoExW");
        try {
            return (int)mh$.invokeExact(CodePage, dwFlags, lpCPInfoEx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LCIDToLocaleName$MH() {
        return RuntimeHelper.requireNonNull(constants$678.LCIDToLocaleName$MH,"LCIDToLocaleName");
    }
    public static int LCIDToLocaleName ( int Locale,  Addressable lpName,  int cchName,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.LCIDToLocaleName$MH, "LCIDToLocaleName");
        try {
            return (int)mh$.invokeExact(Locale, lpName.address(), cchName, dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LocaleNameToLCID$MH() {
        return RuntimeHelper.requireNonNull(constants$678.LocaleNameToLCID$MH,"LocaleNameToLCID");
    }
    public static int LocaleNameToLCID ( Addressable lpName,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.LocaleNameToLCID$MH, "LocaleNameToLCID");
        try {
            return (int)mh$.invokeExact(lpName.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetUserGeoID$MH() {
        return RuntimeHelper.requireNonNull(constants$678.SetUserGeoID$MH,"SetUserGeoID");
    }
    public static int SetUserGeoID ( int GeoId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.SetUserGeoID$MH, "SetUserGeoID");
        try {
            return (int)mh$.invokeExact(GeoId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ConvertDefaultLocale$MH() {
        return RuntimeHelper.requireNonNull(constants$678.ConvertDefaultLocale$MH,"ConvertDefaultLocale");
    }
    public static int ConvertDefaultLocale ( int Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.ConvertDefaultLocale$MH, "ConvertDefaultLocale");
        try {
            return (int)mh$.invokeExact(Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetThreadLocale$MH() {
        return RuntimeHelper.requireNonNull(constants$678.GetThreadLocale$MH,"GetThreadLocale");
    }
    public static int GetThreadLocale () {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.GetThreadLocale$MH, "GetThreadLocale");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetThreadLocale$MH() {
        return RuntimeHelper.requireNonNull(constants$678.SetThreadLocale$MH,"SetThreadLocale");
    }
    public static int SetThreadLocale ( int Locale) {
        var mh$ = RuntimeHelper.requireNonNull(constants$678.SetThreadLocale$MH, "SetThreadLocale");
        try {
            return (int)mh$.invokeExact(Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSystemDefaultUILanguage$MH() {
        return RuntimeHelper.requireNonNull(constants$679.GetSystemDefaultUILanguage$MH,"GetSystemDefaultUILanguage");
    }
    public static short GetSystemDefaultUILanguage () {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.GetSystemDefaultUILanguage$MH, "GetSystemDefaultUILanguage");
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSystemDefaultLangID$MH() {
        return RuntimeHelper.requireNonNull(constants$679.GetSystemDefaultLangID$MH,"GetSystemDefaultLangID");
    }
    public static short GetSystemDefaultLangID () {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.GetSystemDefaultLangID$MH, "GetSystemDefaultLangID");
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSystemDefaultLCID$MH() {
        return RuntimeHelper.requireNonNull(constants$679.GetSystemDefaultLCID$MH,"GetSystemDefaultLCID");
    }
    public static int GetSystemDefaultLCID () {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.GetSystemDefaultLCID$MH, "GetSystemDefaultLCID");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserDefaultLCID$MH() {
        return RuntimeHelper.requireNonNull(constants$679.GetUserDefaultLCID$MH,"GetUserDefaultLCID");
    }
    public static int GetUserDefaultLCID () {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.GetUserDefaultLCID$MH, "GetUserDefaultLCID");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetThreadUILanguage$MH() {
        return RuntimeHelper.requireNonNull(constants$679.SetThreadUILanguage$MH,"SetThreadUILanguage");
    }
    public static short SetThreadUILanguage ( short LangId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.SetThreadUILanguage$MH, "SetThreadUILanguage");
        try {
            return (short)mh$.invokeExact(LangId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetStringTypeA$MH() {
        return RuntimeHelper.requireNonNull(constants$679.GetStringTypeA$MH,"GetStringTypeA");
    }
    public static int GetStringTypeA ( int Locale,  int dwInfoType,  Addressable lpSrcStr,  int cchSrc,  Addressable lpCharType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$679.GetStringTypeA$MH, "GetStringTypeA");
        try {
            return (int)mh$.invokeExact(Locale, dwInfoType, lpSrcStr.address(), cchSrc, lpCharType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FoldStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$680.FoldStringA$MH,"FoldStringA");
    }
    public static int FoldStringA ( int dwMapFlags,  Addressable lpSrcStr,  int cchSrc,  Addressable lpDestStr,  int cchDest) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.FoldStringA$MH, "FoldStringA");
        try {
            return (int)mh$.invokeExact(dwMapFlags, lpSrcStr.address(), cchSrc, lpDestStr.address(), cchDest);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumSystemLocalesA$MH() {
        return RuntimeHelper.requireNonNull(constants$680.EnumSystemLocalesA$MH,"EnumSystemLocalesA");
    }
    public static int EnumSystemLocalesA ( Addressable lpLocaleEnumProc,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.EnumSystemLocalesA$MH, "EnumSystemLocalesA");
        try {
            return (int)mh$.invokeExact(lpLocaleEnumProc.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumSystemLocalesW$MH() {
        return RuntimeHelper.requireNonNull(constants$680.EnumSystemLocalesW$MH,"EnumSystemLocalesW");
    }
    public static int EnumSystemLocalesW ( Addressable lpLocaleEnumProc,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.EnumSystemLocalesW$MH, "EnumSystemLocalesW");
        try {
            return (int)mh$.invokeExact(lpLocaleEnumProc.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumSystemLanguageGroupsA$MH() {
        return RuntimeHelper.requireNonNull(constants$680.EnumSystemLanguageGroupsA$MH,"EnumSystemLanguageGroupsA");
    }
    public static int EnumSystemLanguageGroupsA ( Addressable lpLanguageGroupEnumProc,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.EnumSystemLanguageGroupsA$MH, "EnumSystemLanguageGroupsA");
        try {
            return (int)mh$.invokeExact(lpLanguageGroupEnumProc.address(), dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumSystemLanguageGroupsW$MH() {
        return RuntimeHelper.requireNonNull(constants$680.EnumSystemLanguageGroupsW$MH,"EnumSystemLanguageGroupsW");
    }
    public static int EnumSystemLanguageGroupsW ( Addressable lpLanguageGroupEnumProc,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.EnumSystemLanguageGroupsW$MH, "EnumSystemLanguageGroupsW");
        try {
            return (int)mh$.invokeExact(lpLanguageGroupEnumProc.address(), dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumLanguageGroupLocalesA$MH() {
        return RuntimeHelper.requireNonNull(constants$680.EnumLanguageGroupLocalesA$MH,"EnumLanguageGroupLocalesA");
    }
    public static int EnumLanguageGroupLocalesA ( Addressable lpLangGroupLocaleEnumProc,  int LanguageGroup,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$680.EnumLanguageGroupLocalesA$MH, "EnumLanguageGroupLocalesA");
        try {
            return (int)mh$.invokeExact(lpLangGroupLocaleEnumProc.address(), LanguageGroup, dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumLanguageGroupLocalesW$MH() {
        return RuntimeHelper.requireNonNull(constants$681.EnumLanguageGroupLocalesW$MH,"EnumLanguageGroupLocalesW");
    }
    public static int EnumLanguageGroupLocalesW ( Addressable lpLangGroupLocaleEnumProc,  int LanguageGroup,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.EnumLanguageGroupLocalesW$MH, "EnumLanguageGroupLocalesW");
        try {
            return (int)mh$.invokeExact(lpLangGroupLocaleEnumProc.address(), LanguageGroup, dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetThreadUILanguage$MH() {
        return RuntimeHelper.requireNonNull(constants$681.GetThreadUILanguage$MH,"GetThreadUILanguage");
    }
    public static short GetThreadUILanguage () {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.GetThreadUILanguage$MH, "GetThreadUILanguage");
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetProcessPreferredUILanguages$MH() {
        return RuntimeHelper.requireNonNull(constants$681.GetProcessPreferredUILanguages$MH,"GetProcessPreferredUILanguages");
    }
    public static int GetProcessPreferredUILanguages ( int dwFlags,  Addressable pulNumLanguages,  Addressable pwszLanguagesBuffer,  Addressable pcchLanguagesBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.GetProcessPreferredUILanguages$MH, "GetProcessPreferredUILanguages");
        try {
            return (int)mh$.invokeExact(dwFlags, pulNumLanguages.address(), pwszLanguagesBuffer.address(), pcchLanguagesBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetProcessPreferredUILanguages$MH() {
        return RuntimeHelper.requireNonNull(constants$681.SetProcessPreferredUILanguages$MH,"SetProcessPreferredUILanguages");
    }
    public static int SetProcessPreferredUILanguages ( int dwFlags,  Addressable pwszLanguagesBuffer,  Addressable pulNumLanguages) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.SetProcessPreferredUILanguages$MH, "SetProcessPreferredUILanguages");
        try {
            return (int)mh$.invokeExact(dwFlags, pwszLanguagesBuffer.address(), pulNumLanguages.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserPreferredUILanguages$MH() {
        return RuntimeHelper.requireNonNull(constants$681.GetUserPreferredUILanguages$MH,"GetUserPreferredUILanguages");
    }
    public static int GetUserPreferredUILanguages ( int dwFlags,  Addressable pulNumLanguages,  Addressable pwszLanguagesBuffer,  Addressable pcchLanguagesBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.GetUserPreferredUILanguages$MH, "GetUserPreferredUILanguages");
        try {
            return (int)mh$.invokeExact(dwFlags, pulNumLanguages.address(), pwszLanguagesBuffer.address(), pcchLanguagesBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSystemPreferredUILanguages$MH() {
        return RuntimeHelper.requireNonNull(constants$681.GetSystemPreferredUILanguages$MH,"GetSystemPreferredUILanguages");
    }
    public static int GetSystemPreferredUILanguages ( int dwFlags,  Addressable pulNumLanguages,  Addressable pwszLanguagesBuffer,  Addressable pcchLanguagesBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$681.GetSystemPreferredUILanguages$MH, "GetSystemPreferredUILanguages");
        try {
            return (int)mh$.invokeExact(dwFlags, pulNumLanguages.address(), pwszLanguagesBuffer.address(), pcchLanguagesBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetThreadPreferredUILanguages$MH() {
        return RuntimeHelper.requireNonNull(constants$682.GetThreadPreferredUILanguages$MH,"GetThreadPreferredUILanguages");
    }
    public static int GetThreadPreferredUILanguages ( int dwFlags,  Addressable pulNumLanguages,  Addressable pwszLanguagesBuffer,  Addressable pcchLanguagesBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.GetThreadPreferredUILanguages$MH, "GetThreadPreferredUILanguages");
        try {
            return (int)mh$.invokeExact(dwFlags, pulNumLanguages.address(), pwszLanguagesBuffer.address(), pcchLanguagesBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetThreadPreferredUILanguages$MH() {
        return RuntimeHelper.requireNonNull(constants$682.SetThreadPreferredUILanguages$MH,"SetThreadPreferredUILanguages");
    }
    public static int SetThreadPreferredUILanguages ( int dwFlags,  Addressable pwszLanguagesBuffer,  Addressable pulNumLanguages) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.SetThreadPreferredUILanguages$MH, "SetThreadPreferredUILanguages");
        try {
            return (int)mh$.invokeExact(dwFlags, pwszLanguagesBuffer.address(), pulNumLanguages.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileMUIInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$682.GetFileMUIInfo$MH,"GetFileMUIInfo");
    }
    public static int GetFileMUIInfo ( int dwFlags,  Addressable pcwszFilePath,  Addressable pFileMUIInfo,  Addressable pcbFileMUIInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.GetFileMUIInfo$MH, "GetFileMUIInfo");
        try {
            return (int)mh$.invokeExact(dwFlags, pcwszFilePath.address(), pFileMUIInfo.address(), pcbFileMUIInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileMUIPath$MH() {
        return RuntimeHelper.requireNonNull(constants$682.GetFileMUIPath$MH,"GetFileMUIPath");
    }
    public static int GetFileMUIPath ( int dwFlags,  Addressable pcwszFilePath,  Addressable pwszLanguage,  Addressable pcchLanguage,  Addressable pwszFileMUIPath,  Addressable pcchFileMUIPath,  Addressable pululEnumerator) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.GetFileMUIPath$MH, "GetFileMUIPath");
        try {
            return (int)mh$.invokeExact(dwFlags, pcwszFilePath.address(), pwszLanguage.address(), pcchLanguage.address(), pwszFileMUIPath.address(), pcchFileMUIPath.address(), pululEnumerator.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUILanguageInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$682.GetUILanguageInfo$MH,"GetUILanguageInfo");
    }
    public static int GetUILanguageInfo ( int dwFlags,  Addressable pwmszLanguage,  Addressable pwszFallbackLanguages,  Addressable pcchFallbackLanguages,  Addressable pAttributes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.GetUILanguageInfo$MH, "GetUILanguageInfo");
        try {
            return (int)mh$.invokeExact(dwFlags, pwmszLanguage.address(), pwszFallbackLanguages.address(), pcchFallbackLanguages.address(), pAttributes.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NotifyUILanguageChange$MH() {
        return RuntimeHelper.requireNonNull(constants$682.NotifyUILanguageChange$MH,"NotifyUILanguageChange");
    }
    public static int NotifyUILanguageChange ( int dwFlags,  Addressable pcwstrNewLanguage,  Addressable pcwstrPreviousLanguage,  int dwReserved,  Addressable pdwStatusRtrn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$682.NotifyUILanguageChange$MH, "NotifyUILanguageChange");
        try {
            return (int)mh$.invokeExact(dwFlags, pcwstrNewLanguage.address(), pcwstrPreviousLanguage.address(), dwReserved, pdwStatusRtrn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetStringTypeExA$MH() {
        return RuntimeHelper.requireNonNull(constants$683.GetStringTypeExA$MH,"GetStringTypeExA");
    }
    public static int GetStringTypeExA ( int Locale,  int dwInfoType,  Addressable lpSrcStr,  int cchSrc,  Addressable lpCharType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.GetStringTypeExA$MH, "GetStringTypeExA");
        try {
            return (int)mh$.invokeExact(Locale, dwInfoType, lpSrcStr.address(), cchSrc, lpCharType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserDefaultUILanguage$MH() {
        return RuntimeHelper.requireNonNull(constants$683.GetUserDefaultUILanguage$MH,"GetUserDefaultUILanguage");
    }
    public static short GetUserDefaultUILanguage () {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.GetUserDefaultUILanguage$MH, "GetUserDefaultUILanguage");
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumUILanguagesA$MH() {
        return RuntimeHelper.requireNonNull(constants$683.EnumUILanguagesA$MH,"EnumUILanguagesA");
    }
    public static int EnumUILanguagesA ( Addressable lpUILanguageEnumProc,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.EnumUILanguagesA$MH, "EnumUILanguagesA");
        try {
            return (int)mh$.invokeExact(lpUILanguageEnumProc.address(), dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumUILanguagesW$MH() {
        return RuntimeHelper.requireNonNull(constants$683.EnumUILanguagesW$MH,"EnumUILanguagesW");
    }
    public static int EnumUILanguagesW ( Addressable lpUILanguageEnumProc,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.EnumUILanguagesW$MH, "EnumUILanguagesW");
        try {
            return (int)mh$.invokeExact(lpUILanguageEnumProc.address(), dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumSystemCodePagesA$MH() {
        return RuntimeHelper.requireNonNull(constants$683.EnumSystemCodePagesA$MH,"EnumSystemCodePagesA");
    }
    public static int EnumSystemCodePagesA ( Addressable lpCodePageEnumProc,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.EnumSystemCodePagesA$MH, "EnumSystemCodePagesA");
        try {
            return (int)mh$.invokeExact(lpCodePageEnumProc.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumSystemCodePagesW$MH() {
        return RuntimeHelper.requireNonNull(constants$683.EnumSystemCodePagesW$MH,"EnumSystemCodePagesW");
    }
    public static int EnumSystemCodePagesW ( Addressable lpCodePageEnumProc,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$683.EnumSystemCodePagesW$MH, "EnumSystemCodePagesW");
        try {
            return (int)mh$.invokeExact(lpCodePageEnumProc.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserDefaultLangID$MH() {
        return RuntimeHelper.requireNonNull(constants$684.GetUserDefaultLangID$MH,"GetUserDefaultLangID");
    }
    public static short GetUserDefaultLangID () {
        var mh$ = RuntimeHelper.requireNonNull(constants$684.GetUserDefaultLangID$MH, "GetUserDefaultLangID");
        try {
            return (short)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle NormalizeString$MH() {
        return RuntimeHelper.requireNonNull(constants$685.NormalizeString$MH,"NormalizeString");
    }
    public static int NormalizeString ( int NormForm,  Addressable lpSrcString,  int cwSrcLength,  Addressable lpDstString,  int cwDstLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.NormalizeString$MH, "NormalizeString");
        try {
            return (int)mh$.invokeExact(NormForm, lpSrcString.address(), cwSrcLength, lpDstString.address(), cwDstLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsNormalizedString$MH() {
        return RuntimeHelper.requireNonNull(constants$685.IsNormalizedString$MH,"IsNormalizedString");
    }
    public static int IsNormalizedString ( int NormForm,  Addressable lpString,  int cwLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.IsNormalizedString$MH, "IsNormalizedString");
        try {
            return (int)mh$.invokeExact(NormForm, lpString.address(), cwLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IdnToAscii$MH() {
        return RuntimeHelper.requireNonNull(constants$685.IdnToAscii$MH,"IdnToAscii");
    }
    public static int IdnToAscii ( int dwFlags,  Addressable lpUnicodeCharStr,  int cchUnicodeChar,  Addressable lpASCIICharStr,  int cchASCIIChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$685.IdnToAscii$MH, "IdnToAscii");
        try {
            return (int)mh$.invokeExact(dwFlags, lpUnicodeCharStr.address(), cchUnicodeChar, lpASCIICharStr.address(), cchASCIIChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IdnToNameprepUnicode$MH() {
        return RuntimeHelper.requireNonNull(constants$686.IdnToNameprepUnicode$MH,"IdnToNameprepUnicode");
    }
    public static int IdnToNameprepUnicode ( int dwFlags,  Addressable lpUnicodeCharStr,  int cchUnicodeChar,  Addressable lpNameprepCharStr,  int cchNameprepChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.IdnToNameprepUnicode$MH, "IdnToNameprepUnicode");
        try {
            return (int)mh$.invokeExact(dwFlags, lpUnicodeCharStr.address(), cchUnicodeChar, lpNameprepCharStr.address(), cchNameprepChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IdnToUnicode$MH() {
        return RuntimeHelper.requireNonNull(constants$686.IdnToUnicode$MH,"IdnToUnicode");
    }
    public static int IdnToUnicode ( int dwFlags,  Addressable lpASCIICharStr,  int cchASCIIChar,  Addressable lpUnicodeCharStr,  int cchUnicodeChar) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.IdnToUnicode$MH, "IdnToUnicode");
        try {
            return (int)mh$.invokeExact(dwFlags, lpASCIICharStr.address(), cchASCIIChar, lpUnicodeCharStr.address(), cchUnicodeChar);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerifyScripts$MH() {
        return RuntimeHelper.requireNonNull(constants$686.VerifyScripts$MH,"VerifyScripts");
    }
    public static int VerifyScripts ( int dwFlags,  Addressable lpLocaleScripts,  int cchLocaleScripts,  Addressable lpTestScripts,  int cchTestScripts) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.VerifyScripts$MH, "VerifyScripts");
        try {
            return (int)mh$.invokeExact(dwFlags, lpLocaleScripts.address(), cchLocaleScripts, lpTestScripts.address(), cchTestScripts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetStringScripts$MH() {
        return RuntimeHelper.requireNonNull(constants$686.GetStringScripts$MH,"GetStringScripts");
    }
    public static int GetStringScripts ( int dwFlags,  Addressable lpString,  int cchString,  Addressable lpScripts,  int cchScripts) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.GetStringScripts$MH, "GetStringScripts");
        try {
            return (int)mh$.invokeExact(dwFlags, lpString.address(), cchString, lpScripts.address(), cchScripts);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLocaleInfoEx$MH() {
        return RuntimeHelper.requireNonNull(constants$686.GetLocaleInfoEx$MH,"GetLocaleInfoEx");
    }
    public static int GetLocaleInfoEx ( Addressable lpLocaleName,  int LCType,  Addressable lpLCData,  int cchData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.GetLocaleInfoEx$MH, "GetLocaleInfoEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), LCType, lpLCData.address(), cchData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCalendarInfoEx$MH() {
        return RuntimeHelper.requireNonNull(constants$686.GetCalendarInfoEx$MH,"GetCalendarInfoEx");
    }
    public static int GetCalendarInfoEx ( Addressable lpLocaleName,  int Calendar,  Addressable lpReserved,  int CalType,  Addressable lpCalData,  int cchData,  Addressable lpValue) {
        var mh$ = RuntimeHelper.requireNonNull(constants$686.GetCalendarInfoEx$MH, "GetCalendarInfoEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), Calendar, lpReserved.address(), CalType, lpCalData.address(), cchData, lpValue.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDurationFormatEx$MH() {
        return RuntimeHelper.requireNonNull(constants$687.GetDurationFormatEx$MH,"GetDurationFormatEx");
    }
    public static int GetDurationFormatEx ( Addressable lpLocaleName,  int dwFlags,  Addressable lpDuration,  long ullDuration,  Addressable lpFormat,  Addressable lpDurationStr,  int cchDuration) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.GetDurationFormatEx$MH, "GetDurationFormatEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwFlags, lpDuration.address(), ullDuration, lpFormat.address(), lpDurationStr.address(), cchDuration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNumberFormatEx$MH() {
        return RuntimeHelper.requireNonNull(constants$687.GetNumberFormatEx$MH,"GetNumberFormatEx");
    }
    public static int GetNumberFormatEx ( Addressable lpLocaleName,  int dwFlags,  Addressable lpValue,  Addressable lpFormat,  Addressable lpNumberStr,  int cchNumber) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.GetNumberFormatEx$MH, "GetNumberFormatEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwFlags, lpValue.address(), lpFormat.address(), lpNumberStr.address(), cchNumber);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCurrencyFormatEx$MH() {
        return RuntimeHelper.requireNonNull(constants$687.GetCurrencyFormatEx$MH,"GetCurrencyFormatEx");
    }
    public static int GetCurrencyFormatEx ( Addressable lpLocaleName,  int dwFlags,  Addressable lpValue,  Addressable lpFormat,  Addressable lpCurrencyStr,  int cchCurrency) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.GetCurrencyFormatEx$MH, "GetCurrencyFormatEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwFlags, lpValue.address(), lpFormat.address(), lpCurrencyStr.address(), cchCurrency);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetUserDefaultLocaleName$MH() {
        return RuntimeHelper.requireNonNull(constants$687.GetUserDefaultLocaleName$MH,"GetUserDefaultLocaleName");
    }
    public static int GetUserDefaultLocaleName ( Addressable lpLocaleName,  int cchLocaleName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.GetUserDefaultLocaleName$MH, "GetUserDefaultLocaleName");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), cchLocaleName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetSystemDefaultLocaleName$MH() {
        return RuntimeHelper.requireNonNull(constants$687.GetSystemDefaultLocaleName$MH,"GetSystemDefaultLocaleName");
    }
    public static int GetSystemDefaultLocaleName ( Addressable lpLocaleName,  int cchLocaleName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.GetSystemDefaultLocaleName$MH, "GetSystemDefaultLocaleName");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), cchLocaleName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNLSVersionEx$MH() {
        return RuntimeHelper.requireNonNull(constants$687.GetNLSVersionEx$MH,"GetNLSVersionEx");
    }
    public static int GetNLSVersionEx ( int function,  Addressable lpLocaleName,  Addressable lpVersionInformation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$687.GetNLSVersionEx$MH, "GetNLSVersionEx");
        try {
            return (int)mh$.invokeExact(function, lpLocaleName.address(), lpVersionInformation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindNLSStringEx$MH() {
        return RuntimeHelper.requireNonNull(constants$688.FindNLSStringEx$MH,"FindNLSStringEx");
    }
    public static int FindNLSStringEx ( Addressable lpLocaleName,  int dwFindNLSStringFlags,  Addressable lpStringSource,  int cchSource,  Addressable lpStringValue,  int cchValue,  Addressable pcchFound,  Addressable lpVersionInformation,  Addressable lpReserved,  long sortHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.FindNLSStringEx$MH, "FindNLSStringEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwFindNLSStringFlags, lpStringSource.address(), cchSource, lpStringValue.address(), cchValue, pcchFound.address(), lpVersionInformation.address(), lpReserved.address(), sortHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LCMapStringEx$MH() {
        return RuntimeHelper.requireNonNull(constants$688.LCMapStringEx$MH,"LCMapStringEx");
    }
    public static int LCMapStringEx ( Addressable lpLocaleName,  int dwMapFlags,  Addressable lpSrcStr,  int cchSrc,  Addressable lpDestStr,  int cchDest,  Addressable lpVersionInformation,  Addressable lpReserved,  long sortHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.LCMapStringEx$MH, "LCMapStringEx");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address(), dwMapFlags, lpSrcStr.address(), cchSrc, lpDestStr.address(), cchDest, lpVersionInformation.address(), lpReserved.address(), sortHandle);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle IsValidLocaleName$MH() {
        return RuntimeHelper.requireNonNull(constants$688.IsValidLocaleName$MH,"IsValidLocaleName");
    }
    public static int IsValidLocaleName ( Addressable lpLocaleName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.IsValidLocaleName$MH, "IsValidLocaleName");
        try {
            return (int)mh$.invokeExact(lpLocaleName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumCalendarInfoExEx$MH() {
        return RuntimeHelper.requireNonNull(constants$688.EnumCalendarInfoExEx$MH,"EnumCalendarInfoExEx");
    }
    public static int EnumCalendarInfoExEx ( Addressable pCalInfoEnumProcExEx,  Addressable lpLocaleName,  int Calendar,  Addressable lpReserved,  int CalType,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.EnumCalendarInfoExEx$MH, "EnumCalendarInfoExEx");
        try {
            return (int)mh$.invokeExact(pCalInfoEnumProcExEx.address(), lpLocaleName.address(), Calendar, lpReserved.address(), CalType, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumDateFormatsExEx$MH() {
        return RuntimeHelper.requireNonNull(constants$688.EnumDateFormatsExEx$MH,"EnumDateFormatsExEx");
    }
    public static int EnumDateFormatsExEx ( Addressable lpDateFmtEnumProcExEx,  Addressable lpLocaleName,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.EnumDateFormatsExEx$MH, "EnumDateFormatsExEx");
        try {
            return (int)mh$.invokeExact(lpDateFmtEnumProcExEx.address(), lpLocaleName.address(), dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumTimeFormatsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$688.EnumTimeFormatsEx$MH,"EnumTimeFormatsEx");
    }
    public static int EnumTimeFormatsEx ( Addressable lpTimeFmtEnumProcEx,  Addressable lpLocaleName,  int dwFlags,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$688.EnumTimeFormatsEx$MH, "EnumTimeFormatsEx");
        try {
            return (int)mh$.invokeExact(lpTimeFmtEnumProcEx.address(), lpLocaleName.address(), dwFlags, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle EnumSystemLocalesEx$MH() {
        return RuntimeHelper.requireNonNull(constants$689.EnumSystemLocalesEx$MH,"EnumSystemLocalesEx");
    }
    public static int EnumSystemLocalesEx ( Addressable lpLocaleEnumProcEx,  int dwFlags,  long lParam,  Addressable lpReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$689.EnumSystemLocalesEx$MH, "EnumSystemLocalesEx");
        try {
            return (int)mh$.invokeExact(lpLocaleEnumProcEx.address(), dwFlags, lParam, lpReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ResolveLocaleName$MH() {
        return RuntimeHelper.requireNonNull(constants$689.ResolveLocaleName$MH,"ResolveLocaleName");
    }
    public static int ResolveLocaleName ( Addressable lpNameToResolve,  Addressable lpLocaleName,  int cchLocaleName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$689.ResolveLocaleName$MH, "ResolveLocaleName");
        try {
            return (int)mh$.invokeExact(lpNameToResolve.address(), lpLocaleName.address(), cchLocaleName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PeekConsoleInputA$MH() {
        return RuntimeHelper.requireNonNull(constants$689.PeekConsoleInputA$MH,"PeekConsoleInputA");
    }
    public static int PeekConsoleInputA ( Addressable hConsoleInput,  Addressable lpBuffer,  int nLength,  Addressable lpNumberOfEventsRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$689.PeekConsoleInputA$MH, "PeekConsoleInputA");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nLength, lpNumberOfEventsRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PeekConsoleInputW$MH() {
        return RuntimeHelper.requireNonNull(constants$689.PeekConsoleInputW$MH,"PeekConsoleInputW");
    }
    public static int PeekConsoleInputW ( Addressable hConsoleInput,  Addressable lpBuffer,  int nLength,  Addressable lpNumberOfEventsRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$689.PeekConsoleInputW$MH, "PeekConsoleInputW");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nLength, lpNumberOfEventsRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleInputA$MH() {
        return RuntimeHelper.requireNonNull(constants$690.ReadConsoleInputA$MH,"ReadConsoleInputA");
    }
    public static int ReadConsoleInputA ( Addressable hConsoleInput,  Addressable lpBuffer,  int nLength,  Addressable lpNumberOfEventsRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$690.ReadConsoleInputA$MH, "ReadConsoleInputA");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nLength, lpNumberOfEventsRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleInputW$MH() {
        return RuntimeHelper.requireNonNull(constants$690.ReadConsoleInputW$MH,"ReadConsoleInputW");
    }
    public static int ReadConsoleInputW ( Addressable hConsoleInput,  Addressable lpBuffer,  int nLength,  Addressable lpNumberOfEventsRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$690.ReadConsoleInputW$MH, "ReadConsoleInputW");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nLength, lpNumberOfEventsRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleInputA$MH() {
        return RuntimeHelper.requireNonNull(constants$690.WriteConsoleInputA$MH,"WriteConsoleInputA");
    }
    public static int WriteConsoleInputA ( Addressable hConsoleInput,  Addressable lpBuffer,  int nLength,  Addressable lpNumberOfEventsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$690.WriteConsoleInputA$MH, "WriteConsoleInputA");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nLength, lpNumberOfEventsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleInputW$MH() {
        return RuntimeHelper.requireNonNull(constants$690.WriteConsoleInputW$MH,"WriteConsoleInputW");
    }
    public static int WriteConsoleInputW ( Addressable hConsoleInput,  Addressable lpBuffer,  int nLength,  Addressable lpNumberOfEventsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$690.WriteConsoleInputW$MH, "WriteConsoleInputW");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nLength, lpNumberOfEventsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleOutputA$MH() {
        return RuntimeHelper.requireNonNull(constants$690.ReadConsoleOutputA$MH,"ReadConsoleOutputA");
    }
    public static int ReadConsoleOutputA ( Addressable hConsoleOutput,  Addressable lpBuffer,  MemorySegment dwBufferSize,  MemorySegment dwBufferCoord,  Addressable lpReadRegion) {
        var mh$ = RuntimeHelper.requireNonNull(constants$690.ReadConsoleOutputA$MH, "ReadConsoleOutputA");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpBuffer.address(), dwBufferSize, dwBufferCoord, lpReadRegion.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleOutputW$MH() {
        return RuntimeHelper.requireNonNull(constants$690.ReadConsoleOutputW$MH,"ReadConsoleOutputW");
    }
    public static int ReadConsoleOutputW ( Addressable hConsoleOutput,  Addressable lpBuffer,  MemorySegment dwBufferSize,  MemorySegment dwBufferCoord,  Addressable lpReadRegion) {
        var mh$ = RuntimeHelper.requireNonNull(constants$690.ReadConsoleOutputW$MH, "ReadConsoleOutputW");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpBuffer.address(), dwBufferSize, dwBufferCoord, lpReadRegion.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleOutputA$MH() {
        return RuntimeHelper.requireNonNull(constants$691.WriteConsoleOutputA$MH,"WriteConsoleOutputA");
    }
    public static int WriteConsoleOutputA ( Addressable hConsoleOutput,  Addressable lpBuffer,  MemorySegment dwBufferSize,  MemorySegment dwBufferCoord,  Addressable lpWriteRegion) {
        var mh$ = RuntimeHelper.requireNonNull(constants$691.WriteConsoleOutputA$MH, "WriteConsoleOutputA");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpBuffer.address(), dwBufferSize, dwBufferCoord, lpWriteRegion.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleOutputW$MH() {
        return RuntimeHelper.requireNonNull(constants$691.WriteConsoleOutputW$MH,"WriteConsoleOutputW");
    }
    public static int WriteConsoleOutputW ( Addressable hConsoleOutput,  Addressable lpBuffer,  MemorySegment dwBufferSize,  MemorySegment dwBufferCoord,  Addressable lpWriteRegion) {
        var mh$ = RuntimeHelper.requireNonNull(constants$691.WriteConsoleOutputW$MH, "WriteConsoleOutputW");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpBuffer.address(), dwBufferSize, dwBufferCoord, lpWriteRegion.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleOutputCharacterA$MH() {
        return RuntimeHelper.requireNonNull(constants$691.ReadConsoleOutputCharacterA$MH,"ReadConsoleOutputCharacterA");
    }
    public static int ReadConsoleOutputCharacterA ( Addressable hConsoleOutput,  Addressable lpCharacter,  int nLength,  MemorySegment dwReadCoord,  Addressable lpNumberOfCharsRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$691.ReadConsoleOutputCharacterA$MH, "ReadConsoleOutputCharacterA");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpCharacter.address(), nLength, dwReadCoord, lpNumberOfCharsRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleOutputCharacterW$MH() {
        return RuntimeHelper.requireNonNull(constants$691.ReadConsoleOutputCharacterW$MH,"ReadConsoleOutputCharacterW");
    }
    public static int ReadConsoleOutputCharacterW ( Addressable hConsoleOutput,  Addressable lpCharacter,  int nLength,  MemorySegment dwReadCoord,  Addressable lpNumberOfCharsRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$691.ReadConsoleOutputCharacterW$MH, "ReadConsoleOutputCharacterW");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpCharacter.address(), nLength, dwReadCoord, lpNumberOfCharsRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleOutputAttribute$MH() {
        return RuntimeHelper.requireNonNull(constants$691.ReadConsoleOutputAttribute$MH,"ReadConsoleOutputAttribute");
    }
    public static int ReadConsoleOutputAttribute ( Addressable hConsoleOutput,  Addressable lpAttribute,  int nLength,  MemorySegment dwReadCoord,  Addressable lpNumberOfAttrsRead) {
        var mh$ = RuntimeHelper.requireNonNull(constants$691.ReadConsoleOutputAttribute$MH, "ReadConsoleOutputAttribute");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpAttribute.address(), nLength, dwReadCoord, lpNumberOfAttrsRead.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleOutputCharacterA$MH() {
        return RuntimeHelper.requireNonNull(constants$691.WriteConsoleOutputCharacterA$MH,"WriteConsoleOutputCharacterA");
    }
    public static int WriteConsoleOutputCharacterA ( Addressable hConsoleOutput,  Addressable lpCharacter,  int nLength,  MemorySegment dwWriteCoord,  Addressable lpNumberOfCharsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$691.WriteConsoleOutputCharacterA$MH, "WriteConsoleOutputCharacterA");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpCharacter.address(), nLength, dwWriteCoord, lpNumberOfCharsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleOutputCharacterW$MH() {
        return RuntimeHelper.requireNonNull(constants$692.WriteConsoleOutputCharacterW$MH,"WriteConsoleOutputCharacterW");
    }
    public static int WriteConsoleOutputCharacterW ( Addressable hConsoleOutput,  Addressable lpCharacter,  int nLength,  MemorySegment dwWriteCoord,  Addressable lpNumberOfCharsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$692.WriteConsoleOutputCharacterW$MH, "WriteConsoleOutputCharacterW");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpCharacter.address(), nLength, dwWriteCoord, lpNumberOfCharsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleOutputAttribute$MH() {
        return RuntimeHelper.requireNonNull(constants$692.WriteConsoleOutputAttribute$MH,"WriteConsoleOutputAttribute");
    }
    public static int WriteConsoleOutputAttribute ( Addressable hConsoleOutput,  Addressable lpAttribute,  int nLength,  MemorySegment dwWriteCoord,  Addressable lpNumberOfAttrsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$692.WriteConsoleOutputAttribute$MH, "WriteConsoleOutputAttribute");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpAttribute.address(), nLength, dwWriteCoord, lpNumberOfAttrsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FillConsoleOutputCharacterA$MH() {
        return RuntimeHelper.requireNonNull(constants$692.FillConsoleOutputCharacterA$MH,"FillConsoleOutputCharacterA");
    }
    public static int FillConsoleOutputCharacterA ( Addressable hConsoleOutput,  byte cCharacter,  int nLength,  MemorySegment dwWriteCoord,  Addressable lpNumberOfCharsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$692.FillConsoleOutputCharacterA$MH, "FillConsoleOutputCharacterA");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), cCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FillConsoleOutputCharacterW$MH() {
        return RuntimeHelper.requireNonNull(constants$692.FillConsoleOutputCharacterW$MH,"FillConsoleOutputCharacterW");
    }
    public static int FillConsoleOutputCharacterW ( Addressable hConsoleOutput,  short cCharacter,  int nLength,  MemorySegment dwWriteCoord,  Addressable lpNumberOfCharsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$692.FillConsoleOutputCharacterW$MH, "FillConsoleOutputCharacterW");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), cCharacter, nLength, dwWriteCoord, lpNumberOfCharsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FillConsoleOutputAttribute$MH() {
        return RuntimeHelper.requireNonNull(constants$692.FillConsoleOutputAttribute$MH,"FillConsoleOutputAttribute");
    }
    public static int FillConsoleOutputAttribute ( Addressable hConsoleOutput,  short wAttribute,  int nLength,  MemorySegment dwWriteCoord,  Addressable lpNumberOfAttrsWritten) {
        var mh$ = RuntimeHelper.requireNonNull(constants$692.FillConsoleOutputAttribute$MH, "FillConsoleOutputAttribute");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), wAttribute, nLength, dwWriteCoord, lpNumberOfAttrsWritten.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleMode$MH() {
        return RuntimeHelper.requireNonNull(constants$692.GetConsoleMode$MH,"GetConsoleMode");
    }
    public static int GetConsoleMode ( Addressable hConsoleHandle,  Addressable lpMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$692.GetConsoleMode$MH, "GetConsoleMode");
        try {
            return (int)mh$.invokeExact(hConsoleHandle.address(), lpMode.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNumberOfConsoleInputEvents$MH() {
        return RuntimeHelper.requireNonNull(constants$693.GetNumberOfConsoleInputEvents$MH,"GetNumberOfConsoleInputEvents");
    }
    public static int GetNumberOfConsoleInputEvents ( Addressable hConsoleInput,  Addressable lpNumberOfEvents) {
        var mh$ = RuntimeHelper.requireNonNull(constants$693.GetNumberOfConsoleInputEvents$MH, "GetNumberOfConsoleInputEvents");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpNumberOfEvents.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleScreenBufferInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$693.GetConsoleScreenBufferInfo$MH,"GetConsoleScreenBufferInfo");
    }
    public static int GetConsoleScreenBufferInfo ( Addressable hConsoleOutput,  Addressable lpConsoleScreenBufferInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$693.GetConsoleScreenBufferInfo$MH, "GetConsoleScreenBufferInfo");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpConsoleScreenBufferInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetLargestConsoleWindowSize$MH() {
        return RuntimeHelper.requireNonNull(constants$693.GetLargestConsoleWindowSize$MH,"GetLargestConsoleWindowSize");
    }
    public static MemorySegment GetLargestConsoleWindowSize ( SegmentAllocator allocator,  Addressable hConsoleOutput) {
        var mh$ = RuntimeHelper.requireNonNull(constants$693.GetLargestConsoleWindowSize$MH, "GetLargestConsoleWindowSize");
        try {
            return (jdk.incubator.foreign.MemorySegment)mh$.invokeExact(allocator, hConsoleOutput.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment GetLargestConsoleWindowSize ( ResourceScope scope,  Addressable hConsoleOutput) {
        return GetLargestConsoleWindowSize(SegmentAllocator.ofScope(scope), hConsoleOutput.address());
    }
    public static MethodHandle GetConsoleCursorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$693.GetConsoleCursorInfo$MH,"GetConsoleCursorInfo");
    }
    public static int GetConsoleCursorInfo ( Addressable hConsoleOutput,  Addressable lpConsoleCursorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$693.GetConsoleCursorInfo$MH, "GetConsoleCursorInfo");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpConsoleCursorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCurrentConsoleFont$MH() {
        return RuntimeHelper.requireNonNull(constants$693.GetCurrentConsoleFont$MH,"GetCurrentConsoleFont");
    }
    public static int GetCurrentConsoleFont ( Addressable hConsoleOutput,  int bMaximumWindow,  Addressable lpConsoleCurrentFont) {
        var mh$ = RuntimeHelper.requireNonNull(constants$693.GetCurrentConsoleFont$MH, "GetCurrentConsoleFont");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), bMaximumWindow, lpConsoleCurrentFont.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleFontSize$MH() {
        return RuntimeHelper.requireNonNull(constants$693.GetConsoleFontSize$MH,"GetConsoleFontSize");
    }
    public static MemorySegment GetConsoleFontSize ( SegmentAllocator allocator,  Addressable hConsoleOutput,  int nFont) {
        var mh$ = RuntimeHelper.requireNonNull(constants$693.GetConsoleFontSize$MH, "GetConsoleFontSize");
        try {
            return (jdk.incubator.foreign.MemorySegment)mh$.invokeExact(allocator, hConsoleOutput.address(), nFont);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment GetConsoleFontSize ( ResourceScope scope,  Addressable hConsoleOutput,  int nFont) {
        return GetConsoleFontSize(SegmentAllocator.ofScope(scope), hConsoleOutput.address(), nFont);
    }
    public static MethodHandle GetConsoleSelectionInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$694.GetConsoleSelectionInfo$MH,"GetConsoleSelectionInfo");
    }
    public static int GetConsoleSelectionInfo ( Addressable lpConsoleSelectionInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$694.GetConsoleSelectionInfo$MH, "GetConsoleSelectionInfo");
        try {
            return (int)mh$.invokeExact(lpConsoleSelectionInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetNumberOfConsoleMouseButtons$MH() {
        return RuntimeHelper.requireNonNull(constants$694.GetNumberOfConsoleMouseButtons$MH,"GetNumberOfConsoleMouseButtons");
    }
    public static int GetNumberOfConsoleMouseButtons ( Addressable lpNumberOfMouseButtons) {
        var mh$ = RuntimeHelper.requireNonNull(constants$694.GetNumberOfConsoleMouseButtons$MH, "GetNumberOfConsoleMouseButtons");
        try {
            return (int)mh$.invokeExact(lpNumberOfMouseButtons.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleMode$MH() {
        return RuntimeHelper.requireNonNull(constants$694.SetConsoleMode$MH,"SetConsoleMode");
    }
    public static int SetConsoleMode ( Addressable hConsoleHandle,  int dwMode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$694.SetConsoleMode$MH, "SetConsoleMode");
        try {
            return (int)mh$.invokeExact(hConsoleHandle.address(), dwMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleActiveScreenBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$694.SetConsoleActiveScreenBuffer$MH,"SetConsoleActiveScreenBuffer");
    }
    public static int SetConsoleActiveScreenBuffer ( Addressable hConsoleOutput) {
        var mh$ = RuntimeHelper.requireNonNull(constants$694.SetConsoleActiveScreenBuffer$MH, "SetConsoleActiveScreenBuffer");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FlushConsoleInputBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$694.FlushConsoleInputBuffer$MH,"FlushConsoleInputBuffer");
    }
    public static int FlushConsoleInputBuffer ( Addressable hConsoleInput) {
        var mh$ = RuntimeHelper.requireNonNull(constants$694.FlushConsoleInputBuffer$MH, "FlushConsoleInputBuffer");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleScreenBufferSize$MH() {
        return RuntimeHelper.requireNonNull(constants$694.SetConsoleScreenBufferSize$MH,"SetConsoleScreenBufferSize");
    }
    public static int SetConsoleScreenBufferSize ( Addressable hConsoleOutput,  MemorySegment dwSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$694.SetConsoleScreenBufferSize$MH, "SetConsoleScreenBufferSize");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), dwSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleCursorPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$695.SetConsoleCursorPosition$MH,"SetConsoleCursorPosition");
    }
    public static int SetConsoleCursorPosition ( Addressable hConsoleOutput,  MemorySegment dwCursorPosition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.SetConsoleCursorPosition$MH, "SetConsoleCursorPosition");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), dwCursorPosition);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleCursorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$695.SetConsoleCursorInfo$MH,"SetConsoleCursorInfo");
    }
    public static int SetConsoleCursorInfo ( Addressable hConsoleOutput,  Addressable lpConsoleCursorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.SetConsoleCursorInfo$MH, "SetConsoleCursorInfo");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpConsoleCursorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScrollConsoleScreenBufferA$MH() {
        return RuntimeHelper.requireNonNull(constants$695.ScrollConsoleScreenBufferA$MH,"ScrollConsoleScreenBufferA");
    }
    public static int ScrollConsoleScreenBufferA ( Addressable hConsoleOutput,  Addressable lpScrollRectangle,  Addressable lpClipRectangle,  MemorySegment dwDestinationOrigin,  Addressable lpFill) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.ScrollConsoleScreenBufferA$MH, "ScrollConsoleScreenBufferA");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpScrollRectangle.address(), lpClipRectangle.address(), dwDestinationOrigin, lpFill.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ScrollConsoleScreenBufferW$MH() {
        return RuntimeHelper.requireNonNull(constants$695.ScrollConsoleScreenBufferW$MH,"ScrollConsoleScreenBufferW");
    }
    public static int ScrollConsoleScreenBufferW ( Addressable hConsoleOutput,  Addressable lpScrollRectangle,  Addressable lpClipRectangle,  MemorySegment dwDestinationOrigin,  Addressable lpFill) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.ScrollConsoleScreenBufferW$MH, "ScrollConsoleScreenBufferW");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpScrollRectangle.address(), lpClipRectangle.address(), dwDestinationOrigin, lpFill.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleWindowInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$695.SetConsoleWindowInfo$MH,"SetConsoleWindowInfo");
    }
    public static int SetConsoleWindowInfo ( Addressable hConsoleOutput,  int bAbsolute,  Addressable lpConsoleWindow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.SetConsoleWindowInfo$MH, "SetConsoleWindowInfo");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), bAbsolute, lpConsoleWindow.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleTextAttribute$MH() {
        return RuntimeHelper.requireNonNull(constants$695.SetConsoleTextAttribute$MH,"SetConsoleTextAttribute");
    }
    public static int SetConsoleTextAttribute ( Addressable hConsoleOutput,  short wAttributes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$695.SetConsoleTextAttribute$MH, "SetConsoleTextAttribute");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), wAttributes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleCtrlHandler$MH() {
        return RuntimeHelper.requireNonNull(constants$696.SetConsoleCtrlHandler$MH,"SetConsoleCtrlHandler");
    }
    public static int SetConsoleCtrlHandler ( Addressable HandlerRoutine,  int Add) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.SetConsoleCtrlHandler$MH, "SetConsoleCtrlHandler");
        try {
            return (int)mh$.invokeExact(HandlerRoutine.address(), Add);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GenerateConsoleCtrlEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$696.GenerateConsoleCtrlEvent$MH,"GenerateConsoleCtrlEvent");
    }
    public static int GenerateConsoleCtrlEvent ( int dwCtrlEvent,  int dwProcessGroupId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.GenerateConsoleCtrlEvent$MH, "GenerateConsoleCtrlEvent");
        try {
            return (int)mh$.invokeExact(dwCtrlEvent, dwProcessGroupId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AllocConsole$MH() {
        return RuntimeHelper.requireNonNull(constants$696.AllocConsole$MH,"AllocConsole");
    }
    public static int AllocConsole () {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.AllocConsole$MH, "AllocConsole");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreeConsole$MH() {
        return RuntimeHelper.requireNonNull(constants$696.FreeConsole$MH,"FreeConsole");
    }
    public static int FreeConsole () {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.FreeConsole$MH, "FreeConsole");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AttachConsole$MH() {
        return RuntimeHelper.requireNonNull(constants$696.AttachConsole$MH,"AttachConsole");
    }
    public static int AttachConsole ( int dwProcessId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.AttachConsole$MH, "AttachConsole");
        try {
            return (int)mh$.invokeExact(dwProcessId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleTitleA$MH() {
        return RuntimeHelper.requireNonNull(constants$696.GetConsoleTitleA$MH,"GetConsoleTitleA");
    }
    public static int GetConsoleTitleA ( Addressable lpConsoleTitle,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$696.GetConsoleTitleA$MH, "GetConsoleTitleA");
        try {
            return (int)mh$.invokeExact(lpConsoleTitle.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleTitleW$MH() {
        return RuntimeHelper.requireNonNull(constants$697.GetConsoleTitleW$MH,"GetConsoleTitleW");
    }
    public static int GetConsoleTitleW ( Addressable lpConsoleTitle,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.GetConsoleTitleW$MH, "GetConsoleTitleW");
        try {
            return (int)mh$.invokeExact(lpConsoleTitle.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleTitleA$MH() {
        return RuntimeHelper.requireNonNull(constants$697.SetConsoleTitleA$MH,"SetConsoleTitleA");
    }
    public static int SetConsoleTitleA ( Addressable lpConsoleTitle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.SetConsoleTitleA$MH, "SetConsoleTitleA");
        try {
            return (int)mh$.invokeExact(lpConsoleTitle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleTitleW$MH() {
        return RuntimeHelper.requireNonNull(constants$697.SetConsoleTitleW$MH,"SetConsoleTitleW");
    }
    public static int SetConsoleTitleW ( Addressable lpConsoleTitle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.SetConsoleTitleW$MH, "SetConsoleTitleW");
        try {
            return (int)mh$.invokeExact(lpConsoleTitle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleA$MH() {
        return RuntimeHelper.requireNonNull(constants$697.ReadConsoleA$MH,"ReadConsoleA");
    }
    public static int ReadConsoleA ( Addressable hConsoleInput,  Addressable lpBuffer,  int nNumberOfCharsToRead,  Addressable lpNumberOfCharsRead,  Addressable lpReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.ReadConsoleA$MH, "ReadConsoleA");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nNumberOfCharsToRead, lpNumberOfCharsRead.address(), lpReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReadConsoleW$MH() {
        return RuntimeHelper.requireNonNull(constants$697.ReadConsoleW$MH,"ReadConsoleW");
    }
    public static int ReadConsoleW ( Addressable hConsoleInput,  Addressable lpBuffer,  int nNumberOfCharsToRead,  Addressable lpNumberOfCharsRead,  Addressable lpReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.ReadConsoleW$MH, "ReadConsoleW");
        try {
            return (int)mh$.invokeExact(hConsoleInput.address(), lpBuffer.address(), nNumberOfCharsToRead, lpNumberOfCharsRead.address(), lpReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleA$MH() {
        return RuntimeHelper.requireNonNull(constants$697.WriteConsoleA$MH,"WriteConsoleA");
    }
    public static int WriteConsoleA ( Addressable hConsoleOutput,  Addressable lpBuffer,  int nNumberOfCharsToWrite,  Addressable lpNumberOfCharsWritten,  Addressable lpReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$697.WriteConsoleA$MH, "WriteConsoleA");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpBuffer.address(), nNumberOfCharsToWrite, lpNumberOfCharsWritten.address(), lpReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WriteConsoleW$MH() {
        return RuntimeHelper.requireNonNull(constants$698.WriteConsoleW$MH,"WriteConsoleW");
    }
    public static int WriteConsoleW ( Addressable hConsoleOutput,  Addressable lpBuffer,  int nNumberOfCharsToWrite,  Addressable lpNumberOfCharsWritten,  Addressable lpReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.WriteConsoleW$MH, "WriteConsoleW");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpBuffer.address(), nNumberOfCharsToWrite, lpNumberOfCharsWritten.address(), lpReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateConsoleScreenBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$698.CreateConsoleScreenBuffer$MH,"CreateConsoleScreenBuffer");
    }
    public static MemoryAddress CreateConsoleScreenBuffer ( int dwDesiredAccess,  int dwShareMode,  Addressable lpSecurityAttributes,  int dwFlags,  Addressable lpScreenBufferData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.CreateConsoleScreenBuffer$MH, "CreateConsoleScreenBuffer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(dwDesiredAccess, dwShareMode, lpSecurityAttributes.address(), dwFlags, lpScreenBufferData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleCP$MH() {
        return RuntimeHelper.requireNonNull(constants$698.GetConsoleCP$MH,"GetConsoleCP");
    }
    public static int GetConsoleCP () {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.GetConsoleCP$MH, "GetConsoleCP");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleCP$MH() {
        return RuntimeHelper.requireNonNull(constants$698.SetConsoleCP$MH,"SetConsoleCP");
    }
    public static int SetConsoleCP ( int wCodePageID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.SetConsoleCP$MH, "SetConsoleCP");
        try {
            return (int)mh$.invokeExact(wCodePageID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleOutputCP$MH() {
        return RuntimeHelper.requireNonNull(constants$698.GetConsoleOutputCP$MH,"GetConsoleOutputCP");
    }
    public static int GetConsoleOutputCP () {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.GetConsoleOutputCP$MH, "GetConsoleOutputCP");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleOutputCP$MH() {
        return RuntimeHelper.requireNonNull(constants$698.SetConsoleOutputCP$MH,"SetConsoleOutputCP");
    }
    public static int SetConsoleOutputCP ( int wCodePageID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$698.SetConsoleOutputCP$MH, "SetConsoleOutputCP");
        try {
            return (int)mh$.invokeExact(wCodePageID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleDisplayMode$MH() {
        return RuntimeHelper.requireNonNull(constants$699.GetConsoleDisplayMode$MH,"GetConsoleDisplayMode");
    }
    public static int GetConsoleDisplayMode ( Addressable lpModeFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.GetConsoleDisplayMode$MH, "GetConsoleDisplayMode");
        try {
            return (int)mh$.invokeExact(lpModeFlags.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleDisplayMode$MH() {
        return RuntimeHelper.requireNonNull(constants$699.SetConsoleDisplayMode$MH,"SetConsoleDisplayMode");
    }
    public static int SetConsoleDisplayMode ( Addressable hConsoleOutput,  int dwFlags,  Addressable lpNewScreenBufferDimensions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.SetConsoleDisplayMode$MH, "SetConsoleDisplayMode");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), dwFlags, lpNewScreenBufferDimensions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$699.GetConsoleWindow$MH,"GetConsoleWindow");
    }
    public static MemoryAddress GetConsoleWindow () {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.GetConsoleWindow$MH, "GetConsoleWindow");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleProcessList$MH() {
        return RuntimeHelper.requireNonNull(constants$699.GetConsoleProcessList$MH,"GetConsoleProcessList");
    }
    public static int GetConsoleProcessList ( Addressable lpdwProcessList,  int dwProcessCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.GetConsoleProcessList$MH, "GetConsoleProcessList");
        try {
            return (int)mh$.invokeExact(lpdwProcessList.address(), dwProcessCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddConsoleAliasA$MH() {
        return RuntimeHelper.requireNonNull(constants$699.AddConsoleAliasA$MH,"AddConsoleAliasA");
    }
    public static int AddConsoleAliasA ( Addressable Source,  Addressable Target,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.AddConsoleAliasA$MH, "AddConsoleAliasA");
        try {
            return (int)mh$.invokeExact(Source.address(), Target.address(), ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AddConsoleAliasW$MH() {
        return RuntimeHelper.requireNonNull(constants$699.AddConsoleAliasW$MH,"AddConsoleAliasW");
    }
    public static int AddConsoleAliasW ( Addressable Source,  Addressable Target,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$699.AddConsoleAliasW$MH, "AddConsoleAliasW");
        try {
            return (int)mh$.invokeExact(Source.address(), Target.address(), ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasA$MH() {
        return RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasA$MH,"GetConsoleAliasA");
    }
    public static int GetConsoleAliasA ( Addressable Source,  Addressable TargetBuffer,  int TargetBufferLength,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasA$MH, "GetConsoleAliasA");
        try {
            return (int)mh$.invokeExact(Source.address(), TargetBuffer.address(), TargetBufferLength, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasW$MH() {
        return RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasW$MH,"GetConsoleAliasW");
    }
    public static int GetConsoleAliasW ( Addressable Source,  Addressable TargetBuffer,  int TargetBufferLength,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasW$MH, "GetConsoleAliasW");
        try {
            return (int)mh$.invokeExact(Source.address(), TargetBuffer.address(), TargetBufferLength, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasesLengthA$MH() {
        return RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasesLengthA$MH,"GetConsoleAliasesLengthA");
    }
    public static int GetConsoleAliasesLengthA ( Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasesLengthA$MH, "GetConsoleAliasesLengthA");
        try {
            return (int)mh$.invokeExact(ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasesLengthW$MH() {
        return RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasesLengthW$MH,"GetConsoleAliasesLengthW");
    }
    public static int GetConsoleAliasesLengthW ( Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasesLengthW$MH, "GetConsoleAliasesLengthW");
        try {
            return (int)mh$.invokeExact(ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasExesLengthA$MH() {
        return RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasExesLengthA$MH,"GetConsoleAliasExesLengthA");
    }
    public static int GetConsoleAliasExesLengthA () {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasExesLengthA$MH, "GetConsoleAliasExesLengthA");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasExesLengthW$MH() {
        return RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasExesLengthW$MH,"GetConsoleAliasExesLengthW");
    }
    public static int GetConsoleAliasExesLengthW () {
        var mh$ = RuntimeHelper.requireNonNull(constants$700.GetConsoleAliasExesLengthW$MH, "GetConsoleAliasExesLengthW");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasesA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasesA$MH,"GetConsoleAliasesA");
    }
    public static int GetConsoleAliasesA ( Addressable AliasBuffer,  int AliasBufferLength,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasesA$MH, "GetConsoleAliasesA");
        try {
            return (int)mh$.invokeExact(AliasBuffer.address(), AliasBufferLength, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasesW$MH() {
        return RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasesW$MH,"GetConsoleAliasesW");
    }
    public static int GetConsoleAliasesW ( Addressable AliasBuffer,  int AliasBufferLength,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasesW$MH, "GetConsoleAliasesW");
        try {
            return (int)mh$.invokeExact(AliasBuffer.address(), AliasBufferLength, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasExesA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasExesA$MH,"GetConsoleAliasExesA");
    }
    public static int GetConsoleAliasExesA ( Addressable ExeNameBuffer,  int ExeNameBufferLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasExesA$MH, "GetConsoleAliasExesA");
        try {
            return (int)mh$.invokeExact(ExeNameBuffer.address(), ExeNameBufferLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleAliasExesW$MH() {
        return RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasExesW$MH,"GetConsoleAliasExesW");
    }
    public static int GetConsoleAliasExesW ( Addressable ExeNameBuffer,  int ExeNameBufferLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.GetConsoleAliasExesW$MH, "GetConsoleAliasExesW");
        try {
            return (int)mh$.invokeExact(ExeNameBuffer.address(), ExeNameBufferLength);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExpungeConsoleCommandHistoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$701.ExpungeConsoleCommandHistoryA$MH,"ExpungeConsoleCommandHistoryA");
    }
    public static void ExpungeConsoleCommandHistoryA ( Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.ExpungeConsoleCommandHistoryA$MH, "ExpungeConsoleCommandHistoryA");
        try {
            mh$.invokeExact(ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExpungeConsoleCommandHistoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$701.ExpungeConsoleCommandHistoryW$MH,"ExpungeConsoleCommandHistoryW");
    }
    public static void ExpungeConsoleCommandHistoryW ( Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$701.ExpungeConsoleCommandHistoryW$MH, "ExpungeConsoleCommandHistoryW");
        try {
            mh$.invokeExact(ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleNumberOfCommandsA$MH() {
        return RuntimeHelper.requireNonNull(constants$702.SetConsoleNumberOfCommandsA$MH,"SetConsoleNumberOfCommandsA");
    }
    public static int SetConsoleNumberOfCommandsA ( int Number,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.SetConsoleNumberOfCommandsA$MH, "SetConsoleNumberOfCommandsA");
        try {
            return (int)mh$.invokeExact(Number, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleNumberOfCommandsW$MH() {
        return RuntimeHelper.requireNonNull(constants$702.SetConsoleNumberOfCommandsW$MH,"SetConsoleNumberOfCommandsW");
    }
    public static int SetConsoleNumberOfCommandsW ( int Number,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.SetConsoleNumberOfCommandsW$MH, "SetConsoleNumberOfCommandsW");
        try {
            return (int)mh$.invokeExact(Number, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleCommandHistoryLengthA$MH() {
        return RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryLengthA$MH,"GetConsoleCommandHistoryLengthA");
    }
    public static int GetConsoleCommandHistoryLengthA ( Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryLengthA$MH, "GetConsoleCommandHistoryLengthA");
        try {
            return (int)mh$.invokeExact(ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleCommandHistoryLengthW$MH() {
        return RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryLengthW$MH,"GetConsoleCommandHistoryLengthW");
    }
    public static int GetConsoleCommandHistoryLengthW ( Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryLengthW$MH, "GetConsoleCommandHistoryLengthW");
        try {
            return (int)mh$.invokeExact(ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleCommandHistoryA$MH() {
        return RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryA$MH,"GetConsoleCommandHistoryA");
    }
    public static int GetConsoleCommandHistoryA ( Addressable Commands,  int CommandBufferLength,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryA$MH, "GetConsoleCommandHistoryA");
        try {
            return (int)mh$.invokeExact(Commands.address(), CommandBufferLength, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleCommandHistoryW$MH() {
        return RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryW$MH,"GetConsoleCommandHistoryW");
    }
    public static int GetConsoleCommandHistoryW ( Addressable Commands,  int CommandBufferLength,  Addressable ExeName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$702.GetConsoleCommandHistoryW$MH, "GetConsoleCommandHistoryW");
        try {
            return (int)mh$.invokeExact(Commands.address(), CommandBufferLength, ExeName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleHistoryInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$703.GetConsoleHistoryInfo$MH,"GetConsoleHistoryInfo");
    }
    public static int GetConsoleHistoryInfo ( Addressable lpConsoleHistoryInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.GetConsoleHistoryInfo$MH, "GetConsoleHistoryInfo");
        try {
            return (int)mh$.invokeExact(lpConsoleHistoryInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleOriginalTitleA$MH() {
        return RuntimeHelper.requireNonNull(constants$703.GetConsoleOriginalTitleA$MH,"GetConsoleOriginalTitleA");
    }
    public static int GetConsoleOriginalTitleA ( Addressable lpConsoleTitle,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.GetConsoleOriginalTitleA$MH, "GetConsoleOriginalTitleA");
        try {
            return (int)mh$.invokeExact(lpConsoleTitle.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleOriginalTitleW$MH() {
        return RuntimeHelper.requireNonNull(constants$703.GetConsoleOriginalTitleW$MH,"GetConsoleOriginalTitleW");
    }
    public static int GetConsoleOriginalTitleW ( Addressable lpConsoleTitle,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.GetConsoleOriginalTitleW$MH, "GetConsoleOriginalTitleW");
        try {
            return (int)mh$.invokeExact(lpConsoleTitle.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetConsoleScreenBufferInfoEx$MH() {
        return RuntimeHelper.requireNonNull(constants$703.GetConsoleScreenBufferInfoEx$MH,"GetConsoleScreenBufferInfoEx");
    }
    public static int GetConsoleScreenBufferInfoEx ( Addressable hConsoleOutput,  Addressable lpConsoleScreenBufferInfoEx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.GetConsoleScreenBufferInfoEx$MH, "GetConsoleScreenBufferInfoEx");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpConsoleScreenBufferInfoEx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetCurrentConsoleFontEx$MH() {
        return RuntimeHelper.requireNonNull(constants$703.GetCurrentConsoleFontEx$MH,"GetCurrentConsoleFontEx");
    }
    public static int GetCurrentConsoleFontEx ( Addressable hConsoleOutput,  int bMaximumWindow,  Addressable lpConsoleCurrentFontEx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.GetCurrentConsoleFontEx$MH, "GetCurrentConsoleFontEx");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), bMaximumWindow, lpConsoleCurrentFontEx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleHistoryInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$703.SetConsoleHistoryInfo$MH,"SetConsoleHistoryInfo");
    }
    public static int SetConsoleHistoryInfo ( Addressable lpConsoleHistoryInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$703.SetConsoleHistoryInfo$MH, "SetConsoleHistoryInfo");
        try {
            return (int)mh$.invokeExact(lpConsoleHistoryInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetConsoleScreenBufferInfoEx$MH() {
        return RuntimeHelper.requireNonNull(constants$704.SetConsoleScreenBufferInfoEx$MH,"SetConsoleScreenBufferInfoEx");
    }
    public static int SetConsoleScreenBufferInfoEx ( Addressable hConsoleOutput,  Addressable lpConsoleScreenBufferInfoEx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$704.SetConsoleScreenBufferInfoEx$MH, "SetConsoleScreenBufferInfoEx");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), lpConsoleScreenBufferInfoEx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetCurrentConsoleFontEx$MH() {
        return RuntimeHelper.requireNonNull(constants$704.SetCurrentConsoleFontEx$MH,"SetCurrentConsoleFontEx");
    }
    public static int SetCurrentConsoleFontEx ( Addressable hConsoleOutput,  int bMaximumWindow,  Addressable lpConsoleCurrentFontEx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$704.SetCurrentConsoleFontEx$MH, "SetCurrentConsoleFontEx");
        try {
            return (int)mh$.invokeExact(hConsoleOutput.address(), bMaximumWindow, lpConsoleCurrentFontEx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerFindFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$704.VerFindFileA$MH,"VerFindFileA");
    }
    public static int VerFindFileA ( int uFlags,  Addressable szFileName,  Addressable szWinDir,  Addressable szAppDir,  Addressable szCurDir,  Addressable lpuCurDirLen,  Addressable szDestDir,  Addressable lpuDestDirLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$704.VerFindFileA$MH, "VerFindFileA");
        try {
            return (int)mh$.invokeExact(uFlags, szFileName.address(), szWinDir.address(), szAppDir.address(), szCurDir.address(), lpuCurDirLen.address(), szDestDir.address(), lpuDestDirLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerFindFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$704.VerFindFileW$MH,"VerFindFileW");
    }
    public static int VerFindFileW ( int uFlags,  Addressable szFileName,  Addressable szWinDir,  Addressable szAppDir,  Addressable szCurDir,  Addressable lpuCurDirLen,  Addressable szDestDir,  Addressable lpuDestDirLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$704.VerFindFileW$MH, "VerFindFileW");
        try {
            return (int)mh$.invokeExact(uFlags, szFileName.address(), szWinDir.address(), szAppDir.address(), szCurDir.address(), lpuCurDirLen.address(), szDestDir.address(), lpuDestDirLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerInstallFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$704.VerInstallFileA$MH,"VerInstallFileA");
    }
    public static int VerInstallFileA ( int uFlags,  Addressable szSrcFileName,  Addressable szDestFileName,  Addressable szSrcDir,  Addressable szDestDir,  Addressable szCurDir,  Addressable szTmpFile,  Addressable lpuTmpFileLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$704.VerInstallFileA$MH, "VerInstallFileA");
        try {
            return (int)mh$.invokeExact(uFlags, szSrcFileName.address(), szDestFileName.address(), szSrcDir.address(), szDestDir.address(), szCurDir.address(), szTmpFile.address(), lpuTmpFileLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerInstallFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$704.VerInstallFileW$MH,"VerInstallFileW");
    }
    public static int VerInstallFileW ( int uFlags,  Addressable szSrcFileName,  Addressable szDestFileName,  Addressable szSrcDir,  Addressable szDestDir,  Addressable szCurDir,  Addressable szTmpFile,  Addressable lpuTmpFileLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$704.VerInstallFileW$MH, "VerInstallFileW");
        try {
            return (int)mh$.invokeExact(uFlags, szSrcFileName.address(), szDestFileName.address(), szSrcDir.address(), szDestDir.address(), szCurDir.address(), szTmpFile.address(), lpuTmpFileLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoSizeA$MH() {
        return RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeA$MH,"GetFileVersionInfoSizeA");
    }
    public static int GetFileVersionInfoSizeA ( Addressable lptstrFilename,  Addressable lpdwHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeA$MH, "GetFileVersionInfoSizeA");
        try {
            return (int)mh$.invokeExact(lptstrFilename.address(), lpdwHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoSizeW$MH() {
        return RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeW$MH,"GetFileVersionInfoSizeW");
    }
    public static int GetFileVersionInfoSizeW ( Addressable lptstrFilename,  Addressable lpdwHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeW$MH, "GetFileVersionInfoSizeW");
        try {
            return (int)mh$.invokeExact(lptstrFilename.address(), lpdwHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoSizeExA$MH() {
        return RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeExA$MH,"GetFileVersionInfoSizeExA");
    }
    public static int GetFileVersionInfoSizeExA ( int dwFlags,  Addressable lpwstrFilename,  Addressable lpdwHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeExA$MH, "GetFileVersionInfoSizeExA");
        try {
            return (int)mh$.invokeExact(dwFlags, lpwstrFilename.address(), lpdwHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoSizeExW$MH() {
        return RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeExW$MH,"GetFileVersionInfoSizeExW");
    }
    public static int GetFileVersionInfoSizeExW ( int dwFlags,  Addressable lpwstrFilename,  Addressable lpdwHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoSizeExW$MH, "GetFileVersionInfoSizeExW");
        try {
            return (int)mh$.invokeExact(dwFlags, lpwstrFilename.address(), lpdwHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoA$MH,"GetFileVersionInfoA");
    }
    public static int GetFileVersionInfoA ( Addressable lptstrFilename,  int dwHandle,  int dwLen,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoA$MH, "GetFileVersionInfoA");
        try {
            return (int)mh$.invokeExact(lptstrFilename.address(), dwHandle, dwLen, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoW$MH,"GetFileVersionInfoW");
    }
    public static int GetFileVersionInfoW ( Addressable lptstrFilename,  int dwHandle,  int dwLen,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$705.GetFileVersionInfoW$MH, "GetFileVersionInfoW");
        try {
            return (int)mh$.invokeExact(lptstrFilename.address(), dwHandle, dwLen, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$706.GetFileVersionInfoExA$MH,"GetFileVersionInfoExA");
    }
    public static int GetFileVersionInfoExA ( int dwFlags,  Addressable lpwstrFilename,  int dwHandle,  int dwLen,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$706.GetFileVersionInfoExA$MH, "GetFileVersionInfoExA");
        try {
            return (int)mh$.invokeExact(dwFlags, lpwstrFilename.address(), dwHandle, dwLen, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetFileVersionInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$706.GetFileVersionInfoExW$MH,"GetFileVersionInfoExW");
    }
    public static int GetFileVersionInfoExW ( int dwFlags,  Addressable lpwstrFilename,  int dwHandle,  int dwLen,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$706.GetFileVersionInfoExW$MH, "GetFileVersionInfoExW");
        try {
            return (int)mh$.invokeExact(dwFlags, lpwstrFilename.address(), dwHandle, dwLen, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerLanguageNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$706.VerLanguageNameA$MH,"VerLanguageNameA");
    }
    public static int VerLanguageNameA ( int wLang,  Addressable szLang,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$706.VerLanguageNameA$MH, "VerLanguageNameA");
        try {
            return (int)mh$.invokeExact(wLang, szLang.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerLanguageNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$706.VerLanguageNameW$MH,"VerLanguageNameW");
    }
    public static int VerLanguageNameW ( int wLang,  Addressable szLang,  int nSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$706.VerLanguageNameW$MH, "VerLanguageNameW");
        try {
            return (int)mh$.invokeExact(wLang, szLang.address(), nSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerQueryValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$706.VerQueryValueA$MH,"VerQueryValueA");
    }
    public static int VerQueryValueA ( Addressable pBlock,  Addressable lpSubBlock,  Addressable lplpBuffer,  Addressable puLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$706.VerQueryValueA$MH, "VerQueryValueA");
        try {
            return (int)mh$.invokeExact(pBlock.address(), lpSubBlock.address(), lplpBuffer.address(), puLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle VerQueryValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$706.VerQueryValueW$MH,"VerQueryValueW");
    }
    public static int VerQueryValueW ( Addressable pBlock,  Addressable lpSubBlock,  Addressable lplpBuffer,  Addressable puLen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$706.VerQueryValueW$MH, "VerQueryValueW");
        try {
            return (int)mh$.invokeExact(pBlock.address(), lpSubBlock.address(), lplpBuffer.address(), puLen.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static ValueLayout LSTATUS = C_LONG;
    public static MethodHandle RegCloseKey$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RegCloseKey$MH,"RegCloseKey");
    }
    public static int RegCloseKey ( Addressable hKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$707.RegCloseKey$MH, "RegCloseKey");
        try {
            return (int)mh$.invokeExact(hKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOverridePredefKey$MH() {
        return RuntimeHelper.requireNonNull(constants$707.RegOverridePredefKey$MH,"RegOverridePredefKey");
    }
    public static int RegOverridePredefKey ( Addressable hKey,  Addressable hNewHKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$707.RegOverridePredefKey$MH, "RegOverridePredefKey");
        try {
            return (int)mh$.invokeExact(hKey.address(), hNewHKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenUserClassesRoot$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RegOpenUserClassesRoot$MH,"RegOpenUserClassesRoot");
    }
    public static int RegOpenUserClassesRoot ( Addressable hToken,  int dwOptions,  int samDesired,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$708.RegOpenUserClassesRoot$MH, "RegOpenUserClassesRoot");
        try {
            return (int)mh$.invokeExact(hToken.address(), dwOptions, samDesired, phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenCurrentUser$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RegOpenCurrentUser$MH,"RegOpenCurrentUser");
    }
    public static int RegOpenCurrentUser ( int samDesired,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$708.RegOpenCurrentUser$MH, "RegOpenCurrentUser");
        try {
            return (int)mh$.invokeExact(samDesired, phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDisablePredefinedCache$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RegDisablePredefinedCache$MH,"RegDisablePredefinedCache");
    }
    public static int RegDisablePredefinedCache () {
        var mh$ = RuntimeHelper.requireNonNull(constants$708.RegDisablePredefinedCache$MH, "RegDisablePredefinedCache");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDisablePredefinedCacheEx$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RegDisablePredefinedCacheEx$MH,"RegDisablePredefinedCacheEx");
    }
    public static int RegDisablePredefinedCacheEx () {
        var mh$ = RuntimeHelper.requireNonNull(constants$708.RegDisablePredefinedCacheEx$MH, "RegDisablePredefinedCacheEx");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryA$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RegConnectRegistryA$MH,"RegConnectRegistryA");
    }
    public static int RegConnectRegistryA ( Addressable lpMachineName,  Addressable hKey,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$708.RegConnectRegistryA$MH, "RegConnectRegistryA");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), hKey.address(), phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryW$MH() {
        return RuntimeHelper.requireNonNull(constants$708.RegConnectRegistryW$MH,"RegConnectRegistryW");
    }
    public static int RegConnectRegistryW ( Addressable lpMachineName,  Addressable hKey,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$708.RegConnectRegistryW$MH, "RegConnectRegistryW");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), hKey.address(), phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryExA$MH() {
        return RuntimeHelper.requireNonNull(constants$709.RegConnectRegistryExA$MH,"RegConnectRegistryExA");
    }
    public static int RegConnectRegistryExA ( Addressable lpMachineName,  Addressable hKey,  int Flags,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.RegConnectRegistryExA$MH, "RegConnectRegistryExA");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), hKey.address(), Flags, phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegConnectRegistryExW$MH() {
        return RuntimeHelper.requireNonNull(constants$709.RegConnectRegistryExW$MH,"RegConnectRegistryExW");
    }
    public static int RegConnectRegistryExW ( Addressable lpMachineName,  Addressable hKey,  int Flags,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.RegConnectRegistryExW$MH, "RegConnectRegistryExW");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), hKey.address(), Flags, phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$709.RegCreateKeyA$MH,"RegCreateKeyA");
    }
    public static int RegCreateKeyA ( Addressable hKey,  Addressable lpSubKey,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.RegCreateKeyA$MH, "RegCreateKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$709.RegCreateKeyW$MH,"RegCreateKeyW");
    }
    public static int RegCreateKeyW ( Addressable hKey,  Addressable lpSubKey,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.RegCreateKeyW$MH, "RegCreateKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$709.RegCreateKeyExA$MH,"RegCreateKeyExA");
    }
    public static int RegCreateKeyExA ( Addressable hKey,  Addressable lpSubKey,  int Reserved,  Addressable lpClass,  int dwOptions,  int samDesired,  Addressable lpSecurityAttributes,  Addressable phkResult,  Addressable lpdwDisposition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.RegCreateKeyExA$MH, "RegCreateKeyExA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), Reserved, lpClass.address(), dwOptions, samDesired, lpSecurityAttributes.address(), phkResult.address(), lpdwDisposition.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$709.RegCreateKeyExW$MH,"RegCreateKeyExW");
    }
    public static int RegCreateKeyExW ( Addressable hKey,  Addressable lpSubKey,  int Reserved,  Addressable lpClass,  int dwOptions,  int samDesired,  Addressable lpSecurityAttributes,  Addressable phkResult,  Addressable lpdwDisposition) {
        var mh$ = RuntimeHelper.requireNonNull(constants$709.RegCreateKeyExW$MH, "RegCreateKeyExW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), Reserved, lpClass.address(), dwOptions, samDesired, lpSecurityAttributes.address(), phkResult.address(), lpdwDisposition.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyA$MH,"RegDeleteKeyA");
    }
    public static int RegDeleteKeyA ( Addressable hKey,  Addressable lpSubKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyA$MH, "RegDeleteKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyW$MH,"RegDeleteKeyW");
    }
    public static int RegDeleteKeyW ( Addressable hKey,  Addressable lpSubKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyW$MH, "RegDeleteKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyExA$MH,"RegDeleteKeyExA");
    }
    public static int RegDeleteKeyExA ( Addressable hKey,  Addressable lpSubKey,  int samDesired,  int Reserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyExA$MH, "RegDeleteKeyExA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), samDesired, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyExW$MH,"RegDeleteKeyExW");
    }
    public static int RegDeleteKeyExW ( Addressable hKey,  Addressable lpSubKey,  int samDesired,  int Reserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.RegDeleteKeyExW$MH, "RegDeleteKeyExW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), samDesired, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDisableReflectionKey$MH() {
        return RuntimeHelper.requireNonNull(constants$710.RegDisableReflectionKey$MH,"RegDisableReflectionKey");
    }
    public static int RegDisableReflectionKey ( Addressable hBase) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.RegDisableReflectionKey$MH, "RegDisableReflectionKey");
        try {
            return (int)mh$.invokeExact(hBase.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnableReflectionKey$MH() {
        return RuntimeHelper.requireNonNull(constants$710.RegEnableReflectionKey$MH,"RegEnableReflectionKey");
    }
    public static int RegEnableReflectionKey ( Addressable hBase) {
        var mh$ = RuntimeHelper.requireNonNull(constants$710.RegEnableReflectionKey$MH, "RegEnableReflectionKey");
        try {
            return (int)mh$.invokeExact(hBase.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryReflectionKey$MH() {
        return RuntimeHelper.requireNonNull(constants$711.RegQueryReflectionKey$MH,"RegQueryReflectionKey");
    }
    public static int RegQueryReflectionKey ( Addressable hBase,  Addressable bIsReflectionDisabled) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.RegQueryReflectionKey$MH, "RegQueryReflectionKey");
        try {
            return (int)mh$.invokeExact(hBase.address(), bIsReflectionDisabled.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$711.RegDeleteValueA$MH,"RegDeleteValueA");
    }
    public static int RegDeleteValueA ( Addressable hKey,  Addressable lpValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.RegDeleteValueA$MH, "RegDeleteValueA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$711.RegDeleteValueW$MH,"RegDeleteValueW");
    }
    public static int RegDeleteValueW ( Addressable hKey,  Addressable lpValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.RegDeleteValueW$MH, "RegDeleteValueW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$711.RegEnumKeyA$MH,"RegEnumKeyA");
    }
    public static int RegEnumKeyA ( Addressable hKey,  int dwIndex,  Addressable lpName,  int cchName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.RegEnumKeyA$MH, "RegEnumKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), dwIndex, lpName.address(), cchName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$711.RegEnumKeyW$MH,"RegEnumKeyW");
    }
    public static int RegEnumKeyW ( Addressable hKey,  int dwIndex,  Addressable lpName,  int cchName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.RegEnumKeyW$MH, "RegEnumKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), dwIndex, lpName.address(), cchName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$711.RegEnumKeyExA$MH,"RegEnumKeyExA");
    }
    public static int RegEnumKeyExA ( Addressable hKey,  int dwIndex,  Addressable lpName,  Addressable lpcchName,  Addressable lpReserved,  Addressable lpClass,  Addressable lpcchClass,  Addressable lpftLastWriteTime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$711.RegEnumKeyExA$MH, "RegEnumKeyExA");
        try {
            return (int)mh$.invokeExact(hKey.address(), dwIndex, lpName.address(), lpcchName.address(), lpReserved.address(), lpClass.address(), lpcchClass.address(), lpftLastWriteTime.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$712.RegEnumKeyExW$MH,"RegEnumKeyExW");
    }
    public static int RegEnumKeyExW ( Addressable hKey,  int dwIndex,  Addressable lpName,  Addressable lpcchName,  Addressable lpReserved,  Addressable lpClass,  Addressable lpcchClass,  Addressable lpftLastWriteTime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.RegEnumKeyExW$MH, "RegEnumKeyExW");
        try {
            return (int)mh$.invokeExact(hKey.address(), dwIndex, lpName.address(), lpcchName.address(), lpReserved.address(), lpClass.address(), lpcchClass.address(), lpftLastWriteTime.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$712.RegEnumValueA$MH,"RegEnumValueA");
    }
    public static int RegEnumValueA ( Addressable hKey,  int dwIndex,  Addressable lpValueName,  Addressable lpcchValueName,  Addressable lpReserved,  Addressable lpType,  Addressable lpData,  Addressable lpcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.RegEnumValueA$MH, "RegEnumValueA");
        try {
            return (int)mh$.invokeExact(hKey.address(), dwIndex, lpValueName.address(), lpcchValueName.address(), lpReserved.address(), lpType.address(), lpData.address(), lpcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegEnumValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$712.RegEnumValueW$MH,"RegEnumValueW");
    }
    public static int RegEnumValueW ( Addressable hKey,  int dwIndex,  Addressable lpValueName,  Addressable lpcchValueName,  Addressable lpReserved,  Addressable lpType,  Addressable lpData,  Addressable lpcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.RegEnumValueW$MH, "RegEnumValueW");
        try {
            return (int)mh$.invokeExact(hKey.address(), dwIndex, lpValueName.address(), lpcchValueName.address(), lpReserved.address(), lpType.address(), lpData.address(), lpcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegFlushKey$MH() {
        return RuntimeHelper.requireNonNull(constants$712.RegFlushKey$MH,"RegFlushKey");
    }
    public static int RegFlushKey ( Addressable hKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.RegFlushKey$MH, "RegFlushKey");
        try {
            return (int)mh$.invokeExact(hKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegGetKeySecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$712.RegGetKeySecurity$MH,"RegGetKeySecurity");
    }
    public static int RegGetKeySecurity ( Addressable hKey,  int SecurityInformation,  Addressable pSecurityDescriptor,  Addressable lpcbSecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.RegGetKeySecurity$MH, "RegGetKeySecurity");
        try {
            return (int)mh$.invokeExact(hKey.address(), SecurityInformation, pSecurityDescriptor.address(), lpcbSecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$712.RegLoadKeyA$MH,"RegLoadKeyA");
    }
    public static int RegLoadKeyA ( Addressable hKey,  Addressable lpSubKey,  Addressable lpFile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$712.RegLoadKeyA$MH, "RegLoadKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpFile.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$713.RegLoadKeyW$MH,"RegLoadKeyW");
    }
    public static int RegLoadKeyW ( Addressable hKey,  Addressable lpSubKey,  Addressable lpFile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.RegLoadKeyW$MH, "RegLoadKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpFile.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegNotifyChangeKeyValue$MH() {
        return RuntimeHelper.requireNonNull(constants$713.RegNotifyChangeKeyValue$MH,"RegNotifyChangeKeyValue");
    }
    public static int RegNotifyChangeKeyValue ( Addressable hKey,  int bWatchSubtree,  int dwNotifyFilter,  Addressable hEvent,  int fAsynchronous) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.RegNotifyChangeKeyValue$MH, "RegNotifyChangeKeyValue");
        try {
            return (int)mh$.invokeExact(hKey.address(), bWatchSubtree, dwNotifyFilter, hEvent.address(), fAsynchronous);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$713.RegOpenKeyA$MH,"RegOpenKeyA");
    }
    public static int RegOpenKeyA ( Addressable hKey,  Addressable lpSubKey,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.RegOpenKeyA$MH, "RegOpenKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$713.RegOpenKeyW$MH,"RegOpenKeyW");
    }
    public static int RegOpenKeyW ( Addressable hKey,  Addressable lpSubKey,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.RegOpenKeyW$MH, "RegOpenKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$713.RegOpenKeyExA$MH,"RegOpenKeyExA");
    }
    public static int RegOpenKeyExA ( Addressable hKey,  Addressable lpSubKey,  int ulOptions,  int samDesired,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.RegOpenKeyExA$MH, "RegOpenKeyExA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), ulOptions, samDesired, phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$713.RegOpenKeyExW$MH,"RegOpenKeyExW");
    }
    public static int RegOpenKeyExW ( Addressable hKey,  Addressable lpSubKey,  int ulOptions,  int samDesired,  Addressable phkResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$713.RegOpenKeyExW$MH, "RegOpenKeyExW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), ulOptions, samDesired, phkResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryInfoKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$714.RegQueryInfoKeyA$MH,"RegQueryInfoKeyA");
    }
    public static int RegQueryInfoKeyA ( Addressable hKey,  Addressable lpClass,  Addressable lpcchClass,  Addressable lpReserved,  Addressable lpcSubKeys,  Addressable lpcbMaxSubKeyLen,  Addressable lpcbMaxClassLen,  Addressable lpcValues,  Addressable lpcbMaxValueNameLen,  Addressable lpcbMaxValueLen,  Addressable lpcbSecurityDescriptor,  Addressable lpftLastWriteTime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.RegQueryInfoKeyA$MH, "RegQueryInfoKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpClass.address(), lpcchClass.address(), lpReserved.address(), lpcSubKeys.address(), lpcbMaxSubKeyLen.address(), lpcbMaxClassLen.address(), lpcValues.address(), lpcbMaxValueNameLen.address(), lpcbMaxValueLen.address(), lpcbSecurityDescriptor.address(), lpftLastWriteTime.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryInfoKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$714.RegQueryInfoKeyW$MH,"RegQueryInfoKeyW");
    }
    public static int RegQueryInfoKeyW ( Addressable hKey,  Addressable lpClass,  Addressable lpcchClass,  Addressable lpReserved,  Addressable lpcSubKeys,  Addressable lpcbMaxSubKeyLen,  Addressable lpcbMaxClassLen,  Addressable lpcValues,  Addressable lpcbMaxValueNameLen,  Addressable lpcbMaxValueLen,  Addressable lpcbSecurityDescriptor,  Addressable lpftLastWriteTime) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.RegQueryInfoKeyW$MH, "RegQueryInfoKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpClass.address(), lpcchClass.address(), lpReserved.address(), lpcSubKeys.address(), lpcbMaxSubKeyLen.address(), lpcbMaxClassLen.address(), lpcValues.address(), lpcbMaxValueNameLen.address(), lpcbMaxValueLen.address(), lpcbSecurityDescriptor.address(), lpftLastWriteTime.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$714.RegQueryValueA$MH,"RegQueryValueA");
    }
    public static int RegQueryValueA ( Addressable hKey,  Addressable lpSubKey,  Addressable lpData,  Addressable lpcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.RegQueryValueA$MH, "RegQueryValueA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpData.address(), lpcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$714.RegQueryValueW$MH,"RegQueryValueW");
    }
    public static int RegQueryValueW ( Addressable hKey,  Addressable lpSubKey,  Addressable lpData,  Addressable lpcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.RegQueryValueW$MH, "RegQueryValueW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpData.address(), lpcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryMultipleValuesA$MH() {
        return RuntimeHelper.requireNonNull(constants$714.RegQueryMultipleValuesA$MH,"RegQueryMultipleValuesA");
    }
    public static int RegQueryMultipleValuesA ( Addressable hKey,  Addressable val_list,  int num_vals,  Addressable lpValueBuf,  Addressable ldwTotsize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.RegQueryMultipleValuesA$MH, "RegQueryMultipleValuesA");
        try {
            return (int)mh$.invokeExact(hKey.address(), val_list.address(), num_vals, lpValueBuf.address(), ldwTotsize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryMultipleValuesW$MH() {
        return RuntimeHelper.requireNonNull(constants$714.RegQueryMultipleValuesW$MH,"RegQueryMultipleValuesW");
    }
    public static int RegQueryMultipleValuesW ( Addressable hKey,  Addressable val_list,  int num_vals,  Addressable lpValueBuf,  Addressable ldwTotsize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$714.RegQueryMultipleValuesW$MH, "RegQueryMultipleValuesW");
        try {
            return (int)mh$.invokeExact(hKey.address(), val_list.address(), num_vals, lpValueBuf.address(), ldwTotsize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueExA$MH() {
        return RuntimeHelper.requireNonNull(constants$715.RegQueryValueExA$MH,"RegQueryValueExA");
    }
    public static int RegQueryValueExA ( Addressable hKey,  Addressable lpValueName,  Addressable lpReserved,  Addressable lpType,  Addressable lpData,  Addressable lpcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.RegQueryValueExA$MH, "RegQueryValueExA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpValueName.address(), lpReserved.address(), lpType.address(), lpData.address(), lpcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegQueryValueExW$MH() {
        return RuntimeHelper.requireNonNull(constants$715.RegQueryValueExW$MH,"RegQueryValueExW");
    }
    public static int RegQueryValueExW ( Addressable hKey,  Addressable lpValueName,  Addressable lpReserved,  Addressable lpType,  Addressable lpData,  Addressable lpcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.RegQueryValueExW$MH, "RegQueryValueExW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpValueName.address(), lpReserved.address(), lpType.address(), lpData.address(), lpcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegReplaceKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$715.RegReplaceKeyA$MH,"RegReplaceKeyA");
    }
    public static int RegReplaceKeyA ( Addressable hKey,  Addressable lpSubKey,  Addressable lpNewFile,  Addressable lpOldFile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.RegReplaceKeyA$MH, "RegReplaceKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpNewFile.address(), lpOldFile.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegReplaceKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$715.RegReplaceKeyW$MH,"RegReplaceKeyW");
    }
    public static int RegReplaceKeyW ( Addressable hKey,  Addressable lpSubKey,  Addressable lpNewFile,  Addressable lpOldFile) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.RegReplaceKeyW$MH, "RegReplaceKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpNewFile.address(), lpOldFile.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegRestoreKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$715.RegRestoreKeyA$MH,"RegRestoreKeyA");
    }
    public static int RegRestoreKeyA ( Addressable hKey,  Addressable lpFile,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.RegRestoreKeyA$MH, "RegRestoreKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpFile.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegRestoreKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$715.RegRestoreKeyW$MH,"RegRestoreKeyW");
    }
    public static int RegRestoreKeyW ( Addressable hKey,  Addressable lpFile,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$715.RegRestoreKeyW$MH, "RegRestoreKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpFile.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$716.RegSaveKeyA$MH,"RegSaveKeyA");
    }
    public static int RegSaveKeyA ( Addressable hKey,  Addressable lpFile,  Addressable lpSecurityAttributes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.RegSaveKeyA$MH, "RegSaveKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpFile.address(), lpSecurityAttributes.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$716.RegSaveKeyW$MH,"RegSaveKeyW");
    }
    public static int RegSaveKeyW ( Addressable hKey,  Addressable lpFile,  Addressable lpSecurityAttributes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.RegSaveKeyW$MH, "RegSaveKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpFile.address(), lpSecurityAttributes.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetKeySecurity$MH() {
        return RuntimeHelper.requireNonNull(constants$716.RegSetKeySecurity$MH,"RegSetKeySecurity");
    }
    public static int RegSetKeySecurity ( Addressable hKey,  int SecurityInformation,  Addressable pSecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.RegSetKeySecurity$MH, "RegSetKeySecurity");
        try {
            return (int)mh$.invokeExact(hKey.address(), SecurityInformation, pSecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$716.RegSetValueA$MH,"RegSetValueA");
    }
    public static int RegSetValueA ( Addressable hKey,  Addressable lpSubKey,  int dwType,  Addressable lpData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.RegSetValueA$MH, "RegSetValueA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), dwType, lpData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$716.RegSetValueW$MH,"RegSetValueW");
    }
    public static int RegSetValueW ( Addressable hKey,  Addressable lpSubKey,  int dwType,  Addressable lpData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.RegSetValueW$MH, "RegSetValueW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), dwType, lpData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueExA$MH() {
        return RuntimeHelper.requireNonNull(constants$716.RegSetValueExA$MH,"RegSetValueExA");
    }
    public static int RegSetValueExA ( Addressable hKey,  Addressable lpValueName,  int Reserved,  int dwType,  Addressable lpData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$716.RegSetValueExA$MH, "RegSetValueExA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpValueName.address(), Reserved, dwType, lpData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetValueExW$MH() {
        return RuntimeHelper.requireNonNull(constants$717.RegSetValueExW$MH,"RegSetValueExW");
    }
    public static int RegSetValueExW ( Addressable hKey,  Addressable lpValueName,  int Reserved,  int dwType,  Addressable lpData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.RegSetValueExW$MH, "RegSetValueExW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpValueName.address(), Reserved, dwType, lpData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegUnLoadKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$717.RegUnLoadKeyA$MH,"RegUnLoadKeyA");
    }
    public static int RegUnLoadKeyA ( Addressable hKey,  Addressable lpSubKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.RegUnLoadKeyA$MH, "RegUnLoadKeyA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegUnLoadKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$717.RegUnLoadKeyW$MH,"RegUnLoadKeyW");
    }
    public static int RegUnLoadKeyW ( Addressable hKey,  Addressable lpSubKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.RegUnLoadKeyW$MH, "RegUnLoadKeyW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegGetValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$717.RegGetValueA$MH,"RegGetValueA");
    }
    public static int RegGetValueA ( Addressable hkey,  Addressable lpSubKey,  Addressable lpValue,  int dwFlags,  Addressable pdwType,  Addressable pvData,  Addressable pcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.RegGetValueA$MH, "RegGetValueA");
        try {
            return (int)mh$.invokeExact(hkey.address(), lpSubKey.address(), lpValue.address(), dwFlags, pdwType.address(), pvData.address(), pcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegGetValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$717.RegGetValueW$MH,"RegGetValueW");
    }
    public static int RegGetValueW ( Addressable hkey,  Addressable lpSubKey,  Addressable lpValue,  int dwFlags,  Addressable pdwType,  Addressable pvData,  Addressable pcbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.RegGetValueW$MH, "RegGetValueW");
        try {
            return (int)mh$.invokeExact(hkey.address(), lpSubKey.address(), lpValue.address(), dwFlags, pdwType.address(), pvData.address(), pcbData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownA$MH() {
        return RuntimeHelper.requireNonNull(constants$717.InitiateSystemShutdownA$MH,"InitiateSystemShutdownA");
    }
    public static int InitiateSystemShutdownA ( Addressable lpMachineName,  Addressable lpMessage,  int dwTimeout,  int bForceAppsClosed,  int bRebootAfterShutdown) {
        var mh$ = RuntimeHelper.requireNonNull(constants$717.InitiateSystemShutdownA$MH, "InitiateSystemShutdownA");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), lpMessage.address(), dwTimeout, bForceAppsClosed, bRebootAfterShutdown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownW$MH() {
        return RuntimeHelper.requireNonNull(constants$718.InitiateSystemShutdownW$MH,"InitiateSystemShutdownW");
    }
    public static int InitiateSystemShutdownW ( Addressable lpMachineName,  Addressable lpMessage,  int dwTimeout,  int bForceAppsClosed,  int bRebootAfterShutdown) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.InitiateSystemShutdownW$MH, "InitiateSystemShutdownW");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), lpMessage.address(), dwTimeout, bForceAppsClosed, bRebootAfterShutdown);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortSystemShutdownA$MH() {
        return RuntimeHelper.requireNonNull(constants$718.AbortSystemShutdownA$MH,"AbortSystemShutdownA");
    }
    public static int AbortSystemShutdownA ( Addressable lpMachineName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.AbortSystemShutdownA$MH, "AbortSystemShutdownA");
        try {
            return (int)mh$.invokeExact(lpMachineName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle AbortSystemShutdownW$MH() {
        return RuntimeHelper.requireNonNull(constants$718.AbortSystemShutdownW$MH,"AbortSystemShutdownW");
    }
    public static int AbortSystemShutdownW ( Addressable lpMachineName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.AbortSystemShutdownW$MH, "AbortSystemShutdownW");
        try {
            return (int)mh$.invokeExact(lpMachineName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownExA$MH() {
        return RuntimeHelper.requireNonNull(constants$718.InitiateSystemShutdownExA$MH,"InitiateSystemShutdownExA");
    }
    public static int InitiateSystemShutdownExA ( Addressable lpMachineName,  Addressable lpMessage,  int dwTimeout,  int bForceAppsClosed,  int bRebootAfterShutdown,  int dwReason) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.InitiateSystemShutdownExA$MH, "InitiateSystemShutdownExA");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), lpMessage.address(), dwTimeout, bForceAppsClosed, bRebootAfterShutdown, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateSystemShutdownExW$MH() {
        return RuntimeHelper.requireNonNull(constants$718.InitiateSystemShutdownExW$MH,"InitiateSystemShutdownExW");
    }
    public static int InitiateSystemShutdownExW ( Addressable lpMachineName,  Addressable lpMessage,  int dwTimeout,  int bForceAppsClosed,  int bRebootAfterShutdown,  int dwReason) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.InitiateSystemShutdownExW$MH, "InitiateSystemShutdownExW");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), lpMessage.address(), dwTimeout, bForceAppsClosed, bRebootAfterShutdown, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyExA$MH() {
        return RuntimeHelper.requireNonNull(constants$718.RegSaveKeyExA$MH,"RegSaveKeyExA");
    }
    public static int RegSaveKeyExA ( Addressable hKey,  Addressable lpFile,  Addressable lpSecurityAttributes,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$718.RegSaveKeyExA$MH, "RegSaveKeyExA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpFile.address(), lpSecurityAttributes.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSaveKeyExW$MH() {
        return RuntimeHelper.requireNonNull(constants$719.RegSaveKeyExW$MH,"RegSaveKeyExW");
    }
    public static int RegSaveKeyExW ( Addressable hKey,  Addressable lpFile,  Addressable lpSecurityAttributes,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.RegSaveKeyExW$MH, "RegSaveKeyExW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpFile.address(), lpSecurityAttributes.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Wow64Win32ApiEntry$MH() {
        return RuntimeHelper.requireNonNull(constants$719.Wow64Win32ApiEntry$MH,"Wow64Win32ApiEntry");
    }
    public static int Wow64Win32ApiEntry ( int dwFuncNumber,  int dwFlag,  int dwRes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.Wow64Win32ApiEntry$MH, "Wow64Win32ApiEntry");
        try {
            return (int)mh$.invokeExact(dwFuncNumber, dwFlag, dwRes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCopyTreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$719.RegCopyTreeA$MH,"RegCopyTreeA");
    }
    public static int RegCopyTreeA ( Addressable hKeySrc,  Addressable lpSubKey,  Addressable hKeyDest) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.RegCopyTreeA$MH, "RegCopyTreeA");
        try {
            return (int)mh$.invokeExact(hKeySrc.address(), lpSubKey.address(), hKeyDest.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCopyTreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$719.RegCopyTreeW$MH,"RegCopyTreeW");
    }
    public static int RegCopyTreeW ( Addressable hKeySrc,  Addressable lpSubKey,  Addressable hKeyDest) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.RegCopyTreeW$MH, "RegCopyTreeW");
        try {
            return (int)mh$.invokeExact(hKeySrc.address(), lpSubKey.address(), hKeyDest.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyTransactedA$MH() {
        return RuntimeHelper.requireNonNull(constants$719.RegCreateKeyTransactedA$MH,"RegCreateKeyTransactedA");
    }
    public static int RegCreateKeyTransactedA ( Addressable hKey,  Addressable lpSubKey,  int Reserved,  Addressable lpClass,  int dwOptions,  int samDesired,  Addressable lpSecurityAttributes,  Addressable phkResult,  Addressable lpdwDisposition,  Addressable hTransaction,  Addressable pExtendedParemeter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.RegCreateKeyTransactedA$MH, "RegCreateKeyTransactedA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), Reserved, lpClass.address(), dwOptions, samDesired, lpSecurityAttributes.address(), phkResult.address(), lpdwDisposition.address(), hTransaction.address(), pExtendedParemeter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegCreateKeyTransactedW$MH() {
        return RuntimeHelper.requireNonNull(constants$719.RegCreateKeyTransactedW$MH,"RegCreateKeyTransactedW");
    }
    public static int RegCreateKeyTransactedW ( Addressable hKey,  Addressable lpSubKey,  int Reserved,  Addressable lpClass,  int dwOptions,  int samDesired,  Addressable lpSecurityAttributes,  Addressable phkResult,  Addressable lpdwDisposition,  Addressable hTransaction,  Addressable pExtendedParemeter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$719.RegCreateKeyTransactedW$MH, "RegCreateKeyTransactedW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), Reserved, lpClass.address(), dwOptions, samDesired, lpSecurityAttributes.address(), phkResult.address(), lpdwDisposition.address(), hTransaction.address(), pExtendedParemeter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyTransactedA$MH() {
        return RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyTransactedA$MH,"RegDeleteKeyTransactedA");
    }
    public static int RegDeleteKeyTransactedA ( Addressable hKey,  Addressable lpSubKey,  int samDesired,  int Reserved,  Addressable hTransaction,  Addressable pExtendedParameter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyTransactedA$MH, "RegDeleteKeyTransactedA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), samDesired, Reserved, hTransaction.address(), pExtendedParameter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyTransactedW$MH() {
        return RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyTransactedW$MH,"RegDeleteKeyTransactedW");
    }
    public static int RegDeleteKeyTransactedW ( Addressable hKey,  Addressable lpSubKey,  int samDesired,  int Reserved,  Addressable hTransaction,  Addressable pExtendedParameter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyTransactedW$MH, "RegDeleteKeyTransactedW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), samDesired, Reserved, hTransaction.address(), pExtendedParameter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyValueA$MH,"RegDeleteKeyValueA");
    }
    public static int RegDeleteKeyValueA ( Addressable hKey,  Addressable lpSubKey,  Addressable lpValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyValueA$MH, "RegDeleteKeyValueA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteKeyValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyValueW$MH,"RegDeleteKeyValueW");
    }
    public static int RegDeleteKeyValueW ( Addressable hKey,  Addressable lpSubKey,  Addressable lpValueName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.RegDeleteKeyValueW$MH, "RegDeleteKeyValueW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpValueName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteTreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$720.RegDeleteTreeA$MH,"RegDeleteTreeA");
    }
    public static int RegDeleteTreeA ( Addressable hKey,  Addressable lpSubKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.RegDeleteTreeA$MH, "RegDeleteTreeA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegDeleteTreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$720.RegDeleteTreeW$MH,"RegDeleteTreeW");
    }
    public static int RegDeleteTreeW ( Addressable hKey,  Addressable lpSubKey) {
        var mh$ = RuntimeHelper.requireNonNull(constants$720.RegDeleteTreeW$MH, "RegDeleteTreeW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadAppKeyA$MH() {
        return RuntimeHelper.requireNonNull(constants$721.RegLoadAppKeyA$MH,"RegLoadAppKeyA");
    }
    public static int RegLoadAppKeyA ( Addressable lpFile,  Addressable phkResult,  int samDesired,  int dwOptions,  int Reserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.RegLoadAppKeyA$MH, "RegLoadAppKeyA");
        try {
            return (int)mh$.invokeExact(lpFile.address(), phkResult.address(), samDesired, dwOptions, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadAppKeyW$MH() {
        return RuntimeHelper.requireNonNull(constants$721.RegLoadAppKeyW$MH,"RegLoadAppKeyW");
    }
    public static int RegLoadAppKeyW ( Addressable lpFile,  Addressable phkResult,  int samDesired,  int dwOptions,  int Reserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.RegLoadAppKeyW$MH, "RegLoadAppKeyW");
        try {
            return (int)mh$.invokeExact(lpFile.address(), phkResult.address(), samDesired, dwOptions, Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadMUIStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$721.RegLoadMUIStringA$MH,"RegLoadMUIStringA");
    }
    public static int RegLoadMUIStringA ( Addressable hKey,  Addressable pszValue,  Addressable pszOutBuf,  int cbOutBuf,  Addressable pcbData,  int Flags,  Addressable pszDirectory) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.RegLoadMUIStringA$MH, "RegLoadMUIStringA");
        try {
            return (int)mh$.invokeExact(hKey.address(), pszValue.address(), pszOutBuf.address(), cbOutBuf, pcbData.address(), Flags, pszDirectory.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegLoadMUIStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$721.RegLoadMUIStringW$MH,"RegLoadMUIStringW");
    }
    public static int RegLoadMUIStringW ( Addressable hKey,  Addressable pszValue,  Addressable pszOutBuf,  int cbOutBuf,  Addressable pcbData,  int Flags,  Addressable pszDirectory) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.RegLoadMUIStringW$MH, "RegLoadMUIStringW");
        try {
            return (int)mh$.invokeExact(hKey.address(), pszValue.address(), pszOutBuf.address(), cbOutBuf, pcbData.address(), Flags, pszDirectory.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyTransactedA$MH() {
        return RuntimeHelper.requireNonNull(constants$721.RegOpenKeyTransactedA$MH,"RegOpenKeyTransactedA");
    }
    public static int RegOpenKeyTransactedA ( Addressable hKey,  Addressable lpSubKey,  int ulOptions,  int samDesired,  Addressable phkResult,  Addressable hTransaction,  Addressable pExtendedParameter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.RegOpenKeyTransactedA$MH, "RegOpenKeyTransactedA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), ulOptions, samDesired, phkResult.address(), hTransaction.address(), pExtendedParameter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegOpenKeyTransactedW$MH() {
        return RuntimeHelper.requireNonNull(constants$721.RegOpenKeyTransactedW$MH,"RegOpenKeyTransactedW");
    }
    public static int RegOpenKeyTransactedW ( Addressable hKey,  Addressable lpSubKey,  int ulOptions,  int samDesired,  Addressable phkResult,  Addressable hTransaction,  Addressable pExtendedParameter) {
        var mh$ = RuntimeHelper.requireNonNull(constants$721.RegOpenKeyTransactedW$MH, "RegOpenKeyTransactedW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), ulOptions, samDesired, phkResult.address(), hTransaction.address(), pExtendedParameter.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegRenameKey$MH() {
        return RuntimeHelper.requireNonNull(constants$722.RegRenameKey$MH,"RegRenameKey");
    }
    public static int RegRenameKey ( Addressable hKey,  Addressable lpSubKeyName,  Addressable lpNewKeyName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.RegRenameKey$MH, "RegRenameKey");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKeyName.address(), lpNewKeyName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetKeyValueA$MH() {
        return RuntimeHelper.requireNonNull(constants$722.RegSetKeyValueA$MH,"RegSetKeyValueA");
    }
    public static int RegSetKeyValueA ( Addressable hKey,  Addressable lpSubKey,  Addressable lpValueName,  int dwType,  Addressable lpData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.RegSetKeyValueA$MH, "RegSetKeyValueA");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpValueName.address(), dwType, lpData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RegSetKeyValueW$MH() {
        return RuntimeHelper.requireNonNull(constants$722.RegSetKeyValueW$MH,"RegSetKeyValueW");
    }
    public static int RegSetKeyValueW ( Addressable hKey,  Addressable lpSubKey,  Addressable lpValueName,  int dwType,  Addressable lpData,  int cbData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.RegSetKeyValueW$MH, "RegSetKeyValueW");
        try {
            return (int)mh$.invokeExact(hKey.address(), lpSubKey.address(), lpValueName.address(), dwType, lpData.address(), cbData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateShutdownA$MH() {
        return RuntimeHelper.requireNonNull(constants$722.InitiateShutdownA$MH,"InitiateShutdownA");
    }
    public static int InitiateShutdownA ( Addressable lpMachineName,  Addressable lpMessage,  int dwGracePeriod,  int dwShutdownFlags,  int dwReason) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.InitiateShutdownA$MH, "InitiateShutdownA");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), lpMessage.address(), dwGracePeriod, dwShutdownFlags, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle InitiateShutdownW$MH() {
        return RuntimeHelper.requireNonNull(constants$722.InitiateShutdownW$MH,"InitiateShutdownW");
    }
    public static int InitiateShutdownW ( Addressable lpMachineName,  Addressable lpMessage,  int dwGracePeriod,  int dwShutdownFlags,  int dwReason) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.InitiateShutdownW$MH, "InitiateShutdownW");
        try {
            return (int)mh$.invokeExact(lpMachineName.address(), lpMessage.address(), dwGracePeriod, dwShutdownFlags, dwReason);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CheckForHiberboot$MH() {
        return RuntimeHelper.requireNonNull(constants$722.CheckForHiberboot$MH,"CheckForHiberboot");
    }
    public static int CheckForHiberboot ( Addressable pHiberboot,  byte bClearFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$722.CheckForHiberboot$MH, "CheckForHiberboot");
        try {
            return (int)mh$.invokeExact(pHiberboot.address(), bClearFlag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$723.WNetAddConnectionA$MH,"WNetAddConnectionA");
    }
    public static int WNetAddConnectionA ( Addressable lpRemoteName,  Addressable lpPassword,  Addressable lpLocalName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.WNetAddConnectionA$MH, "WNetAddConnectionA");
        try {
            return (int)mh$.invokeExact(lpRemoteName.address(), lpPassword.address(), lpLocalName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$723.WNetAddConnectionW$MH,"WNetAddConnectionW");
    }
    public static int WNetAddConnectionW ( Addressable lpRemoteName,  Addressable lpPassword,  Addressable lpLocalName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.WNetAddConnectionW$MH, "WNetAddConnectionW");
        try {
            return (int)mh$.invokeExact(lpRemoteName.address(), lpPassword.address(), lpLocalName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$723.WNetAddConnection2A$MH,"WNetAddConnection2A");
    }
    public static int WNetAddConnection2A ( Addressable lpNetResource,  Addressable lpPassword,  Addressable lpUserName,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.WNetAddConnection2A$MH, "WNetAddConnection2A");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpPassword.address(), lpUserName.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$723.WNetAddConnection2W$MH,"WNetAddConnection2W");
    }
    public static int WNetAddConnection2W ( Addressable lpNetResource,  Addressable lpPassword,  Addressable lpUserName,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.WNetAddConnection2W$MH, "WNetAddConnection2W");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpPassword.address(), lpUserName.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection3A$MH() {
        return RuntimeHelper.requireNonNull(constants$723.WNetAddConnection3A$MH,"WNetAddConnection3A");
    }
    public static int WNetAddConnection3A ( Addressable hwndOwner,  Addressable lpNetResource,  Addressable lpPassword,  Addressable lpUserName,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.WNetAddConnection3A$MH, "WNetAddConnection3A");
        try {
            return (int)mh$.invokeExact(hwndOwner.address(), lpNetResource.address(), lpPassword.address(), lpUserName.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetAddConnection3W$MH() {
        return RuntimeHelper.requireNonNull(constants$723.WNetAddConnection3W$MH,"WNetAddConnection3W");
    }
    public static int WNetAddConnection3W ( Addressable hwndOwner,  Addressable lpNetResource,  Addressable lpPassword,  Addressable lpUserName,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$723.WNetAddConnection3W$MH, "WNetAddConnection3W");
        try {
            return (int)mh$.invokeExact(hwndOwner.address(), lpNetResource.address(), lpPassword.address(), lpUserName.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$724.WNetCancelConnectionA$MH,"WNetCancelConnectionA");
    }
    public static int WNetCancelConnectionA ( Addressable lpName,  int fForce) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.WNetCancelConnectionA$MH, "WNetCancelConnectionA");
        try {
            return (int)mh$.invokeExact(lpName.address(), fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$724.WNetCancelConnectionW$MH,"WNetCancelConnectionW");
    }
    public static int WNetCancelConnectionW ( Addressable lpName,  int fForce) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.WNetCancelConnectionW$MH, "WNetCancelConnectionW");
        try {
            return (int)mh$.invokeExact(lpName.address(), fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnection2A$MH() {
        return RuntimeHelper.requireNonNull(constants$724.WNetCancelConnection2A$MH,"WNetCancelConnection2A");
    }
    public static int WNetCancelConnection2A ( Addressable lpName,  int dwFlags,  int fForce) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.WNetCancelConnection2A$MH, "WNetCancelConnection2A");
        try {
            return (int)mh$.invokeExact(lpName.address(), dwFlags, fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCancelConnection2W$MH() {
        return RuntimeHelper.requireNonNull(constants$724.WNetCancelConnection2W$MH,"WNetCancelConnection2W");
    }
    public static int WNetCancelConnection2W ( Addressable lpName,  int dwFlags,  int fForce) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.WNetCancelConnection2W$MH, "WNetCancelConnection2W");
        try {
            return (int)mh$.invokeExact(lpName.address(), dwFlags, fForce);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$724.WNetGetConnectionA$MH,"WNetGetConnectionA");
    }
    public static int WNetGetConnectionA ( Addressable lpLocalName,  Addressable lpRemoteName,  Addressable lpnLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.WNetGetConnectionA$MH, "WNetGetConnectionA");
        try {
            return (int)mh$.invokeExact(lpLocalName.address(), lpRemoteName.address(), lpnLength.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$724.WNetGetConnectionW$MH,"WNetGetConnectionW");
    }
    public static int WNetGetConnectionW ( Addressable lpLocalName,  Addressable lpRemoteName,  Addressable lpnLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$724.WNetGetConnectionW$MH, "WNetGetConnectionW");
        try {
            return (int)mh$.invokeExact(lpLocalName.address(), lpRemoteName.address(), lpnLength.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetRestoreConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$725.WNetRestoreConnectionA$MH,"WNetRestoreConnectionA");
    }
    public static int WNetRestoreConnectionA ( Addressable hwndParent,  Addressable lpDevice) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.WNetRestoreConnectionA$MH, "WNetRestoreConnectionA");
        try {
            return (int)mh$.invokeExact(hwndParent.address(), lpDevice.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetUseConnectionA$MH() {
        return RuntimeHelper.requireNonNull(constants$725.WNetUseConnectionA$MH,"WNetUseConnectionA");
    }
    public static int WNetUseConnectionA ( Addressable hwndOwner,  Addressable lpNetResource,  Addressable lpPassword,  Addressable lpUserID,  int dwFlags,  Addressable lpAccessName,  Addressable lpBufferSize,  Addressable lpResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.WNetUseConnectionA$MH, "WNetUseConnectionA");
        try {
            return (int)mh$.invokeExact(hwndOwner.address(), lpNetResource.address(), lpPassword.address(), lpUserID.address(), dwFlags, lpAccessName.address(), lpBufferSize.address(), lpResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetUseConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$725.WNetUseConnectionW$MH,"WNetUseConnectionW");
    }
    public static int WNetUseConnectionW ( Addressable hwndOwner,  Addressable lpNetResource,  Addressable lpPassword,  Addressable lpUserID,  int dwFlags,  Addressable lpAccessName,  Addressable lpBufferSize,  Addressable lpResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.WNetUseConnectionW$MH, "WNetUseConnectionW");
        try {
            return (int)mh$.invokeExact(hwndOwner.address(), lpNetResource.address(), lpPassword.address(), lpUserID.address(), dwFlags, lpAccessName.address(), lpBufferSize.address(), lpResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetConnectionDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$725.WNetConnectionDialog$MH,"WNetConnectionDialog");
    }
    public static int WNetConnectionDialog ( Addressable hwnd,  int dwType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.WNetConnectionDialog$MH, "WNetConnectionDialog");
        try {
            return (int)mh$.invokeExact(hwnd.address(), dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetDisconnectDialog$MH() {
        return RuntimeHelper.requireNonNull(constants$725.WNetDisconnectDialog$MH,"WNetDisconnectDialog");
    }
    public static int WNetDisconnectDialog ( Addressable hwnd,  int dwType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.WNetDisconnectDialog$MH, "WNetDisconnectDialog");
        try {
            return (int)mh$.invokeExact(hwnd.address(), dwType);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetRestoreSingleConnectionW$MH() {
        return RuntimeHelper.requireNonNull(constants$725.WNetRestoreSingleConnectionW$MH,"WNetRestoreSingleConnectionW");
    }
    public static int WNetRestoreSingleConnectionW ( Addressable hwndParent,  Addressable lpDevice,  int fUseUI) {
        var mh$ = RuntimeHelper.requireNonNull(constants$725.WNetRestoreSingleConnectionW$MH, "WNetRestoreSingleConnectionW");
        try {
            return (int)mh$.invokeExact(hwndParent.address(), lpDevice.address(), fUseUI);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetConnectionDialog1A$MH() {
        return RuntimeHelper.requireNonNull(constants$726.WNetConnectionDialog1A$MH,"WNetConnectionDialog1A");
    }
    public static int WNetConnectionDialog1A ( Addressable lpConnDlgStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.WNetConnectionDialog1A$MH, "WNetConnectionDialog1A");
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetConnectionDialog1W$MH() {
        return RuntimeHelper.requireNonNull(constants$726.WNetConnectionDialog1W$MH,"WNetConnectionDialog1W");
    }
    public static int WNetConnectionDialog1W ( Addressable lpConnDlgStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.WNetConnectionDialog1W$MH, "WNetConnectionDialog1W");
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetDisconnectDialog1A$MH() {
        return RuntimeHelper.requireNonNull(constants$726.WNetDisconnectDialog1A$MH,"WNetDisconnectDialog1A");
    }
    public static int WNetDisconnectDialog1A ( Addressable lpConnDlgStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.WNetDisconnectDialog1A$MH, "WNetDisconnectDialog1A");
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetDisconnectDialog1W$MH() {
        return RuntimeHelper.requireNonNull(constants$726.WNetDisconnectDialog1W$MH,"WNetDisconnectDialog1W");
    }
    public static int WNetDisconnectDialog1W ( Addressable lpConnDlgStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.WNetDisconnectDialog1W$MH, "WNetDisconnectDialog1W");
        try {
            return (int)mh$.invokeExact(lpConnDlgStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetOpenEnumA$MH() {
        return RuntimeHelper.requireNonNull(constants$726.WNetOpenEnumA$MH,"WNetOpenEnumA");
    }
    public static int WNetOpenEnumA ( int dwScope,  int dwType,  int dwUsage,  Addressable lpNetResource,  Addressable lphEnum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.WNetOpenEnumA$MH, "WNetOpenEnumA");
        try {
            return (int)mh$.invokeExact(dwScope, dwType, dwUsage, lpNetResource.address(), lphEnum.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetOpenEnumW$MH() {
        return RuntimeHelper.requireNonNull(constants$726.WNetOpenEnumW$MH,"WNetOpenEnumW");
    }
    public static int WNetOpenEnumW ( int dwScope,  int dwType,  int dwUsage,  Addressable lpNetResource,  Addressable lphEnum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$726.WNetOpenEnumW$MH, "WNetOpenEnumW");
        try {
            return (int)mh$.invokeExact(dwScope, dwType, dwUsage, lpNetResource.address(), lphEnum.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetEnumResourceA$MH() {
        return RuntimeHelper.requireNonNull(constants$727.WNetEnumResourceA$MH,"WNetEnumResourceA");
    }
    public static int WNetEnumResourceA ( Addressable hEnum,  Addressable lpcCount,  Addressable lpBuffer,  Addressable lpBufferSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.WNetEnumResourceA$MH, "WNetEnumResourceA");
        try {
            return (int)mh$.invokeExact(hEnum.address(), lpcCount.address(), lpBuffer.address(), lpBufferSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetEnumResourceW$MH() {
        return RuntimeHelper.requireNonNull(constants$727.WNetEnumResourceW$MH,"WNetEnumResourceW");
    }
    public static int WNetEnumResourceW ( Addressable hEnum,  Addressable lpcCount,  Addressable lpBuffer,  Addressable lpBufferSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.WNetEnumResourceW$MH, "WNetEnumResourceW");
        try {
            return (int)mh$.invokeExact(hEnum.address(), lpcCount.address(), lpBuffer.address(), lpBufferSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetCloseEnum$MH() {
        return RuntimeHelper.requireNonNull(constants$727.WNetCloseEnum$MH,"WNetCloseEnum");
    }
    public static int WNetCloseEnum ( Addressable hEnum) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.WNetCloseEnum$MH, "WNetCloseEnum");
        try {
            return (int)mh$.invokeExact(hEnum.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceParentA$MH() {
        return RuntimeHelper.requireNonNull(constants$727.WNetGetResourceParentA$MH,"WNetGetResourceParentA");
    }
    public static int WNetGetResourceParentA ( Addressable lpNetResource,  Addressable lpBuffer,  Addressable lpcbBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.WNetGetResourceParentA$MH, "WNetGetResourceParentA");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpBuffer.address(), lpcbBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceParentW$MH() {
        return RuntimeHelper.requireNonNull(constants$727.WNetGetResourceParentW$MH,"WNetGetResourceParentW");
    }
    public static int WNetGetResourceParentW ( Addressable lpNetResource,  Addressable lpBuffer,  Addressable lpcbBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.WNetGetResourceParentW$MH, "WNetGetResourceParentW");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpBuffer.address(), lpcbBuffer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceInformationA$MH() {
        return RuntimeHelper.requireNonNull(constants$727.WNetGetResourceInformationA$MH,"WNetGetResourceInformationA");
    }
    public static int WNetGetResourceInformationA ( Addressable lpNetResource,  Addressable lpBuffer,  Addressable lpcbBuffer,  Addressable lplpSystem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$727.WNetGetResourceInformationA$MH, "WNetGetResourceInformationA");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpBuffer.address(), lpcbBuffer.address(), lplpSystem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetResourceInformationW$MH() {
        return RuntimeHelper.requireNonNull(constants$728.WNetGetResourceInformationW$MH,"WNetGetResourceInformationW");
    }
    public static int WNetGetResourceInformationW ( Addressable lpNetResource,  Addressable lpBuffer,  Addressable lpcbBuffer,  Addressable lplpSystem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.WNetGetResourceInformationW$MH, "WNetGetResourceInformationW");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpBuffer.address(), lpcbBuffer.address(), lplpSystem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetUniversalNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$728.WNetGetUniversalNameA$MH,"WNetGetUniversalNameA");
    }
    public static int WNetGetUniversalNameA ( Addressable lpLocalPath,  int dwInfoLevel,  Addressable lpBuffer,  Addressable lpBufferSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.WNetGetUniversalNameA$MH, "WNetGetUniversalNameA");
        try {
            return (int)mh$.invokeExact(lpLocalPath.address(), dwInfoLevel, lpBuffer.address(), lpBufferSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetUniversalNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$728.WNetGetUniversalNameW$MH,"WNetGetUniversalNameW");
    }
    public static int WNetGetUniversalNameW ( Addressable lpLocalPath,  int dwInfoLevel,  Addressable lpBuffer,  Addressable lpBufferSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.WNetGetUniversalNameW$MH, "WNetGetUniversalNameW");
        try {
            return (int)mh$.invokeExact(lpLocalPath.address(), dwInfoLevel, lpBuffer.address(), lpBufferSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetUserA$MH() {
        return RuntimeHelper.requireNonNull(constants$728.WNetGetUserA$MH,"WNetGetUserA");
    }
    public static int WNetGetUserA ( Addressable lpName,  Addressable lpUserName,  Addressable lpnLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.WNetGetUserA$MH, "WNetGetUserA");
        try {
            return (int)mh$.invokeExact(lpName.address(), lpUserName.address(), lpnLength.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetUserW$MH() {
        return RuntimeHelper.requireNonNull(constants$728.WNetGetUserW$MH,"WNetGetUserW");
    }
    public static int WNetGetUserW ( Addressable lpName,  Addressable lpUserName,  Addressable lpnLength) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.WNetGetUserW$MH, "WNetGetUserW");
        try {
            return (int)mh$.invokeExact(lpName.address(), lpUserName.address(), lpnLength.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetProviderNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$728.WNetGetProviderNameA$MH,"WNetGetProviderNameA");
    }
    public static int WNetGetProviderNameA ( int dwNetType,  Addressable lpProviderName,  Addressable lpBufferSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$728.WNetGetProviderNameA$MH, "WNetGetProviderNameA");
        try {
            return (int)mh$.invokeExact(dwNetType, lpProviderName.address(), lpBufferSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetProviderNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$729.WNetGetProviderNameW$MH,"WNetGetProviderNameW");
    }
    public static int WNetGetProviderNameW ( int dwNetType,  Addressable lpProviderName,  Addressable lpBufferSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$729.WNetGetProviderNameW$MH, "WNetGetProviderNameW");
        try {
            return (int)mh$.invokeExact(dwNetType, lpProviderName.address(), lpBufferSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetNetworkInformationA$MH() {
        return RuntimeHelper.requireNonNull(constants$729.WNetGetNetworkInformationA$MH,"WNetGetNetworkInformationA");
    }
    public static int WNetGetNetworkInformationA ( Addressable lpProvider,  Addressable lpNetInfoStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$729.WNetGetNetworkInformationA$MH, "WNetGetNetworkInformationA");
        try {
            return (int)mh$.invokeExact(lpProvider.address(), lpNetInfoStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetNetworkInformationW$MH() {
        return RuntimeHelper.requireNonNull(constants$729.WNetGetNetworkInformationW$MH,"WNetGetNetworkInformationW");
    }
    public static int WNetGetNetworkInformationW ( Addressable lpProvider,  Addressable lpNetInfoStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$729.WNetGetNetworkInformationW$MH, "WNetGetNetworkInformationW");
        try {
            return (int)mh$.invokeExact(lpProvider.address(), lpNetInfoStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetLastErrorA$MH() {
        return RuntimeHelper.requireNonNull(constants$731.WNetGetLastErrorA$MH,"WNetGetLastErrorA");
    }
    public static int WNetGetLastErrorA ( Addressable lpError,  Addressable lpErrorBuf,  int nErrorBufSize,  Addressable lpNameBuf,  int nNameBufSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.WNetGetLastErrorA$MH, "WNetGetLastErrorA");
        try {
            return (int)mh$.invokeExact(lpError.address(), lpErrorBuf.address(), nErrorBufSize, lpNameBuf.address(), nNameBufSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle WNetGetLastErrorW$MH() {
        return RuntimeHelper.requireNonNull(constants$731.WNetGetLastErrorW$MH,"WNetGetLastErrorW");
    }
    public static int WNetGetLastErrorW ( Addressable lpError,  Addressable lpErrorBuf,  int nErrorBufSize,  Addressable lpNameBuf,  int nNameBufSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.WNetGetLastErrorW$MH, "WNetGetLastErrorW");
        try {
            return (int)mh$.invokeExact(lpError.address(), lpErrorBuf.address(), nErrorBufSize, lpNameBuf.address(), nNameBufSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MultinetGetConnectionPerformanceA$MH() {
        return RuntimeHelper.requireNonNull(constants$731.MultinetGetConnectionPerformanceA$MH,"MultinetGetConnectionPerformanceA");
    }
    public static int MultinetGetConnectionPerformanceA ( Addressable lpNetResource,  Addressable lpNetConnectInfoStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$731.MultinetGetConnectionPerformanceA$MH, "MultinetGetConnectionPerformanceA");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpNetConnectInfoStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MultinetGetConnectionPerformanceW$MH() {
        return RuntimeHelper.requireNonNull(constants$732.MultinetGetConnectionPerformanceW$MH,"MultinetGetConnectionPerformanceW");
    }
    public static int MultinetGetConnectionPerformanceW ( Addressable lpNetResource,  Addressable lpNetConnectInfoStruct) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.MultinetGetConnectionPerformanceW$MH, "MultinetGetConnectionPerformanceW");
        try {
            return (int)mh$.invokeExact(lpNetResource.address(), lpNetConnectInfoStruct.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ATTACH_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int ATTACH_VIRTUAL_DISK_FLAG_READ_ONLY() {
        return (int)1L;
    }
    public static int ATTACH_VIRTUAL_DISK_FLAG_NO_DRIVE_LETTER() {
        return (int)2L;
    }
    public static int ATTACH_VIRTUAL_DISK_FLAG_PERMANENT_LIFETIME() {
        return (int)4L;
    }
    public static int ATTACH_VIRTUAL_DISK_FLAG_NO_LOCAL_HOST() {
        return (int)8L;
    }
    public static int ATTACH_VIRTUAL_DISK_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int ATTACH_VIRTUAL_DISK_VERSION_1() {
        return (int)1L;
    }
    public static int COMPACT_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int COMPACT_VIRTUAL_DISK_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int COMPACT_VIRTUAL_DISK_VERSION_1() {
        return (int)1L;
    }
    public static int CREATE_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int CREATE_VIRTUAL_DISK_FLAG_FULL_PHYSICAL_ALLOCATION() {
        return (int)1L;
    }
    public static int CREATE_VIRTUAL_DISK_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int CREATE_VIRTUAL_DISK_VERSION_1() {
        return (int)1L;
    }
    public static int DEPENDENT_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int DEPENDENT_DISK_FLAG_MULT_BACKING_FILES() {
        return (int)1L;
    }
    public static int DEPENDENT_DISK_FLAG_FULLY_ALLOCATED() {
        return (int)2L;
    }
    public static int DEPENDENT_DISK_FLAG_READ_ONLY() {
        return (int)4L;
    }
    public static int DEPENDENT_DISK_FLAG_REMOTE() {
        return (int)8L;
    }
    public static int DEPENDENT_DISK_FLAG_SYSTEM_VOLUME() {
        return (int)16L;
    }
    public static int DEPENDENT_DISK_FLAG_SYSTEM_VOLUME_PARENT() {
        return (int)32L;
    }
    public static int DEPENDENT_DISK_FLAG_REMOVABLE() {
        return (int)64L;
    }
    public static int DEPENDENT_DISK_FLAG_NO_DRIVE_LETTER() {
        return (int)128L;
    }
    public static int DEPENDENT_DISK_FLAG_PARENT() {
        return (int)256L;
    }
    public static int DEPENDENT_DISK_FLAG_NO_HOST_DISK() {
        return (int)512L;
    }
    public static int DEPENDENT_DISK_FLAG_PERMANENT_LIFETIME() {
        return (int)1024L;
    }
    public static int EXPAND_VIRTUAL_DISK_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int EXPAND_VIRTUAL_DISK_VERSION_1() {
        return (int)1L;
    }
    public static int DETACH_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int EXPAND_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int GET_STORAGE_DEPENDENCY_FLAG_NONE() {
        return (int)0L;
    }
    public static int GET_STORAGE_DEPENDENCY_FLAG_HOST_VOLUMES() {
        return (int)1L;
    }
    public static int GET_STORAGE_DEPENDENCY_FLAG_DISK_HANDLE() {
        return (int)2L;
    }
    public static int GET_VIRTUAL_DISK_INFO_UNSPECIFIED() {
        return (int)0L;
    }
    public static int GET_VIRTUAL_DISK_INFO_SIZE() {
        return (int)1L;
    }
    public static int GET_VIRTUAL_DISK_INFO_IDENTIFIER() {
        return (int)2L;
    }
    public static int GET_VIRTUAL_DISK_INFO_PARENT_LOCATION() {
        return (int)3L;
    }
    public static int GET_VIRTUAL_DISK_INFO_PARENT_IDENTIFIER() {
        return (int)4L;
    }
    public static int GET_VIRTUAL_DISK_INFO_PARENT_TIMESTAMP() {
        return (int)5L;
    }
    public static int GET_VIRTUAL_DISK_INFO_VIRTUAL_STORAGE_TYPE() {
        return (int)6L;
    }
    public static int GET_VIRTUAL_DISK_INFO_PROVIDER_SUBTYPE() {
        return (int)7L;
    }
    public static int MIRROR_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int MIRROR_VIRTUAL_DISK_FLAG_EXISTING_FILE() {
        return (int)1L;
    }
    public static int MIRROR_VIRTUAL_DISK_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int MIRROR_VIRTUAL_DISK_VERSION_1() {
        return (int)1L;
    }
    public static int MERGE_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int MERGE_VIRTUAL_DISK_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int MERGE_VIRTUAL_DISK_VERSION_1() {
        return (int)1L;
    }
    public static int OPEN_VIRTUAL_DISK_FLAG_NONE() {
        return (int)0L;
    }
    public static int OPEN_VIRTUAL_DISK_FLAG_NO_PARENTS() {
        return (int)1L;
    }
    public static int OPEN_VIRTUAL_DISK_FLAG_BLANK_FILE() {
        return (int)2L;
    }
    public static int OPEN_VIRTUAL_DISK_FLAG_BOOT_DRIVE() {
        return (int)4L;
    }
    public static int OPEN_VIRTUAL_DISK_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int OPEN_VIRTUAL_DISK_VERSION_1() {
        return (int)1L;
    }
    public static int SET_VIRTUAL_DISK_INFO_UNSPECIFIED() {
        return (int)0L;
    }
    public static int SET_VIRTUAL_DISK_INFO_PARENT_PATH() {
        return (int)1L;
    }
    public static int SET_VIRTUAL_DISK_INFO_IDENTIFIER() {
        return (int)2L;
    }
    public static int STORAGE_DEPENDENCY_INFO_VERSION_UNSPECIFIED() {
        return (int)0L;
    }
    public static int STORAGE_DEPENDENCY_INFO_VERSION_1() {
        return (int)1L;
    }
    public static int STORAGE_DEPENDENCY_INFO_VERSION_2() {
        return (int)2L;
    }
    public static int VIRTUAL_DISK_ACCESS_NONE() {
        return (int)0L;
    }
    public static int VIRTUAL_DISK_ACCESS_ATTACH_RO() {
        return (int)65536L;
    }
    public static int VIRTUAL_DISK_ACCESS_ATTACH_RW() {
        return (int)131072L;
    }
    public static int VIRTUAL_DISK_ACCESS_DETACH() {
        return (int)262144L;
    }
    public static int VIRTUAL_DISK_ACCESS_GET_INFO() {
        return (int)524288L;
    }
    public static int VIRTUAL_DISK_ACCESS_CREATE() {
        return (int)1048576L;
    }
    public static int VIRTUAL_DISK_ACCESS_METAOPS() {
        return (int)2097152L;
    }
    public static int VIRTUAL_DISK_ACCESS_READ() {
        return (int)851968L;
    }
    public static int VIRTUAL_DISK_ACCESS_ALL() {
        return (int)4128768L;
    }
    public static int VIRTUAL_DISK_ACCESS_WRITABLE() {
        return (int)3276800L;
    }
    public static MemorySegment VIRTUAL_STORAGE_TYPE_VENDOR_UNKNOWN$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$732.VIRTUAL_STORAGE_TYPE_VENDOR_UNKNOWN$SEGMENT,"VIRTUAL_STORAGE_TYPE_VENDOR_UNKNOWN");
    }
    public static MemorySegment VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$732.VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT$SEGMENT,"VIRTUAL_STORAGE_TYPE_VENDOR_MICROSOFT");
    }
    public static MethodHandle AttachVirtualDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$732.AttachVirtualDisk$MH,"AttachVirtualDisk");
    }
    public static int AttachVirtualDisk ( Addressable VirtualDiskHandle,  Addressable SecurityDescriptor,  int Flags,  int ProviderSpecificFlags,  Addressable Parameters,  Addressable Overlapped) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.AttachVirtualDisk$MH, "AttachVirtualDisk");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), SecurityDescriptor.address(), Flags, ProviderSpecificFlags, Parameters.address(), Overlapped.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CompactVirtualDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$732.CompactVirtualDisk$MH,"CompactVirtualDisk");
    }
    public static int CompactVirtualDisk ( Addressable VirtualDiskHandle,  int Flags,  Addressable Parameters,  Addressable Overlapped) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.CompactVirtualDisk$MH, "CompactVirtualDisk");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), Flags, Parameters.address(), Overlapped.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CreateVirtualDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$732.CreateVirtualDisk$MH,"CreateVirtualDisk");
    }
    public static int CreateVirtualDisk ( Addressable VirtualStorageType,  Addressable Path,  int VirtualDiskAccessMask,  Addressable SecurityDescriptor,  int Flags,  int ProviderSpecificFlags,  Addressable Parameters,  Addressable Overlapped,  Addressable Handle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$732.CreateVirtualDisk$MH, "CreateVirtualDisk");
        try {
            return (int)mh$.invokeExact(VirtualStorageType.address(), Path.address(), VirtualDiskAccessMask, SecurityDescriptor.address(), Flags, ProviderSpecificFlags, Parameters.address(), Overlapped.address(), Handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DetachVirtualDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$733.DetachVirtualDisk$MH,"DetachVirtualDisk");
    }
    public static int DetachVirtualDisk ( Addressable VirtualDiskHandle,  int Flags,  int ProviderSpecificFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.DetachVirtualDisk$MH, "DetachVirtualDisk");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), Flags, ProviderSpecificFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExpandVirtualDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$733.ExpandVirtualDisk$MH,"ExpandVirtualDisk");
    }
    public static int ExpandVirtualDisk ( Addressable VirtualDiskHandle,  int Flags,  Addressable Parameters,  Addressable Overlapped) {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.ExpandVirtualDisk$MH, "ExpandVirtualDisk");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), Flags, Parameters.address(), Overlapped.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetStorageDependencyInformation$MH() {
        return RuntimeHelper.requireNonNull(constants$733.GetStorageDependencyInformation$MH,"GetStorageDependencyInformation");
    }
    public static int GetStorageDependencyInformation ( Addressable ObjectHandle,  int Flags,  int StorageDependencyInfoSize,  Addressable StorageDependencyInfo,  Addressable SizeUsed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.GetStorageDependencyInformation$MH, "GetStorageDependencyInformation");
        try {
            return (int)mh$.invokeExact(ObjectHandle.address(), Flags, StorageDependencyInfoSize, StorageDependencyInfo.address(), SizeUsed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetVirtualDiskInformation$MH() {
        return RuntimeHelper.requireNonNull(constants$733.GetVirtualDiskInformation$MH,"GetVirtualDiskInformation");
    }
    public static int GetVirtualDiskInformation ( Addressable VirtualDiskHandle,  Addressable VirtualDiskInfoSize,  Addressable VirtualDiskInfo,  Addressable SizeUsed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.GetVirtualDiskInformation$MH, "GetVirtualDiskInformation");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), VirtualDiskInfoSize.address(), VirtualDiskInfo.address(), SizeUsed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetVirtualDiskOperationProgress$MH() {
        return RuntimeHelper.requireNonNull(constants$733.GetVirtualDiskOperationProgress$MH,"GetVirtualDiskOperationProgress");
    }
    public static int GetVirtualDiskOperationProgress ( Addressable VirtualDiskHandle,  Addressable Overlapped,  Addressable Progress) {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.GetVirtualDiskOperationProgress$MH, "GetVirtualDiskOperationProgress");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), Overlapped.address(), Progress.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetVirtualDiskPhysicalPath$MH() {
        return RuntimeHelper.requireNonNull(constants$733.GetVirtualDiskPhysicalPath$MH,"GetVirtualDiskPhysicalPath");
    }
    public static int GetVirtualDiskPhysicalPath ( Addressable VirtualDiskHandle,  Addressable DiskPathSizeInBytes,  Addressable DiskPath) {
        var mh$ = RuntimeHelper.requireNonNull(constants$733.GetVirtualDiskPhysicalPath$MH, "GetVirtualDiskPhysicalPath");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), DiskPathSizeInBytes.address(), DiskPath.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle MergeVirtualDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$734.MergeVirtualDisk$MH,"MergeVirtualDisk");
    }
    public static int MergeVirtualDisk ( Addressable VirtualDiskHandle,  int Flags,  Addressable Parameters,  Addressable Overlapped) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.MergeVirtualDisk$MH, "MergeVirtualDisk");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), Flags, Parameters.address(), Overlapped.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenVirtualDisk$MH() {
        return RuntimeHelper.requireNonNull(constants$734.OpenVirtualDisk$MH,"OpenVirtualDisk");
    }
    public static int OpenVirtualDisk ( Addressable VirtualStorageType,  Addressable Path,  int VirtualDiskAccessMask,  int Flags,  Addressable Parameters,  Addressable Handle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.OpenVirtualDisk$MH, "OpenVirtualDisk");
        try {
            return (int)mh$.invokeExact(VirtualStorageType.address(), Path.address(), VirtualDiskAccessMask, Flags, Parameters.address(), Handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SetVirtualDiskInformation$MH() {
        return RuntimeHelper.requireNonNull(constants$734.SetVirtualDiskInformation$MH,"SetVirtualDiskInformation");
    }
    public static int SetVirtualDiskInformation ( Addressable VirtualDiskHandle,  Addressable VirtualDiskInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.SetVirtualDiskInformation$MH, "SetVirtualDiskInformation");
        try {
            return (int)mh$.invokeExact(VirtualDiskHandle.address(), VirtualDiskInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeSetQualityOfService$MH() {
        return RuntimeHelper.requireNonNull(constants$734.DdeSetQualityOfService$MH,"DdeSetQualityOfService");
    }
    public static int DdeSetQualityOfService ( Addressable hwndClient,  Addressable pqosNew,  Addressable pqosPrev) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.DdeSetQualityOfService$MH, "DdeSetQualityOfService");
        try {
            return (int)mh$.invokeExact(hwndClient.address(), pqosNew.address(), pqosPrev.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ImpersonateDdeClientWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$734.ImpersonateDdeClientWindow$MH,"ImpersonateDdeClientWindow");
    }
    public static int ImpersonateDdeClientWindow ( Addressable hWndClient,  Addressable hWndServer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.ImpersonateDdeClientWindow$MH, "ImpersonateDdeClientWindow");
        try {
            return (int)mh$.invokeExact(hWndClient.address(), hWndServer.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PackDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$734.PackDDElParam$MH,"PackDDElParam");
    }
    public static long PackDDElParam ( int msg,  long uiLo,  long uiHi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$734.PackDDElParam$MH, "PackDDElParam");
        try {
            return (long)mh$.invokeExact(msg, uiLo, uiHi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UnpackDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$735.UnpackDDElParam$MH,"UnpackDDElParam");
    }
    public static int UnpackDDElParam ( int msg,  long lParam,  Addressable puiLo,  Addressable puiHi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.UnpackDDElParam$MH, "UnpackDDElParam");
        try {
            return (int)mh$.invokeExact(msg, lParam, puiLo.address(), puiHi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FreeDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$735.FreeDDElParam$MH,"FreeDDElParam");
    }
    public static int FreeDDElParam ( int msg,  long lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.FreeDDElParam$MH, "FreeDDElParam");
        try {
            return (int)mh$.invokeExact(msg, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ReuseDDElParam$MH() {
        return RuntimeHelper.requireNonNull(constants$735.ReuseDDElParam$MH,"ReuseDDElParam");
    }
    public static long ReuseDDElParam ( long lParam,  int msgIn,  int msgOut,  long uiLo,  long uiHi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$735.ReuseDDElParam$MH, "ReuseDDElParam");
        try {
            return (long)mh$.invokeExact(lParam, msgIn, msgOut, uiLo, uiHi);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeInitializeA$MH() {
        return RuntimeHelper.requireNonNull(constants$736.DdeInitializeA$MH,"DdeInitializeA");
    }
    public static int DdeInitializeA ( Addressable pidInst,  Addressable pfnCallback,  int afCmd,  int ulRes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.DdeInitializeA$MH, "DdeInitializeA");
        try {
            return (int)mh$.invokeExact(pidInst.address(), pfnCallback.address(), afCmd, ulRes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeInitializeW$MH() {
        return RuntimeHelper.requireNonNull(constants$736.DdeInitializeW$MH,"DdeInitializeW");
    }
    public static int DdeInitializeW ( Addressable pidInst,  Addressable pfnCallback,  int afCmd,  int ulRes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.DdeInitializeW$MH, "DdeInitializeW");
        try {
            return (int)mh$.invokeExact(pidInst.address(), pfnCallback.address(), afCmd, ulRes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeUninitialize$MH() {
        return RuntimeHelper.requireNonNull(constants$736.DdeUninitialize$MH,"DdeUninitialize");
    }
    public static int DdeUninitialize ( int idInst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.DdeUninitialize$MH, "DdeUninitialize");
        try {
            return (int)mh$.invokeExact(idInst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeConnectList$MH() {
        return RuntimeHelper.requireNonNull(constants$736.DdeConnectList$MH,"DdeConnectList");
    }
    public static MemoryAddress DdeConnectList ( int idInst,  Addressable hszService,  Addressable hszTopic,  Addressable hConvList,  Addressable pCC) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.DdeConnectList$MH, "DdeConnectList");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idInst, hszService.address(), hszTopic.address(), hConvList.address(), pCC.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryNextServer$MH() {
        return RuntimeHelper.requireNonNull(constants$736.DdeQueryNextServer$MH,"DdeQueryNextServer");
    }
    public static MemoryAddress DdeQueryNextServer ( Addressable hConvList,  Addressable hConvPrev) {
        var mh$ = RuntimeHelper.requireNonNull(constants$736.DdeQueryNextServer$MH, "DdeQueryNextServer");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hConvList.address(), hConvPrev.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeDisconnectList$MH() {
        return RuntimeHelper.requireNonNull(constants$737.DdeDisconnectList$MH,"DdeDisconnectList");
    }
    public static int DdeDisconnectList ( Addressable hConvList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.DdeDisconnectList$MH, "DdeDisconnectList");
        try {
            return (int)mh$.invokeExact(hConvList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeConnect$MH() {
        return RuntimeHelper.requireNonNull(constants$737.DdeConnect$MH,"DdeConnect");
    }
    public static MemoryAddress DdeConnect ( int idInst,  Addressable hszService,  Addressable hszTopic,  Addressable pCC) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.DdeConnect$MH, "DdeConnect");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idInst, hszService.address(), hszTopic.address(), pCC.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$737.DdeDisconnect$MH,"DdeDisconnect");
    }
    public static int DdeDisconnect ( Addressable hConv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.DdeDisconnect$MH, "DdeDisconnect");
        try {
            return (int)mh$.invokeExact(hConv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeReconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$737.DdeReconnect$MH,"DdeReconnect");
    }
    public static MemoryAddress DdeReconnect ( Addressable hConv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.DdeReconnect$MH, "DdeReconnect");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hConv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryConvInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$737.DdeQueryConvInfo$MH,"DdeQueryConvInfo");
    }
    public static int DdeQueryConvInfo ( Addressable hConv,  int idTransaction,  Addressable pConvInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.DdeQueryConvInfo$MH, "DdeQueryConvInfo");
        try {
            return (int)mh$.invokeExact(hConv.address(), idTransaction, pConvInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeSetUserHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$737.DdeSetUserHandle$MH,"DdeSetUserHandle");
    }
    public static int DdeSetUserHandle ( Addressable hConv,  int id,  long hUser) {
        var mh$ = RuntimeHelper.requireNonNull(constants$737.DdeSetUserHandle$MH, "DdeSetUserHandle");
        try {
            return (int)mh$.invokeExact(hConv.address(), id, hUser);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeAbandonTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$738.DdeAbandonTransaction$MH,"DdeAbandonTransaction");
    }
    public static int DdeAbandonTransaction ( int idInst,  Addressable hConv,  int idTransaction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.DdeAbandonTransaction$MH, "DdeAbandonTransaction");
        try {
            return (int)mh$.invokeExact(idInst, hConv.address(), idTransaction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdePostAdvise$MH() {
        return RuntimeHelper.requireNonNull(constants$738.DdePostAdvise$MH,"DdePostAdvise");
    }
    public static int DdePostAdvise ( int idInst,  Addressable hszTopic,  Addressable hszItem) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.DdePostAdvise$MH, "DdePostAdvise");
        try {
            return (int)mh$.invokeExact(idInst, hszTopic.address(), hszItem.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeEnableCallback$MH() {
        return RuntimeHelper.requireNonNull(constants$738.DdeEnableCallback$MH,"DdeEnableCallback");
    }
    public static int DdeEnableCallback ( int idInst,  Addressable hConv,  int wCmd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.DdeEnableCallback$MH, "DdeEnableCallback");
        try {
            return (int)mh$.invokeExact(idInst, hConv.address(), wCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeImpersonateClient$MH() {
        return RuntimeHelper.requireNonNull(constants$738.DdeImpersonateClient$MH,"DdeImpersonateClient");
    }
    public static int DdeImpersonateClient ( Addressable hConv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.DdeImpersonateClient$MH, "DdeImpersonateClient");
        try {
            return (int)mh$.invokeExact(hConv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeNameService$MH() {
        return RuntimeHelper.requireNonNull(constants$738.DdeNameService$MH,"DdeNameService");
    }
    public static MemoryAddress DdeNameService ( int idInst,  Addressable hsz1,  Addressable hsz2,  int afCmd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.DdeNameService$MH, "DdeNameService");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idInst, hsz1.address(), hsz2.address(), afCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeClientTransaction$MH() {
        return RuntimeHelper.requireNonNull(constants$738.DdeClientTransaction$MH,"DdeClientTransaction");
    }
    public static MemoryAddress DdeClientTransaction ( Addressable pData,  int cbData,  Addressable hConv,  Addressable hszItem,  int wFmt,  int wType,  int dwTimeout,  Addressable pdwResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$738.DdeClientTransaction$MH, "DdeClientTransaction");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pData.address(), cbData, hConv.address(), hszItem.address(), wFmt, wType, dwTimeout, pdwResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateDataHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$739.DdeCreateDataHandle$MH,"DdeCreateDataHandle");
    }
    public static MemoryAddress DdeCreateDataHandle ( int idInst,  Addressable pSrc,  int cb,  int cbOff,  Addressable hszItem,  int wFmt,  int afCmd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739.DdeCreateDataHandle$MH, "DdeCreateDataHandle");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idInst, pSrc.address(), cb, cbOff, hszItem.address(), wFmt, afCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeAddData$MH() {
        return RuntimeHelper.requireNonNull(constants$739.DdeAddData$MH,"DdeAddData");
    }
    public static MemoryAddress DdeAddData ( Addressable hData,  Addressable pSrc,  int cb,  int cbOff) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739.DdeAddData$MH, "DdeAddData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hData.address(), pSrc.address(), cb, cbOff);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeGetData$MH() {
        return RuntimeHelper.requireNonNull(constants$739.DdeGetData$MH,"DdeGetData");
    }
    public static int DdeGetData ( Addressable hData,  Addressable pDst,  int cbMax,  int cbOff) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739.DdeGetData$MH, "DdeGetData");
        try {
            return (int)mh$.invokeExact(hData.address(), pDst.address(), cbMax, cbOff);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeAccessData$MH() {
        return RuntimeHelper.requireNonNull(constants$739.DdeAccessData$MH,"DdeAccessData");
    }
    public static MemoryAddress DdeAccessData ( Addressable hData,  Addressable pcbDataSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739.DdeAccessData$MH, "DdeAccessData");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hData.address(), pcbDataSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeUnaccessData$MH() {
        return RuntimeHelper.requireNonNull(constants$739.DdeUnaccessData$MH,"DdeUnaccessData");
    }
    public static int DdeUnaccessData ( Addressable hData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739.DdeUnaccessData$MH, "DdeUnaccessData");
        try {
            return (int)mh$.invokeExact(hData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeFreeDataHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$739.DdeFreeDataHandle$MH,"DdeFreeDataHandle");
    }
    public static int DdeFreeDataHandle ( Addressable hData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$739.DdeFreeDataHandle$MH, "DdeFreeDataHandle");
        try {
            return (int)mh$.invokeExact(hData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeGetLastError$MH() {
        return RuntimeHelper.requireNonNull(constants$740.DdeGetLastError$MH,"DdeGetLastError");
    }
    public static int DdeGetLastError ( int idInst) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740.DdeGetLastError$MH, "DdeGetLastError");
        try {
            return (int)mh$.invokeExact(idInst);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateStringHandleA$MH() {
        return RuntimeHelper.requireNonNull(constants$740.DdeCreateStringHandleA$MH,"DdeCreateStringHandleA");
    }
    public static MemoryAddress DdeCreateStringHandleA ( int idInst,  Addressable psz,  int iCodePage) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740.DdeCreateStringHandleA$MH, "DdeCreateStringHandleA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idInst, psz.address(), iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCreateStringHandleW$MH() {
        return RuntimeHelper.requireNonNull(constants$740.DdeCreateStringHandleW$MH,"DdeCreateStringHandleW");
    }
    public static MemoryAddress DdeCreateStringHandleW ( int idInst,  Addressable psz,  int iCodePage) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740.DdeCreateStringHandleW$MH, "DdeCreateStringHandleW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(idInst, psz.address(), iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$740.DdeQueryStringA$MH,"DdeQueryStringA");
    }
    public static int DdeQueryStringA ( int idInst,  Addressable hsz,  Addressable psz,  int cchMax,  int iCodePage) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740.DdeQueryStringA$MH, "DdeQueryStringA");
        try {
            return (int)mh$.invokeExact(idInst, hsz.address(), psz.address(), cchMax, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeQueryStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$740.DdeQueryStringW$MH,"DdeQueryStringW");
    }
    public static int DdeQueryStringW ( int idInst,  Addressable hsz,  Addressable psz,  int cchMax,  int iCodePage) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740.DdeQueryStringW$MH, "DdeQueryStringW");
        try {
            return (int)mh$.invokeExact(idInst, hsz.address(), psz.address(), cchMax, iCodePage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeFreeStringHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$740.DdeFreeStringHandle$MH,"DdeFreeStringHandle");
    }
    public static int DdeFreeStringHandle ( int idInst,  Addressable hsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$740.DdeFreeStringHandle$MH, "DdeFreeStringHandle");
        try {
            return (int)mh$.invokeExact(idInst, hsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeKeepStringHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$741.DdeKeepStringHandle$MH,"DdeKeepStringHandle");
    }
    public static int DdeKeepStringHandle ( int idInst,  Addressable hsz) {
        var mh$ = RuntimeHelper.requireNonNull(constants$741.DdeKeepStringHandle$MH, "DdeKeepStringHandle");
        try {
            return (int)mh$.invokeExact(idInst, hsz.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DdeCmpStringHandles$MH() {
        return RuntimeHelper.requireNonNull(constants$741.DdeCmpStringHandles$MH,"DdeCmpStringHandles");
    }
    public static int DdeCmpStringHandles ( Addressable hsz1,  Addressable hsz2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$741.DdeCmpStringHandles$MH, "DdeCmpStringHandles");
        try {
            return (int)mh$.invokeExact(hsz1.address(), hsz2.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZStart$MH() {
        return RuntimeHelper.requireNonNull(constants$741.LZStart$MH,"LZStart");
    }
    public static int LZStart () {
        var mh$ = RuntimeHelper.requireNonNull(constants$741.LZStart$MH, "LZStart");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZDone$MH() {
        return RuntimeHelper.requireNonNull(constants$741.LZDone$MH,"LZDone");
    }
    public static void LZDone () {
        var mh$ = RuntimeHelper.requireNonNull(constants$741.LZDone$MH, "LZDone");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CopyLZFile$MH() {
        return RuntimeHelper.requireNonNull(constants$741.CopyLZFile$MH,"CopyLZFile");
    }
    public static int CopyLZFile ( int x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$741.CopyLZFile$MH, "CopyLZFile");
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$741.LZCopy$MH,"LZCopy");
    }
    public static int LZCopy ( int x0,  int x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$741.LZCopy$MH, "LZCopy");
        try {
            return (int)mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZInit$MH() {
        return RuntimeHelper.requireNonNull(constants$742.LZInit$MH,"LZInit");
    }
    public static int LZInit ( int x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.LZInit$MH, "LZInit");
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetExpandedNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$742.GetExpandedNameA$MH,"GetExpandedNameA");
    }
    public static int GetExpandedNameA ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.GetExpandedNameA$MH, "GetExpandedNameA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetExpandedNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$742.GetExpandedNameW$MH,"GetExpandedNameW");
    }
    public static int GetExpandedNameW ( Addressable x0,  Addressable x1) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.GetExpandedNameW$MH, "GetExpandedNameW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZOpenFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$742.LZOpenFileA$MH,"LZOpenFileA");
    }
    public static int LZOpenFileA ( Addressable x0,  Addressable x1,  short x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.LZOpenFileA$MH, "LZOpenFileA");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZOpenFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$742.LZOpenFileW$MH,"LZOpenFileW");
    }
    public static int LZOpenFileW ( Addressable x0,  Addressable x1,  short x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.LZOpenFileW$MH, "LZOpenFileW");
        try {
            return (int)mh$.invokeExact(x0.address(), x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZSeek$MH() {
        return RuntimeHelper.requireNonNull(constants$742.LZSeek$MH,"LZSeek");
    }
    public static int LZSeek ( int x0,  int x1,  int x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$742.LZSeek$MH, "LZSeek");
        try {
            return (int)mh$.invokeExact(x0, x1, x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZRead$MH() {
        return RuntimeHelper.requireNonNull(constants$743.LZRead$MH,"LZRead");
    }
    public static int LZRead ( int x0,  Addressable x1,  int x2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743.LZRead$MH, "LZRead");
        try {
            return (int)mh$.invokeExact(x0, x1.address(), x2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle LZClose$MH() {
        return RuntimeHelper.requireNonNull(constants$743.LZClose$MH,"LZClose");
    }
    public static void LZClose ( int x0) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743.LZClose$MH, "LZClose");
        try {
            mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle CloseDriver$MH() {
        return RuntimeHelper.requireNonNull(constants$743.CloseDriver$MH,"CloseDriver");
    }
    public static long CloseDriver ( Addressable hDriver,  long lParam1,  long lParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743.CloseDriver$MH, "CloseDriver");
        try {
            return (long)mh$.invokeExact(hDriver.address(), lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle OpenDriver$MH() {
        return RuntimeHelper.requireNonNull(constants$743.OpenDriver$MH,"OpenDriver");
    }
    public static MemoryAddress OpenDriver ( Addressable szDriverName,  Addressable szSectionName,  long lParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$743.OpenDriver$MH, "OpenDriver");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(szDriverName.address(), szSectionName.address(), lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SendDriverMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$744.SendDriverMessage$MH,"SendDriverMessage");
    }
    public static long SendDriverMessage ( Addressable hDriver,  int message,  long lParam1,  long lParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744.SendDriverMessage$MH, "SendDriverMessage");
        try {
            return (long)mh$.invokeExact(hDriver.address(), message, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DrvGetModuleHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$744.DrvGetModuleHandle$MH,"DrvGetModuleHandle");
    }
    public static MemoryAddress DrvGetModuleHandle ( Addressable hDriver) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744.DrvGetModuleHandle$MH, "DrvGetModuleHandle");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hDriver.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle GetDriverModuleHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$744.GetDriverModuleHandle$MH,"GetDriverModuleHandle");
    }
    public static MemoryAddress GetDriverModuleHandle ( Addressable hDriver) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744.GetDriverModuleHandle$MH, "GetDriverModuleHandle");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hDriver.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DefDriverProc$MH() {
        return RuntimeHelper.requireNonNull(constants$744.DefDriverProc$MH,"DefDriverProc");
    }
    public static long DefDriverProc ( long dwDriverIdentifier,  Addressable hdrvr,  int uMsg,  long lParam1,  long lParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$744.DefDriverProc$MH, "DefDriverProc");
        try {
            return (long)mh$.invokeExact(dwDriverIdentifier, hdrvr.address(), uMsg, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndPlaySoundA$MH() {
        return RuntimeHelper.requireNonNull(constants$745.sndPlaySoundA$MH,"sndPlaySoundA");
    }
    public static int sndPlaySoundA ( Addressable pszSound,  int fuSound) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745.sndPlaySoundA$MH, "sndPlaySoundA");
        try {
            return (int)mh$.invokeExact(pszSound.address(), fuSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sndPlaySoundW$MH() {
        return RuntimeHelper.requireNonNull(constants$745.sndPlaySoundW$MH,"sndPlaySoundW");
    }
    public static int sndPlaySoundW ( Addressable pszSound,  int fuSound) {
        var mh$ = RuntimeHelper.requireNonNull(constants$745.sndPlaySoundW$MH, "sndPlaySoundW");
        try {
            return (int)mh$.invokeExact(pszSound.address(), fuSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlaySoundA$MH() {
        return RuntimeHelper.requireNonNull(constants$746.PlaySoundA$MH,"PlaySoundA");
    }
    public static int PlaySoundA ( Addressable pszSound,  Addressable hmod,  int fdwSound) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746.PlaySoundA$MH, "PlaySoundA");
        try {
            return (int)mh$.invokeExact(pszSound.address(), hmod.address(), fdwSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle PlaySoundW$MH() {
        return RuntimeHelper.requireNonNull(constants$746.PlaySoundW$MH,"PlaySoundW");
    }
    public static int PlaySoundW ( Addressable pszSound,  Addressable hmod,  int fdwSound) {
        var mh$ = RuntimeHelper.requireNonNull(constants$746.PlaySoundW$MH, "PlaySoundW");
        try {
            return (int)mh$.invokeExact(pszSound.address(), hmod.address(), fdwSound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$747.waveOutGetNumDevs$MH,"waveOutGetNumDevs");
    }
    public static int waveOutGetNumDevs () {
        var mh$ = RuntimeHelper.requireNonNull(constants$747.waveOutGetNumDevs$MH, "waveOutGetNumDevs");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$747.waveOutGetDevCapsA$MH,"waveOutGetDevCapsA");
    }
    public static int waveOutGetDevCapsA ( long uDeviceID,  Addressable pwoc,  int cbwoc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747.waveOutGetDevCapsA$MH, "waveOutGetDevCapsA");
        try {
            return (int)mh$.invokeExact(uDeviceID, pwoc.address(), cbwoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$747.waveOutGetDevCapsW$MH,"waveOutGetDevCapsW");
    }
    public static int waveOutGetDevCapsW ( long uDeviceID,  Addressable pwoc,  int cbwoc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747.waveOutGetDevCapsW$MH, "waveOutGetDevCapsW");
        try {
            return (int)mh$.invokeExact(uDeviceID, pwoc.address(), cbwoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$747.waveOutGetVolume$MH,"waveOutGetVolume");
    }
    public static int waveOutGetVolume ( Addressable hwo,  Addressable pdwVolume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747.waveOutGetVolume$MH, "waveOutGetVolume");
        try {
            return (int)mh$.invokeExact(hwo.address(), pdwVolume.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$747.waveOutSetVolume$MH,"waveOutSetVolume");
    }
    public static int waveOutSetVolume ( Addressable hwo,  int dwVolume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747.waveOutSetVolume$MH, "waveOutSetVolume");
        try {
            return (int)mh$.invokeExact(hwo.address(), dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$747.waveOutGetErrorTextA$MH,"waveOutGetErrorTextA");
    }
    public static int waveOutGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$747.waveOutGetErrorTextA$MH, "waveOutGetErrorTextA");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$748.waveOutGetErrorTextW$MH,"waveOutGetErrorTextW");
    }
    public static int waveOutGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748.waveOutGetErrorTextW$MH, "waveOutGetErrorTextW");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$748.waveOutOpen$MH,"waveOutOpen");
    }
    public static int waveOutOpen ( Addressable phwo,  int uDeviceID,  Addressable pwfx,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748.waveOutOpen$MH, "waveOutOpen");
        try {
            return (int)mh$.invokeExact(phwo.address(), uDeviceID, pwfx.address(), dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutClose$MH() {
        return RuntimeHelper.requireNonNull(constants$748.waveOutClose$MH,"waveOutClose");
    }
    public static int waveOutClose ( Addressable hwo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748.waveOutClose$MH, "waveOutClose");
        try {
            return (int)mh$.invokeExact(hwo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$748.waveOutPrepareHeader$MH,"waveOutPrepareHeader");
    }
    public static int waveOutPrepareHeader ( Addressable hwo,  Addressable pwh,  int cbwh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748.waveOutPrepareHeader$MH, "waveOutPrepareHeader");
        try {
            return (int)mh$.invokeExact(hwo.address(), pwh.address(), cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$748.waveOutUnprepareHeader$MH,"waveOutUnprepareHeader");
    }
    public static int waveOutUnprepareHeader ( Addressable hwo,  Addressable pwh,  int cbwh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748.waveOutUnprepareHeader$MH, "waveOutUnprepareHeader");
        try {
            return (int)mh$.invokeExact(hwo.address(), pwh.address(), cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$748.waveOutWrite$MH,"waveOutWrite");
    }
    public static int waveOutWrite ( Addressable hwo,  Addressable pwh,  int cbwh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$748.waveOutWrite$MH, "waveOutWrite");
        try {
            return (int)mh$.invokeExact(hwo.address(), pwh.address(), cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutPause$MH() {
        return RuntimeHelper.requireNonNull(constants$749.waveOutPause$MH,"waveOutPause");
    }
    public static int waveOutPause ( Addressable hwo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749.waveOutPause$MH, "waveOutPause");
        try {
            return (int)mh$.invokeExact(hwo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutRestart$MH() {
        return RuntimeHelper.requireNonNull(constants$749.waveOutRestart$MH,"waveOutRestart");
    }
    public static int waveOutRestart ( Addressable hwo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749.waveOutRestart$MH, "waveOutRestart");
        try {
            return (int)mh$.invokeExact(hwo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutReset$MH() {
        return RuntimeHelper.requireNonNull(constants$749.waveOutReset$MH,"waveOutReset");
    }
    public static int waveOutReset ( Addressable hwo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749.waveOutReset$MH, "waveOutReset");
        try {
            return (int)mh$.invokeExact(hwo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutBreakLoop$MH() {
        return RuntimeHelper.requireNonNull(constants$749.waveOutBreakLoop$MH,"waveOutBreakLoop");
    }
    public static int waveOutBreakLoop ( Addressable hwo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749.waveOutBreakLoop$MH, "waveOutBreakLoop");
        try {
            return (int)mh$.invokeExact(hwo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$749.waveOutGetPosition$MH,"waveOutGetPosition");
    }
    public static int waveOutGetPosition ( Addressable hwo,  Addressable pmmt,  int cbmmt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749.waveOutGetPosition$MH, "waveOutGetPosition");
        try {
            return (int)mh$.invokeExact(hwo.address(), pmmt.address(), cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPitch$MH() {
        return RuntimeHelper.requireNonNull(constants$749.waveOutGetPitch$MH,"waveOutGetPitch");
    }
    public static int waveOutGetPitch ( Addressable hwo,  Addressable pdwPitch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$749.waveOutGetPitch$MH, "waveOutGetPitch");
        try {
            return (int)mh$.invokeExact(hwo.address(), pdwPitch.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetPitch$MH() {
        return RuntimeHelper.requireNonNull(constants$750.waveOutSetPitch$MH,"waveOutSetPitch");
    }
    public static int waveOutSetPitch ( Addressable hwo,  int dwPitch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750.waveOutSetPitch$MH, "waveOutSetPitch");
        try {
            return (int)mh$.invokeExact(hwo.address(), dwPitch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetPlaybackRate$MH() {
        return RuntimeHelper.requireNonNull(constants$750.waveOutGetPlaybackRate$MH,"waveOutGetPlaybackRate");
    }
    public static int waveOutGetPlaybackRate ( Addressable hwo,  Addressable pdwRate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750.waveOutGetPlaybackRate$MH, "waveOutGetPlaybackRate");
        try {
            return (int)mh$.invokeExact(hwo.address(), pdwRate.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutSetPlaybackRate$MH() {
        return RuntimeHelper.requireNonNull(constants$750.waveOutSetPlaybackRate$MH,"waveOutSetPlaybackRate");
    }
    public static int waveOutSetPlaybackRate ( Addressable hwo,  int dwRate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750.waveOutSetPlaybackRate$MH, "waveOutSetPlaybackRate");
        try {
            return (int)mh$.invokeExact(hwo.address(), dwRate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$750.waveOutGetID$MH,"waveOutGetID");
    }
    public static int waveOutGetID ( Addressable hwo,  Addressable puDeviceID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750.waveOutGetID$MH, "waveOutGetID");
        try {
            return (int)mh$.invokeExact(hwo.address(), puDeviceID.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$750.waveOutMessage$MH,"waveOutMessage");
    }
    public static int waveOutMessage ( Addressable hwo,  int uMsg,  long dw1,  long dw2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$750.waveOutMessage$MH, "waveOutMessage");
        try {
            return (int)mh$.invokeExact(hwo.address(), uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$750.waveInGetNumDevs$MH,"waveInGetNumDevs");
    }
    public static int waveInGetNumDevs () {
        var mh$ = RuntimeHelper.requireNonNull(constants$750.waveInGetNumDevs$MH, "waveInGetNumDevs");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$751.waveInGetDevCapsA$MH,"waveInGetDevCapsA");
    }
    public static int waveInGetDevCapsA ( long uDeviceID,  Addressable pwic,  int cbwic) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751.waveInGetDevCapsA$MH, "waveInGetDevCapsA");
        try {
            return (int)mh$.invokeExact(uDeviceID, pwic.address(), cbwic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$751.waveInGetDevCapsW$MH,"waveInGetDevCapsW");
    }
    public static int waveInGetDevCapsW ( long uDeviceID,  Addressable pwic,  int cbwic) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751.waveInGetDevCapsW$MH, "waveInGetDevCapsW");
        try {
            return (int)mh$.invokeExact(uDeviceID, pwic.address(), cbwic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$751.waveInGetErrorTextA$MH,"waveInGetErrorTextA");
    }
    public static int waveInGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751.waveInGetErrorTextA$MH, "waveInGetErrorTextA");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$751.waveInGetErrorTextW$MH,"waveInGetErrorTextW");
    }
    public static int waveInGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751.waveInGetErrorTextW$MH, "waveInGetErrorTextW");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$751.waveInOpen$MH,"waveInOpen");
    }
    public static int waveInOpen ( Addressable phwi,  int uDeviceID,  Addressable pwfx,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751.waveInOpen$MH, "waveInOpen");
        try {
            return (int)mh$.invokeExact(phwi.address(), uDeviceID, pwfx.address(), dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInClose$MH() {
        return RuntimeHelper.requireNonNull(constants$751.waveInClose$MH,"waveInClose");
    }
    public static int waveInClose ( Addressable hwi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$751.waveInClose$MH, "waveInClose");
        try {
            return (int)mh$.invokeExact(hwi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$752.waveInPrepareHeader$MH,"waveInPrepareHeader");
    }
    public static int waveInPrepareHeader ( Addressable hwi,  Addressable pwh,  int cbwh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.waveInPrepareHeader$MH, "waveInPrepareHeader");
        try {
            return (int)mh$.invokeExact(hwi.address(), pwh.address(), cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$752.waveInUnprepareHeader$MH,"waveInUnprepareHeader");
    }
    public static int waveInUnprepareHeader ( Addressable hwi,  Addressable pwh,  int cbwh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.waveInUnprepareHeader$MH, "waveInUnprepareHeader");
        try {
            return (int)mh$.invokeExact(hwi.address(), pwh.address(), cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInAddBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$752.waveInAddBuffer$MH,"waveInAddBuffer");
    }
    public static int waveInAddBuffer ( Addressable hwi,  Addressable pwh,  int cbwh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.waveInAddBuffer$MH, "waveInAddBuffer");
        try {
            return (int)mh$.invokeExact(hwi.address(), pwh.address(), cbwh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInStart$MH() {
        return RuntimeHelper.requireNonNull(constants$752.waveInStart$MH,"waveInStart");
    }
    public static int waveInStart ( Addressable hwi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.waveInStart$MH, "waveInStart");
        try {
            return (int)mh$.invokeExact(hwi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInStop$MH() {
        return RuntimeHelper.requireNonNull(constants$752.waveInStop$MH,"waveInStop");
    }
    public static int waveInStop ( Addressable hwi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.waveInStop$MH, "waveInStop");
        try {
            return (int)mh$.invokeExact(hwi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInReset$MH() {
        return RuntimeHelper.requireNonNull(constants$752.waveInReset$MH,"waveInReset");
    }
    public static int waveInReset ( Addressable hwi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$752.waveInReset$MH, "waveInReset");
        try {
            return (int)mh$.invokeExact(hwi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$753.waveInGetPosition$MH,"waveInGetPosition");
    }
    public static int waveInGetPosition ( Addressable hwi,  Addressable pmmt,  int cbmmt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$753.waveInGetPosition$MH, "waveInGetPosition");
        try {
            return (int)mh$.invokeExact(hwi.address(), pmmt.address(), cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$753.waveInGetID$MH,"waveInGetID");
    }
    public static int waveInGetID ( Addressable hwi,  Addressable puDeviceID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$753.waveInGetID$MH, "waveInGetID");
        try {
            return (int)mh$.invokeExact(hwi.address(), puDeviceID.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle waveInMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$753.waveInMessage$MH,"waveInMessage");
    }
    public static int waveInMessage ( Addressable hwi,  int uMsg,  long dw1,  long dw2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$753.waveInMessage$MH, "waveInMessage");
        try {
            return (int)mh$.invokeExact(hwi.address(), uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$754.midiOutGetNumDevs$MH,"midiOutGetNumDevs");
    }
    public static int midiOutGetNumDevs () {
        var mh$ = RuntimeHelper.requireNonNull(constants$754.midiOutGetNumDevs$MH, "midiOutGetNumDevs");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$754.midiStreamOpen$MH,"midiStreamOpen");
    }
    public static int midiStreamOpen ( Addressable phms,  Addressable puDeviceID,  int cMidi,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$754.midiStreamOpen$MH, "midiStreamOpen");
        try {
            return (int)mh$.invokeExact(phms.address(), puDeviceID.address(), cMidi, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamClose$MH() {
        return RuntimeHelper.requireNonNull(constants$754.midiStreamClose$MH,"midiStreamClose");
    }
    public static int midiStreamClose ( Addressable hms) {
        var mh$ = RuntimeHelper.requireNonNull(constants$754.midiStreamClose$MH, "midiStreamClose");
        try {
            return (int)mh$.invokeExact(hms.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamProperty$MH() {
        return RuntimeHelper.requireNonNull(constants$754.midiStreamProperty$MH,"midiStreamProperty");
    }
    public static int midiStreamProperty ( Addressable hms,  Addressable lppropdata,  int dwProperty) {
        var mh$ = RuntimeHelper.requireNonNull(constants$754.midiStreamProperty$MH, "midiStreamProperty");
        try {
            return (int)mh$.invokeExact(hms.address(), lppropdata.address(), dwProperty);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamPosition$MH() {
        return RuntimeHelper.requireNonNull(constants$754.midiStreamPosition$MH,"midiStreamPosition");
    }
    public static int midiStreamPosition ( Addressable hms,  Addressable lpmmt,  int cbmmt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$754.midiStreamPosition$MH, "midiStreamPosition");
        try {
            return (int)mh$.invokeExact(hms.address(), lpmmt.address(), cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamOut$MH() {
        return RuntimeHelper.requireNonNull(constants$755.midiStreamOut$MH,"midiStreamOut");
    }
    public static int midiStreamOut ( Addressable hms,  Addressable pmh,  int cbmh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755.midiStreamOut$MH, "midiStreamOut");
        try {
            return (int)mh$.invokeExact(hms.address(), pmh.address(), cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamPause$MH() {
        return RuntimeHelper.requireNonNull(constants$755.midiStreamPause$MH,"midiStreamPause");
    }
    public static int midiStreamPause ( Addressable hms) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755.midiStreamPause$MH, "midiStreamPause");
        try {
            return (int)mh$.invokeExact(hms.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamRestart$MH() {
        return RuntimeHelper.requireNonNull(constants$755.midiStreamRestart$MH,"midiStreamRestart");
    }
    public static int midiStreamRestart ( Addressable hms) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755.midiStreamRestart$MH, "midiStreamRestart");
        try {
            return (int)mh$.invokeExact(hms.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiStreamStop$MH() {
        return RuntimeHelper.requireNonNull(constants$755.midiStreamStop$MH,"midiStreamStop");
    }
    public static int midiStreamStop ( Addressable hms) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755.midiStreamStop$MH, "midiStreamStop");
        try {
            return (int)mh$.invokeExact(hms.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiConnect$MH() {
        return RuntimeHelper.requireNonNull(constants$755.midiConnect$MH,"midiConnect");
    }
    public static int midiConnect ( Addressable hmi,  Addressable hmo,  Addressable pReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755.midiConnect$MH, "midiConnect");
        try {
            return (int)mh$.invokeExact(hmi.address(), hmo.address(), pReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiDisconnect$MH() {
        return RuntimeHelper.requireNonNull(constants$755.midiDisconnect$MH,"midiDisconnect");
    }
    public static int midiDisconnect ( Addressable hmi,  Addressable hmo,  Addressable pReserved) {
        var mh$ = RuntimeHelper.requireNonNull(constants$755.midiDisconnect$MH, "midiDisconnect");
        try {
            return (int)mh$.invokeExact(hmi.address(), hmo.address(), pReserved.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$756.midiOutGetDevCapsA$MH,"midiOutGetDevCapsA");
    }
    public static int midiOutGetDevCapsA ( long uDeviceID,  Addressable pmoc,  int cbmoc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.midiOutGetDevCapsA$MH, "midiOutGetDevCapsA");
        try {
            return (int)mh$.invokeExact(uDeviceID, pmoc.address(), cbmoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$756.midiOutGetDevCapsW$MH,"midiOutGetDevCapsW");
    }
    public static int midiOutGetDevCapsW ( long uDeviceID,  Addressable pmoc,  int cbmoc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.midiOutGetDevCapsW$MH, "midiOutGetDevCapsW");
        try {
            return (int)mh$.invokeExact(uDeviceID, pmoc.address(), cbmoc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$756.midiOutGetVolume$MH,"midiOutGetVolume");
    }
    public static int midiOutGetVolume ( Addressable hmo,  Addressable pdwVolume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.midiOutGetVolume$MH, "midiOutGetVolume");
        try {
            return (int)mh$.invokeExact(hmo.address(), pdwVolume.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$756.midiOutSetVolume$MH,"midiOutSetVolume");
    }
    public static int midiOutSetVolume ( Addressable hmo,  int dwVolume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.midiOutSetVolume$MH, "midiOutSetVolume");
        try {
            return (int)mh$.invokeExact(hmo.address(), dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$756.midiOutGetErrorTextA$MH,"midiOutGetErrorTextA");
    }
    public static int midiOutGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.midiOutGetErrorTextA$MH, "midiOutGetErrorTextA");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$756.midiOutGetErrorTextW$MH,"midiOutGetErrorTextW");
    }
    public static int midiOutGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$756.midiOutGetErrorTextW$MH, "midiOutGetErrorTextW");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$757.midiOutOpen$MH,"midiOutOpen");
    }
    public static int midiOutOpen ( Addressable phmo,  int uDeviceID,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.midiOutOpen$MH, "midiOutOpen");
        try {
            return (int)mh$.invokeExact(phmo.address(), uDeviceID, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutClose$MH() {
        return RuntimeHelper.requireNonNull(constants$757.midiOutClose$MH,"midiOutClose");
    }
    public static int midiOutClose ( Addressable hmo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.midiOutClose$MH, "midiOutClose");
        try {
            return (int)mh$.invokeExact(hmo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$757.midiOutPrepareHeader$MH,"midiOutPrepareHeader");
    }
    public static int midiOutPrepareHeader ( Addressable hmo,  Addressable pmh,  int cbmh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.midiOutPrepareHeader$MH, "midiOutPrepareHeader");
        try {
            return (int)mh$.invokeExact(hmo.address(), pmh.address(), cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$757.midiOutUnprepareHeader$MH,"midiOutUnprepareHeader");
    }
    public static int midiOutUnprepareHeader ( Addressable hmo,  Addressable pmh,  int cbmh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.midiOutUnprepareHeader$MH, "midiOutUnprepareHeader");
        try {
            return (int)mh$.invokeExact(hmo.address(), pmh.address(), cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutShortMsg$MH() {
        return RuntimeHelper.requireNonNull(constants$757.midiOutShortMsg$MH,"midiOutShortMsg");
    }
    public static int midiOutShortMsg ( Addressable hmo,  int dwMsg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.midiOutShortMsg$MH, "midiOutShortMsg");
        try {
            return (int)mh$.invokeExact(hmo.address(), dwMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutLongMsg$MH() {
        return RuntimeHelper.requireNonNull(constants$757.midiOutLongMsg$MH,"midiOutLongMsg");
    }
    public static int midiOutLongMsg ( Addressable hmo,  Addressable pmh,  int cbmh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$757.midiOutLongMsg$MH, "midiOutLongMsg");
        try {
            return (int)mh$.invokeExact(hmo.address(), pmh.address(), cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutReset$MH() {
        return RuntimeHelper.requireNonNull(constants$758.midiOutReset$MH,"midiOutReset");
    }
    public static int midiOutReset ( Addressable hmo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.midiOutReset$MH, "midiOutReset");
        try {
            return (int)mh$.invokeExact(hmo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutCachePatches$MH() {
        return RuntimeHelper.requireNonNull(constants$758.midiOutCachePatches$MH,"midiOutCachePatches");
    }
    public static int midiOutCachePatches ( Addressable hmo,  int uBank,  Addressable pwpa,  int fuCache) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.midiOutCachePatches$MH, "midiOutCachePatches");
        try {
            return (int)mh$.invokeExact(hmo.address(), uBank, pwpa.address(), fuCache);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutCacheDrumPatches$MH() {
        return RuntimeHelper.requireNonNull(constants$758.midiOutCacheDrumPatches$MH,"midiOutCacheDrumPatches");
    }
    public static int midiOutCacheDrumPatches ( Addressable hmo,  int uPatch,  Addressable pwkya,  int fuCache) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.midiOutCacheDrumPatches$MH, "midiOutCacheDrumPatches");
        try {
            return (int)mh$.invokeExact(hmo.address(), uPatch, pwkya.address(), fuCache);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$758.midiOutGetID$MH,"midiOutGetID");
    }
    public static int midiOutGetID ( Addressable hmo,  Addressable puDeviceID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.midiOutGetID$MH, "midiOutGetID");
        try {
            return (int)mh$.invokeExact(hmo.address(), puDeviceID.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$758.midiOutMessage$MH,"midiOutMessage");
    }
    public static int midiOutMessage ( Addressable hmo,  int uMsg,  long dw1,  long dw2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.midiOutMessage$MH, "midiOutMessage");
        try {
            return (int)mh$.invokeExact(hmo.address(), uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$758.midiInGetNumDevs$MH,"midiInGetNumDevs");
    }
    public static int midiInGetNumDevs () {
        var mh$ = RuntimeHelper.requireNonNull(constants$758.midiInGetNumDevs$MH, "midiInGetNumDevs");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$759.midiInGetDevCapsA$MH,"midiInGetDevCapsA");
    }
    public static int midiInGetDevCapsA ( long uDeviceID,  Addressable pmic,  int cbmic) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.midiInGetDevCapsA$MH, "midiInGetDevCapsA");
        try {
            return (int)mh$.invokeExact(uDeviceID, pmic.address(), cbmic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$759.midiInGetDevCapsW$MH,"midiInGetDevCapsW");
    }
    public static int midiInGetDevCapsW ( long uDeviceID,  Addressable pmic,  int cbmic) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.midiInGetDevCapsW$MH, "midiInGetDevCapsW");
        try {
            return (int)mh$.invokeExact(uDeviceID, pmic.address(), cbmic);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetErrorTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$759.midiInGetErrorTextA$MH,"midiInGetErrorTextA");
    }
    public static int midiInGetErrorTextA ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.midiInGetErrorTextA$MH, "midiInGetErrorTextA");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetErrorTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$759.midiInGetErrorTextW$MH,"midiInGetErrorTextW");
    }
    public static int midiInGetErrorTextW ( int mmrError,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.midiInGetErrorTextW$MH, "midiInGetErrorTextW");
        try {
            return (int)mh$.invokeExact(mmrError, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$759.midiInOpen$MH,"midiInOpen");
    }
    public static int midiInOpen ( Addressable phmi,  int uDeviceID,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.midiInOpen$MH, "midiInOpen");
        try {
            return (int)mh$.invokeExact(phmi.address(), uDeviceID, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInClose$MH() {
        return RuntimeHelper.requireNonNull(constants$759.midiInClose$MH,"midiInClose");
    }
    public static int midiInClose ( Addressable hmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$759.midiInClose$MH, "midiInClose");
        try {
            return (int)mh$.invokeExact(hmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInPrepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$760.midiInPrepareHeader$MH,"midiInPrepareHeader");
    }
    public static int midiInPrepareHeader ( Addressable hmi,  Addressable pmh,  int cbmh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.midiInPrepareHeader$MH, "midiInPrepareHeader");
        try {
            return (int)mh$.invokeExact(hmi.address(), pmh.address(), cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInUnprepareHeader$MH() {
        return RuntimeHelper.requireNonNull(constants$760.midiInUnprepareHeader$MH,"midiInUnprepareHeader");
    }
    public static int midiInUnprepareHeader ( Addressable hmi,  Addressable pmh,  int cbmh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.midiInUnprepareHeader$MH, "midiInUnprepareHeader");
        try {
            return (int)mh$.invokeExact(hmi.address(), pmh.address(), cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInAddBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$760.midiInAddBuffer$MH,"midiInAddBuffer");
    }
    public static int midiInAddBuffer ( Addressable hmi,  Addressable pmh,  int cbmh) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.midiInAddBuffer$MH, "midiInAddBuffer");
        try {
            return (int)mh$.invokeExact(hmi.address(), pmh.address(), cbmh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInStart$MH() {
        return RuntimeHelper.requireNonNull(constants$760.midiInStart$MH,"midiInStart");
    }
    public static int midiInStart ( Addressable hmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.midiInStart$MH, "midiInStart");
        try {
            return (int)mh$.invokeExact(hmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInStop$MH() {
        return RuntimeHelper.requireNonNull(constants$760.midiInStop$MH,"midiInStop");
    }
    public static int midiInStop ( Addressable hmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.midiInStop$MH, "midiInStop");
        try {
            return (int)mh$.invokeExact(hmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInReset$MH() {
        return RuntimeHelper.requireNonNull(constants$760.midiInReset$MH,"midiInReset");
    }
    public static int midiInReset ( Addressable hmi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$760.midiInReset$MH, "midiInReset");
        try {
            return (int)mh$.invokeExact(hmi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$761.midiInGetID$MH,"midiInGetID");
    }
    public static int midiInGetID ( Addressable hmi,  Addressable puDeviceID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761.midiInGetID$MH, "midiInGetID");
        try {
            return (int)mh$.invokeExact(hmi.address(), puDeviceID.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle midiInMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$761.midiInMessage$MH,"midiInMessage");
    }
    public static int midiInMessage ( Addressable hmi,  int uMsg,  long dw1,  long dw2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761.midiInMessage$MH, "midiInMessage");
        try {
            return (int)mh$.invokeExact(hmi.address(), uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$761.auxGetNumDevs$MH,"auxGetNumDevs");
    }
    public static int auxGetNumDevs () {
        var mh$ = RuntimeHelper.requireNonNull(constants$761.auxGetNumDevs$MH, "auxGetNumDevs");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$761.auxGetDevCapsA$MH,"auxGetDevCapsA");
    }
    public static int auxGetDevCapsA ( long uDeviceID,  Addressable pac,  int cbac) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761.auxGetDevCapsA$MH, "auxGetDevCapsA");
        try {
            return (int)mh$.invokeExact(uDeviceID, pac.address(), cbac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$761.auxGetDevCapsW$MH,"auxGetDevCapsW");
    }
    public static int auxGetDevCapsW ( long uDeviceID,  Addressable pac,  int cbac) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761.auxGetDevCapsW$MH, "auxGetDevCapsW");
        try {
            return (int)mh$.invokeExact(uDeviceID, pac.address(), cbac);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxSetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$761.auxSetVolume$MH,"auxSetVolume");
    }
    public static int auxSetVolume ( int uDeviceID,  int dwVolume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$761.auxSetVolume$MH, "auxSetVolume");
        try {
            return (int)mh$.invokeExact(uDeviceID, dwVolume);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxGetVolume$MH() {
        return RuntimeHelper.requireNonNull(constants$762.auxGetVolume$MH,"auxGetVolume");
    }
    public static int auxGetVolume ( int uDeviceID,  Addressable pdwVolume) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762.auxGetVolume$MH, "auxGetVolume");
        try {
            return (int)mh$.invokeExact(uDeviceID, pdwVolume.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle auxOutMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$762.auxOutMessage$MH,"auxOutMessage");
    }
    public static int auxOutMessage ( int uDeviceID,  int uMsg,  long dw1,  long dw2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762.auxOutMessage$MH, "auxOutMessage");
        try {
            return (int)mh$.invokeExact(uDeviceID, uMsg, dw1, dw2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$762.mixerGetNumDevs$MH,"mixerGetNumDevs");
    }
    public static int mixerGetNumDevs () {
        var mh$ = RuntimeHelper.requireNonNull(constants$762.mixerGetNumDevs$MH, "mixerGetNumDevs");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$762.mixerGetDevCapsA$MH,"mixerGetDevCapsA");
    }
    public static int mixerGetDevCapsA ( long uMxId,  Addressable pmxcaps,  int cbmxcaps) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762.mixerGetDevCapsA$MH, "mixerGetDevCapsA");
        try {
            return (int)mh$.invokeExact(uMxId, pmxcaps.address(), cbmxcaps);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$762.mixerGetDevCapsW$MH,"mixerGetDevCapsW");
    }
    public static int mixerGetDevCapsW ( long uMxId,  Addressable pmxcaps,  int cbmxcaps) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762.mixerGetDevCapsW$MH, "mixerGetDevCapsW");
        try {
            return (int)mh$.invokeExact(uMxId, pmxcaps.address(), cbmxcaps);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerOpen$MH() {
        return RuntimeHelper.requireNonNull(constants$762.mixerOpen$MH,"mixerOpen");
    }
    public static int mixerOpen ( Addressable phmx,  int uMxId,  long dwCallback,  long dwInstance,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$762.mixerOpen$MH, "mixerOpen");
        try {
            return (int)mh$.invokeExact(phmx.address(), uMxId, dwCallback, dwInstance, fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerClose$MH() {
        return RuntimeHelper.requireNonNull(constants$763.mixerClose$MH,"mixerClose");
    }
    public static int mixerClose ( Addressable hmx) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.mixerClose$MH, "mixerClose");
        try {
            return (int)mh$.invokeExact(hmx.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$763.mixerMessage$MH,"mixerMessage");
    }
    public static int mixerMessage ( Addressable hmx,  int uMsg,  long dwParam1,  long dwParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.mixerMessage$MH, "mixerMessage");
        try {
            return (int)mh$.invokeExact(hmx.address(), uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$763.mixerGetLineInfoA$MH,"mixerGetLineInfoA");
    }
    public static int mixerGetLineInfoA ( Addressable hmxobj,  Addressable pmxl,  int fdwInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.mixerGetLineInfoA$MH, "mixerGetLineInfoA");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), pmxl.address(), fdwInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$763.mixerGetLineInfoW$MH,"mixerGetLineInfoW");
    }
    public static int mixerGetLineInfoW ( Addressable hmxobj,  Addressable pmxl,  int fdwInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.mixerGetLineInfoW$MH, "mixerGetLineInfoW");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), pmxl.address(), fdwInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetID$MH() {
        return RuntimeHelper.requireNonNull(constants$763.mixerGetID$MH,"mixerGetID");
    }
    public static int mixerGetID ( Addressable hmxobj,  Addressable puMxId,  int fdwId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.mixerGetID$MH, "mixerGetID");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), puMxId.address(), fdwId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineControlsA$MH() {
        return RuntimeHelper.requireNonNull(constants$763.mixerGetLineControlsA$MH,"mixerGetLineControlsA");
    }
    public static int mixerGetLineControlsA ( Addressable hmxobj,  Addressable pmxlc,  int fdwControls) {
        var mh$ = RuntimeHelper.requireNonNull(constants$763.mixerGetLineControlsA$MH, "mixerGetLineControlsA");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), pmxlc.address(), fdwControls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetLineControlsW$MH() {
        return RuntimeHelper.requireNonNull(constants$764.mixerGetLineControlsW$MH,"mixerGetLineControlsW");
    }
    public static int mixerGetLineControlsW ( Addressable hmxobj,  Addressable pmxlc,  int fdwControls) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764.mixerGetLineControlsW$MH, "mixerGetLineControlsW");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), pmxlc.address(), fdwControls);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetControlDetailsA$MH() {
        return RuntimeHelper.requireNonNull(constants$764.mixerGetControlDetailsA$MH,"mixerGetControlDetailsA");
    }
    public static int mixerGetControlDetailsA ( Addressable hmxobj,  Addressable pmxcd,  int fdwDetails) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764.mixerGetControlDetailsA$MH, "mixerGetControlDetailsA");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), pmxcd.address(), fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerGetControlDetailsW$MH() {
        return RuntimeHelper.requireNonNull(constants$764.mixerGetControlDetailsW$MH,"mixerGetControlDetailsW");
    }
    public static int mixerGetControlDetailsW ( Addressable hmxobj,  Addressable pmxcd,  int fdwDetails) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764.mixerGetControlDetailsW$MH, "mixerGetControlDetailsW");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), pmxcd.address(), fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mixerSetControlDetails$MH() {
        return RuntimeHelper.requireNonNull(constants$764.mixerSetControlDetails$MH,"mixerSetControlDetails");
    }
    public static int mixerSetControlDetails ( Addressable hmxobj,  Addressable pmxcd,  int fdwDetails) {
        var mh$ = RuntimeHelper.requireNonNull(constants$764.mixerSetControlDetails$MH, "mixerSetControlDetails");
        try {
            return (int)mh$.invokeExact(hmxobj.address(), pmxcd.address(), fdwDetails);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeGetSystemTime$MH() {
        return RuntimeHelper.requireNonNull(constants$765.timeGetSystemTime$MH,"timeGetSystemTime");
    }
    public static int timeGetSystemTime ( Addressable pmmt,  int cbmmt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765.timeGetSystemTime$MH, "timeGetSystemTime");
        try {
            return (int)mh$.invokeExact(pmmt.address(), cbmmt);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeGetTime$MH() {
        return RuntimeHelper.requireNonNull(constants$765.timeGetTime$MH,"timeGetTime");
    }
    public static int timeGetTime () {
        var mh$ = RuntimeHelper.requireNonNull(constants$765.timeGetTime$MH, "timeGetTime");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeSetEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$765.timeSetEvent$MH,"timeSetEvent");
    }
    public static int timeSetEvent ( int uDelay,  int uResolution,  Addressable fptc,  long dwUser,  int fuEvent) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765.timeSetEvent$MH, "timeSetEvent");
        try {
            return (int)mh$.invokeExact(uDelay, uResolution, fptc.address(), dwUser, fuEvent);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeKillEvent$MH() {
        return RuntimeHelper.requireNonNull(constants$765.timeKillEvent$MH,"timeKillEvent");
    }
    public static int timeKillEvent ( int uTimerID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$765.timeKillEvent$MH, "timeKillEvent");
        try {
            return (int)mh$.invokeExact(uTimerID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeGetDevCaps$MH() {
        return RuntimeHelper.requireNonNull(constants$766.timeGetDevCaps$MH,"timeGetDevCaps");
    }
    public static int timeGetDevCaps ( Addressable ptc,  int cbtc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766.timeGetDevCaps$MH, "timeGetDevCaps");
        try {
            return (int)mh$.invokeExact(ptc.address(), cbtc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeBeginPeriod$MH() {
        return RuntimeHelper.requireNonNull(constants$766.timeBeginPeriod$MH,"timeBeginPeriod");
    }
    public static int timeBeginPeriod ( int uPeriod) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766.timeBeginPeriod$MH, "timeBeginPeriod");
        try {
            return (int)mh$.invokeExact(uPeriod);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle timeEndPeriod$MH() {
        return RuntimeHelper.requireNonNull(constants$766.timeEndPeriod$MH,"timeEndPeriod");
    }
    public static int timeEndPeriod ( int uPeriod) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766.timeEndPeriod$MH, "timeEndPeriod");
        try {
            return (int)mh$.invokeExact(uPeriod);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetNumDevs$MH() {
        return RuntimeHelper.requireNonNull(constants$766.joyGetNumDevs$MH,"joyGetNumDevs");
    }
    public static int joyGetNumDevs () {
        var mh$ = RuntimeHelper.requireNonNull(constants$766.joyGetNumDevs$MH, "joyGetNumDevs");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetDevCapsA$MH() {
        return RuntimeHelper.requireNonNull(constants$766.joyGetDevCapsA$MH,"joyGetDevCapsA");
    }
    public static int joyGetDevCapsA ( long uJoyID,  Addressable pjc,  int cbjc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766.joyGetDevCapsA$MH, "joyGetDevCapsA");
        try {
            return (int)mh$.invokeExact(uJoyID, pjc.address(), cbjc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetDevCapsW$MH() {
        return RuntimeHelper.requireNonNull(constants$766.joyGetDevCapsW$MH,"joyGetDevCapsW");
    }
    public static int joyGetDevCapsW ( long uJoyID,  Addressable pjc,  int cbjc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$766.joyGetDevCapsW$MH, "joyGetDevCapsW");
        try {
            return (int)mh$.invokeExact(uJoyID, pjc.address(), cbjc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetPos$MH() {
        return RuntimeHelper.requireNonNull(constants$767.joyGetPos$MH,"joyGetPos");
    }
    public static int joyGetPos ( int uJoyID,  Addressable pji) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767.joyGetPos$MH, "joyGetPos");
        try {
            return (int)mh$.invokeExact(uJoyID, pji.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetPosEx$MH() {
        return RuntimeHelper.requireNonNull(constants$767.joyGetPosEx$MH,"joyGetPosEx");
    }
    public static int joyGetPosEx ( int uJoyID,  Addressable pji) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767.joyGetPosEx$MH, "joyGetPosEx");
        try {
            return (int)mh$.invokeExact(uJoyID, pji.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyGetThreshold$MH() {
        return RuntimeHelper.requireNonNull(constants$767.joyGetThreshold$MH,"joyGetThreshold");
    }
    public static int joyGetThreshold ( int uJoyID,  Addressable puThreshold) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767.joyGetThreshold$MH, "joyGetThreshold");
        try {
            return (int)mh$.invokeExact(uJoyID, puThreshold.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joyReleaseCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$767.joyReleaseCapture$MH,"joyReleaseCapture");
    }
    public static int joyReleaseCapture ( int uJoyID) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767.joyReleaseCapture$MH, "joyReleaseCapture");
        try {
            return (int)mh$.invokeExact(uJoyID);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joySetCapture$MH() {
        return RuntimeHelper.requireNonNull(constants$767.joySetCapture$MH,"joySetCapture");
    }
    public static int joySetCapture ( Addressable hwnd,  int uJoyID,  int uPeriod,  int fChanged) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767.joySetCapture$MH, "joySetCapture");
        try {
            return (int)mh$.invokeExact(hwnd.address(), uJoyID, uPeriod, fChanged);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle joySetThreshold$MH() {
        return RuntimeHelper.requireNonNull(constants$767.joySetThreshold$MH,"joySetThreshold");
    }
    public static int joySetThreshold ( int uJoyID,  int uThreshold) {
        var mh$ = RuntimeHelper.requireNonNull(constants$767.joySetThreshold$MH, "joySetThreshold");
        try {
            return (int)mh$.invokeExact(uJoyID, uThreshold);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioStringToFOURCCA$MH() {
        return RuntimeHelper.requireNonNull(constants$768.mmioStringToFOURCCA$MH,"mmioStringToFOURCCA");
    }
    public static int mmioStringToFOURCCA ( Addressable sz,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768.mmioStringToFOURCCA$MH, "mmioStringToFOURCCA");
        try {
            return (int)mh$.invokeExact(sz.address(), uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioStringToFOURCCW$MH() {
        return RuntimeHelper.requireNonNull(constants$768.mmioStringToFOURCCW$MH,"mmioStringToFOURCCW");
    }
    public static int mmioStringToFOURCCW ( Addressable sz,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$768.mmioStringToFOURCCW$MH, "mmioStringToFOURCCW");
        try {
            return (int)mh$.invokeExact(sz.address(), uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioInstallIOProcA$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mmioInstallIOProcA$MH,"mmioInstallIOProcA");
    }
    public static MemoryAddress mmioInstallIOProcA ( int fccIOProc,  Addressable pIOProc,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mmioInstallIOProcA$MH, "mmioInstallIOProcA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(fccIOProc, pIOProc.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioInstallIOProcW$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mmioInstallIOProcW$MH,"mmioInstallIOProcW");
    }
    public static MemoryAddress mmioInstallIOProcW ( int fccIOProc,  Addressable pIOProc,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mmioInstallIOProcW$MH, "mmioInstallIOProcW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(fccIOProc, pIOProc.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioOpenA$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mmioOpenA$MH,"mmioOpenA");
    }
    public static MemoryAddress mmioOpenA ( Addressable pszFileName,  Addressable pmmioinfo,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mmioOpenA$MH, "mmioOpenA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pszFileName.address(), pmmioinfo.address(), fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioOpenW$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mmioOpenW$MH,"mmioOpenW");
    }
    public static MemoryAddress mmioOpenW ( Addressable pszFileName,  Addressable pmmioinfo,  int fdwOpen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mmioOpenW$MH, "mmioOpenW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(pszFileName.address(), pmmioinfo.address(), fdwOpen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRenameA$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mmioRenameA$MH,"mmioRenameA");
    }
    public static int mmioRenameA ( Addressable pszFileName,  Addressable pszNewFileName,  Addressable pmmioinfo,  int fdwRename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mmioRenameA$MH, "mmioRenameA");
        try {
            return (int)mh$.invokeExact(pszFileName.address(), pszNewFileName.address(), pmmioinfo.address(), fdwRename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRenameW$MH() {
        return RuntimeHelper.requireNonNull(constants$769.mmioRenameW$MH,"mmioRenameW");
    }
    public static int mmioRenameW ( Addressable pszFileName,  Addressable pszNewFileName,  Addressable pmmioinfo,  int fdwRename) {
        var mh$ = RuntimeHelper.requireNonNull(constants$769.mmioRenameW$MH, "mmioRenameW");
        try {
            return (int)mh$.invokeExact(pszFileName.address(), pszNewFileName.address(), pmmioinfo.address(), fdwRename);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioClose$MH() {
        return RuntimeHelper.requireNonNull(constants$770.mmioClose$MH,"mmioClose");
    }
    public static int mmioClose ( Addressable hmmio,  int fuClose) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.mmioClose$MH, "mmioClose");
        try {
            return (int)mh$.invokeExact(hmmio.address(), fuClose);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioRead$MH() {
        return RuntimeHelper.requireNonNull(constants$770.mmioRead$MH,"mmioRead");
    }
    public static int mmioRead ( Addressable hmmio,  Addressable pch,  int cch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.mmioRead$MH, "mmioRead");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pch.address(), cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioWrite$MH() {
        return RuntimeHelper.requireNonNull(constants$770.mmioWrite$MH,"mmioWrite");
    }
    public static int mmioWrite ( Addressable hmmio,  Addressable pch,  int cch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.mmioWrite$MH, "mmioWrite");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pch.address(), cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSeek$MH() {
        return RuntimeHelper.requireNonNull(constants$770.mmioSeek$MH,"mmioSeek");
    }
    public static int mmioSeek ( Addressable hmmio,  int lOffset,  int iOrigin) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.mmioSeek$MH, "mmioSeek");
        try {
            return (int)mh$.invokeExact(hmmio.address(), lOffset, iOrigin);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioGetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$770.mmioGetInfo$MH,"mmioGetInfo");
    }
    public static int mmioGetInfo ( Addressable hmmio,  Addressable pmmioinfo,  int fuInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.mmioGetInfo$MH, "mmioGetInfo");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pmmioinfo.address(), fuInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$770.mmioSetInfo$MH,"mmioSetInfo");
    }
    public static int mmioSetInfo ( Addressable hmmio,  Addressable pmmioinfo,  int fuInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$770.mmioSetInfo$MH, "mmioSetInfo");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pmmioinfo.address(), fuInfo);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$771.mmioSetBuffer$MH,"mmioSetBuffer");
    }
    public static int mmioSetBuffer ( Addressable hmmio,  Addressable pchBuffer,  int cchBuffer,  int fuBuffer) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.mmioSetBuffer$MH, "mmioSetBuffer");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pchBuffer.address(), cchBuffer, fuBuffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioFlush$MH() {
        return RuntimeHelper.requireNonNull(constants$771.mmioFlush$MH,"mmioFlush");
    }
    public static int mmioFlush ( Addressable hmmio,  int fuFlush) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.mmioFlush$MH, "mmioFlush");
        try {
            return (int)mh$.invokeExact(hmmio.address(), fuFlush);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioAdvance$MH() {
        return RuntimeHelper.requireNonNull(constants$771.mmioAdvance$MH,"mmioAdvance");
    }
    public static int mmioAdvance ( Addressable hmmio,  Addressable pmmioinfo,  int fuAdvance) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.mmioAdvance$MH, "mmioAdvance");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pmmioinfo.address(), fuAdvance);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioSendMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$771.mmioSendMessage$MH,"mmioSendMessage");
    }
    public static long mmioSendMessage ( Addressable hmmio,  int uMsg,  long lParam1,  long lParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.mmioSendMessage$MH, "mmioSendMessage");
        try {
            return (long)mh$.invokeExact(hmmio.address(), uMsg, lParam1, lParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioDescend$MH() {
        return RuntimeHelper.requireNonNull(constants$771.mmioDescend$MH,"mmioDescend");
    }
    public static int mmioDescend ( Addressable hmmio,  Addressable pmmcki,  Addressable pmmckiParent,  int fuDescend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.mmioDescend$MH, "mmioDescend");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pmmcki.address(), pmmckiParent.address(), fuDescend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioAscend$MH() {
        return RuntimeHelper.requireNonNull(constants$771.mmioAscend$MH,"mmioAscend");
    }
    public static int mmioAscend ( Addressable hmmio,  Addressable pmmcki,  int fuAscend) {
        var mh$ = RuntimeHelper.requireNonNull(constants$771.mmioAscend$MH, "mmioAscend");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pmmcki.address(), fuAscend);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mmioCreateChunk$MH() {
        return RuntimeHelper.requireNonNull(constants$772.mmioCreateChunk$MH,"mmioCreateChunk");
    }
    public static int mmioCreateChunk ( Addressable hmmio,  Addressable pmmcki,  int fuCreate) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772.mmioCreateChunk$MH, "mmioCreateChunk");
        try {
            return (int)mh$.invokeExact(hmmio.address(), pmmcki.address(), fuCreate);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendCommandA$MH() {
        return RuntimeHelper.requireNonNull(constants$772.mciSendCommandA$MH,"mciSendCommandA");
    }
    public static int mciSendCommandA ( int mciId,  int uMsg,  long dwParam1,  long dwParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772.mciSendCommandA$MH, "mciSendCommandA");
        try {
            return (int)mh$.invokeExact(mciId, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendCommandW$MH() {
        return RuntimeHelper.requireNonNull(constants$772.mciSendCommandW$MH,"mciSendCommandW");
    }
    public static int mciSendCommandW ( int mciId,  int uMsg,  long dwParam1,  long dwParam2) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772.mciSendCommandW$MH, "mciSendCommandW");
        try {
            return (int)mh$.invokeExact(mciId, uMsg, dwParam1, dwParam2);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$772.mciSendStringA$MH,"mciSendStringA");
    }
    public static int mciSendStringA ( Addressable lpstrCommand,  Addressable lpstrReturnString,  int uReturnLength,  Addressable hwndCallback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$772.mciSendStringA$MH, "mciSendStringA");
        try {
            return (int)mh$.invokeExact(lpstrCommand.address(), lpstrReturnString.address(), uReturnLength, hwndCallback.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSendStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$773.mciSendStringW$MH,"mciSendStringW");
    }
    public static int mciSendStringW ( Addressable lpstrCommand,  Addressable lpstrReturnString,  int uReturnLength,  Addressable hwndCallback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.mciSendStringW$MH, "mciSendStringW");
        try {
            return (int)mh$.invokeExact(lpstrCommand.address(), lpstrReturnString.address(), uReturnLength, hwndCallback.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDA$MH() {
        return RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDA$MH,"mciGetDeviceIDA");
    }
    public static int mciGetDeviceIDA ( Addressable pszDevice) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDA$MH, "mciGetDeviceIDA");
        try {
            return (int)mh$.invokeExact(pszDevice.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDW$MH() {
        return RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDW$MH,"mciGetDeviceIDW");
    }
    public static int mciGetDeviceIDW ( Addressable pszDevice) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDW$MH, "mciGetDeviceIDW");
        try {
            return (int)mh$.invokeExact(pszDevice.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDFromElementIDA$MH() {
        return RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDFromElementIDA$MH,"mciGetDeviceIDFromElementIDA");
    }
    public static int mciGetDeviceIDFromElementIDA ( int dwElementID,  Addressable lpstrType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDFromElementIDA$MH, "mciGetDeviceIDFromElementIDA");
        try {
            return (int)mh$.invokeExact(dwElementID, lpstrType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetDeviceIDFromElementIDW$MH() {
        return RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDFromElementIDW$MH,"mciGetDeviceIDFromElementIDW");
    }
    public static int mciGetDeviceIDFromElementIDW ( int dwElementID,  Addressable lpstrType) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.mciGetDeviceIDFromElementIDW$MH, "mciGetDeviceIDFromElementIDW");
        try {
            return (int)mh$.invokeExact(dwElementID, lpstrType.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetErrorStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$773.mciGetErrorStringA$MH,"mciGetErrorStringA");
    }
    public static int mciGetErrorStringA ( int mcierr,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$773.mciGetErrorStringA$MH, "mciGetErrorStringA");
        try {
            return (int)mh$.invokeExact(mcierr, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetErrorStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$774.mciGetErrorStringW$MH,"mciGetErrorStringW");
    }
    public static int mciGetErrorStringW ( int mcierr,  Addressable pszText,  int cchText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774.mciGetErrorStringW$MH, "mciGetErrorStringW");
        try {
            return (int)mh$.invokeExact(mcierr, pszText.address(), cchText);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciSetYieldProc$MH() {
        return RuntimeHelper.requireNonNull(constants$774.mciSetYieldProc$MH,"mciSetYieldProc");
    }
    public static int mciSetYieldProc ( int mciId,  Addressable fpYieldProc,  int dwYieldData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774.mciSetYieldProc$MH, "mciSetYieldProc");
        try {
            return (int)mh$.invokeExact(mciId, fpYieldProc.address(), dwYieldData);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetCreatorTask$MH() {
        return RuntimeHelper.requireNonNull(constants$774.mciGetCreatorTask$MH,"mciGetCreatorTask");
    }
    public static MemoryAddress mciGetCreatorTask ( int mciId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774.mciGetCreatorTask$MH, "mciGetCreatorTask");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(mciId);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mciGetYieldProc$MH() {
        return RuntimeHelper.requireNonNull(constants$774.mciGetYieldProc$MH,"mciGetYieldProc");
    }
    public static MemoryAddress mciGetYieldProc ( int mciId,  Addressable pdwYieldData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774.mciGetYieldProc$MH, "mciGetYieldProc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(mciId, pdwYieldData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Netbios$MH() {
        return RuntimeHelper.requireNonNull(constants$774.Netbios$MH,"Netbios");
    }
    public static byte Netbios ( Addressable pncb) {
        var mh$ = RuntimeHelper.requireNonNull(constants$774.Netbios$MH, "Netbios");
        try {
            return (byte)mh$.invokeExact(pncb.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static ValueLayout RPC_STATUS = C_LONG;
    public static MethodHandle RpcBindingCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$775.RpcBindingCopy$MH,"RpcBindingCopy");
    }
    public static int RpcBindingCopy ( Addressable SourceBinding,  Addressable DestinationBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$775.RpcBindingCopy$MH, "RpcBindingCopy");
        try {
            return (int)mh$.invokeExact(SourceBinding.address(), DestinationBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFree$MH() {
        return RuntimeHelper.requireNonNull(constants$776.RpcBindingFree$MH,"RpcBindingFree");
    }
    public static int RpcBindingFree ( Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.RpcBindingFree$MH, "RpcBindingFree");
        try {
            return (int)mh$.invokeExact(Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetOption$MH() {
        return RuntimeHelper.requireNonNull(constants$776.RpcBindingSetOption$MH,"RpcBindingSetOption");
    }
    public static int RpcBindingSetOption ( Addressable hBinding,  int option,  long optionValue) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.RpcBindingSetOption$MH, "RpcBindingSetOption");
        try {
            return (int)mh$.invokeExact(hBinding.address(), option, optionValue);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqOption$MH() {
        return RuntimeHelper.requireNonNull(constants$776.RpcBindingInqOption$MH,"RpcBindingInqOption");
    }
    public static int RpcBindingInqOption ( Addressable hBinding,  int option,  Addressable pOptionValue) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.RpcBindingInqOption$MH, "RpcBindingInqOption");
        try {
            return (int)mh$.invokeExact(hBinding.address(), option, pOptionValue.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFromStringBindingA$MH() {
        return RuntimeHelper.requireNonNull(constants$776.RpcBindingFromStringBindingA$MH,"RpcBindingFromStringBindingA");
    }
    public static int RpcBindingFromStringBindingA ( Addressable StringBinding,  Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.RpcBindingFromStringBindingA$MH, "RpcBindingFromStringBindingA");
        try {
            return (int)mh$.invokeExact(StringBinding.address(), Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingFromStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$776.RpcBindingFromStringBindingW$MH,"RpcBindingFromStringBindingW");
    }
    public static int RpcBindingFromStringBindingW ( Addressable StringBinding,  Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.RpcBindingFromStringBindingW$MH, "RpcBindingFromStringBindingW");
        try {
            return (int)mh$.invokeExact(StringBinding.address(), Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsGetContextBinding$MH() {
        return RuntimeHelper.requireNonNull(constants$776.RpcSsGetContextBinding$MH,"RpcSsGetContextBinding");
    }
    public static int RpcSsGetContextBinding ( Addressable ContextHandle,  Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$776.RpcSsGetContextBinding$MH, "RpcSsGetContextBinding");
        try {
            return (int)mh$.invokeExact(ContextHandle.address(), Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqObject$MH() {
        return RuntimeHelper.requireNonNull(constants$777.RpcBindingInqObject$MH,"RpcBindingInqObject");
    }
    public static int RpcBindingInqObject ( Addressable Binding,  Addressable ObjectUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.RpcBindingInqObject$MH, "RpcBindingInqObject");
        try {
            return (int)mh$.invokeExact(Binding.address(), ObjectUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingReset$MH() {
        return RuntimeHelper.requireNonNull(constants$777.RpcBindingReset$MH,"RpcBindingReset");
    }
    public static int RpcBindingReset ( Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.RpcBindingReset$MH, "RpcBindingReset");
        try {
            return (int)mh$.invokeExact(Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetObject$MH() {
        return RuntimeHelper.requireNonNull(constants$777.RpcBindingSetObject$MH,"RpcBindingSetObject");
    }
    public static int RpcBindingSetObject ( Addressable Binding,  Addressable ObjectUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.RpcBindingSetObject$MH, "RpcBindingSetObject");
        try {
            return (int)mh$.invokeExact(Binding.address(), ObjectUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqDefaultProtectLevel$MH() {
        return RuntimeHelper.requireNonNull(constants$777.RpcMgmtInqDefaultProtectLevel$MH,"RpcMgmtInqDefaultProtectLevel");
    }
    public static int RpcMgmtInqDefaultProtectLevel ( int AuthnSvc,  Addressable AuthnLevel) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.RpcMgmtInqDefaultProtectLevel$MH, "RpcMgmtInqDefaultProtectLevel");
        try {
            return (int)mh$.invokeExact(AuthnSvc, AuthnLevel.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingToStringBindingA$MH() {
        return RuntimeHelper.requireNonNull(constants$777.RpcBindingToStringBindingA$MH,"RpcBindingToStringBindingA");
    }
    public static int RpcBindingToStringBindingA ( Addressable Binding,  Addressable StringBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.RpcBindingToStringBindingA$MH, "RpcBindingToStringBindingA");
        try {
            return (int)mh$.invokeExact(Binding.address(), StringBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingToStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$777.RpcBindingToStringBindingW$MH,"RpcBindingToStringBindingW");
    }
    public static int RpcBindingToStringBindingW ( Addressable Binding,  Addressable StringBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$777.RpcBindingToStringBindingW$MH, "RpcBindingToStringBindingW");
        try {
            return (int)mh$.invokeExact(Binding.address(), StringBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$778.RpcBindingVectorFree$MH,"RpcBindingVectorFree");
    }
    public static int RpcBindingVectorFree ( Addressable BindingVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.RpcBindingVectorFree$MH, "RpcBindingVectorFree");
        try {
            return (int)mh$.invokeExact(BindingVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingComposeA$MH() {
        return RuntimeHelper.requireNonNull(constants$778.RpcStringBindingComposeA$MH,"RpcStringBindingComposeA");
    }
    public static int RpcStringBindingComposeA ( Addressable ObjUuid,  Addressable Protseq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable Options,  Addressable StringBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.RpcStringBindingComposeA$MH, "RpcStringBindingComposeA");
        try {
            return (int)mh$.invokeExact(ObjUuid.address(), Protseq.address(), NetworkAddr.address(), Endpoint.address(), Options.address(), StringBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingComposeW$MH() {
        return RuntimeHelper.requireNonNull(constants$778.RpcStringBindingComposeW$MH,"RpcStringBindingComposeW");
    }
    public static int RpcStringBindingComposeW ( Addressable ObjUuid,  Addressable Protseq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable Options,  Addressable StringBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.RpcStringBindingComposeW$MH, "RpcStringBindingComposeW");
        try {
            return (int)mh$.invokeExact(ObjUuid.address(), Protseq.address(), NetworkAddr.address(), Endpoint.address(), Options.address(), StringBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingParseA$MH() {
        return RuntimeHelper.requireNonNull(constants$778.RpcStringBindingParseA$MH,"RpcStringBindingParseA");
    }
    public static int RpcStringBindingParseA ( Addressable StringBinding,  Addressable ObjUuid,  Addressable Protseq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable NetworkOptions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.RpcStringBindingParseA$MH, "RpcStringBindingParseA");
        try {
            return (int)mh$.invokeExact(StringBinding.address(), ObjUuid.address(), Protseq.address(), NetworkAddr.address(), Endpoint.address(), NetworkOptions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringBindingParseW$MH() {
        return RuntimeHelper.requireNonNull(constants$778.RpcStringBindingParseW$MH,"RpcStringBindingParseW");
    }
    public static int RpcStringBindingParseW ( Addressable StringBinding,  Addressable ObjUuid,  Addressable Protseq,  Addressable NetworkAddr,  Addressable Endpoint,  Addressable NetworkOptions) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.RpcStringBindingParseW$MH, "RpcStringBindingParseW");
        try {
            return (int)mh$.invokeExact(StringBinding.address(), ObjUuid.address(), Protseq.address(), NetworkAddr.address(), Endpoint.address(), NetworkOptions.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringFreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$778.RpcStringFreeA$MH,"RpcStringFreeA");
    }
    public static int RpcStringFreeA ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$778.RpcStringFreeA$MH, "RpcStringFreeA");
        try {
            return (int)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcStringFreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$779.RpcStringFreeW$MH,"RpcStringFreeW");
    }
    public static int RpcStringFreeW ( Addressable String_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.RpcStringFreeW$MH, "RpcStringFreeW");
        try {
            return (int)mh$.invokeExact(String_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcIfInqId$MH() {
        return RuntimeHelper.requireNonNull(constants$779.RpcIfInqId$MH,"RpcIfInqId");
    }
    public static int RpcIfInqId ( Addressable RpcIfHandle,  Addressable RpcIfId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.RpcIfInqId$MH, "RpcIfInqId");
        try {
            return (int)mh$.invokeExact(RpcIfHandle.address(), RpcIfId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkIsProtseqValidA$MH() {
        return RuntimeHelper.requireNonNull(constants$779.RpcNetworkIsProtseqValidA$MH,"RpcNetworkIsProtseqValidA");
    }
    public static int RpcNetworkIsProtseqValidA ( Addressable Protseq) {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.RpcNetworkIsProtseqValidA$MH, "RpcNetworkIsProtseqValidA");
        try {
            return (int)mh$.invokeExact(Protseq.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkIsProtseqValidW$MH() {
        return RuntimeHelper.requireNonNull(constants$779.RpcNetworkIsProtseqValidW$MH,"RpcNetworkIsProtseqValidW");
    }
    public static int RpcNetworkIsProtseqValidW ( Addressable Protseq) {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.RpcNetworkIsProtseqValidW$MH, "RpcNetworkIsProtseqValidW");
        try {
            return (int)mh$.invokeExact(Protseq.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqComTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$779.RpcMgmtInqComTimeout$MH,"RpcMgmtInqComTimeout");
    }
    public static int RpcMgmtInqComTimeout ( Addressable Binding,  Addressable Timeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.RpcMgmtInqComTimeout$MH, "RpcMgmtInqComTimeout");
        try {
            return (int)mh$.invokeExact(Binding.address(), Timeout.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetComTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$779.RpcMgmtSetComTimeout$MH,"RpcMgmtSetComTimeout");
    }
    public static int RpcMgmtSetComTimeout ( Addressable Binding,  int Timeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$779.RpcMgmtSetComTimeout$MH, "RpcMgmtSetComTimeout");
        try {
            return (int)mh$.invokeExact(Binding.address(), Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetCancelTimeout$MH() {
        return RuntimeHelper.requireNonNull(constants$780.RpcMgmtSetCancelTimeout$MH,"RpcMgmtSetCancelTimeout");
    }
    public static int RpcMgmtSetCancelTimeout ( int Timeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.RpcMgmtSetCancelTimeout$MH, "RpcMgmtSetCancelTimeout");
        try {
            return (int)mh$.invokeExact(Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkInqProtseqsA$MH() {
        return RuntimeHelper.requireNonNull(constants$780.RpcNetworkInqProtseqsA$MH,"RpcNetworkInqProtseqsA");
    }
    public static int RpcNetworkInqProtseqsA ( Addressable ProtseqVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.RpcNetworkInqProtseqsA$MH, "RpcNetworkInqProtseqsA");
        try {
            return (int)mh$.invokeExact(ProtseqVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNetworkInqProtseqsW$MH() {
        return RuntimeHelper.requireNonNull(constants$780.RpcNetworkInqProtseqsW$MH,"RpcNetworkInqProtseqsW");
    }
    public static int RpcNetworkInqProtseqsW ( Addressable ProtseqVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.RpcNetworkInqProtseqsW$MH, "RpcNetworkInqProtseqsW");
        try {
            return (int)mh$.invokeExact(ProtseqVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectInqType$MH() {
        return RuntimeHelper.requireNonNull(constants$780.RpcObjectInqType$MH,"RpcObjectInqType");
    }
    public static int RpcObjectInqType ( Addressable ObjUuid,  Addressable TypeUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.RpcObjectInqType$MH, "RpcObjectInqType");
        try {
            return (int)mh$.invokeExact(ObjUuid.address(), TypeUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectSetInqFn$MH() {
        return RuntimeHelper.requireNonNull(constants$780.RpcObjectSetInqFn$MH,"RpcObjectSetInqFn");
    }
    public static int RpcObjectSetInqFn ( Addressable InquiryFn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.RpcObjectSetInqFn$MH, "RpcObjectSetInqFn");
        try {
            return (int)mh$.invokeExact(InquiryFn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcObjectSetType$MH() {
        return RuntimeHelper.requireNonNull(constants$780.RpcObjectSetType$MH,"RpcObjectSetType");
    }
    public static int RpcObjectSetType ( Addressable ObjUuid,  Addressable TypeUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$780.RpcObjectSetType$MH, "RpcObjectSetType");
        try {
            return (int)mh$.invokeExact(ObjUuid.address(), TypeUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcProtseqVectorFreeA$MH() {
        return RuntimeHelper.requireNonNull(constants$781.RpcProtseqVectorFreeA$MH,"RpcProtseqVectorFreeA");
    }
    public static int RpcProtseqVectorFreeA ( Addressable ProtseqVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.RpcProtseqVectorFreeA$MH, "RpcProtseqVectorFreeA");
        try {
            return (int)mh$.invokeExact(ProtseqVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcProtseqVectorFreeW$MH() {
        return RuntimeHelper.requireNonNull(constants$781.RpcProtseqVectorFreeW$MH,"RpcProtseqVectorFreeW");
    }
    public static int RpcProtseqVectorFreeW ( Addressable ProtseqVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.RpcProtseqVectorFreeW$MH, "RpcProtseqVectorFreeW");
        try {
            return (int)mh$.invokeExact(ProtseqVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindings$MH() {
        return RuntimeHelper.requireNonNull(constants$781.RpcServerInqBindings$MH,"RpcServerInqBindings");
    }
    public static int RpcServerInqBindings ( Addressable BindingVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.RpcServerInqBindings$MH, "RpcServerInqBindings");
        try {
            return (int)mh$.invokeExact(BindingVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqIf$MH() {
        return RuntimeHelper.requireNonNull(constants$781.RpcServerInqIf$MH,"RpcServerInqIf");
    }
    public static int RpcServerInqIf ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.RpcServerInqIf$MH, "RpcServerInqIf");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerListen$MH() {
        return RuntimeHelper.requireNonNull(constants$781.RpcServerListen$MH,"RpcServerListen");
    }
    public static int RpcServerListen ( int MinimumCallThreads,  int MaxCalls,  int DontWait) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.RpcServerListen$MH, "RpcServerListen");
        try {
            return (int)mh$.invokeExact(MinimumCallThreads, MaxCalls, DontWait);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf$MH() {
        return RuntimeHelper.requireNonNull(constants$781.RpcServerRegisterIf$MH,"RpcServerRegisterIf");
    }
    public static int RpcServerRegisterIf ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$781.RpcServerRegisterIf$MH, "RpcServerRegisterIf");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$782.RpcServerRegisterIfEx$MH,"RpcServerRegisterIfEx");
    }
    public static int RpcServerRegisterIfEx ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv,  int Flags,  int MaxCalls,  Addressable IfCallback) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.RpcServerRegisterIfEx$MH, "RpcServerRegisterIfEx");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address(), Flags, MaxCalls, IfCallback.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterIf2$MH() {
        return RuntimeHelper.requireNonNull(constants$782.RpcServerRegisterIf2$MH,"RpcServerRegisterIf2");
    }
    public static int RpcServerRegisterIf2 ( Addressable IfSpec,  Addressable MgrTypeUuid,  Addressable MgrEpv,  int Flags,  int MaxCalls,  int MaxRpcSize,  Addressable IfCallbackFn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.RpcServerRegisterIf2$MH, "RpcServerRegisterIf2");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), MgrTypeUuid.address(), MgrEpv.address(), Flags, MaxCalls, MaxRpcSize, IfCallbackFn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnregisterIf$MH() {
        return RuntimeHelper.requireNonNull(constants$782.RpcServerUnregisterIf$MH,"RpcServerUnregisterIf");
    }
    public static int RpcServerUnregisterIf ( Addressable IfSpec,  Addressable MgrTypeUuid,  int WaitForCallsToComplete) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.RpcServerUnregisterIf$MH, "RpcServerUnregisterIf");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), MgrTypeUuid.address(), WaitForCallsToComplete);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnregisterIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$782.RpcServerUnregisterIfEx$MH,"RpcServerUnregisterIfEx");
    }
    public static int RpcServerUnregisterIfEx ( Addressable IfSpec,  Addressable MgrTypeUuid,  int RundownContextHandles) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.RpcServerUnregisterIfEx$MH, "RpcServerUnregisterIfEx");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), MgrTypeUuid.address(), RundownContextHandles);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqs$MH() {
        return RuntimeHelper.requireNonNull(constants$782.RpcServerUseAllProtseqs$MH,"RpcServerUseAllProtseqs");
    }
    public static int RpcServerUseAllProtseqs ( int MaxCalls,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.RpcServerUseAllProtseqs$MH, "RpcServerUseAllProtseqs");
        try {
            return (int)mh$.invokeExact(MaxCalls, SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsEx$MH() {
        return RuntimeHelper.requireNonNull(constants$782.RpcServerUseAllProtseqsEx$MH,"RpcServerUseAllProtseqsEx");
    }
    public static int RpcServerUseAllProtseqsEx ( int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$782.RpcServerUseAllProtseqsEx$MH, "RpcServerUseAllProtseqsEx");
        try {
            return (int)mh$.invokeExact(MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsIf$MH() {
        return RuntimeHelper.requireNonNull(constants$783.RpcServerUseAllProtseqsIf$MH,"RpcServerUseAllProtseqsIf");
    }
    public static int RpcServerUseAllProtseqsIf ( int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.RpcServerUseAllProtseqsIf$MH, "RpcServerUseAllProtseqsIf");
        try {
            return (int)mh$.invokeExact(MaxCalls, IfSpec.address(), SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseAllProtseqsIfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$783.RpcServerUseAllProtseqsIfEx$MH,"RpcServerUseAllProtseqsIfEx");
    }
    public static int RpcServerUseAllProtseqsIfEx ( int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.RpcServerUseAllProtseqsIfEx$MH, "RpcServerUseAllProtseqsIfEx");
        try {
            return (int)mh$.invokeExact(MaxCalls, IfSpec.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqA$MH() {
        return RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqA$MH,"RpcServerUseProtseqA");
    }
    public static int RpcServerUseProtseqA ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqA$MH, "RpcServerUseProtseqA");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqExA$MH() {
        return RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqExA$MH,"RpcServerUseProtseqExA");
    }
    public static int RpcServerUseProtseqExA ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqExA$MH, "RpcServerUseProtseqExA");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqW$MH() {
        return RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqW$MH,"RpcServerUseProtseqW");
    }
    public static int RpcServerUseProtseqW ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqW$MH, "RpcServerUseProtseqW");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqExW$MH() {
        return RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqExW$MH,"RpcServerUseProtseqExW");
    }
    public static int RpcServerUseProtseqExW ( Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$783.RpcServerUseProtseqExW$MH, "RpcServerUseProtseqExW");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpA$MH() {
        return RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpA$MH,"RpcServerUseProtseqEpA");
    }
    public static int RpcServerUseProtseqEpA ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpA$MH, "RpcServerUseProtseqEpA");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpExA$MH() {
        return RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpExA$MH,"RpcServerUseProtseqEpExA");
    }
    public static int RpcServerUseProtseqEpExA ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpExA$MH, "RpcServerUseProtseqEpExA");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpW$MH() {
        return RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpW$MH,"RpcServerUseProtseqEpW");
    }
    public static int RpcServerUseProtseqEpW ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpW$MH, "RpcServerUseProtseqEpW");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqEpExW$MH() {
        return RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpExW$MH,"RpcServerUseProtseqEpExW");
    }
    public static int RpcServerUseProtseqEpExW ( Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqEpExW$MH, "RpcServerUseProtseqEpExW");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfA$MH() {
        return RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqIfA$MH,"RpcServerUseProtseqIfA");
    }
    public static int RpcServerUseProtseqIfA ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqIfA$MH, "RpcServerUseProtseqIfA");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfExA$MH() {
        return RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqIfExA$MH,"RpcServerUseProtseqIfExA");
    }
    public static int RpcServerUseProtseqIfExA ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$784.RpcServerUseProtseqIfExA$MH, "RpcServerUseProtseqIfExA");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfW$MH() {
        return RuntimeHelper.requireNonNull(constants$785.RpcServerUseProtseqIfW$MH,"RpcServerUseProtseqIfW");
    }
    public static int RpcServerUseProtseqIfW ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.RpcServerUseProtseqIfW$MH, "RpcServerUseProtseqIfW");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUseProtseqIfExW$MH() {
        return RuntimeHelper.requireNonNull(constants$785.RpcServerUseProtseqIfExW$MH,"RpcServerUseProtseqIfExW");
    }
    public static int RpcServerUseProtseqIfExW ( Addressable Protseq,  int MaxCalls,  Addressable IfSpec,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.RpcServerUseProtseqIfExW$MH, "RpcServerUseProtseqIfExW");
        try {
            return (int)mh$.invokeExact(Protseq.address(), MaxCalls, IfSpec.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerYield$MH() {
        return RuntimeHelper.requireNonNull(constants$785.RpcServerYield$MH,"RpcServerYield");
    }
    public static void RpcServerYield () {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.RpcServerYield$MH, "RpcServerYield");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtStatsVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$785.RpcMgmtStatsVectorFree$MH,"RpcMgmtStatsVectorFree");
    }
    public static int RpcMgmtStatsVectorFree ( Addressable StatsVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.RpcMgmtStatsVectorFree$MH, "RpcMgmtStatsVectorFree");
        try {
            return (int)mh$.invokeExact(StatsVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqStats$MH() {
        return RuntimeHelper.requireNonNull(constants$785.RpcMgmtInqStats$MH,"RpcMgmtInqStats");
    }
    public static int RpcMgmtInqStats ( Addressable Binding,  Addressable Statistics) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.RpcMgmtInqStats$MH, "RpcMgmtInqStats");
        try {
            return (int)mh$.invokeExact(Binding.address(), Statistics.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtIsServerListening$MH() {
        return RuntimeHelper.requireNonNull(constants$785.RpcMgmtIsServerListening$MH,"RpcMgmtIsServerListening");
    }
    public static int RpcMgmtIsServerListening ( Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$785.RpcMgmtIsServerListening$MH, "RpcMgmtIsServerListening");
        try {
            return (int)mh$.invokeExact(Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtStopServerListening$MH() {
        return RuntimeHelper.requireNonNull(constants$786.RpcMgmtStopServerListening$MH,"RpcMgmtStopServerListening");
    }
    public static int RpcMgmtStopServerListening ( Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.RpcMgmtStopServerListening$MH, "RpcMgmtStopServerListening");
        try {
            return (int)mh$.invokeExact(Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtWaitServerListen$MH() {
        return RuntimeHelper.requireNonNull(constants$786.RpcMgmtWaitServerListen$MH,"RpcMgmtWaitServerListen");
    }
    public static int RpcMgmtWaitServerListen () {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.RpcMgmtWaitServerListen$MH, "RpcMgmtWaitServerListen");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetServerStackSize$MH() {
        return RuntimeHelper.requireNonNull(constants$786.RpcMgmtSetServerStackSize$MH,"RpcMgmtSetServerStackSize");
    }
    public static int RpcMgmtSetServerStackSize ( int ThreadStackSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.RpcMgmtSetServerStackSize$MH, "RpcMgmtSetServerStackSize");
        try {
            return (int)mh$.invokeExact(ThreadStackSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsDontSerializeContext$MH() {
        return RuntimeHelper.requireNonNull(constants$786.RpcSsDontSerializeContext$MH,"RpcSsDontSerializeContext");
    }
    public static void RpcSsDontSerializeContext () {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.RpcSsDontSerializeContext$MH, "RpcSsDontSerializeContext");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEnableIdleCleanup$MH() {
        return RuntimeHelper.requireNonNull(constants$786.RpcMgmtEnableIdleCleanup$MH,"RpcMgmtEnableIdleCleanup");
    }
    public static int RpcMgmtEnableIdleCleanup () {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.RpcMgmtEnableIdleCleanup$MH, "RpcMgmtEnableIdleCleanup");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqIfIds$MH() {
        return RuntimeHelper.requireNonNull(constants$786.RpcMgmtInqIfIds$MH,"RpcMgmtInqIfIds");
    }
    public static int RpcMgmtInqIfIds ( Addressable Binding,  Addressable IfIdVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$786.RpcMgmtInqIfIds$MH, "RpcMgmtInqIfIds");
        try {
            return (int)mh$.invokeExact(Binding.address(), IfIdVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcIfIdVectorFree$MH() {
        return RuntimeHelper.requireNonNull(constants$787.RpcIfIdVectorFree$MH,"RpcIfIdVectorFree");
    }
    public static int RpcIfIdVectorFree ( Addressable IfIdVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.RpcIfIdVectorFree$MH, "RpcIfIdVectorFree");
        try {
            return (int)mh$.invokeExact(IfIdVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqServerPrincNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$787.RpcMgmtInqServerPrincNameA$MH,"RpcMgmtInqServerPrincNameA");
    }
    public static int RpcMgmtInqServerPrincNameA ( Addressable Binding,  int AuthnSvc,  Addressable ServerPrincName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.RpcMgmtInqServerPrincNameA$MH, "RpcMgmtInqServerPrincNameA");
        try {
            return (int)mh$.invokeExact(Binding.address(), AuthnSvc, ServerPrincName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtInqServerPrincNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$787.RpcMgmtInqServerPrincNameW$MH,"RpcMgmtInqServerPrincNameW");
    }
    public static int RpcMgmtInqServerPrincNameW ( Addressable Binding,  int AuthnSvc,  Addressable ServerPrincName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.RpcMgmtInqServerPrincNameW$MH, "RpcMgmtInqServerPrincNameW");
        try {
            return (int)mh$.invokeExact(Binding.address(), AuthnSvc, ServerPrincName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqDefaultPrincNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$787.RpcServerInqDefaultPrincNameA$MH,"RpcServerInqDefaultPrincNameA");
    }
    public static int RpcServerInqDefaultPrincNameA ( int AuthnSvc,  Addressable PrincName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.RpcServerInqDefaultPrincNameA$MH, "RpcServerInqDefaultPrincNameA");
        try {
            return (int)mh$.invokeExact(AuthnSvc, PrincName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqDefaultPrincNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$787.RpcServerInqDefaultPrincNameW$MH,"RpcServerInqDefaultPrincNameW");
    }
    public static int RpcServerInqDefaultPrincNameW ( int AuthnSvc,  Addressable PrincName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.RpcServerInqDefaultPrincNameW$MH, "RpcServerInqDefaultPrincNameW");
        try {
            return (int)mh$.invokeExact(AuthnSvc, PrincName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpResolveBinding$MH() {
        return RuntimeHelper.requireNonNull(constants$787.RpcEpResolveBinding$MH,"RpcEpResolveBinding");
    }
    public static int RpcEpResolveBinding ( Addressable Binding,  Addressable IfSpec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$787.RpcEpResolveBinding$MH, "RpcEpResolveBinding");
        try {
            return (int)mh$.invokeExact(Binding.address(), IfSpec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingInqEntryNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$788.RpcNsBindingInqEntryNameA$MH,"RpcNsBindingInqEntryNameA");
    }
    public static int RpcNsBindingInqEntryNameA ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$788.RpcNsBindingInqEntryNameA$MH, "RpcNsBindingInqEntryNameA");
        try {
            return (int)mh$.invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingInqEntryNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$788.RpcNsBindingInqEntryNameW$MH,"RpcNsBindingInqEntryNameW");
    }
    public static int RpcNsBindingInqEntryNameW ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$788.RpcNsBindingInqEntryNameW$MH, "RpcNsBindingInqEntryNameW");
        try {
            return (int)mh$.invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int RPCHTTP_RS_REDIRECT() {
        return (int)1L;
    }
    public static int RPCHTTP_RS_ACCESS_1() {
        return (int)2L;
    }
    public static int RPCHTTP_RS_SESSION() {
        return (int)3L;
    }
    public static int RPCHTTP_RS_ACCESS_2() {
        return (int)4L;
    }
    public static int RPCHTTP_RS_INTERFACE() {
        return (int)5L;
    }
    public static MethodHandle RpcImpersonateClient$MH() {
        return RuntimeHelper.requireNonNull(constants$789.RpcImpersonateClient$MH,"RpcImpersonateClient");
    }
    public static int RpcImpersonateClient ( Addressable BindingHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.RpcImpersonateClient$MH, "RpcImpersonateClient");
        try {
            return (int)mh$.invokeExact(BindingHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertToSelfEx$MH() {
        return RuntimeHelper.requireNonNull(constants$789.RpcRevertToSelfEx$MH,"RpcRevertToSelfEx");
    }
    public static int RpcRevertToSelfEx ( Addressable BindingHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.RpcRevertToSelfEx$MH, "RpcRevertToSelfEx");
        try {
            return (int)mh$.invokeExact(BindingHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRevertToSelf$MH() {
        return RuntimeHelper.requireNonNull(constants$789.RpcRevertToSelf$MH,"RpcRevertToSelf");
    }
    public static int RpcRevertToSelf () {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.RpcRevertToSelf$MH, "RpcRevertToSelf");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientA$MH() {
        return RuntimeHelper.requireNonNull(constants$789.RpcBindingInqAuthClientA$MH,"RpcBindingInqAuthClientA");
    }
    public static int RpcBindingInqAuthClientA ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.RpcBindingInqAuthClientA$MH, "RpcBindingInqAuthClientA");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientW$MH() {
        return RuntimeHelper.requireNonNull(constants$789.RpcBindingInqAuthClientW$MH,"RpcBindingInqAuthClientW");
    }
    public static int RpcBindingInqAuthClientW ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.RpcBindingInqAuthClientW$MH, "RpcBindingInqAuthClientW");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientExA$MH() {
        return RuntimeHelper.requireNonNull(constants$789.RpcBindingInqAuthClientExA$MH,"RpcBindingInqAuthClientExA");
    }
    public static int RpcBindingInqAuthClientExA ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$789.RpcBindingInqAuthClientExA$MH, "RpcBindingInqAuthClientExA");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthClientExW$MH() {
        return RuntimeHelper.requireNonNull(constants$790.RpcBindingInqAuthClientExW$MH,"RpcBindingInqAuthClientExW");
    }
    public static int RpcBindingInqAuthClientExW ( Addressable ClientBinding,  Addressable Privs,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthzSvc,  int Flags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.RpcBindingInqAuthClientExW$MH, "RpcBindingInqAuthClientExW");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), Privs.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthzSvc.address(), Flags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$790.RpcBindingInqAuthInfoA$MH,"RpcBindingInqAuthInfoA");
    }
    public static int RpcBindingInqAuthInfoA ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.RpcBindingInqAuthInfoA$MH, "RpcBindingInqAuthInfoA");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$790.RpcBindingInqAuthInfoW$MH,"RpcBindingInqAuthInfoW");
    }
    public static int RpcBindingInqAuthInfoW ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.RpcBindingInqAuthInfoW$MH, "RpcBindingInqAuthInfoW");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$790.RpcBindingSetAuthInfoA$MH,"RpcBindingSetAuthInfoA");
    }
    public static int RpcBindingSetAuthInfoA ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.RpcBindingSetAuthInfoA$MH, "RpcBindingSetAuthInfoA");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$790.RpcBindingSetAuthInfoExA$MH,"RpcBindingSetAuthInfoExA");
    }
    public static int RpcBindingSetAuthInfoExA ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc,  Addressable SecurityQos) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.RpcBindingSetAuthInfoExA$MH, "RpcBindingSetAuthInfoExA");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc, SecurityQos.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$790.RpcBindingSetAuthInfoW$MH,"RpcBindingSetAuthInfoW");
    }
    public static int RpcBindingSetAuthInfoW ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$790.RpcBindingSetAuthInfoW$MH, "RpcBindingSetAuthInfoW");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingSetAuthInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$791.RpcBindingSetAuthInfoExW$MH,"RpcBindingSetAuthInfoExW");
    }
    public static int RpcBindingSetAuthInfoExW ( Addressable Binding,  Addressable ServerPrincName,  int AuthnLevel,  int AuthnSvc,  Addressable AuthIdentity,  int AuthzSvc,  Addressable SecurityQOS) {
        var mh$ = RuntimeHelper.requireNonNull(constants$791.RpcBindingSetAuthInfoExW$MH, "RpcBindingSetAuthInfoExW");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel, AuthnSvc, AuthIdentity.address(), AuthzSvc, SecurityQOS.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoExA$MH() {
        return RuntimeHelper.requireNonNull(constants$791.RpcBindingInqAuthInfoExA$MH,"RpcBindingInqAuthInfoExA");
    }
    public static int RpcBindingInqAuthInfoExA ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc,  int RpcQosVersion,  Addressable SecurityQOS) {
        var mh$ = RuntimeHelper.requireNonNull(constants$791.RpcBindingInqAuthInfoExA$MH, "RpcBindingInqAuthInfoExA");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address(), RpcQosVersion, SecurityQOS.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingInqAuthInfoExW$MH() {
        return RuntimeHelper.requireNonNull(constants$791.RpcBindingInqAuthInfoExW$MH,"RpcBindingInqAuthInfoExW");
    }
    public static int RpcBindingInqAuthInfoExW ( Addressable Binding,  Addressable ServerPrincName,  Addressable AuthnLevel,  Addressable AuthnSvc,  Addressable AuthIdentity,  Addressable AuthzSvc,  int RpcQosVersion,  Addressable SecurityQOS) {
        var mh$ = RuntimeHelper.requireNonNull(constants$791.RpcBindingInqAuthInfoExW$MH, "RpcBindingInqAuthInfoExW");
        try {
            return (int)mh$.invokeExact(Binding.address(), ServerPrincName.address(), AuthnLevel.address(), AuthnSvc.address(), AuthIdentity.address(), AuthzSvc.address(), RpcQosVersion, SecurityQOS.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterAuthInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$791.RpcServerRegisterAuthInfoA$MH,"RpcServerRegisterAuthInfoA");
    }
    public static int RpcServerRegisterAuthInfoA ( Addressable ServerPrincName,  int AuthnSvc,  Addressable GetKeyFn,  Addressable Arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$791.RpcServerRegisterAuthInfoA$MH, "RpcServerRegisterAuthInfoA");
        try {
            return (int)mh$.invokeExact(ServerPrincName.address(), AuthnSvc, GetKeyFn.address(), Arg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerRegisterAuthInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$792.RpcServerRegisterAuthInfoW$MH,"RpcServerRegisterAuthInfoW");
    }
    public static int RpcServerRegisterAuthInfoW ( Addressable ServerPrincName,  int AuthnSvc,  Addressable GetKeyFn,  Addressable Arg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.RpcServerRegisterAuthInfoW$MH, "RpcServerRegisterAuthInfoW");
        try {
            return (int)mh$.invokeExact(ServerPrincName.address(), AuthnSvc, GetKeyFn.address(), Arg.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingServerFromClient$MH() {
        return RuntimeHelper.requireNonNull(constants$792.RpcBindingServerFromClient$MH,"RpcBindingServerFromClient");
    }
    public static int RpcBindingServerFromClient ( Addressable ClientBinding,  Addressable ServerBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.RpcBindingServerFromClient$MH, "RpcBindingServerFromClient");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), ServerBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcRaiseException$MH() {
        return RuntimeHelper.requireNonNull(constants$792.RpcRaiseException$MH,"RpcRaiseException");
    }
    public static void RpcRaiseException ( int exception) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.RpcRaiseException$MH, "RpcRaiseException");
        try {
            mh$.invokeExact(exception);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcTestCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$792.RpcTestCancel$MH,"RpcTestCancel");
    }
    public static int RpcTestCancel () {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.RpcTestCancel$MH, "RpcTestCancel");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerTestCancel$MH() {
        return RuntimeHelper.requireNonNull(constants$792.RpcServerTestCancel$MH,"RpcServerTestCancel");
    }
    public static int RpcServerTestCancel ( Addressable BindingHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.RpcServerTestCancel$MH, "RpcServerTestCancel");
        try {
            return (int)mh$.invokeExact(BindingHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcCancelThread$MH() {
        return RuntimeHelper.requireNonNull(constants$792.RpcCancelThread$MH,"RpcCancelThread");
    }
    public static int RpcCancelThread ( Addressable Thread) {
        var mh$ = RuntimeHelper.requireNonNull(constants$792.RpcCancelThread$MH, "RpcCancelThread");
        try {
            return (int)mh$.invokeExact(Thread.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcCancelThreadEx$MH() {
        return RuntimeHelper.requireNonNull(constants$793.RpcCancelThreadEx$MH,"RpcCancelThreadEx");
    }
    public static int RpcCancelThreadEx ( Addressable Thread,  int Timeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.RpcCancelThreadEx$MH, "RpcCancelThreadEx");
        try {
            return (int)mh$.invokeExact(Thread.address(), Timeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$793.UuidCreate$MH,"UuidCreate");
    }
    public static int UuidCreate ( Addressable Uuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.UuidCreate$MH, "UuidCreate");
        try {
            return (int)mh$.invokeExact(Uuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreateSequential$MH() {
        return RuntimeHelper.requireNonNull(constants$793.UuidCreateSequential$MH,"UuidCreateSequential");
    }
    public static int UuidCreateSequential ( Addressable Uuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.UuidCreateSequential$MH, "UuidCreateSequential");
        try {
            return (int)mh$.invokeExact(Uuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidToStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$793.UuidToStringA$MH,"UuidToStringA");
    }
    public static int UuidToStringA ( Addressable Uuid,  Addressable StringUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.UuidToStringA$MH, "UuidToStringA");
        try {
            return (int)mh$.invokeExact(Uuid.address(), StringUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidFromStringA$MH() {
        return RuntimeHelper.requireNonNull(constants$793.UuidFromStringA$MH,"UuidFromStringA");
    }
    public static int UuidFromStringA ( Addressable StringUuid,  Addressable Uuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.UuidFromStringA$MH, "UuidFromStringA");
        try {
            return (int)mh$.invokeExact(StringUuid.address(), Uuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidToStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$793.UuidToStringW$MH,"UuidToStringW");
    }
    public static int UuidToStringW ( Addressable Uuid,  Addressable StringUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$793.UuidToStringW$MH, "UuidToStringW");
        try {
            return (int)mh$.invokeExact(Uuid.address(), StringUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidFromStringW$MH() {
        return RuntimeHelper.requireNonNull(constants$794.UuidFromStringW$MH,"UuidFromStringW");
    }
    public static int UuidFromStringW ( Addressable StringUuid,  Addressable Uuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$794.UuidFromStringW$MH, "UuidFromStringW");
        try {
            return (int)mh$.invokeExact(StringUuid.address(), Uuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCompare$MH() {
        return RuntimeHelper.requireNonNull(constants$794.UuidCompare$MH,"UuidCompare");
    }
    public static int UuidCompare ( Addressable Uuid1,  Addressable Uuid2,  Addressable Status) {
        var mh$ = RuntimeHelper.requireNonNull(constants$794.UuidCompare$MH, "UuidCompare");
        try {
            return (int)mh$.invokeExact(Uuid1.address(), Uuid2.address(), Status.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidCreateNil$MH() {
        return RuntimeHelper.requireNonNull(constants$794.UuidCreateNil$MH,"UuidCreateNil");
    }
    public static int UuidCreateNil ( Addressable NilUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$794.UuidCreateNil$MH, "UuidCreateNil");
        try {
            return (int)mh$.invokeExact(NilUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidEqual$MH() {
        return RuntimeHelper.requireNonNull(constants$794.UuidEqual$MH,"UuidEqual");
    }
    public static int UuidEqual ( Addressable Uuid1,  Addressable Uuid2,  Addressable Status) {
        var mh$ = RuntimeHelper.requireNonNull(constants$794.UuidEqual$MH, "UuidEqual");
        try {
            return (int)mh$.invokeExact(Uuid1.address(), Uuid2.address(), Status.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidHash$MH() {
        return RuntimeHelper.requireNonNull(constants$794.UuidHash$MH,"UuidHash");
    }
    public static short UuidHash ( Addressable Uuid,  Addressable Status) {
        var mh$ = RuntimeHelper.requireNonNull(constants$794.UuidHash$MH, "UuidHash");
        try {
            return (short)mh$.invokeExact(Uuid.address(), Status.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle UuidIsNil$MH() {
        return RuntimeHelper.requireNonNull(constants$794.UuidIsNil$MH,"UuidIsNil");
    }
    public static int UuidIsNil ( Addressable Uuid,  Addressable Status) {
        var mh$ = RuntimeHelper.requireNonNull(constants$794.UuidIsNil$MH, "UuidIsNil");
        try {
            return (int)mh$.invokeExact(Uuid.address(), Status.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterNoReplaceA$MH() {
        return RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterNoReplaceA$MH,"RpcEpRegisterNoReplaceA");
    }
    public static int RpcEpRegisterNoReplaceA ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterNoReplaceA$MH, "RpcEpRegisterNoReplaceA");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterNoReplaceW$MH() {
        return RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterNoReplaceW$MH,"RpcEpRegisterNoReplaceW");
    }
    public static int RpcEpRegisterNoReplaceW ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterNoReplaceW$MH, "RpcEpRegisterNoReplaceW");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterA$MH() {
        return RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterA$MH,"RpcEpRegisterA");
    }
    public static int RpcEpRegisterA ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterA$MH, "RpcEpRegisterA");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpRegisterW$MH() {
        return RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterW$MH,"RpcEpRegisterW");
    }
    public static int RpcEpRegisterW ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$795.RpcEpRegisterW$MH, "RpcEpRegisterW");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcEpUnregister$MH() {
        return RuntimeHelper.requireNonNull(constants$795.RpcEpUnregister$MH,"RpcEpUnregister");
    }
    public static int RpcEpUnregister ( Addressable IfSpec,  Addressable BindingVector,  Addressable UuidVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$795.RpcEpUnregister$MH, "RpcEpUnregister");
        try {
            return (int)mh$.invokeExact(IfSpec.address(), BindingVector.address(), UuidVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DceErrorInqTextA$MH() {
        return RuntimeHelper.requireNonNull(constants$795.DceErrorInqTextA$MH,"DceErrorInqTextA");
    }
    public static int DceErrorInqTextA ( int RpcStatus,  Addressable ErrorText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$795.DceErrorInqTextA$MH, "DceErrorInqTextA");
        try {
            return (int)mh$.invokeExact(RpcStatus, ErrorText.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DceErrorInqTextW$MH() {
        return RuntimeHelper.requireNonNull(constants$796.DceErrorInqTextW$MH,"DceErrorInqTextW");
    }
    public static int DceErrorInqTextW ( int RpcStatus,  Addressable ErrorText) {
        var mh$ = RuntimeHelper.requireNonNull(constants$796.DceErrorInqTextW$MH, "DceErrorInqTextW");
        try {
            return (int)mh$.invokeExact(RpcStatus, ErrorText.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqBegin$MH() {
        return RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqBegin$MH,"RpcMgmtEpEltInqBegin");
    }
    public static int RpcMgmtEpEltInqBegin ( Addressable EpBinding,  int InquiryType,  Addressable IfId,  int VersOption,  Addressable ObjectUuid,  Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqBegin$MH, "RpcMgmtEpEltInqBegin");
        try {
            return (int)mh$.invokeExact(EpBinding.address(), InquiryType, IfId.address(), VersOption, ObjectUuid.address(), InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqDone$MH,"RpcMgmtEpEltInqDone");
    }
    public static int RpcMgmtEpEltInqDone ( Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqDone$MH, "RpcMgmtEpEltInqDone");
        try {
            return (int)mh$.invokeExact(InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqNextA$MH,"RpcMgmtEpEltInqNextA");
    }
    public static int RpcMgmtEpEltInqNextA ( Addressable InquiryContext,  Addressable IfId,  Addressable Binding,  Addressable ObjectUuid,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqNextA$MH, "RpcMgmtEpEltInqNextA");
        try {
            return (int)mh$.invokeExact(InquiryContext.address(), IfId.address(), Binding.address(), ObjectUuid.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpEltInqNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqNextW$MH,"RpcMgmtEpEltInqNextW");
    }
    public static int RpcMgmtEpEltInqNextW ( Addressable InquiryContext,  Addressable IfId,  Addressable Binding,  Addressable ObjectUuid,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpEltInqNextW$MH, "RpcMgmtEpEltInqNextW");
        try {
            return (int)mh$.invokeExact(InquiryContext.address(), IfId.address(), Binding.address(), ObjectUuid.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtEpUnregister$MH() {
        return RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpUnregister$MH,"RpcMgmtEpUnregister");
    }
    public static int RpcMgmtEpUnregister ( Addressable EpBinding,  Addressable IfId,  Addressable Binding,  Addressable ObjectUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$796.RpcMgmtEpUnregister$MH, "RpcMgmtEpUnregister");
        try {
            return (int)mh$.invokeExact(EpBinding.address(), IfId.address(), Binding.address(), ObjectUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcMgmtSetAuthorizationFn$MH() {
        return RuntimeHelper.requireNonNull(constants$797.RpcMgmtSetAuthorizationFn$MH,"RpcMgmtSetAuthorizationFn");
    }
    public static int RpcMgmtSetAuthorizationFn ( Addressable AuthorizationFn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$797.RpcMgmtSetAuthorizationFn$MH, "RpcMgmtSetAuthorizationFn");
        try {
            return (int)mh$.invokeExact(AuthorizationFn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingCreateA$MH() {
        return RuntimeHelper.requireNonNull(constants$797.RpcBindingCreateA$MH,"RpcBindingCreateA");
    }
    public static int RpcBindingCreateA ( Addressable Template,  Addressable Security,  Addressable Options,  Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$797.RpcBindingCreateA$MH, "RpcBindingCreateA");
        try {
            return (int)mh$.invokeExact(Template.address(), Security.address(), Options.address(), Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingCreateW$MH() {
        return RuntimeHelper.requireNonNull(constants$797.RpcBindingCreateW$MH,"RpcBindingCreateW");
    }
    public static int RpcBindingCreateW ( Addressable Template,  Addressable Security,  Addressable Options,  Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$797.RpcBindingCreateW$MH, "RpcBindingCreateW");
        try {
            return (int)mh$.invokeExact(Template.address(), Security.address(), Options.address(), Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqBindingHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$797.RpcServerInqBindingHandle$MH,"RpcServerInqBindingHandle");
    }
    public static int RpcServerInqBindingHandle ( Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$797.RpcServerInqBindingHandle$MH, "RpcServerInqBindingHandle");
        try {
            return (int)mh$.invokeExact(Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int PROTOCOL_NOT_LOADED() {
        return (int)1L;
    }
    public static int PROTOCOL_LOADED() {
        return (int)2L;
    }
    public static int PROTOCOL_ADDRESS_CHANGE() {
        return (int)3L;
    }
    public static MethodHandle I_RpcNegotiateTransferSyntax$MH() {
        return RuntimeHelper.requireNonNull(constants$799.I_RpcNegotiateTransferSyntax$MH,"I_RpcNegotiateTransferSyntax");
    }
    public static int I_RpcNegotiateTransferSyntax ( Addressable Message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$799.I_RpcNegotiateTransferSyntax$MH, "I_RpcNegotiateTransferSyntax");
        try {
            return (int)mh$.invokeExact(Message.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$799.I_RpcGetBuffer$MH,"I_RpcGetBuffer");
    }
    public static int I_RpcGetBuffer ( Addressable Message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$799.I_RpcGetBuffer$MH, "I_RpcGetBuffer");
        try {
            return (int)mh$.invokeExact(Message.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetBufferWithObject$MH() {
        return RuntimeHelper.requireNonNull(constants$799.I_RpcGetBufferWithObject$MH,"I_RpcGetBufferWithObject");
    }
    public static int I_RpcGetBufferWithObject ( Addressable Message,  Addressable ObjectUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$799.I_RpcGetBufferWithObject$MH, "I_RpcGetBufferWithObject");
        try {
            return (int)mh$.invokeExact(Message.address(), ObjectUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSendReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$799.I_RpcSendReceive$MH,"I_RpcSendReceive");
    }
    public static int I_RpcSendReceive ( Addressable Message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$799.I_RpcSendReceive$MH, "I_RpcSendReceive");
        try {
            return (int)mh$.invokeExact(Message.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$799.I_RpcFreeBuffer$MH,"I_RpcFreeBuffer");
    }
    public static int I_RpcFreeBuffer ( Addressable Message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$799.I_RpcFreeBuffer$MH, "I_RpcFreeBuffer");
        try {
            return (int)mh$.invokeExact(Message.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSend$MH() {
        return RuntimeHelper.requireNonNull(constants$799.I_RpcSend$MH,"I_RpcSend");
    }
    public static int I_RpcSend ( Addressable Message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$799.I_RpcSend$MH, "I_RpcSend");
        try {
            return (int)mh$.invokeExact(Message.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReceive$MH() {
        return RuntimeHelper.requireNonNull(constants$800.I_RpcReceive$MH,"I_RpcReceive");
    }
    public static int I_RpcReceive ( Addressable Message,  int Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$800.I_RpcReceive$MH, "I_RpcReceive");
        try {
            return (int)mh$.invokeExact(Message.address(), Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFreePipeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$800.I_RpcFreePipeBuffer$MH,"I_RpcFreePipeBuffer");
    }
    public static int I_RpcFreePipeBuffer ( Addressable Message) {
        var mh$ = RuntimeHelper.requireNonNull(constants$800.I_RpcFreePipeBuffer$MH, "I_RpcFreePipeBuffer");
        try {
            return (int)mh$.invokeExact(Message.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReallocPipeBuffer$MH() {
        return RuntimeHelper.requireNonNull(constants$800.I_RpcReallocPipeBuffer$MH,"I_RpcReallocPipeBuffer");
    }
    public static int I_RpcReallocPipeBuffer ( Addressable Message,  int NewSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$800.I_RpcReallocPipeBuffer$MH, "I_RpcReallocPipeBuffer");
        try {
            return (int)mh$.invokeExact(Message.address(), NewSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcRequestMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$800.I_RpcRequestMutex$MH,"I_RpcRequestMutex");
    }
    public static void I_RpcRequestMutex ( Addressable Mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$800.I_RpcRequestMutex$MH, "I_RpcRequestMutex");
        try {
            mh$.invokeExact(Mutex.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcClearMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$800.I_RpcClearMutex$MH,"I_RpcClearMutex");
    }
    public static void I_RpcClearMutex ( Addressable Mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$800.I_RpcClearMutex$MH, "I_RpcClearMutex");
        try {
            mh$.invokeExact(Mutex.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcDeleteMutex$MH() {
        return RuntimeHelper.requireNonNull(constants$800.I_RpcDeleteMutex$MH,"I_RpcDeleteMutex");
    }
    public static void I_RpcDeleteMutex ( Addressable Mutex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$800.I_RpcDeleteMutex$MH, "I_RpcDeleteMutex");
        try {
            mh$.invokeExact(Mutex.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcAllocate$MH() {
        return RuntimeHelper.requireNonNull(constants$801.I_RpcAllocate$MH,"I_RpcAllocate");
    }
    public static MemoryAddress I_RpcAllocate ( int Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$801.I_RpcAllocate$MH, "I_RpcAllocate");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcFree$MH() {
        return RuntimeHelper.requireNonNull(constants$801.I_RpcFree$MH,"I_RpcFree");
    }
    public static void I_RpcFree ( Addressable Object) {
        var mh$ = RuntimeHelper.requireNonNull(constants$801.I_RpcFree$MH, "I_RpcFree");
        try {
            mh$.invokeExact(Object.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcPauseExecution$MH() {
        return RuntimeHelper.requireNonNull(constants$801.I_RpcPauseExecution$MH,"I_RpcPauseExecution");
    }
    public static void I_RpcPauseExecution ( int Milliseconds) {
        var mh$ = RuntimeHelper.requireNonNull(constants$801.I_RpcPauseExecution$MH, "I_RpcPauseExecution");
        try {
            mh$.invokeExact(Milliseconds);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetExtendedError$MH() {
        return RuntimeHelper.requireNonNull(constants$801.I_RpcGetExtendedError$MH,"I_RpcGetExtendedError");
    }
    public static int I_RpcGetExtendedError () {
        var mh$ = RuntimeHelper.requireNonNull(constants$801.I_RpcGetExtendedError$MH, "I_RpcGetExtendedError");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcMonitorAssociation$MH() {
        return RuntimeHelper.requireNonNull(constants$802.I_RpcMonitorAssociation$MH,"I_RpcMonitorAssociation");
    }
    public static int I_RpcMonitorAssociation ( Addressable Handle,  Addressable RundownRoutine,  Addressable Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.I_RpcMonitorAssociation$MH, "I_RpcMonitorAssociation");
        try {
            return (int)mh$.invokeExact(Handle.address(), RundownRoutine.address(), Context.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcStopMonitorAssociation$MH() {
        return RuntimeHelper.requireNonNull(constants$802.I_RpcStopMonitorAssociation$MH,"I_RpcStopMonitorAssociation");
    }
    public static int I_RpcStopMonitorAssociation ( Addressable Handle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.I_RpcStopMonitorAssociation$MH, "I_RpcStopMonitorAssociation");
        try {
            return (int)mh$.invokeExact(Handle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetCurrentCallHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$802.I_RpcGetCurrentCallHandle$MH,"I_RpcGetCurrentCallHandle");
    }
    public static MemoryAddress I_RpcGetCurrentCallHandle () {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.I_RpcGetCurrentCallHandle$MH, "I_RpcGetCurrentCallHandle");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetAssociationContext$MH() {
        return RuntimeHelper.requireNonNull(constants$802.I_RpcGetAssociationContext$MH,"I_RpcGetAssociationContext");
    }
    public static int I_RpcGetAssociationContext ( Addressable BindingHandle,  Addressable AssociationContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.I_RpcGetAssociationContext$MH, "I_RpcGetAssociationContext");
        try {
            return (int)mh$.invokeExact(BindingHandle.address(), AssociationContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcGetServerContextList$MH() {
        return RuntimeHelper.requireNonNull(constants$802.I_RpcGetServerContextList$MH,"I_RpcGetServerContextList");
    }
    public static MemoryAddress I_RpcGetServerContextList ( Addressable BindingHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.I_RpcGetServerContextList$MH, "I_RpcGetServerContextList");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(BindingHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSetServerContextList$MH() {
        return RuntimeHelper.requireNonNull(constants$802.I_RpcSetServerContextList$MH,"I_RpcSetServerContextList");
    }
    public static void I_RpcSetServerContextList ( Addressable BindingHandle,  Addressable ServerContextList) {
        var mh$ = RuntimeHelper.requireNonNull(constants$802.I_RpcSetServerContextList$MH, "I_RpcSetServerContextList");
        try {
            mh$.invokeExact(BindingHandle.address(), ServerContextList.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsInterfaceExported$MH() {
        return RuntimeHelper.requireNonNull(constants$803.I_RpcNsInterfaceExported$MH,"I_RpcNsInterfaceExported");
    }
    public static int I_RpcNsInterfaceExported ( int EntryNameSyntax,  Addressable EntryName,  Addressable RpcInterfaceInformation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.I_RpcNsInterfaceExported$MH, "I_RpcNsInterfaceExported");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), RpcInterfaceInformation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsInterfaceUnexported$MH() {
        return RuntimeHelper.requireNonNull(constants$803.I_RpcNsInterfaceUnexported$MH,"I_RpcNsInterfaceUnexported");
    }
    public static int I_RpcNsInterfaceUnexported ( int EntryNameSyntax,  Addressable EntryName,  Addressable RpcInterfaceInformation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.I_RpcNsInterfaceUnexported$MH, "I_RpcNsInterfaceUnexported");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), RpcInterfaceInformation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingToStaticStringBindingW$MH() {
        return RuntimeHelper.requireNonNull(constants$803.I_RpcBindingToStaticStringBindingW$MH,"I_RpcBindingToStaticStringBindingW");
    }
    public static int I_RpcBindingToStaticStringBindingW ( Addressable Binding,  Addressable StringBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.I_RpcBindingToStaticStringBindingW$MH, "I_RpcBindingToStaticStringBindingW");
        try {
            return (int)mh$.invokeExact(Binding.address(), StringBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqSecurityContext$MH() {
        return RuntimeHelper.requireNonNull(constants$803.I_RpcBindingInqSecurityContext$MH,"I_RpcBindingInqSecurityContext");
    }
    public static int I_RpcBindingInqSecurityContext ( Addressable Binding,  Addressable SecurityContextHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.I_RpcBindingInqSecurityContext$MH, "I_RpcBindingInqSecurityContext");
        try {
            return (int)mh$.invokeExact(Binding.address(), SecurityContextHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqWireIdForSnego$MH() {
        return RuntimeHelper.requireNonNull(constants$803.I_RpcBindingInqWireIdForSnego$MH,"I_RpcBindingInqWireIdForSnego");
    }
    public static int I_RpcBindingInqWireIdForSnego ( Addressable Binding,  Addressable WireId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.I_RpcBindingInqWireIdForSnego$MH, "I_RpcBindingInqWireIdForSnego");
        try {
            return (int)mh$.invokeExact(Binding.address(), WireId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqMarshalledTargetInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$803.I_RpcBindingInqMarshalledTargetInfo$MH,"I_RpcBindingInqMarshalledTargetInfo");
    }
    public static int I_RpcBindingInqMarshalledTargetInfo ( Addressable Binding,  Addressable MarshalledTargetInfoLength,  Addressable MarshalledTargetInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$803.I_RpcBindingInqMarshalledTargetInfo$MH, "I_RpcBindingInqMarshalledTargetInfo");
        try {
            return (int)mh$.invokeExact(Binding.address(), MarshalledTargetInfoLength.address(), MarshalledTargetInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqLocalClientPID$MH() {
        return RuntimeHelper.requireNonNull(constants$804.I_RpcBindingInqLocalClientPID$MH,"I_RpcBindingInqLocalClientPID");
    }
    public static int I_RpcBindingInqLocalClientPID ( Addressable Binding,  Addressable Pid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.I_RpcBindingInqLocalClientPID$MH, "I_RpcBindingInqLocalClientPID");
        try {
            return (int)mh$.invokeExact(Binding.address(), Pid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingHandleToAsyncHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$804.I_RpcBindingHandleToAsyncHandle$MH,"I_RpcBindingHandleToAsyncHandle");
    }
    public static int I_RpcBindingHandleToAsyncHandle ( Addressable Binding,  Addressable AsyncHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.I_RpcBindingHandleToAsyncHandle$MH, "I_RpcBindingHandleToAsyncHandle");
        try {
            return (int)mh$.invokeExact(Binding.address(), AsyncHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsBindingSetEntryNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$804.I_RpcNsBindingSetEntryNameW$MH,"I_RpcNsBindingSetEntryNameW");
    }
    public static int I_RpcNsBindingSetEntryNameW ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.I_RpcNsBindingSetEntryNameW$MH, "I_RpcNsBindingSetEntryNameW");
        try {
            return (int)mh$.invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcNsBindingSetEntryNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$804.I_RpcNsBindingSetEntryNameA$MH,"I_RpcNsBindingSetEntryNameA");
    }
    public static int I_RpcNsBindingSetEntryNameA ( Addressable Binding,  int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.I_RpcNsBindingSetEntryNameA$MH, "I_RpcNsBindingSetEntryNameA");
        try {
            return (int)mh$.invokeExact(Binding.address(), EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseqEp2A$MH() {
        return RuntimeHelper.requireNonNull(constants$804.I_RpcServerUseProtseqEp2A$MH,"I_RpcServerUseProtseqEp2A");
    }
    public static int I_RpcServerUseProtseqEp2A ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.I_RpcServerUseProtseqEp2A$MH, "I_RpcServerUseProtseqEp2A");
        try {
            return (int)mh$.invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseqEp2W$MH() {
        return RuntimeHelper.requireNonNull(constants$804.I_RpcServerUseProtseqEp2W$MH,"I_RpcServerUseProtseqEp2W");
    }
    public static int I_RpcServerUseProtseqEp2W ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable Endpoint,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$804.I_RpcServerUseProtseqEp2W$MH, "I_RpcServerUseProtseqEp2W");
        try {
            return (int)mh$.invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, Endpoint.address(), SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseq2W$MH() {
        return RuntimeHelper.requireNonNull(constants$805.I_RpcServerUseProtseq2W$MH,"I_RpcServerUseProtseq2W");
    }
    public static int I_RpcServerUseProtseq2W ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.I_RpcServerUseProtseq2W$MH, "I_RpcServerUseProtseq2W");
        try {
            return (int)mh$.invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUseProtseq2A$MH() {
        return RuntimeHelper.requireNonNull(constants$805.I_RpcServerUseProtseq2A$MH,"I_RpcServerUseProtseq2A");
    }
    public static int I_RpcServerUseProtseq2A ( Addressable NetworkAddress,  Addressable Protseq,  int MaxCalls,  Addressable SecurityDescriptor,  Addressable Policy) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.I_RpcServerUseProtseq2A$MH, "I_RpcServerUseProtseq2A");
        try {
            return (int)mh$.invokeExact(NetworkAddress.address(), Protseq.address(), MaxCalls, SecurityDescriptor.address(), Policy.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqDynamicEndpointW$MH() {
        return RuntimeHelper.requireNonNull(constants$805.I_RpcBindingInqDynamicEndpointW$MH,"I_RpcBindingInqDynamicEndpointW");
    }
    public static int I_RpcBindingInqDynamicEndpointW ( Addressable Binding,  Addressable DynamicEndpoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.I_RpcBindingInqDynamicEndpointW$MH, "I_RpcBindingInqDynamicEndpointW");
        try {
            return (int)mh$.invokeExact(Binding.address(), DynamicEndpoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqDynamicEndpointA$MH() {
        return RuntimeHelper.requireNonNull(constants$805.I_RpcBindingInqDynamicEndpointA$MH,"I_RpcBindingInqDynamicEndpointA");
    }
    public static int I_RpcBindingInqDynamicEndpointA ( Addressable Binding,  Addressable DynamicEndpoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.I_RpcBindingInqDynamicEndpointA$MH, "I_RpcBindingInqDynamicEndpointA");
        try {
            return (int)mh$.invokeExact(Binding.address(), DynamicEndpoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerCheckClientRestriction$MH() {
        return RuntimeHelper.requireNonNull(constants$805.I_RpcServerCheckClientRestriction$MH,"I_RpcServerCheckClientRestriction");
    }
    public static int I_RpcServerCheckClientRestriction ( Addressable Context) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.I_RpcServerCheckClientRestriction$MH, "I_RpcServerCheckClientRestriction");
        try {
            return (int)mh$.invokeExact(Context.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqTransportType$MH() {
        return RuntimeHelper.requireNonNull(constants$805.I_RpcBindingInqTransportType$MH,"I_RpcBindingInqTransportType");
    }
    public static int I_RpcBindingInqTransportType ( Addressable Binding,  Addressable Type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$805.I_RpcBindingInqTransportType$MH, "I_RpcBindingInqTransportType");
        try {
            return (int)mh$.invokeExact(Binding.address(), Type.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcIfInqTransferSyntaxes$MH() {
        return RuntimeHelper.requireNonNull(constants$806.I_RpcIfInqTransferSyntaxes$MH,"I_RpcIfInqTransferSyntaxes");
    }
    public static int I_RpcIfInqTransferSyntaxes ( Addressable RpcIfHandle,  Addressable TransferSyntaxes,  int TransferSyntaxSize,  Addressable TransferSyntaxCount) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.I_RpcIfInqTransferSyntaxes$MH, "I_RpcIfInqTransferSyntaxes");
        try {
            return (int)mh$.invokeExact(RpcIfHandle.address(), TransferSyntaxes.address(), TransferSyntaxSize, TransferSyntaxCount.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_UuidCreate$MH() {
        return RuntimeHelper.requireNonNull(constants$806.I_UuidCreate$MH,"I_UuidCreate");
    }
    public static int I_UuidCreate ( Addressable Uuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.I_UuidCreate$MH, "I_UuidCreate");
        try {
            return (int)mh$.invokeExact(Uuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingCopy$MH() {
        return RuntimeHelper.requireNonNull(constants$806.I_RpcBindingCopy$MH,"I_RpcBindingCopy");
    }
    public static int I_RpcBindingCopy ( Addressable SourceBinding,  Addressable DestinationBinding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.I_RpcBindingCopy$MH, "I_RpcBindingCopy");
        try {
            return (int)mh$.invokeExact(SourceBinding.address(), DestinationBinding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingIsClientLocal$MH() {
        return RuntimeHelper.requireNonNull(constants$806.I_RpcBindingIsClientLocal$MH,"I_RpcBindingIsClientLocal");
    }
    public static int I_RpcBindingIsClientLocal ( Addressable BindingHandle,  Addressable ClientLocalFlag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.I_RpcBindingIsClientLocal$MH, "I_RpcBindingIsClientLocal");
        try {
            return (int)mh$.invokeExact(BindingHandle.address(), ClientLocalFlag.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingInqConnId$MH() {
        return RuntimeHelper.requireNonNull(constants$806.I_RpcBindingInqConnId$MH,"I_RpcBindingInqConnId");
    }
    public static int I_RpcBindingInqConnId ( Addressable Binding,  Addressable ConnId,  Addressable pfFirstCall) {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.I_RpcBindingInqConnId$MH, "I_RpcBindingInqConnId");
        try {
            return (int)mh$.invokeExact(Binding.address(), ConnId.address(), pfFirstCall.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSsDontSerializeContext$MH() {
        return RuntimeHelper.requireNonNull(constants$806.I_RpcSsDontSerializeContext$MH,"I_RpcSsDontSerializeContext");
    }
    public static void I_RpcSsDontSerializeContext () {
        var mh$ = RuntimeHelper.requireNonNull(constants$806.I_RpcSsDontSerializeContext$MH, "I_RpcSsDontSerializeContext");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcLaunchDatagramReceiveThread$MH() {
        return RuntimeHelper.requireNonNull(constants$807.I_RpcLaunchDatagramReceiveThread$MH,"I_RpcLaunchDatagramReceiveThread");
    }
    public static int I_RpcLaunchDatagramReceiveThread ( Addressable pAddress) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.I_RpcLaunchDatagramReceiveThread$MH, "I_RpcLaunchDatagramReceiveThread");
        try {
            return (int)mh$.invokeExact(pAddress.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerRegisterForwardFunction$MH() {
        return RuntimeHelper.requireNonNull(constants$807.I_RpcServerRegisterForwardFunction$MH,"I_RpcServerRegisterForwardFunction");
    }
    public static int I_RpcServerRegisterForwardFunction ( Addressable pForwardFunction) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.I_RpcServerRegisterForwardFunction$MH, "I_RpcServerRegisterForwardFunction");
        try {
            return (int)mh$.invokeExact(pForwardFunction.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerInqAddressChangeFn$MH() {
        return RuntimeHelper.requireNonNull(constants$807.I_RpcServerInqAddressChangeFn$MH,"I_RpcServerInqAddressChangeFn");
    }
    public static MemoryAddress I_RpcServerInqAddressChangeFn () {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.I_RpcServerInqAddressChangeFn$MH, "I_RpcServerInqAddressChangeFn");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerSetAddressChangeFn$MH() {
        return RuntimeHelper.requireNonNull(constants$807.I_RpcServerSetAddressChangeFn$MH,"I_RpcServerSetAddressChangeFn");
    }
    public static int I_RpcServerSetAddressChangeFn ( Addressable pAddressChangeFn) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.I_RpcServerSetAddressChangeFn$MH, "I_RpcServerSetAddressChangeFn");
        try {
            return (int)mh$.invokeExact(pAddressChangeFn.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerInqLocalConnAddress$MH() {
        return RuntimeHelper.requireNonNull(constants$807.I_RpcServerInqLocalConnAddress$MH,"I_RpcServerInqLocalConnAddress");
    }
    public static int I_RpcServerInqLocalConnAddress ( Addressable Binding,  Addressable Buffer,  Addressable BufferSize,  Addressable AddressFormat) {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.I_RpcServerInqLocalConnAddress$MH, "I_RpcServerInqLocalConnAddress");
        try {
            return (int)mh$.invokeExact(Binding.address(), Buffer.address(), BufferSize.address(), AddressFormat.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSessionStrictContextHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$807.I_RpcSessionStrictContextHandle$MH,"I_RpcSessionStrictContextHandle");
    }
    public static void I_RpcSessionStrictContextHandle () {
        var mh$ = RuntimeHelper.requireNonNull(constants$807.I_RpcSessionStrictContextHandle$MH, "I_RpcSessionStrictContextHandle");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcTurnOnEEInfoPropagation$MH() {
        return RuntimeHelper.requireNonNull(constants$808.I_RpcTurnOnEEInfoPropagation$MH,"I_RpcTurnOnEEInfoPropagation");
    }
    public static int I_RpcTurnOnEEInfoPropagation () {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.I_RpcTurnOnEEInfoPropagation$MH, "I_RpcTurnOnEEInfoPropagation");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcConnectionInqSockBuffSize$MH() {
        return RuntimeHelper.requireNonNull(constants$808.I_RpcConnectionInqSockBuffSize$MH,"I_RpcConnectionInqSockBuffSize");
    }
    public static int I_RpcConnectionInqSockBuffSize ( Addressable RecvBuffSize,  Addressable SendBuffSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.I_RpcConnectionInqSockBuffSize$MH, "I_RpcConnectionInqSockBuffSize");
        try {
            return (int)mh$.invokeExact(RecvBuffSize.address(), SendBuffSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcConnectionSetSockBuffSize$MH() {
        return RuntimeHelper.requireNonNull(constants$808.I_RpcConnectionSetSockBuffSize$MH,"I_RpcConnectionSetSockBuffSize");
    }
    public static int I_RpcConnectionSetSockBuffSize ( int RecvBuffSize,  int SendBuffSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$808.I_RpcConnectionSetSockBuffSize$MH, "I_RpcConnectionSetSockBuffSize");
        try {
            return (int)mh$.invokeExact(RecvBuffSize, SendBuffSize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerStartListening$MH() {
        return RuntimeHelper.requireNonNull(constants$809.I_RpcServerStartListening$MH,"I_RpcServerStartListening");
    }
    public static int I_RpcServerStartListening ( Addressable hWnd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.I_RpcServerStartListening$MH, "I_RpcServerStartListening");
        try {
            return (int)mh$.invokeExact(hWnd.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerStopListening$MH() {
        return RuntimeHelper.requireNonNull(constants$809.I_RpcServerStopListening$MH,"I_RpcServerStopListening");
    }
    public static int I_RpcServerStopListening () {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.I_RpcServerStopListening$MH, "I_RpcServerStopListening");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcBindingSetAsync$MH() {
        return RuntimeHelper.requireNonNull(constants$809.I_RpcBindingSetAsync$MH,"I_RpcBindingSetAsync");
    }
    public static int I_RpcBindingSetAsync ( Addressable Binding,  Addressable BlockingFn,  int ServerTid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$809.I_RpcBindingSetAsync$MH, "I_RpcBindingSetAsync");
        try {
            return (int)mh$.invokeExact(Binding.address(), BlockingFn.address(), ServerTid);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcSetThreadParams$MH() {
        return RuntimeHelper.requireNonNull(constants$810.I_RpcSetThreadParams$MH,"I_RpcSetThreadParams");
    }
    public static int I_RpcSetThreadParams ( int fClientFree,  Addressable Context,  Addressable hWndClient) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.I_RpcSetThreadParams$MH, "I_RpcSetThreadParams");
        try {
            return (int)mh$.invokeExact(fClientFree, Context.address(), hWndClient.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcWindowProc$MH() {
        return RuntimeHelper.requireNonNull(constants$810.I_RpcWindowProc$MH,"I_RpcWindowProc");
    }
    public static int I_RpcWindowProc ( Addressable hWnd,  int Message,  int wParam,  int lParam) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.I_RpcWindowProc$MH, "I_RpcWindowProc");
        try {
            return (int)mh$.invokeExact(hWnd.address(), Message, wParam, lParam);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUnregisterEndpointA$MH() {
        return RuntimeHelper.requireNonNull(constants$810.I_RpcServerUnregisterEndpointA$MH,"I_RpcServerUnregisterEndpointA");
    }
    public static int I_RpcServerUnregisterEndpointA ( Addressable Protseq,  Addressable Endpoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.I_RpcServerUnregisterEndpointA$MH, "I_RpcServerUnregisterEndpointA");
        try {
            return (int)mh$.invokeExact(Protseq.address(), Endpoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerUnregisterEndpointW$MH() {
        return RuntimeHelper.requireNonNull(constants$810.I_RpcServerUnregisterEndpointW$MH,"I_RpcServerUnregisterEndpointW");
    }
    public static int I_RpcServerUnregisterEndpointW ( Addressable Protseq,  Addressable Endpoint) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.I_RpcServerUnregisterEndpointW$MH, "I_RpcServerUnregisterEndpointW");
        try {
            return (int)mh$.invokeExact(Protseq.address(), Endpoint.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcServerInqTransportType$MH() {
        return RuntimeHelper.requireNonNull(constants$810.I_RpcServerInqTransportType$MH,"I_RpcServerInqTransportType");
    }
    public static int I_RpcServerInqTransportType ( Addressable Type) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.I_RpcServerInqTransportType$MH, "I_RpcServerInqTransportType");
        try {
            return (int)mh$.invokeExact(Type.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcMapWin32Status$MH() {
        return RuntimeHelper.requireNonNull(constants$810.I_RpcMapWin32Status$MH,"I_RpcMapWin32Status");
    }
    public static int I_RpcMapWin32Status ( int Status) {
        var mh$ = RuntimeHelper.requireNonNull(constants$810.I_RpcMapWin32Status$MH, "I_RpcMapWin32Status");
        try {
            return (int)mh$.invokeExact(Status);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcProxyNewConnection$MH() {
        return RuntimeHelper.requireNonNull(constants$812.I_RpcProxyNewConnection$MH,"I_RpcProxyNewConnection");
    }
    public static int I_RpcProxyNewConnection ( int ConnectionType,  Addressable ServerAddress,  Addressable ServerPort,  Addressable MinConnTimeout,  Addressable ConnectionParameter,  Addressable CallOutState,  Addressable ProxyCallbackInterface) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.I_RpcProxyNewConnection$MH, "I_RpcProxyNewConnection");
        try {
            return (int)mh$.invokeExact(ConnectionType, ServerAddress.address(), ServerPort.address(), MinConnTimeout.address(), ConnectionParameter.address(), CallOutState.address(), ProxyCallbackInterface.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcReplyToClientWithStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$812.I_RpcReplyToClientWithStatus$MH,"I_RpcReplyToClientWithStatus");
    }
    public static int I_RpcReplyToClientWithStatus ( Addressable ConnectionParameter,  int RpcStatus) {
        var mh$ = RuntimeHelper.requireNonNull(constants$812.I_RpcReplyToClientWithStatus$MH, "I_RpcReplyToClientWithStatus");
        try {
            return (int)mh$.invokeExact(ConnectionParameter.address(), RpcStatus);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcRecordCalloutFailure$MH() {
        return RuntimeHelper.requireNonNull(constants$813.I_RpcRecordCalloutFailure$MH,"I_RpcRecordCalloutFailure");
    }
    public static void I_RpcRecordCalloutFailure ( int RpcStatus,  Addressable CallOutState,  Addressable DllName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.I_RpcRecordCalloutFailure$MH, "I_RpcRecordCalloutFailure");
        try {
            mh$.invokeExact(RpcStatus, CallOutState.address(), DllName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingExportA$MH() {
        return RuntimeHelper.requireNonNull(constants$813.RpcNsBindingExportA$MH,"RpcNsBindingExportA");
    }
    public static int RpcNsBindingExportA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable BindingVec,  Addressable ObjectUuidVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.RpcNsBindingExportA$MH, "RpcNsBindingExportA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), BindingVec.address(), ObjectUuidVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportA$MH() {
        return RuntimeHelper.requireNonNull(constants$813.RpcNsBindingUnexportA$MH,"RpcNsBindingUnexportA");
    }
    public static int RpcNsBindingUnexportA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectUuidVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.RpcNsBindingUnexportA$MH, "RpcNsBindingUnexportA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectUuidVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingExportW$MH() {
        return RuntimeHelper.requireNonNull(constants$813.RpcNsBindingExportW$MH,"RpcNsBindingExportW");
    }
    public static int RpcNsBindingExportW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable BindingVec,  Addressable ObjectUuidVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.RpcNsBindingExportW$MH, "RpcNsBindingExportW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), BindingVec.address(), ObjectUuidVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportW$MH() {
        return RuntimeHelper.requireNonNull(constants$813.RpcNsBindingUnexportW$MH,"RpcNsBindingUnexportW");
    }
    public static int RpcNsBindingUnexportW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectUuidVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.RpcNsBindingUnexportW$MH, "RpcNsBindingUnexportW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectUuidVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingExportPnPA$MH() {
        return RuntimeHelper.requireNonNull(constants$813.RpcNsBindingExportPnPA$MH,"RpcNsBindingExportPnPA");
    }
    public static int RpcNsBindingExportPnPA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$813.RpcNsBindingExportPnPA$MH, "RpcNsBindingExportPnPA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportPnPA$MH() {
        return RuntimeHelper.requireNonNull(constants$814.RpcNsBindingUnexportPnPA$MH,"RpcNsBindingUnexportPnPA");
    }
    public static int RpcNsBindingUnexportPnPA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.RpcNsBindingUnexportPnPA$MH, "RpcNsBindingUnexportPnPA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingExportPnPW$MH() {
        return RuntimeHelper.requireNonNull(constants$814.RpcNsBindingExportPnPW$MH,"RpcNsBindingExportPnPW");
    }
    public static int RpcNsBindingExportPnPW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.RpcNsBindingExportPnPW$MH, "RpcNsBindingExportPnPW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingUnexportPnPW$MH() {
        return RuntimeHelper.requireNonNull(constants$814.RpcNsBindingUnexportPnPW$MH,"RpcNsBindingUnexportPnPW");
    }
    public static int RpcNsBindingUnexportPnPW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjectVector) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.RpcNsBindingUnexportPnPW$MH, "RpcNsBindingUnexportPnPW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjectVector.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$814.RpcNsBindingLookupBeginA$MH,"RpcNsBindingLookupBeginA");
    }
    public static int RpcNsBindingLookupBeginA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  int BindingMaxCount,  Addressable LookupContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.RpcNsBindingLookupBeginA$MH, "RpcNsBindingLookupBeginA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), BindingMaxCount, LookupContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$814.RpcNsBindingLookupBeginW$MH,"RpcNsBindingLookupBeginW");
    }
    public static int RpcNsBindingLookupBeginW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  int BindingMaxCount,  Addressable LookupContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.RpcNsBindingLookupBeginW$MH, "RpcNsBindingLookupBeginW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), BindingMaxCount, LookupContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupNext$MH() {
        return RuntimeHelper.requireNonNull(constants$814.RpcNsBindingLookupNext$MH,"RpcNsBindingLookupNext");
    }
    public static int RpcNsBindingLookupNext ( Addressable LookupContext,  Addressable BindingVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$814.RpcNsBindingLookupNext$MH, "RpcNsBindingLookupNext");
        try {
            return (int)mh$.invokeExact(LookupContext.address(), BindingVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingLookupDone$MH() {
        return RuntimeHelper.requireNonNull(constants$815.RpcNsBindingLookupDone$MH,"RpcNsBindingLookupDone");
    }
    public static int RpcNsBindingLookupDone ( Addressable LookupContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.RpcNsBindingLookupDone$MH, "RpcNsBindingLookupDone");
        try {
            return (int)mh$.invokeExact(LookupContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupDeleteA$MH() {
        return RuntimeHelper.requireNonNull(constants$815.RpcNsGroupDeleteA$MH,"RpcNsGroupDeleteA");
    }
    public static int RpcNsGroupDeleteA ( int GroupNameSyntax,  Addressable GroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.RpcNsGroupDeleteA$MH, "RpcNsGroupDeleteA");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrAddA$MH() {
        return RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrAddA$MH,"RpcNsGroupMbrAddA");
    }
    public static int RpcNsGroupMbrAddA ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrAddA$MH, "RpcNsGroupMbrAddA");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrRemoveA$MH() {
        return RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrRemoveA$MH,"RpcNsGroupMbrRemoveA");
    }
    public static int RpcNsGroupMbrRemoveA ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrRemoveA$MH, "RpcNsGroupMbrRemoveA");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrInqBeginA$MH,"RpcNsGroupMbrInqBeginA");
    }
    public static int RpcNsGroupMbrInqBeginA ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrInqBeginA$MH, "RpcNsGroupMbrInqBeginA");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrInqNextA$MH,"RpcNsGroupMbrInqNextA");
    }
    public static int RpcNsGroupMbrInqNextA ( Addressable InquiryContext,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$815.RpcNsGroupMbrInqNextA$MH, "RpcNsGroupMbrInqNextA");
        try {
            return (int)mh$.invokeExact(InquiryContext.address(), MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupDeleteW$MH() {
        return RuntimeHelper.requireNonNull(constants$816.RpcNsGroupDeleteW$MH,"RpcNsGroupDeleteW");
    }
    public static int RpcNsGroupDeleteW ( int GroupNameSyntax,  Addressable GroupName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.RpcNsGroupDeleteW$MH, "RpcNsGroupDeleteW");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrAddW$MH() {
        return RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrAddW$MH,"RpcNsGroupMbrAddW");
    }
    public static int RpcNsGroupMbrAddW ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrAddW$MH, "RpcNsGroupMbrAddW");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrRemoveW$MH() {
        return RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrRemoveW$MH,"RpcNsGroupMbrRemoveW");
    }
    public static int RpcNsGroupMbrRemoveW ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrRemoveW$MH, "RpcNsGroupMbrRemoveW");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrInqBeginW$MH,"RpcNsGroupMbrInqBeginW");
    }
    public static int RpcNsGroupMbrInqBeginW ( int GroupNameSyntax,  Addressable GroupName,  int MemberNameSyntax,  Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrInqBeginW$MH, "RpcNsGroupMbrInqBeginW");
        try {
            return (int)mh$.invokeExact(GroupNameSyntax, GroupName.address(), MemberNameSyntax, InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrInqNextW$MH,"RpcNsGroupMbrInqNextW");
    }
    public static int RpcNsGroupMbrInqNextW ( Addressable InquiryContext,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrInqNextW$MH, "RpcNsGroupMbrInqNextW");
        try {
            return (int)mh$.invokeExact(InquiryContext.address(), MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsGroupMbrInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrInqDone$MH,"RpcNsGroupMbrInqDone");
    }
    public static int RpcNsGroupMbrInqDone ( Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$816.RpcNsGroupMbrInqDone$MH, "RpcNsGroupMbrInqDone");
        try {
            return (int)mh$.invokeExact(InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileDeleteA$MH() {
        return RuntimeHelper.requireNonNull(constants$817.RpcNsProfileDeleteA$MH,"RpcNsProfileDeleteA");
    }
    public static int RpcNsProfileDeleteA ( int ProfileNameSyntax,  Addressable ProfileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.RpcNsProfileDeleteA$MH, "RpcNsProfileDeleteA");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltAddA$MH() {
        return RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltAddA$MH,"RpcNsProfileEltAddA");
    }
    public static int RpcNsProfileEltAddA ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName,  int Priority,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltAddA$MH, "RpcNsProfileEltAddA");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address(), Priority, Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltRemoveA$MH() {
        return RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltRemoveA$MH,"RpcNsProfileEltRemoveA");
    }
    public static int RpcNsProfileEltRemoveA ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltRemoveA$MH, "RpcNsProfileEltRemoveA");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltInqBeginA$MH,"RpcNsProfileEltInqBeginA");
    }
    public static int RpcNsProfileEltInqBeginA ( int ProfileNameSyntax,  Addressable ProfileName,  int InquiryType,  Addressable IfId,  int VersOption,  int MemberNameSyntax,  Addressable MemberName,  Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltInqBeginA$MH, "RpcNsProfileEltInqBeginA");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address(), InquiryType, IfId.address(), VersOption, MemberNameSyntax, MemberName.address(), InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqNextA$MH() {
        return RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltInqNextA$MH,"RpcNsProfileEltInqNextA");
    }
    public static int RpcNsProfileEltInqNextA ( Addressable InquiryContext,  Addressable IfId,  Addressable MemberName,  Addressable Priority,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.RpcNsProfileEltInqNextA$MH, "RpcNsProfileEltInqNextA");
        try {
            return (int)mh$.invokeExact(InquiryContext.address(), IfId.address(), MemberName.address(), Priority.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileDeleteW$MH() {
        return RuntimeHelper.requireNonNull(constants$817.RpcNsProfileDeleteW$MH,"RpcNsProfileDeleteW");
    }
    public static int RpcNsProfileDeleteW ( int ProfileNameSyntax,  Addressable ProfileName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$817.RpcNsProfileDeleteW$MH, "RpcNsProfileDeleteW");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltAddW$MH() {
        return RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltAddW$MH,"RpcNsProfileEltAddW");
    }
    public static int RpcNsProfileEltAddW ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName,  int Priority,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltAddW$MH, "RpcNsProfileEltAddW");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address(), Priority, Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltRemoveW$MH() {
        return RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltRemoveW$MH,"RpcNsProfileEltRemoveW");
    }
    public static int RpcNsProfileEltRemoveW ( int ProfileNameSyntax,  Addressable ProfileName,  Addressable IfId,  int MemberNameSyntax,  Addressable MemberName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltRemoveW$MH, "RpcNsProfileEltRemoveW");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address(), IfId.address(), MemberNameSyntax, MemberName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltInqBeginW$MH,"RpcNsProfileEltInqBeginW");
    }
    public static int RpcNsProfileEltInqBeginW ( int ProfileNameSyntax,  Addressable ProfileName,  int InquiryType,  Addressable IfId,  int VersOption,  int MemberNameSyntax,  Addressable MemberName,  Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltInqBeginW$MH, "RpcNsProfileEltInqBeginW");
        try {
            return (int)mh$.invokeExact(ProfileNameSyntax, ProfileName.address(), InquiryType, IfId.address(), VersOption, MemberNameSyntax, MemberName.address(), InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqNextW$MH() {
        return RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltInqNextW$MH,"RpcNsProfileEltInqNextW");
    }
    public static int RpcNsProfileEltInqNextW ( Addressable InquiryContext,  Addressable IfId,  Addressable MemberName,  Addressable Priority,  Addressable Annotation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltInqNextW$MH, "RpcNsProfileEltInqNextW");
        try {
            return (int)mh$.invokeExact(InquiryContext.address(), IfId.address(), MemberName.address(), Priority.address(), Annotation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsProfileEltInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltInqDone$MH,"RpcNsProfileEltInqDone");
    }
    public static int RpcNsProfileEltInqDone ( Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.RpcNsProfileEltInqDone$MH, "RpcNsProfileEltInqDone");
        try {
            return (int)mh$.invokeExact(InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$818.RpcNsEntryObjectInqBeginA$MH,"RpcNsEntryObjectInqBeginA");
    }
    public static int RpcNsEntryObjectInqBeginA ( int EntryNameSyntax,  Addressable EntryName,  Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$818.RpcNsEntryObjectInqBeginA$MH, "RpcNsEntryObjectInqBeginA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$819.RpcNsEntryObjectInqBeginW$MH,"RpcNsEntryObjectInqBeginW");
    }
    public static int RpcNsEntryObjectInqBeginW ( int EntryNameSyntax,  Addressable EntryName,  Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.RpcNsEntryObjectInqBeginW$MH, "RpcNsEntryObjectInqBeginW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqNext$MH() {
        return RuntimeHelper.requireNonNull(constants$819.RpcNsEntryObjectInqNext$MH,"RpcNsEntryObjectInqNext");
    }
    public static int RpcNsEntryObjectInqNext ( Addressable InquiryContext,  Addressable ObjUuid) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.RpcNsEntryObjectInqNext$MH, "RpcNsEntryObjectInqNext");
        try {
            return (int)mh$.invokeExact(InquiryContext.address(), ObjUuid.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryObjectInqDone$MH() {
        return RuntimeHelper.requireNonNull(constants$819.RpcNsEntryObjectInqDone$MH,"RpcNsEntryObjectInqDone");
    }
    public static int RpcNsEntryObjectInqDone ( Addressable InquiryContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.RpcNsEntryObjectInqDone$MH, "RpcNsEntryObjectInqDone");
        try {
            return (int)mh$.invokeExact(InquiryContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryExpandNameA$MH() {
        return RuntimeHelper.requireNonNull(constants$819.RpcNsEntryExpandNameA$MH,"RpcNsEntryExpandNameA");
    }
    public static int RpcNsEntryExpandNameA ( int EntryNameSyntax,  Addressable EntryName,  Addressable ExpandedName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.RpcNsEntryExpandNameA$MH, "RpcNsEntryExpandNameA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), ExpandedName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtBindingUnexportA$MH() {
        return RuntimeHelper.requireNonNull(constants$819.RpcNsMgmtBindingUnexportA$MH,"RpcNsMgmtBindingUnexportA");
    }
    public static int RpcNsMgmtBindingUnexportA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfId,  int VersOption,  Addressable ObjectUuidVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.RpcNsMgmtBindingUnexportA$MH, "RpcNsMgmtBindingUnexportA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfId.address(), VersOption, ObjectUuidVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryCreateA$MH() {
        return RuntimeHelper.requireNonNull(constants$819.RpcNsMgmtEntryCreateA$MH,"RpcNsMgmtEntryCreateA");
    }
    public static int RpcNsMgmtEntryCreateA ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$819.RpcNsMgmtEntryCreateA$MH, "RpcNsMgmtEntryCreateA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryDeleteA$MH() {
        return RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtEntryDeleteA$MH,"RpcNsMgmtEntryDeleteA");
    }
    public static int RpcNsMgmtEntryDeleteA ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtEntryDeleteA$MH, "RpcNsMgmtEntryDeleteA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryInqIfIdsA$MH() {
        return RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtEntryInqIfIdsA$MH,"RpcNsMgmtEntryInqIfIdsA");
    }
    public static int RpcNsMgmtEntryInqIfIdsA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfIdVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtEntryInqIfIdsA$MH, "RpcNsMgmtEntryInqIfIdsA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfIdVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtHandleSetExpAge$MH() {
        return RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtHandleSetExpAge$MH,"RpcNsMgmtHandleSetExpAge");
    }
    public static int RpcNsMgmtHandleSetExpAge ( Addressable NsHandle,  int ExpirationAge) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtHandleSetExpAge$MH, "RpcNsMgmtHandleSetExpAge");
        try {
            return (int)mh$.invokeExact(NsHandle.address(), ExpirationAge);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtInqExpAge$MH() {
        return RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtInqExpAge$MH,"RpcNsMgmtInqExpAge");
    }
    public static int RpcNsMgmtInqExpAge ( Addressable ExpirationAge) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtInqExpAge$MH, "RpcNsMgmtInqExpAge");
        try {
            return (int)mh$.invokeExact(ExpirationAge.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtSetExpAge$MH() {
        return RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtSetExpAge$MH,"RpcNsMgmtSetExpAge");
    }
    public static int RpcNsMgmtSetExpAge ( int ExpirationAge) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.RpcNsMgmtSetExpAge$MH, "RpcNsMgmtSetExpAge");
        try {
            return (int)mh$.invokeExact(ExpirationAge);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsEntryExpandNameW$MH() {
        return RuntimeHelper.requireNonNull(constants$820.RpcNsEntryExpandNameW$MH,"RpcNsEntryExpandNameW");
    }
    public static int RpcNsEntryExpandNameW ( int EntryNameSyntax,  Addressable EntryName,  Addressable ExpandedName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$820.RpcNsEntryExpandNameW$MH, "RpcNsEntryExpandNameW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), ExpandedName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtBindingUnexportW$MH() {
        return RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtBindingUnexportW$MH,"RpcNsMgmtBindingUnexportW");
    }
    public static int RpcNsMgmtBindingUnexportW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfId,  int VersOption,  Addressable ObjectUuidVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtBindingUnexportW$MH, "RpcNsMgmtBindingUnexportW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfId.address(), VersOption, ObjectUuidVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryCreateW$MH() {
        return RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtEntryCreateW$MH,"RpcNsMgmtEntryCreateW");
    }
    public static int RpcNsMgmtEntryCreateW ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtEntryCreateW$MH, "RpcNsMgmtEntryCreateW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryDeleteW$MH() {
        return RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtEntryDeleteW$MH,"RpcNsMgmtEntryDeleteW");
    }
    public static int RpcNsMgmtEntryDeleteW ( int EntryNameSyntax,  Addressable EntryName) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtEntryDeleteW$MH, "RpcNsMgmtEntryDeleteW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsMgmtEntryInqIfIdsW$MH() {
        return RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtEntryInqIfIdsW$MH,"RpcNsMgmtEntryInqIfIdsW");
    }
    public static int RpcNsMgmtEntryInqIfIdsW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfIdVec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.RpcNsMgmtEntryInqIfIdsW$MH, "RpcNsMgmtEntryInqIfIdsW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfIdVec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportBeginA$MH() {
        return RuntimeHelper.requireNonNull(constants$821.RpcNsBindingImportBeginA$MH,"RpcNsBindingImportBeginA");
    }
    public static int RpcNsBindingImportBeginA ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  Addressable ImportContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.RpcNsBindingImportBeginA$MH, "RpcNsBindingImportBeginA");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), ImportContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportBeginW$MH() {
        return RuntimeHelper.requireNonNull(constants$821.RpcNsBindingImportBeginW$MH,"RpcNsBindingImportBeginW");
    }
    public static int RpcNsBindingImportBeginW ( int EntryNameSyntax,  Addressable EntryName,  Addressable IfSpec,  Addressable ObjUuid,  Addressable ImportContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$821.RpcNsBindingImportBeginW$MH, "RpcNsBindingImportBeginW");
        try {
            return (int)mh$.invokeExact(EntryNameSyntax, EntryName.address(), IfSpec.address(), ObjUuid.address(), ImportContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportNext$MH() {
        return RuntimeHelper.requireNonNull(constants$822.RpcNsBindingImportNext$MH,"RpcNsBindingImportNext");
    }
    public static int RpcNsBindingImportNext ( Addressable ImportContext,  Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.RpcNsBindingImportNext$MH, "RpcNsBindingImportNext");
        try {
            return (int)mh$.invokeExact(ImportContext.address(), Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingImportDone$MH() {
        return RuntimeHelper.requireNonNull(constants$822.RpcNsBindingImportDone$MH,"RpcNsBindingImportDone");
    }
    public static int RpcNsBindingImportDone ( Addressable ImportContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.RpcNsBindingImportDone$MH, "RpcNsBindingImportDone");
        try {
            return (int)mh$.invokeExact(ImportContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcNsBindingSelect$MH() {
        return RuntimeHelper.requireNonNull(constants$822.RpcNsBindingSelect$MH,"RpcNsBindingSelect");
    }
    public static int RpcNsBindingSelect ( Addressable BindingVec,  Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$822.RpcNsBindingSelect$MH, "RpcNsBindingSelect");
        try {
            return (int)mh$.invokeExact(BindingVec.address(), Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int RpcNotificationTypeNone() {
        return (int)0L;
    }
    public static int RpcNotificationTypeEvent() {
        return (int)1L;
    }
    public static int RpcNotificationTypeApc() {
        return (int)2L;
    }
    public static int RpcNotificationTypeIoc() {
        return (int)3L;
    }
    public static int RpcNotificationTypeHwnd() {
        return (int)4L;
    }
    public static int RpcNotificationTypeCallback() {
        return (int)5L;
    }
    public static int RpcCallComplete() {
        return (int)0L;
    }
    public static int RpcSendComplete() {
        return (int)1L;
    }
    public static int RpcReceiveComplete() {
        return (int)2L;
    }
    public static MethodHandle RpcAsyncInitializeHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$823.RpcAsyncInitializeHandle$MH,"RpcAsyncInitializeHandle");
    }
    public static int RpcAsyncInitializeHandle ( Addressable pAsync,  int Size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.RpcAsyncInitializeHandle$MH, "RpcAsyncInitializeHandle");
        try {
            return (int)mh$.invokeExact(pAsync.address(), Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncRegisterInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$823.RpcAsyncRegisterInfo$MH,"RpcAsyncRegisterInfo");
    }
    public static int RpcAsyncRegisterInfo ( Addressable pAsync) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.RpcAsyncRegisterInfo$MH, "RpcAsyncRegisterInfo");
        try {
            return (int)mh$.invokeExact(pAsync.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncGetCallStatus$MH() {
        return RuntimeHelper.requireNonNull(constants$823.RpcAsyncGetCallStatus$MH,"RpcAsyncGetCallStatus");
    }
    public static int RpcAsyncGetCallStatus ( Addressable pAsync) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.RpcAsyncGetCallStatus$MH, "RpcAsyncGetCallStatus");
        try {
            return (int)mh$.invokeExact(pAsync.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncCompleteCall$MH() {
        return RuntimeHelper.requireNonNull(constants$823.RpcAsyncCompleteCall$MH,"RpcAsyncCompleteCall");
    }
    public static int RpcAsyncCompleteCall ( Addressable pAsync,  Addressable Reply) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.RpcAsyncCompleteCall$MH, "RpcAsyncCompleteCall");
        try {
            return (int)mh$.invokeExact(pAsync.address(), Reply.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncAbortCall$MH() {
        return RuntimeHelper.requireNonNull(constants$823.RpcAsyncAbortCall$MH,"RpcAsyncAbortCall");
    }
    public static int RpcAsyncAbortCall ( Addressable pAsync,  int ExceptionCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$823.RpcAsyncAbortCall$MH, "RpcAsyncAbortCall");
        try {
            return (int)mh$.invokeExact(pAsync.address(), ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncCancelCall$MH() {
        return RuntimeHelper.requireNonNull(constants$824.RpcAsyncCancelCall$MH,"RpcAsyncCancelCall");
    }
    public static int RpcAsyncCancelCall ( Addressable pAsync,  int fAbort) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.RpcAsyncCancelCall$MH, "RpcAsyncCancelCall");
        try {
            return (int)mh$.invokeExact(pAsync.address(), fAbort);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcAsyncCleanupThread$MH() {
        return RuntimeHelper.requireNonNull(constants$824.RpcAsyncCleanupThread$MH,"RpcAsyncCleanupThread");
    }
    public static int RpcAsyncCleanupThread ( int dwTimeout) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.RpcAsyncCleanupThread$MH, "RpcAsyncCleanupThread");
        try {
            return (int)mh$.invokeExact(dwTimeout);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int eeptAnsiString() {
        return (int)1L;
    }
    public static int eeptUnicodeString() {
        return (int)2L;
    }
    public static int eeptLongVal() {
        return (int)3L;
    }
    public static int eeptShortVal() {
        return (int)4L;
    }
    public static int eeptPointerVal() {
        return (int)5L;
    }
    public static int eeptNone() {
        return (int)6L;
    }
    public static int eeptBinary() {
        return (int)7L;
    }
    public static MethodHandle RpcErrorStartEnumeration$MH() {
        return RuntimeHelper.requireNonNull(constants$824.RpcErrorStartEnumeration$MH,"RpcErrorStartEnumeration");
    }
    public static int RpcErrorStartEnumeration ( Addressable EnumHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.RpcErrorStartEnumeration$MH, "RpcErrorStartEnumeration");
        try {
            return (int)mh$.invokeExact(EnumHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorGetNextRecord$MH() {
        return RuntimeHelper.requireNonNull(constants$824.RpcErrorGetNextRecord$MH,"RpcErrorGetNextRecord");
    }
    public static int RpcErrorGetNextRecord ( Addressable EnumHandle,  int CopyStrings,  Addressable ErrorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.RpcErrorGetNextRecord$MH, "RpcErrorGetNextRecord");
        try {
            return (int)mh$.invokeExact(EnumHandle.address(), CopyStrings, ErrorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorEndEnumeration$MH() {
        return RuntimeHelper.requireNonNull(constants$824.RpcErrorEndEnumeration$MH,"RpcErrorEndEnumeration");
    }
    public static int RpcErrorEndEnumeration ( Addressable EnumHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.RpcErrorEndEnumeration$MH, "RpcErrorEndEnumeration");
        try {
            return (int)mh$.invokeExact(EnumHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorResetEnumeration$MH() {
        return RuntimeHelper.requireNonNull(constants$824.RpcErrorResetEnumeration$MH,"RpcErrorResetEnumeration");
    }
    public static int RpcErrorResetEnumeration ( Addressable EnumHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$824.RpcErrorResetEnumeration$MH, "RpcErrorResetEnumeration");
        try {
            return (int)mh$.invokeExact(EnumHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorGetNumberOfRecords$MH() {
        return RuntimeHelper.requireNonNull(constants$825.RpcErrorGetNumberOfRecords$MH,"RpcErrorGetNumberOfRecords");
    }
    public static int RpcErrorGetNumberOfRecords ( Addressable EnumHandle,  Addressable Records) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.RpcErrorGetNumberOfRecords$MH, "RpcErrorGetNumberOfRecords");
        try {
            return (int)mh$.invokeExact(EnumHandle.address(), Records.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorSaveErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$825.RpcErrorSaveErrorInfo$MH,"RpcErrorSaveErrorInfo");
    }
    public static int RpcErrorSaveErrorInfo ( Addressable EnumHandle,  Addressable ErrorBlob,  Addressable BlobSize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.RpcErrorSaveErrorInfo$MH, "RpcErrorSaveErrorInfo");
        try {
            return (int)mh$.invokeExact(EnumHandle.address(), ErrorBlob.address(), BlobSize.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorLoadErrorInfo$MH() {
        return RuntimeHelper.requireNonNull(constants$825.RpcErrorLoadErrorInfo$MH,"RpcErrorLoadErrorInfo");
    }
    public static int RpcErrorLoadErrorInfo ( Addressable ErrorBlob,  long BlobSize,  Addressable EnumHandle) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.RpcErrorLoadErrorInfo$MH, "RpcErrorLoadErrorInfo");
        try {
            return (int)mh$.invokeExact(ErrorBlob.address(), BlobSize, EnumHandle.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorAddRecord$MH() {
        return RuntimeHelper.requireNonNull(constants$825.RpcErrorAddRecord$MH,"RpcErrorAddRecord");
    }
    public static int RpcErrorAddRecord ( Addressable ErrorInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.RpcErrorAddRecord$MH, "RpcErrorAddRecord");
        try {
            return (int)mh$.invokeExact(ErrorInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcErrorClearInformation$MH() {
        return RuntimeHelper.requireNonNull(constants$825.RpcErrorClearInformation$MH,"RpcErrorClearInformation");
    }
    public static void RpcErrorClearInformation () {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.RpcErrorClearInformation$MH, "RpcErrorClearInformation");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcGetAuthorizationContextForClient$MH() {
        return RuntimeHelper.requireNonNull(constants$825.RpcGetAuthorizationContextForClient$MH,"RpcGetAuthorizationContextForClient");
    }
    public static int RpcGetAuthorizationContextForClient ( Addressable ClientBinding,  int ImpersonateOnReturn,  Addressable Reserved1,  Addressable pExpirationTime,  MemorySegment Reserved2,  int Reserved3,  Addressable Reserved4,  Addressable pAuthzClientContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$825.RpcGetAuthorizationContextForClient$MH, "RpcGetAuthorizationContextForClient");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), ImpersonateOnReturn, Reserved1.address(), pExpirationTime.address(), Reserved2, Reserved3, Reserved4.address(), pAuthzClientContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcFreeAuthorizationContext$MH() {
        return RuntimeHelper.requireNonNull(constants$826.RpcFreeAuthorizationContext$MH,"RpcFreeAuthorizationContext");
    }
    public static int RpcFreeAuthorizationContext ( Addressable pAuthzClientContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.RpcFreeAuthorizationContext$MH, "RpcFreeAuthorizationContext");
        try {
            return (int)mh$.invokeExact(pAuthzClientContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsContextLockExclusive$MH() {
        return RuntimeHelper.requireNonNull(constants$826.RpcSsContextLockExclusive$MH,"RpcSsContextLockExclusive");
    }
    public static int RpcSsContextLockExclusive ( Addressable ServerBindingHandle,  Addressable UserContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.RpcSsContextLockExclusive$MH, "RpcSsContextLockExclusive");
        try {
            return (int)mh$.invokeExact(ServerBindingHandle.address(), UserContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcSsContextLockShared$MH() {
        return RuntimeHelper.requireNonNull(constants$826.RpcSsContextLockShared$MH,"RpcSsContextLockShared");
    }
    public static int RpcSsContextLockShared ( Addressable ServerBindingHandle,  Addressable UserContext) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.RpcSsContextLockShared$MH, "RpcSsContextLockShared");
        try {
            return (int)mh$.invokeExact(ServerBindingHandle.address(), UserContext.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqCallAttributesW$MH() {
        return RuntimeHelper.requireNonNull(constants$826.RpcServerInqCallAttributesW$MH,"RpcServerInqCallAttributesW");
    }
    public static int RpcServerInqCallAttributesW ( Addressable ClientBinding,  Addressable RpcCallAttributes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.RpcServerInqCallAttributesW$MH, "RpcServerInqCallAttributesW");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), RpcCallAttributes.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerInqCallAttributesA$MH() {
        return RuntimeHelper.requireNonNull(constants$826.RpcServerInqCallAttributesA$MH,"RpcServerInqCallAttributesA");
    }
    public static int RpcServerInqCallAttributesA ( Addressable ClientBinding,  Addressable RpcCallAttributes) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.RpcServerInqCallAttributesA$MH, "RpcServerInqCallAttributesA");
        try {
            return (int)mh$.invokeExact(ClientBinding.address(), RpcCallAttributes.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcAsyncSetHandle$MH() {
        return RuntimeHelper.requireNonNull(constants$826.I_RpcAsyncSetHandle$MH,"I_RpcAsyncSetHandle");
    }
    public static int I_RpcAsyncSetHandle ( Addressable Message,  Addressable pAsync) {
        var mh$ = RuntimeHelper.requireNonNull(constants$826.I_RpcAsyncSetHandle$MH, "I_RpcAsyncSetHandle");
        try {
            return (int)mh$.invokeExact(Message.address(), pAsync.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcAsyncAbortCall$MH() {
        return RuntimeHelper.requireNonNull(constants$827.I_RpcAsyncAbortCall$MH,"I_RpcAsyncAbortCall");
    }
    public static int I_RpcAsyncAbortCall ( Addressable pAsync,  int ExceptionCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.I_RpcAsyncAbortCall$MH, "I_RpcAsyncAbortCall");
        try {
            return (int)mh$.invokeExact(pAsync.address(), ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle I_RpcExceptionFilter$MH() {
        return RuntimeHelper.requireNonNull(constants$827.I_RpcExceptionFilter$MH,"I_RpcExceptionFilter");
    }
    public static int I_RpcExceptionFilter ( int ExceptionCode) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.I_RpcExceptionFilter$MH, "I_RpcExceptionFilter");
        try {
            return (int)mh$.invokeExact(ExceptionCode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingBind$MH() {
        return RuntimeHelper.requireNonNull(constants$827.RpcBindingBind$MH,"RpcBindingBind");
    }
    public static int RpcBindingBind ( Addressable pAsync,  Addressable Binding,  Addressable IfSpec) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.RpcBindingBind$MH, "RpcBindingBind");
        try {
            return (int)mh$.invokeExact(pAsync.address(), Binding.address(), IfSpec.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcBindingUnbind$MH() {
        return RuntimeHelper.requireNonNull(constants$827.RpcBindingUnbind$MH,"RpcBindingUnbind");
    }
    public static int RpcBindingUnbind ( Addressable Binding) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.RpcBindingUnbind$MH, "RpcBindingUnbind");
        try {
            return (int)mh$.invokeExact(Binding.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int rctInvalid() {
        return (int)0L;
    }
    public static int rctNormal() {
        return (int)1L;
    }
    public static int rctTraining() {
        return (int)2L;
    }
    public static int rctGuaranteed() {
        return (int)3L;
    }
    public static int rlafInvalid() {
        return (int)0L;
    }
    public static int rlafIPv4() {
        return (int)1L;
    }
    public static int rlafIPv6() {
        return (int)2L;
    }
    public static int RpcNotificationCallNone() {
        return (int)0L;
    }
    public static int RpcNotificationClientDisconnect() {
        return (int)1L;
    }
    public static int RpcNotificationCallCancel() {
        return (int)2L;
    }
    public static int rcclInvalid() {
        return (int)0L;
    }
    public static int rcclLocal() {
        return (int)1L;
    }
    public static int rcclRemote() {
        return (int)2L;
    }
    public static int rcclClientUnknownLocality() {
        return (int)3L;
    }
    public static MethodHandle RpcServerSubscribeForNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$827.RpcServerSubscribeForNotification$MH,"RpcServerSubscribeForNotification");
    }
    public static int RpcServerSubscribeForNotification ( Addressable Binding,  int Notification,  int NotificationType,  Addressable NotificationInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.RpcServerSubscribeForNotification$MH, "RpcServerSubscribeForNotification");
        try {
            return (int)mh$.invokeExact(Binding.address(), Notification, NotificationType, NotificationInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcServerUnsubscribeForNotification$MH() {
        return RuntimeHelper.requireNonNull(constants$827.RpcServerUnsubscribeForNotification$MH,"RpcServerUnsubscribeForNotification");
    }
    public static int RpcServerUnsubscribeForNotification ( Addressable Binding,  int Notification,  Addressable NotificationsQueued) {
        var mh$ = RuntimeHelper.requireNonNull(constants$827.RpcServerUnsubscribeForNotification$MH, "RpcServerUnsubscribeForNotification");
        try {
            return (int)mh$.invokeExact(Binding.address(), Notification, NotificationsQueued.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle RpcDiagnoseError$MH() {
        return RuntimeHelper.requireNonNull(constants$828.RpcDiagnoseError$MH,"RpcDiagnoseError");
    }
    public static int RpcDiagnoseError ( Addressable BindingHandle,  Addressable IfSpec,  int RpcStatus,  Addressable EnumHandle,  int Options,  Addressable ParentWindow) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.RpcDiagnoseError$MH, "RpcDiagnoseError");
        try {
            return (int)mh$.invokeExact(BindingHandle.address(), IfSpec.address(), RpcStatus, EnumHandle.address(), Options, ParentWindow.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragQueryFileA$MH() {
        return RuntimeHelper.requireNonNull(constants$828.DragQueryFileA$MH,"DragQueryFileA");
    }
    public static int DragQueryFileA ( Addressable hDrop,  int iFile,  Addressable lpszFile,  int cch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.DragQueryFileA$MH, "DragQueryFileA");
        try {
            return (int)mh$.invokeExact(hDrop.address(), iFile, lpszFile.address(), cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragQueryFileW$MH() {
        return RuntimeHelper.requireNonNull(constants$828.DragQueryFileW$MH,"DragQueryFileW");
    }
    public static int DragQueryFileW ( Addressable hDrop,  int iFile,  Addressable lpszFile,  int cch) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.DragQueryFileW$MH, "DragQueryFileW");
        try {
            return (int)mh$.invokeExact(hDrop.address(), iFile, lpszFile.address(), cch);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragQueryPoint$MH() {
        return RuntimeHelper.requireNonNull(constants$828.DragQueryPoint$MH,"DragQueryPoint");
    }
    public static int DragQueryPoint ( Addressable hDrop,  Addressable ppt) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.DragQueryPoint$MH, "DragQueryPoint");
        try {
            return (int)mh$.invokeExact(hDrop.address(), ppt.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragFinish$MH() {
        return RuntimeHelper.requireNonNull(constants$828.DragFinish$MH,"DragFinish");
    }
    public static void DragFinish ( Addressable hDrop) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.DragFinish$MH, "DragFinish");
        try {
            mh$.invokeExact(hDrop.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DragAcceptFiles$MH() {
        return RuntimeHelper.requireNonNull(constants$828.DragAcceptFiles$MH,"DragAcceptFiles");
    }
    public static void DragAcceptFiles ( Addressable hWnd,  int fAccept) {
        var mh$ = RuntimeHelper.requireNonNull(constants$828.DragAcceptFiles$MH, "DragAcceptFiles");
        try {
            mh$.invokeExact(hWnd.address(), fAccept);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellExecuteA$MH() {
        return RuntimeHelper.requireNonNull(constants$829.ShellExecuteA$MH,"ShellExecuteA");
    }
    public static MemoryAddress ShellExecuteA ( Addressable hwnd,  Addressable lpOperation,  Addressable lpFile,  Addressable lpParameters,  Addressable lpDirectory,  int nShowCmd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.ShellExecuteA$MH, "ShellExecuteA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hwnd.address(), lpOperation.address(), lpFile.address(), lpParameters.address(), lpDirectory.address(), nShowCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellExecuteW$MH() {
        return RuntimeHelper.requireNonNull(constants$829.ShellExecuteW$MH,"ShellExecuteW");
    }
    public static MemoryAddress ShellExecuteW ( Addressable hwnd,  Addressable lpOperation,  Addressable lpFile,  Addressable lpParameters,  Addressable lpDirectory,  int nShowCmd) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.ShellExecuteW$MH, "ShellExecuteW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hwnd.address(), lpOperation.address(), lpFile.address(), lpParameters.address(), lpDirectory.address(), nShowCmd);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindExecutableA$MH() {
        return RuntimeHelper.requireNonNull(constants$829.FindExecutableA$MH,"FindExecutableA");
    }
    public static MemoryAddress FindExecutableA ( Addressable lpFile,  Addressable lpDirectory,  Addressable lpResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.FindExecutableA$MH, "FindExecutableA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpFile.address(), lpDirectory.address(), lpResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle FindExecutableW$MH() {
        return RuntimeHelper.requireNonNull(constants$829.FindExecutableW$MH,"FindExecutableW");
    }
    public static MemoryAddress FindExecutableW ( Addressable lpFile,  Addressable lpDirectory,  Addressable lpResult) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.FindExecutableW$MH, "FindExecutableW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(lpFile.address(), lpDirectory.address(), lpResult.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellAboutA$MH() {
        return RuntimeHelper.requireNonNull(constants$829.ShellAboutA$MH,"ShellAboutA");
    }
    public static int ShellAboutA ( Addressable hWnd,  Addressable szApp,  Addressable szOtherStuff,  Addressable hIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.ShellAboutA$MH, "ShellAboutA");
        try {
            return (int)mh$.invokeExact(hWnd.address(), szApp.address(), szOtherStuff.address(), hIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellAboutW$MH() {
        return RuntimeHelper.requireNonNull(constants$829.ShellAboutW$MH,"ShellAboutW");
    }
    public static int ShellAboutW ( Addressable hWnd,  Addressable szApp,  Addressable szOtherStuff,  Addressable hIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$829.ShellAboutW$MH, "ShellAboutW");
        try {
            return (int)mh$.invokeExact(hWnd.address(), szApp.address(), szOtherStuff.address(), hIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DuplicateIcon$MH() {
        return RuntimeHelper.requireNonNull(constants$830.DuplicateIcon$MH,"DuplicateIcon");
    }
    public static MemoryAddress DuplicateIcon ( Addressable hInst,  Addressable hIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.DuplicateIcon$MH, "DuplicateIcon");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), hIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconA$MH,"ExtractAssociatedIconA");
    }
    public static MemoryAddress ExtractAssociatedIconA ( Addressable hInst,  Addressable pszIconPath,  Addressable piIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconA$MH, "ExtractAssociatedIconA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), pszIconPath.address(), piIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconW$MH,"ExtractAssociatedIconW");
    }
    public static MemoryAddress ExtractAssociatedIconW ( Addressable hInst,  Addressable pszIconPath,  Addressable piIcon) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconW$MH, "ExtractAssociatedIconW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), pszIconPath.address(), piIcon.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconExA$MH() {
        return RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconExA$MH,"ExtractAssociatedIconExA");
    }
    public static MemoryAddress ExtractAssociatedIconExA ( Addressable hInst,  Addressable pszIconPath,  Addressable piIconIndex,  Addressable piIconId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconExA$MH, "ExtractAssociatedIconExA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), pszIconPath.address(), piIconIndex.address(), piIconId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractAssociatedIconExW$MH() {
        return RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconExW$MH,"ExtractAssociatedIconExW");
    }
    public static MemoryAddress ExtractAssociatedIconExW ( Addressable hInst,  Addressable pszIconPath,  Addressable piIconIndex,  Addressable piIconId) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.ExtractAssociatedIconExW$MH, "ExtractAssociatedIconExW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), pszIconPath.address(), piIconIndex.address(), piIconId.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$830.ExtractIconA$MH,"ExtractIconA");
    }
    public static MemoryAddress ExtractIconA ( Addressable hInst,  Addressable pszExeFileName,  int nIconIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$830.ExtractIconA$MH, "ExtractIconA");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), pszExeFileName.address(), nIconIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$831.ExtractIconW$MH,"ExtractIconW");
    }
    public static MemoryAddress ExtractIconW ( Addressable hInst,  Addressable pszExeFileName,  int nIconIndex) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.ExtractIconW$MH, "ExtractIconW");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hInst.address(), pszExeFileName.address(), nIconIndex);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHAppBarMessage$MH() {
        return RuntimeHelper.requireNonNull(constants$831.SHAppBarMessage$MH,"SHAppBarMessage");
    }
    public static long SHAppBarMessage ( int dwMessage,  Addressable pData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.SHAppBarMessage$MH, "SHAppBarMessage");
        try {
            return (long)mh$.invokeExact(dwMessage, pData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DoEnvironmentSubstA$MH() {
        return RuntimeHelper.requireNonNull(constants$831.DoEnvironmentSubstA$MH,"DoEnvironmentSubstA");
    }
    public static int DoEnvironmentSubstA ( Addressable pszSrc,  int cchSrc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.DoEnvironmentSubstA$MH, "DoEnvironmentSubstA");
        try {
            return (int)mh$.invokeExact(pszSrc.address(), cchSrc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle DoEnvironmentSubstW$MH() {
        return RuntimeHelper.requireNonNull(constants$831.DoEnvironmentSubstW$MH,"DoEnvironmentSubstW");
    }
    public static int DoEnvironmentSubstW ( Addressable pszSrc,  int cchSrc) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.DoEnvironmentSubstW$MH, "DoEnvironmentSubstW");
        try {
            return (int)mh$.invokeExact(pszSrc.address(), cchSrc);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconExA$MH() {
        return RuntimeHelper.requireNonNull(constants$831.ExtractIconExA$MH,"ExtractIconExA");
    }
    public static int ExtractIconExA ( Addressable lpszFile,  int nIconIndex,  Addressable phiconLarge,  Addressable phiconSmall,  int nIcons) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.ExtractIconExA$MH, "ExtractIconExA");
        try {
            return (int)mh$.invokeExact(lpszFile.address(), nIconIndex, phiconLarge.address(), phiconSmall.address(), nIcons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ExtractIconExW$MH() {
        return RuntimeHelper.requireNonNull(constants$831.ExtractIconExW$MH,"ExtractIconExW");
    }
    public static int ExtractIconExW ( Addressable lpszFile,  int nIconIndex,  Addressable phiconLarge,  Addressable phiconSmall,  int nIcons) {
        var mh$ = RuntimeHelper.requireNonNull(constants$831.ExtractIconExW$MH, "ExtractIconExW");
        try {
            return (int)mh$.invokeExact(lpszFile.address(), nIconIndex, phiconLarge.address(), phiconSmall.address(), nIcons);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHFileOperationA$MH() {
        return RuntimeHelper.requireNonNull(constants$832.SHFileOperationA$MH,"SHFileOperationA");
    }
    public static int SHFileOperationA ( Addressable lpFileOp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.SHFileOperationA$MH, "SHFileOperationA");
        try {
            return (int)mh$.invokeExact(lpFileOp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHFileOperationW$MH() {
        return RuntimeHelper.requireNonNull(constants$832.SHFileOperationW$MH,"SHFileOperationW");
    }
    public static int SHFileOperationW ( Addressable lpFileOp) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.SHFileOperationW$MH, "SHFileOperationW");
        try {
            return (int)mh$.invokeExact(lpFileOp.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHFreeNameMappings$MH() {
        return RuntimeHelper.requireNonNull(constants$832.SHFreeNameMappings$MH,"SHFreeNameMappings");
    }
    public static void SHFreeNameMappings ( Addressable hNameMappings) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.SHFreeNameMappings$MH, "SHFreeNameMappings");
        try {
            mh$.invokeExact(hNameMappings.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellExecuteExA$MH() {
        return RuntimeHelper.requireNonNull(constants$832.ShellExecuteExA$MH,"ShellExecuteExA");
    }
    public static int ShellExecuteExA ( Addressable pExecInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.ShellExecuteExA$MH, "ShellExecuteExA");
        try {
            return (int)mh$.invokeExact(pExecInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ShellExecuteExW$MH() {
        return RuntimeHelper.requireNonNull(constants$832.ShellExecuteExW$MH,"ShellExecuteExW");
    }
    public static int ShellExecuteExW ( Addressable pExecInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.ShellExecuteExW$MH, "ShellExecuteExW");
        try {
            return (int)mh$.invokeExact(pExecInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHCreateProcessAsUserW$MH() {
        return RuntimeHelper.requireNonNull(constants$832.SHCreateProcessAsUserW$MH,"SHCreateProcessAsUserW");
    }
    public static int SHCreateProcessAsUserW ( Addressable pscpi) {
        var mh$ = RuntimeHelper.requireNonNull(constants$832.SHCreateProcessAsUserW$MH, "SHCreateProcessAsUserW");
        try {
            return (int)mh$.invokeExact(pscpi.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHEvaluateSystemCommandTemplate$MH() {
        return RuntimeHelper.requireNonNull(constants$833.SHEvaluateSystemCommandTemplate$MH,"SHEvaluateSystemCommandTemplate");
    }
    public static int SHEvaluateSystemCommandTemplate ( Addressable pszCmdTemplate,  Addressable ppszApplication,  Addressable ppszCommandLine,  Addressable ppszParameters) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.SHEvaluateSystemCommandTemplate$MH, "SHEvaluateSystemCommandTemplate");
        try {
            return (int)mh$.invokeExact(pszCmdTemplate.address(), ppszApplication.address(), ppszCommandLine.address(), ppszParameters.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int ASSOCCLASS_SHELL_KEY() {
        return (int)0L;
    }
    public static int ASSOCCLASS_PROGID_KEY() {
        return (int)1L;
    }
    public static int ASSOCCLASS_PROGID_STR() {
        return (int)2L;
    }
    public static int ASSOCCLASS_CLSID_KEY() {
        return (int)3L;
    }
    public static int ASSOCCLASS_CLSID_STR() {
        return (int)4L;
    }
    public static int ASSOCCLASS_APP_KEY() {
        return (int)5L;
    }
    public static int ASSOCCLASS_APP_STR() {
        return (int)6L;
    }
    public static int ASSOCCLASS_SYSTEM_STR() {
        return (int)7L;
    }
    public static int ASSOCCLASS_FOLDER() {
        return (int)8L;
    }
    public static int ASSOCCLASS_STAR() {
        return (int)9L;
    }
    public static MethodHandle AssocCreateForClasses$MH() {
        return RuntimeHelper.requireNonNull(constants$833.AssocCreateForClasses$MH,"AssocCreateForClasses");
    }
    public static int AssocCreateForClasses ( Addressable rgClasses,  int cClasses,  Addressable riid,  Addressable ppv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.AssocCreateForClasses$MH, "AssocCreateForClasses");
        try {
            return (int)mh$.invokeExact(rgClasses.address(), cClasses, riid.address(), ppv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHQueryRecycleBinA$MH() {
        return RuntimeHelper.requireNonNull(constants$833.SHQueryRecycleBinA$MH,"SHQueryRecycleBinA");
    }
    public static int SHQueryRecycleBinA ( Addressable pszRootPath,  Addressable pSHQueryRBInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.SHQueryRecycleBinA$MH, "SHQueryRecycleBinA");
        try {
            return (int)mh$.invokeExact(pszRootPath.address(), pSHQueryRBInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHQueryRecycleBinW$MH() {
        return RuntimeHelper.requireNonNull(constants$833.SHQueryRecycleBinW$MH,"SHQueryRecycleBinW");
    }
    public static int SHQueryRecycleBinW ( Addressable pszRootPath,  Addressable pSHQueryRBInfo) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.SHQueryRecycleBinW$MH, "SHQueryRecycleBinW");
        try {
            return (int)mh$.invokeExact(pszRootPath.address(), pSHQueryRBInfo.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHEmptyRecycleBinA$MH() {
        return RuntimeHelper.requireNonNull(constants$833.SHEmptyRecycleBinA$MH,"SHEmptyRecycleBinA");
    }
    public static int SHEmptyRecycleBinA ( Addressable hwnd,  Addressable pszRootPath,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.SHEmptyRecycleBinA$MH, "SHEmptyRecycleBinA");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pszRootPath.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHEmptyRecycleBinW$MH() {
        return RuntimeHelper.requireNonNull(constants$833.SHEmptyRecycleBinW$MH,"SHEmptyRecycleBinW");
    }
    public static int SHEmptyRecycleBinW ( Addressable hwnd,  Addressable pszRootPath,  int dwFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$833.SHEmptyRecycleBinW$MH, "SHEmptyRecycleBinW");
        try {
            return (int)mh$.invokeExact(hwnd.address(), pszRootPath.address(), dwFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int QUNS_NOT_PRESENT() {
        return (int)1L;
    }
    public static int QUNS_BUSY() {
        return (int)2L;
    }
    public static int QUNS_RUNNING_D3D_FULL_SCREEN() {
        return (int)3L;
    }
    public static int QUNS_PRESENTATION_MODE() {
        return (int)4L;
    }
    public static int QUNS_ACCEPTS_NOTIFICATIONS() {
        return (int)5L;
    }
    public static int QUNS_QUIET_TIME() {
        return (int)6L;
    }
    public static MethodHandle SHQueryUserNotificationState$MH() {
        return RuntimeHelper.requireNonNull(constants$834.SHQueryUserNotificationState$MH,"SHQueryUserNotificationState");
    }
    public static int SHQueryUserNotificationState ( Addressable pquns) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.SHQueryUserNotificationState$MH, "SHQueryUserNotificationState");
        try {
            return (int)mh$.invokeExact(pquns.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHGetPropertyStoreForWindow$MH() {
        return RuntimeHelper.requireNonNull(constants$834.SHGetPropertyStoreForWindow$MH,"SHGetPropertyStoreForWindow");
    }
    public static int SHGetPropertyStoreForWindow ( Addressable hwnd,  Addressable riid,  Addressable ppv) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.SHGetPropertyStoreForWindow$MH, "SHGetPropertyStoreForWindow");
        try {
            return (int)mh$.invokeExact(hwnd.address(), riid.address(), ppv.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Shell_NotifyIconA$MH() {
        return RuntimeHelper.requireNonNull(constants$834.Shell_NotifyIconA$MH,"Shell_NotifyIconA");
    }
    public static int Shell_NotifyIconA ( int dwMessage,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.Shell_NotifyIconA$MH, "Shell_NotifyIconA");
        try {
            return (int)mh$.invokeExact(dwMessage, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Shell_NotifyIconW$MH() {
        return RuntimeHelper.requireNonNull(constants$834.Shell_NotifyIconW$MH,"Shell_NotifyIconW");
    }
    public static int Shell_NotifyIconW ( int dwMessage,  Addressable lpData) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.Shell_NotifyIconW$MH, "Shell_NotifyIconW");
        try {
            return (int)mh$.invokeExact(dwMessage, lpData.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle Shell_NotifyIconGetRect$MH() {
        return RuntimeHelper.requireNonNull(constants$834.Shell_NotifyIconGetRect$MH,"Shell_NotifyIconGetRect");
    }
    public static int Shell_NotifyIconGetRect ( Addressable identifier,  Addressable iconLocation) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.Shell_NotifyIconGetRect$MH, "Shell_NotifyIconGetRect");
        try {
            return (int)mh$.invokeExact(identifier.address(), iconLocation.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHGetFileInfoA$MH() {
        return RuntimeHelper.requireNonNull(constants$834.SHGetFileInfoA$MH,"SHGetFileInfoA");
    }
    public static long SHGetFileInfoA ( Addressable pszPath,  int dwFileAttributes,  Addressable psfi,  int cbFileInfo,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$834.SHGetFileInfoA$MH, "SHGetFileInfoA");
        try {
            return (long)mh$.invokeExact(pszPath.address(), dwFileAttributes, psfi.address(), cbFileInfo, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle SHGetFileInfoW$MH() {
        return RuntimeHelper.requireNonNull(constants$835.SHGetFileInfoW$MH,"SHGetFileInfoW");
    }
    public static long SHGetFileInfoW ( Addressable pszPath,  int dwFileAttributes,  Addressable psfi,  int cbFileInfo,  int uFlags) {
        var mh$ = RuntimeHelper.requireNonNull(constants$835.SHGetFileInfoW$MH, "SHGetFileInfoW");
        try {
            return (long)mh$.invokeExact(pszPath.address(), dwFileAttributes, psfi.address(), cbFileInfo, uFlags);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static int SIID_DOCNOASSOC() {
        return (int)0L;
    }
    public static int SIID_DOCASSOC() {
        return (int)1L;
    }
    public static int SIID_APPLICATION() {
        return (int)2L;
    }
    public static int SIID_FOLDER() {
        return (int)3L;
    }
    public static int SIID_FOLDEROPEN() {
        return (int)4L;
    }
    public static int SIID_DRIVE525() {
        return (int)5L;
    }
    public static int SIID_DRIVE35() {
        return (int)6L;
    }
    public static int SIID_DRIVEREMOVE() {
        return (int)7L;
    }
    public static int SIID_DRIVEFIXED() {
        return (int)8L;
    }
    public static int SIID_DRIVENET() {
        return (int)9L;
    }
    public static int SIID_DRIVENETDISABLED() {
        return (int)10L;
    }
    public static int SIID_DRIVECD() {
        return (int)11L;
    }
    public static int SIID_DRIVERAM() {
        return (int)12L;
    }
    public static int SIID_WORLD() {
        return (int)13L;
    }
    public static int SIID_SERVER() {
        return (int)15L;
    }
    public static int SIID_PRINTER() {
        return (int)16L;
    }
    public static int SIID_MYNETWORK() {
        return (int)17L;
    }
    public static int SIID_FIND() {
        return (int)22L;
    }
    public static int SIID_HELP() {
        return (int)23L;
    }
    public static int SIID_SHARE() {
        return (int)28L;
    }
    public static int SIID_LINK() {
        return (int)29L;
    }
    public static int SIID_SLOWFILE() {
        return (int)30L;
    }
    public static int SIID_RECYCLER() {
        return (int)31L;
    }
}


