// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1269 {

    static final FunctionDescriptor OleTranslateAccelerator$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle OleTranslateAccelerator$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OleTranslateAccelerator",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1269.OleTranslateAccelerator$FUNC, false
    );
    static final FunctionDescriptor OleDuplicateData$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_SHORT,
        C_INT
    );
    static final MethodHandle OleDuplicateData$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OleDuplicateData",
        "(Ljdk/incubator/foreign/MemoryAddress;SI)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1269.OleDuplicateData$FUNC, false
    );
    static final FunctionDescriptor OleDraw$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle OleDraw$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OleDraw",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1269.OleDraw$FUNC, false
    );
    static final FunctionDescriptor OleRun$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle OleRun$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OleRun",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1269.OleRun$FUNC, false
    );
    static final FunctionDescriptor OleIsRunning$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle OleIsRunning$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OleIsRunning",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1269.OleIsRunning$FUNC, false
    );
    static final FunctionDescriptor OleLockRunning$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle OleLockRunning$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OleLockRunning",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$1269.OleLockRunning$FUNC, false
    );
}


