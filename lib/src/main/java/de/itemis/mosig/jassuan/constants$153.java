// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$153 {

    static final FunctionDescriptor _get_osplatform$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _get_osplatform$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_get_osplatform",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$153._get_osplatform$FUNC, false
    );
    static final FunctionDescriptor _get_osver$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _get_osver$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_get_osver",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$153._get_osver$FUNC, false
    );
    static final FunctionDescriptor _get_winver$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _get_winver$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_get_winver",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$153._get_winver$FUNC, false
    );
    static final FunctionDescriptor _get_winmajor$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _get_winmajor$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_get_winmajor",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$153._get_winmajor$FUNC, false
    );
    static final FunctionDescriptor _get_winminor$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle _get_winminor$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_get_winminor",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$153._get_winminor$FUNC, false
    );
    static final FunctionDescriptor _set_abort_behavior$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle _set_abort_behavior$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_set_abort_behavior",
        "(II)I",
        constants$153._set_abort_behavior$FUNC, false
    );
}


