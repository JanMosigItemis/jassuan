// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$585 {

    static final FunctionDescriptor GetClipboardFormatNameW$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle GetClipboardFormatNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetClipboardFormatNameW",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$585.GetClipboardFormatNameW$FUNC, false
    );
    static final FunctionDescriptor EmptyClipboard$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle EmptyClipboard$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "EmptyClipboard",
        "()I",
        constants$585.EmptyClipboard$FUNC, false
    );
    static final FunctionDescriptor IsClipboardFormatAvailable$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle IsClipboardFormatAvailable$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsClipboardFormatAvailable",
        "(I)I",
        constants$585.IsClipboardFormatAvailable$FUNC, false
    );
    static final FunctionDescriptor GetPriorityClipboardFormat$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle GetPriorityClipboardFormat$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetPriorityClipboardFormat",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$585.GetPriorityClipboardFormat$FUNC, false
    );
    static final FunctionDescriptor GetOpenClipboardWindow$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle GetOpenClipboardWindow$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetOpenClipboardWindow",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$585.GetOpenClipboardWindow$FUNC, false
    );
    static final FunctionDescriptor AddClipboardFormatListener$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle AddClipboardFormatListener$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddClipboardFormatListener",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$585.AddClipboardFormatListener$FUNC, false
    );
}


