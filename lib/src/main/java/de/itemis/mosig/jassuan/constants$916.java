// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$916 {

    static final FunctionDescriptor CryptGetKeyIdentifierProperty$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptGetKeyIdentifierProperty$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptGetKeyIdentifierProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$916.CryptGetKeyIdentifierProperty$FUNC, false
    );
    static final FunctionDescriptor CryptSetKeyIdentifierProperty$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptSetKeyIdentifierProperty$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptSetKeyIdentifierProperty",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$916.CryptSetKeyIdentifierProperty$FUNC, false
    );
    static final FunctionDescriptor CryptEnumKeyIdentifierProperties$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptEnumKeyIdentifierProperties$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptEnumKeyIdentifierProperties",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$916.CryptEnumKeyIdentifierProperties$FUNC, false
    );
    static final FunctionDescriptor CryptCreateKeyIdentifierFromCSP$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptCreateKeyIdentifierFromCSP$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptCreateKeyIdentifierFromCSP",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$916.CryptCreateKeyIdentifierFromCSP$FUNC, false
    );
    static final FunctionDescriptor CertCreateCertificateChainEngine$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CertCreateCertificateChainEngine$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertCreateCertificateChainEngine",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$916.CertCreateCertificateChainEngine$FUNC, false
    );
    static final FunctionDescriptor CertFreeCertificateChainEngine$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle CertFreeCertificateChainEngine$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertFreeCertificateChainEngine",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$916.CertFreeCertificateChainEngine$FUNC, false
    );
}


