// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$725 {

    static final FunctionDescriptor WNetRestoreConnectionA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WNetRestoreConnectionA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetRestoreConnectionA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$725.WNetRestoreConnectionA$FUNC, false
    );
    static final FunctionDescriptor WNetUseConnectionA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WNetUseConnectionA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetUseConnectionA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$725.WNetUseConnectionA$FUNC, false
    );
    static final FunctionDescriptor WNetUseConnectionW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WNetUseConnectionW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetUseConnectionW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$725.WNetUseConnectionW$FUNC, false
    );
    static final FunctionDescriptor WNetConnectionDialog$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle WNetConnectionDialog$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetConnectionDialog",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$725.WNetConnectionDialog$FUNC, false
    );
    static final FunctionDescriptor WNetDisconnectDialog$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle WNetDisconnectDialog$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetDisconnectDialog",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$725.WNetDisconnectDialog$FUNC, false
    );
    static final FunctionDescriptor WNetRestoreSingleConnectionW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle WNetRestoreSingleConnectionW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetRestoreSingleConnectionW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$725.WNetRestoreSingleConnectionW$FUNC, false
    );
}


