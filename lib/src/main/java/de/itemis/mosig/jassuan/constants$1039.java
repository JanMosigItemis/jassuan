// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1039 {

    static final FunctionDescriptor HBITMAP_UserUnmarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HBITMAP_UserUnmarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HBITMAP_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1039.HBITMAP_UserUnmarshal$FUNC, false
    );
    static final FunctionDescriptor HBITMAP_UserFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HBITMAP_UserFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HBITMAP_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1039.HBITMAP_UserFree$FUNC, false
    );
    static final FunctionDescriptor HICON_UserSize$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle HICON_UserSize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HICON_UserSize",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1039.HICON_UserSize$FUNC, false
    );
    static final FunctionDescriptor HICON_UserMarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HICON_UserMarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HICON_UserMarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1039.HICON_UserMarshal$FUNC, false
    );
    static final FunctionDescriptor HICON_UserUnmarshal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HICON_UserUnmarshal$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HICON_UserUnmarshal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1039.HICON_UserUnmarshal$FUNC, false
    );
    static final FunctionDescriptor HICON_UserFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HICON_UserFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HICON_UserFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1039.HICON_UserFree$FUNC, false
    );
}


