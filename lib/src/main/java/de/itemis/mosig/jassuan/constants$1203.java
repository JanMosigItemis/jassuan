// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1203 {

    static final FunctionDescriptor SystemTimeToVariantTime$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SystemTimeToVariantTime$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SystemTimeToVariantTime",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1203.SystemTimeToVariantTime$FUNC, false
    );
    static final FunctionDescriptor VariantTimeToSystemTime$FUNC = FunctionDescriptor.of(C_INT,
        C_DOUBLE,
        C_POINTER
    );
    static final MethodHandle VariantTimeToSystemTime$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "VariantTimeToSystemTime",
        "(DLjdk/incubator/foreign/MemoryAddress;)I",
        constants$1203.VariantTimeToSystemTime$FUNC, false
    );
    static final FunctionDescriptor SafeArrayAllocDescriptor$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle SafeArrayAllocDescriptor$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SafeArrayAllocDescriptor",
        "(ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1203.SafeArrayAllocDescriptor$FUNC, false
    );
    static final FunctionDescriptor SafeArrayAllocDescriptorEx$FUNC = FunctionDescriptor.of(C_LONG,
        C_SHORT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle SafeArrayAllocDescriptorEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SafeArrayAllocDescriptorEx",
        "(SILjdk/incubator/foreign/MemoryAddress;)I",
        constants$1203.SafeArrayAllocDescriptorEx$FUNC, false
    );
    static final FunctionDescriptor SafeArrayAllocData$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle SafeArrayAllocData$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SafeArrayAllocData",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1203.SafeArrayAllocData$FUNC, false
    );
    static final FunctionDescriptor SafeArrayCreate$FUNC = FunctionDescriptor.of(C_POINTER,
        C_SHORT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle SafeArrayCreate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SafeArrayCreate",
        "(SILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1203.SafeArrayCreate$FUNC, false
    );
}


