// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_9 extends assuan_h_8 {

    public static int CRYPT_PROXY_CACHE_RETRIEVAL() {
        return (int)2097152L;
    }
    public static int CRYPT_NOT_MODIFIED_RETRIEVAL() {
        return (int)4194304L;
    }
    public static int CRYPT_ENABLE_SSL_REVOCATION_RETRIEVAL() {
        return (int)8388608L;
    }
    public static int CRYPT_OCSP_ONLY_RETRIEVAL() {
        return (int)16777216L;
    }
    public static int CRYPT_NO_OCSP_FAILOVER_TO_CRL_RETRIEVAL() {
        return (int)33554432L;
    }
    public static int CRYPT_RANDOM_QUERY_STRING_RETRIEVAL() {
        return (int)67108864L;
    }
    public static int CRYPT_ENABLE_FILE_RETRIEVAL() {
        return (int)134217728L;
    }
    public static int CRYPT_CREATE_NEW_FLUSH_ENTRY() {
        return (int)268435456L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_NONE() {
        return (int)0L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_BLOB() {
        return (int)1L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_CRL() {
        return (int)2L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_OCSP() {
        return (int)3L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_AUTOROOT_CAB() {
        return (int)5L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_DISALLOWED_CERT_CAB() {
        return (int)6L;
    }
    public static int CRYPTNET_URL_CACHE_PRE_FETCH_PIN_RULES_CAB() {
        return (int)7L;
    }
    public static int CRYPTNET_URL_CACHE_DEFAULT_FLUSH() {
        return (int)0L;
    }
    public static int CRYPTNET_URL_CACHE_RESPONSE_NONE() {
        return (int)0L;
    }
    public static int CRYPTNET_URL_CACHE_RESPONSE_HTTP() {
        return (int)1L;
    }
    public static int CRYPTNET_URL_CACHE_RESPONSE_VALIDATED() {
        return (int)32768L;
    }
    public static int CRYPT_RETRIEVE_MAX_ERROR_CONTENT_LENGTH() {
        return (int)4096L;
    }
    public static int CRYPT_GET_URL_FROM_PROPERTY() {
        return (int)1L;
    }
    public static int CRYPT_GET_URL_FROM_EXTENSION() {
        return (int)2L;
    }
    public static int CRYPT_GET_URL_FROM_UNAUTH_ATTRIBUTE() {
        return (int)4L;
    }
    public static int CRYPT_GET_URL_FROM_AUTH_ATTRIBUTE() {
        return (int)8L;
    }
    public static int CERT_CREATE_SELFSIGN_NO_SIGN() {
        return (int)1L;
    }
    public static int CERT_CREATE_SELFSIGN_NO_KEY_INFO() {
        return (int)2L;
    }
    public static int CRYPT_KEYID_DELETE_FLAG() {
        return (int)16L;
    }
    public static int CRYPT_KEYID_MACHINE_FLAG() {
        return (int)32L;
    }
    public static int CRYPT_KEYID_SET_NEW_FLAG() {
        return (int)8192L;
    }
    public static int CRYPT_KEYID_ALLOC_FLAG() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_COUNT_IN_CERT_DEFAULT() {
        return (int)5L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_COUNT_PER_CHAIN_DEFAULT() {
        return (int)3L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_BYTE_COUNT_DEFAULT() {
        return (int)100000L;
    }
    public static int CERT_CHAIN_MAX_AIA_URL_RETRIEVAL_CERT_COUNT_DEFAULT() {
        return (int)10L;
    }
    public static int CERT_CHAIN_MAX_SSL_TIME_UPDATED_EVENT_COUNT_DEFAULT() {
        return (int)5L;
    }
    public static int CERT_CHAIN_ENABLE_MD2_MD4_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_ENABLE_WEAK_RSA_ROOT_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_ENABLE_WEAK_LOGGING_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_ENABLE_ONLY_WEAK_LOGGING_FLAG() {
        return (int)8L;
    }
    public static int CERT_CHAIN_MIN_RSA_PUB_KEY_BIT_LENGTH_DEFAULT() {
        return (int)1023L;
    }
    public static int CERT_CHAIN_DISABLE_ALL_EKU_WEAK_FLAG() {
        return (int)65536L;
    }
    public static int CERT_CHAIN_ENABLE_ALL_EKU_HYGIENE_FLAG() {
        return (int)131072L;
    }
    public static int CERT_CHAIN_DISABLE_OPT_IN_SERVER_AUTH_WEAK_FLAG() {
        return (int)262144L;
    }
    public static int CERT_CHAIN_DISABLE_SERVER_AUTH_WEAK_FLAG() {
        return (int)1048576L;
    }
    public static int CERT_CHAIN_ENABLE_SERVER_AUTH_HYGIENE_FLAG() {
        return (int)2097152L;
    }
    public static int CERT_CHAIN_DISABLE_CODE_SIGNING_WEAK_FLAG() {
        return (int)4194304L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_CODE_SIGNING_WEAK_FLAG() {
        return (int)8388608L;
    }
    public static int CERT_CHAIN_ENABLE_CODE_SIGNING_HYGIENE_FLAG() {
        return (int)16777216L;
    }
    public static int CERT_CHAIN_ENABLE_MOTW_CODE_SIGNING_HYGIENE_FLAG() {
        return (int)33554432L;
    }
    public static int CERT_CHAIN_DISABLE_TIMESTAMP_WEAK_FLAG() {
        return (int)67108864L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_WEAK_FLAG() {
        return (int)134217728L;
    }
    public static int CERT_CHAIN_ENABLE_TIMESTAMP_HYGIENE_FLAG() {
        return (int)268435456L;
    }
    public static int CERT_CHAIN_ENABLE_MOTW_TIMESTAMP_HYGIENE_FLAG() {
        return (int)536870912L;
    }
    public static int CERT_CHAIN_MOTW_IGNORE_AFTER_TIME_WEAK_FLAG() {
        return (int)1073741824L;
    }
    public static int CERT_CHAIN_DISABLE_FILE_HASH_WEAK_FLAG() {
        return (int)4096L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_FILE_HASH_WEAK_FLAG() {
        return (int)8192L;
    }
    public static int CERT_CHAIN_DISABLE_TIMESTAMP_HASH_WEAK_FLAG() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_DISABLE_MOTW_TIMESTAMP_HASH_WEAK_FLAG() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_AUTO_CURRENT_USER() {
        return (int)1L;
    }
    public static int CERT_CHAIN_AUTO_LOCAL_MACHINE() {
        return (int)2L;
    }
    public static int CERT_CHAIN_AUTO_IMPERSONATED() {
        return (int)3L;
    }
    public static int CERT_CHAIN_AUTO_PROCESS_INFO() {
        return (int)4L;
    }
    public static int CERT_CHAIN_AUTO_PINRULE_INFO() {
        return (int)5L;
    }
    public static int CERT_CHAIN_AUTO_NETWORK_INFO() {
        return (int)6L;
    }
    public static int CERT_CHAIN_AUTO_SERIAL_LOCAL_MACHINE() {
        return (int)7L;
    }
    public static int CERT_CHAIN_AUTO_HPKP_RULE_INFO() {
        return (int)8L;
    }
    public static int CERT_CHAIN_AUTO_FLUSH_DISABLE_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_AUTO_LOG_CREATE_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_AUTO_LOG_FREE_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_AUTO_LOG_FLUSH_FLAG() {
        return (int)8L;
    }
    public static int CERT_SRV_OCSP_RESP_MIN_SYNC_CERT_FILE_SECONDS_DEFAULT() {
        return (int)5L;
    }
    public static int CRYPTNET_MAX_CACHED_OCSP_PER_CRL_COUNT_DEFAULT() {
        return (int)500L;
    }
    public static int CRYPTNET_PRE_FETCH_AFTER_PUBLISH_PRE_FETCH_DIVISOR_DEFAULT() {
        return (int)10L;
    }
    public static int CRYPTNET_PRE_FETCH_BEFORE_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT() {
        return (int)20L;
    }
    public static int CRYPTNET_PRE_FETCH_VALIDITY_PERIOD_AFTER_NEXT_UPDATE_PRE_FETCH_DIVISOR_DEFAULT() {
        return (int)10L;
    }
    public static int CRYPTNET_PRE_FETCH_SCAN_AFTER_TRIGGER_DELAY_SECONDS_DEFAULT() {
        return (int)30L;
    }
    public static int CRYPTNET_CACHED_OCSP_SWITCH_TO_CRL_COUNT_DEFAULT() {
        return (int)50L;
    }
    public static int CERT_CHAIN_OPTION_DISABLE_AIA_URL_RETRIEVAL() {
        return (int)2L;
    }
    public static int CERT_CHAIN_OPTION_ENABLE_SIA_URL_RETRIEVAL() {
        return (int)4L;
    }
    public static int CERT_CHAIN_CRL_VALIDITY_EXT_PERIOD_HOURS_DEFAULT() {
        return (int)12L;
    }
    public static int CERT_CHAIN_CACHE_END_CERT() {
        return (int)1L;
    }
    public static int CERT_CHAIN_THREAD_STORE_SYNC() {
        return (int)2L;
    }
    public static int CERT_CHAIN_CACHE_ONLY_URL_RETRIEVAL() {
        return (int)4L;
    }
    public static int CERT_CHAIN_USE_LOCAL_MACHINE_STORE() {
        return (int)8L;
    }
    public static int CERT_CHAIN_ENABLE_CACHE_AUTO_UPDATE() {
        return (int)16L;
    }
    public static int CERT_CHAIN_ENABLE_SHARE_STORE() {
        return (int)32L;
    }
    public static int CERT_TRUST_NO_ERROR() {
        return (int)0L;
    }
    public static int CERT_TRUST_IS_NOT_TIME_VALID() {
        return (int)1L;
    }
    public static int CERT_TRUST_IS_NOT_TIME_NESTED() {
        return (int)2L;
    }
    public static int CERT_TRUST_IS_REVOKED() {
        return (int)4L;
    }
    public static int CERT_TRUST_IS_NOT_SIGNATURE_VALID() {
        return (int)8L;
    }
    public static int CERT_TRUST_IS_NOT_VALID_FOR_USAGE() {
        return (int)16L;
    }
    public static int CERT_TRUST_IS_UNTRUSTED_ROOT() {
        return (int)32L;
    }
    public static int CERT_TRUST_REVOCATION_STATUS_UNKNOWN() {
        return (int)64L;
    }
    public static int CERT_TRUST_IS_CYCLIC() {
        return (int)128L;
    }
    public static int CERT_TRUST_INVALID_EXTENSION() {
        return (int)256L;
    }
    public static int CERT_TRUST_INVALID_POLICY_CONSTRAINTS() {
        return (int)512L;
    }
    public static int CERT_TRUST_INVALID_BASIC_CONSTRAINTS() {
        return (int)1024L;
    }
    public static int CERT_TRUST_INVALID_NAME_CONSTRAINTS() {
        return (int)2048L;
    }
    public static int CERT_TRUST_HAS_NOT_SUPPORTED_NAME_CONSTRAINT() {
        return (int)4096L;
    }
    public static int CERT_TRUST_HAS_NOT_DEFINED_NAME_CONSTRAINT() {
        return (int)8192L;
    }
    public static int CERT_TRUST_HAS_NOT_PERMITTED_NAME_CONSTRAINT() {
        return (int)16384L;
    }
    public static int CERT_TRUST_HAS_EXCLUDED_NAME_CONSTRAINT() {
        return (int)32768L;
    }
    public static int CERT_TRUST_IS_PARTIAL_CHAIN() {
        return (int)65536L;
    }
    public static int CERT_TRUST_CTL_IS_NOT_TIME_VALID() {
        return (int)131072L;
    }
    public static int CERT_TRUST_CTL_IS_NOT_SIGNATURE_VALID() {
        return (int)262144L;
    }
    public static int CERT_TRUST_CTL_IS_NOT_VALID_FOR_USAGE() {
        return (int)524288L;
    }
    public static int CERT_TRUST_IS_OFFLINE_REVOCATION() {
        return (int)16777216L;
    }
    public static int CERT_TRUST_NO_ISSUANCE_CHAIN_POLICY() {
        return (int)33554432L;
    }
    public static int CERT_TRUST_IS_EXPLICIT_DISTRUST() {
        return (int)67108864L;
    }
    public static int CERT_TRUST_HAS_NOT_SUPPORTED_CRITICAL_EXT() {
        return (int)134217728L;
    }
    public static int CERT_TRUST_HAS_WEAK_SIGNATURE() {
        return (int)1048576L;
    }
    public static int CERT_TRUST_HAS_EXACT_MATCH_ISSUER() {
        return (int)1L;
    }
    public static int CERT_TRUST_HAS_KEY_MATCH_ISSUER() {
        return (int)2L;
    }
    public static int CERT_TRUST_HAS_NAME_MATCH_ISSUER() {
        return (int)4L;
    }
    public static int CERT_TRUST_IS_SELF_SIGNED() {
        return (int)8L;
    }
    public static int CERT_TRUST_AUTO_UPDATE_CA_REVOCATION() {
        return (int)16L;
    }
    public static int CERT_TRUST_AUTO_UPDATE_END_REVOCATION() {
        return (int)32L;
    }
    public static int CERT_TRUST_NO_OCSP_FAILOVER_TO_CRL() {
        return (int)64L;
    }
    public static int CERT_TRUST_IS_KEY_ROLLOVER() {
        return (int)128L;
    }
    public static int CERT_TRUST_SSL_HANDSHAKE_OCSP() {
        return (int)262144L;
    }
    public static int CERT_TRUST_SSL_TIME_VALID_OCSP() {
        return (int)524288L;
    }
    public static int CERT_TRUST_SSL_RECONNECT_OCSP() {
        return (int)1048576L;
    }
    public static int CERT_TRUST_HAS_PREFERRED_ISSUER() {
        return (int)256L;
    }
    public static int CERT_TRUST_HAS_ISSUANCE_CHAIN_POLICY() {
        return (int)512L;
    }
    public static int CERT_TRUST_HAS_VALID_NAME_CONSTRAINTS() {
        return (int)1024L;
    }
    public static int CERT_TRUST_IS_PEER_TRUSTED() {
        return (int)2048L;
    }
    public static int CERT_TRUST_HAS_CRL_VALIDITY_EXTENDED() {
        return (int)4096L;
    }
    public static int CERT_TRUST_IS_FROM_EXCLUSIVE_TRUST_STORE() {
        return (int)8192L;
    }
    public static int CERT_TRUST_IS_COMPLEX_CHAIN() {
        return (int)65536L;
    }
    public static int CERT_TRUST_SSL_TIME_VALID() {
        return (int)16777216L;
    }
    public static int CERT_TRUST_NO_TIME_CHECK() {
        return (int)33554432L;
    }
    public static int USAGE_MATCH_TYPE_AND() {
        return (int)0L;
    }
    public static int USAGE_MATCH_TYPE_OR() {
        return (int)1L;
    }
    public static int CERT_CHAIN_STRONG_SIGN_DISABLE_END_CHECK_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_DISABLE_PASS1_QUALITY_FILTERING() {
        return (int)64L;
    }
    public static int CERT_CHAIN_RETURN_LOWER_QUALITY_CONTEXTS() {
        return (int)128L;
    }
    public static int CERT_CHAIN_DISABLE_AUTH_ROOT_AUTO_UPDATE() {
        return (int)256L;
    }
    public static int CERT_CHAIN_TIMESTAMP_TIME() {
        return (int)512L;
    }
    public static int CERT_CHAIN_ENABLE_PEER_TRUST() {
        return (int)1024L;
    }
    public static int CERT_CHAIN_DISABLE_MY_PEER_TRUST() {
        return (int)2048L;
    }
    public static int CERT_CHAIN_DISABLE_MD2_MD4() {
        return (int)4096L;
    }
    public static int CERT_CHAIN_DISABLE_AIA() {
        return (int)8192L;
    }
    public static int CERT_CHAIN_HAS_MOTW() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_ONLY_ADDITIONAL_AND_AUTH_ROOT() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_OPT_IN_WEAK_SIGNATURE() {
        return (int)65536L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_END_CERT() {
        return (int)268435456L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_CHAIN() {
        return (int)536870912L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_CHAIN_EXCLUDE_ROOT() {
        return (int)1073741824L;
    }
    public static int CERT_CHAIN_REVOCATION_ACCUMULATIVE_TIMEOUT() {
        return (int)134217728L;
    }
    public static int CERT_CHAIN_REVOCATION_CHECK_OCSP_CERT() {
        return (int)67108864L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER() {
        return (int)1L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_COMPARE_KEY_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_COMPLEX_CHAIN_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_URL_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_LOCAL_MACHINE_FLAG() {
        return (int)8L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_NO_KEY_FLAG() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_FIND_BY_ISSUER_CACHE_ONLY_FLAG() {
        return (int)32768L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_VALID_FLAG() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_CTL_NOT_TIME_VALID_FLAG() {
        return (int)2L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_TIME_NESTED_FLAG() {
        return (int)4L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_BASIC_CONSTRAINTS_FLAG() {
        return (int)8L;
    }
    public static int CERT_CHAIN_POLICY_ALLOW_UNKNOWN_CA_FLAG() {
        return (int)16L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_WRONG_USAGE_FLAG() {
        return (int)32L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_NAME_FLAG() {
        return (int)64L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_INVALID_POLICY_FLAG() {
        return (int)128L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_END_REV_UNKNOWN_FLAG() {
        return (int)256L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_CTL_SIGNER_REV_UNKNOWN_FLAG() {
        return (int)512L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_CA_REV_UNKNOWN_FLAG() {
        return (int)1024L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_ROOT_REV_UNKNOWN_FLAG() {
        return (int)2048L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_PEER_TRUST_FLAG() {
        return (int)4096L;
    }
    public static int CERT_CHAIN_POLICY_IGNORE_NOT_SUPPORTED_CRITICAL_EXT_FLAG() {
        return (int)8192L;
    }
    public static int CERT_CHAIN_POLICY_TRUST_TESTROOT_FLAG() {
        return (int)16384L;
    }
    public static int CERT_CHAIN_POLICY_ALLOW_TESTROOT_FLAG() {
        return (int)32768L;
    }
    public static int AUTHTYPE_CLIENT() {
        return (int)1L;
    }
    public static int AUTHTYPE_SERVER() {
        return (int)2L;
    }
    public static int BASIC_CONSTRAINTS_CERT_CHAIN_POLICY_END_ENTITY_FLAG() {
        return (int)1073741824L;
    }
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_ENABLE_TEST_ROOT_FLAG() {
        return (int)65536L;
    }
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_CHECK_APPLICATION_ROOT_FLAG() {
        return (int)131072L;
    }
    public static int MICROSOFT_ROOT_CERT_CHAIN_POLICY_DISABLE_FLIGHT_ROOT_FLAG() {
        return (int)262144L;
    }
    public static int SSL_F12_ERROR_TEXT_LENGTH() {
        return (int)256L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_SUCCESS_LEVEL() {
        return (int)0L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_WARNING_LEVEL() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_ERROR_LEVEL() {
        return (int)2L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_NONE_CATEGORY() {
        return (int)0L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_WEAK_CRYPTO_CATEGORY() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_SSL_F12_ROOT_PROGRAM_CATEGORY() {
        return (int)2L;
    }
    public static int SSL_HPKP_PKP_HEADER_INDEX() {
        return (int)0L;
    }
    public static int SSL_HPKP_PKP_RO_HEADER_INDEX() {
        return (int)1L;
    }
    public static int SSL_HPKP_HEADER_COUNT() {
        return (int)2L;
    }
    public static int SSL_KEY_PIN_ERROR_TEXT_LENGTH() {
        return (int)512L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_SUCCESS() {
        return (int)0L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MITM_WARNING() {
        return (int)1L;
    }
    public static int CERT_CHAIN_POLICY_SSL_KEY_PIN_MISMATCH_WARNING() {
        return (int)2L;
    }
    public static int CRYPT_STRING_BASE64HEADER() {
        return (int)0L;
    }
    public static int CRYPT_STRING_BASE64() {
        return (int)1L;
    }
    public static int CRYPT_STRING_BINARY() {
        return (int)2L;
    }
    public static int CRYPT_STRING_BASE64REQUESTHEADER() {
        return (int)3L;
    }
    public static int CRYPT_STRING_HEX() {
        return (int)4L;
    }
    public static int CRYPT_STRING_HEXASCII() {
        return (int)5L;
    }
    public static int CRYPT_STRING_BASE64_ANY() {
        return (int)6L;
    }
    public static int CRYPT_STRING_ANY() {
        return (int)7L;
    }
    public static int CRYPT_STRING_HEX_ANY() {
        return (int)8L;
    }
    public static int CRYPT_STRING_BASE64X509CRLHEADER() {
        return (int)9L;
    }
    public static int CRYPT_STRING_HEXADDR() {
        return (int)10L;
    }
    public static int CRYPT_STRING_HEXASCIIADDR() {
        return (int)11L;
    }
    public static int CRYPT_STRING_HEXRAW() {
        return (int)12L;
    }
    public static int CRYPT_STRING_BASE64URI() {
        return (int)13L;
    }
    public static int CRYPT_STRING_ENCODEMASK() {
        return (int)255L;
    }
    public static int CRYPT_STRING_RESERVED100() {
        return (int)256L;
    }
    public static int CRYPT_STRING_RESERVED200() {
        return (int)512L;
    }
    public static int CRYPT_STRING_PERCENTESCAPE() {
        return (int)134217728L;
    }
    public static int CRYPT_STRING_HASHDATA() {
        return (int)268435456L;
    }
    public static int CRYPT_STRING_STRICT() {
        return (int)536870912L;
    }
    public static int CRYPT_STRING_NOCRLF() {
        return (int)1073741824L;
    }
    public static int PKCS12_IMPORT_SILENT() {
        return (int)64L;
    }
    public static int CRYPT_USER_KEYSET() {
        return (int)4096L;
    }
    public static int PKCS12_PREFER_CNG_KSP() {
        return (int)256L;
    }
    public static int PKCS12_ALWAYS_CNG_KSP() {
        return (int)512L;
    }
    public static int PKCS12_ONLY_CERTIFICATES() {
        return (int)1024L;
    }
    public static int PKCS12_ONLY_NOT_ENCRYPTED_CERTIFICATES() {
        return (int)2048L;
    }
    public static int PKCS12_ALLOW_OVERWRITE_KEY() {
        return (int)16384L;
    }
    public static int PKCS12_NO_PERSIST_KEY() {
        return (int)32768L;
    }
    public static int PKCS12_VIRTUAL_ISOLATION_KEY() {
        return (int)65536L;
    }
    public static int PKCS12_ONLY_CERTIFICATES_PROVIDER_TYPE() {
        return (int)0L;
    }
    public static int REPORT_NO_PRIVATE_KEY() {
        return (int)1L;
    }
    public static int REPORT_NOT_ABLE_TO_EXPORT_PRIVATE_KEY() {
        return (int)2L;
    }
    public static int EXPORT_PRIVATE_KEYS() {
        return (int)4L;
    }
    public static int PKCS12_INCLUDE_EXTENDED_PROPERTIES() {
        return (int)16L;
    }
    public static int PKCS12_PROTECT_TO_DOMAIN_SIDS() {
        return (int)32L;
    }
    public static int PKCS12_EXPORT_SILENT() {
        return (int)64L;
    }
    public static int PKCS12_EXPORT_PBES2_PARAMS() {
        return (int)128L;
    }
    public static int PKCS12_DISABLE_ENCRYPT_CERTIFICATES() {
        return (int)256L;
    }
    public static int PKCS12_ENCRYPT_CERTIFICATES() {
        return (int)512L;
    }
    public static int PKCS12_EXPORT_ECC_CURVE_PARAMETERS() {
        return (int)4096L;
    }
    public static int PKCS12_EXPORT_ECC_CURVE_OID() {
        return (int)8192L;
    }
    public static int CERT_SERVER_OCSP_RESPONSE_ASYNC_FLAG() {
        return (int)1L;
    }
    public static int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_READ_FLAG() {
        return (int)1L;
    }
    public static int CERT_SERVER_OCSP_RESPONSE_OPEN_PARA_WRITE_FLAG() {
        return (int)2L;
    }
    public static int CERT_SELECT_MAX_PARA() {
        return (int)500L;
    }
    public static int CERT_SELECT_BY_ENHKEY_USAGE() {
        return (int)1L;
    }
    public static int CERT_SELECT_BY_KEY_USAGE() {
        return (int)2L;
    }
    public static int CERT_SELECT_BY_POLICY_OID() {
        return (int)3L;
    }
    public static int CERT_SELECT_BY_PROV_NAME() {
        return (int)4L;
    }
    public static int CERT_SELECT_BY_EXTENSION() {
        return (int)5L;
    }
    public static int CERT_SELECT_BY_SUBJECT_HOST_NAME() {
        return (int)6L;
    }
    public static int CERT_SELECT_BY_ISSUER_ATTR() {
        return (int)7L;
    }
    public static int CERT_SELECT_BY_SUBJECT_ATTR() {
        return (int)8L;
    }
    public static int CERT_SELECT_BY_ISSUER_NAME() {
        return (int)9L;
    }
    public static int CERT_SELECT_BY_PUBLIC_KEY() {
        return (int)10L;
    }
    public static int CERT_SELECT_BY_TLS_SIGNATURES() {
        return (int)11L;
    }
    public static int CERT_SELECT_BY_ISSUER_DISPLAYNAME() {
        return (int)12L;
    }
    public static int CERT_SELECT_BY_FRIENDLYNAME() {
        return (int)13L;
    }
    public static int CERT_SELECT_BY_THUMBPRINT() {
        return (int)14L;
    }
    public static int CERT_SELECT_ALLOW_EXPIRED() {
        return (int)1L;
    }
    public static int CERT_SELECT_TRUSTED_ROOT() {
        return (int)2L;
    }
    public static int CERT_SELECT_DISALLOW_SELFSIGNED() {
        return (int)4L;
    }
    public static int CERT_SELECT_HAS_PRIVATE_KEY() {
        return (int)8L;
    }
    public static int CERT_SELECT_HAS_KEY_FOR_SIGNATURE() {
        return (int)16L;
    }
    public static int CERT_SELECT_HAS_KEY_FOR_KEY_EXCHANGE() {
        return (int)32L;
    }
    public static int CERT_SELECT_HARDWARE_ONLY() {
        return (int)64L;
    }
    public static int CERT_SELECT_ALLOW_DUPLICATES() {
        return (int)128L;
    }
    public static int CERT_SELECT_IGNORE_AUTOSELECT() {
        return (int)256L;
    }
    public static int TIMESTAMP_VERSION() {
        return (int)1L;
    }
    public static int TIMESTAMP_STATUS_GRANTED() {
        return (int)0L;
    }
    public static int TIMESTAMP_STATUS_GRANTED_WITH_MODS() {
        return (int)1L;
    }
    public static int TIMESTAMP_STATUS_REJECTED() {
        return (int)2L;
    }
    public static int TIMESTAMP_STATUS_WAITING() {
        return (int)3L;
    }
    public static int TIMESTAMP_STATUS_REVOCATION_WARNING() {
        return (int)4L;
    }
    public static int TIMESTAMP_STATUS_REVOKED() {
        return (int)5L;
    }
    public static int TIMESTAMP_FAILURE_BAD_ALG() {
        return (int)0L;
    }
    public static int TIMESTAMP_FAILURE_BAD_REQUEST() {
        return (int)2L;
    }
    public static int TIMESTAMP_FAILURE_BAD_FORMAT() {
        return (int)5L;
    }
    public static int TIMESTAMP_FAILURE_TIME_NOT_AVAILABLE() {
        return (int)14L;
    }
    public static int TIMESTAMP_FAILURE_POLICY_NOT_SUPPORTED() {
        return (int)15L;
    }
    public static int TIMESTAMP_FAILURE_EXTENSION_NOT_SUPPORTED() {
        return (int)16L;
    }
    public static int TIMESTAMP_FAILURE_INFO_NOT_AVAILABLE() {
        return (int)17L;
    }
    public static int TIMESTAMP_FAILURE_SYSTEM_FAILURE() {
        return (int)25L;
    }
    public static int TIMESTAMP_DONT_HASH_DATA() {
        return (int)1L;
    }
    public static int TIMESTAMP_VERIFY_CONTEXT_SIGNATURE() {
        return (int)32L;
    }
    public static int TIMESTAMP_NO_AUTH_RETRIEVAL() {
        return (int)131072L;
    }
    public static int dwFORCE_KEY_PROTECTION_DISABLED() {
        return (int)0L;
    }
    public static int dwFORCE_KEY_PROTECTION_USER_SELECT() {
        return (int)1L;
    }
    public static int dwFORCE_KEY_PROTECTION_HIGH() {
        return (int)2L;
    }
    public static int CRYPTPROTECT_PROMPT_ON_UNPROTECT() {
        return (int)1L;
    }
    public static int CRYPTPROTECT_PROMPT_ON_PROTECT() {
        return (int)2L;
    }
    public static int CRYPTPROTECT_PROMPT_RESERVED() {
        return (int)4L;
    }
    public static int CRYPTPROTECT_PROMPT_STRONG() {
        return (int)8L;
    }
    public static int CRYPTPROTECT_PROMPT_REQUIRE_STRONG() {
        return (int)16L;
    }
    public static int CRYPTPROTECT_UI_FORBIDDEN() {
        return (int)1L;
    }
    public static int CRYPTPROTECT_LOCAL_MACHINE() {
        return (int)4L;
    }
    public static int CRYPTPROTECT_CRED_SYNC() {
        return (int)8L;
    }
    public static int CRYPTPROTECT_AUDIT() {
        return (int)16L;
    }
    public static int CRYPTPROTECT_NO_RECOVERY() {
        return (int)32L;
    }
    public static int CRYPTPROTECT_VERIFY_PROTECTION() {
        return (int)64L;
    }
    public static int CRYPTPROTECT_CRED_REGENERATE() {
        return (int)128L;
    }
    public static int CRYPTPROTECT_FIRST_RESERVED_FLAGVAL() {
        return (int)268435455L;
    }
    public static int CRYPTPROTECTMEMORY_BLOCK_SIZE() {
        return (int)16L;
    }
    public static int CRYPTPROTECTMEMORY_SAME_PROCESS() {
        return (int)0L;
    }
    public static int CRYPTPROTECTMEMORY_CROSS_PROCESS() {
        return (int)1L;
    }
    public static int CRYPTPROTECTMEMORY_SAME_LOGON() {
        return (int)2L;
    }
    public static int MAX_SID_SIZE() {
        return (int)256L;
    }
    public static int __REQUIRED_RPCNDR_H_VERSION__() {
        return (int)475L;
    }
    public static int __RPCSAL_H_VERSION__() {
        return (int)100L;
    }
    public static int TARGET_IS_NT61_OR_LATER() {
        return (int)1L;
    }
    public static int TARGET_IS_NT60_OR_LATER() {
        return (int)1L;
    }
    public static int TARGET_IS_NT51_OR_LATER() {
        return (int)1L;
    }
    public static int TARGET_IS_NT50_OR_LATER() {
        return (int)1L;
    }
    public static int TARGET_IS_NT40_OR_LATER() {
        return (int)1L;
    }
    public static int TARGET_IS_NT351_OR_WIN95_OR_LATER() {
        return (int)1L;
    }
    public static int cbNDRContext() {
        return (int)20L;
    }
    public static int USER_CALL_IS_ASYNC() {
        return (int)256L;
    }
    public static int USER_CALL_NEW_CORRELATION_DESC() {
        return (int)512L;
    }
    public static int USER_MARSHAL_FC_BYTE() {
        return (int)1L;
    }
    public static int USER_MARSHAL_FC_CHAR() {
        return (int)2L;
    }
    public static int USER_MARSHAL_FC_SMALL() {
        return (int)3L;
    }
    public static int USER_MARSHAL_FC_USMALL() {
        return (int)4L;
    }
    public static int USER_MARSHAL_FC_WCHAR() {
        return (int)5L;
    }
    public static int USER_MARSHAL_FC_SHORT() {
        return (int)6L;
    }
    public static int USER_MARSHAL_FC_USHORT() {
        return (int)7L;
    }
    public static int USER_MARSHAL_FC_LONG() {
        return (int)8L;
    }
    public static int USER_MARSHAL_FC_ULONG() {
        return (int)9L;
    }
    public static int USER_MARSHAL_FC_FLOAT() {
        return (int)10L;
    }
    public static int USER_MARSHAL_FC_HYPER() {
        return (int)11L;
    }
    public static int USER_MARSHAL_FC_DOUBLE() {
        return (int)12L;
    }
    public static int ROTREGFLAGS_ALLOWANYCLIENT() {
        return (int)1L;
    }
    public static int APPIDREGFLAGS_ACTIVATE_IUSERVER_INDESKTOP() {
        return (int)1L;
    }
    public static int APPIDREGFLAGS_SECURE_SERVER_PROCESS_SD_AND_BIND() {
        return (int)2L;
    }
    public static int APPIDREGFLAGS_ISSUE_ACTIVATION_RPC_AT_IDENTIFY() {
        return (int)4L;
    }
    public static int APPIDREGFLAGS_IUSERVER_UNMODIFIED_LOGON_TOKEN() {
        return (int)8L;
    }
    public static int APPIDREGFLAGS_IUSERVER_SELF_SID_IN_LAUNCH_PERMISSION() {
        return (int)16L;
    }
    public static int APPIDREGFLAGS_IUSERVER_ACTIVATE_IN_CLIENT_SESSION_ONLY() {
        return (int)32L;
    }
    public static int APPIDREGFLAGS_RESERVED1() {
        return (int)64L;
    }
    public static int DCOMSCM_ACTIVATION_USE_ALL_AUTHNSERVICES() {
        return (int)1L;
    }
    public static int DCOMSCM_ACTIVATION_DISALLOW_UNSECURE_CALL() {
        return (int)2L;
    }
    public static int DCOMSCM_RESOLVE_USE_ALL_AUTHNSERVICES() {
        return (int)4L;
    }
    public static int DCOMSCM_RESOLVE_DISALLOW_UNSECURE_CALL() {
        return (int)8L;
    }
    public static int DCOMSCM_PING_USE_MID_AUTHNSERVICE() {
        return (int)16L;
    }
    public static int DCOMSCM_PING_DISALLOW_UNSECURE_CALL() {
        return (int)32L;
    }
    public static int COM_RIGHTS_EXECUTE() {
        return (int)1L;
    }
    public static int COM_RIGHTS_EXECUTE_LOCAL() {
        return (int)2L;
    }
    public static int COM_RIGHTS_EXECUTE_REMOTE() {
        return (int)4L;
    }
    public static int COM_RIGHTS_ACTIVATE_LOCAL() {
        return (int)8L;
    }
    public static int COM_RIGHTS_ACTIVATE_REMOTE() {
        return (int)16L;
    }
    public static int CWMO_MAX_HANDLES() {
        return (int)56L;
    }
    public static int MARSHALINTERFACE_MIN() {
        return (int)500L;
    }
    public static int CWCSTORAGENAME() {
        return (int)32L;
    }
    public static int STGFMT_STORAGE() {
        return (int)0L;
    }
    public static int STGFMT_NATIVE() {
        return (int)1L;
    }
    public static int STGFMT_FILE() {
        return (int)3L;
    }
    public static int STGFMT_ANY() {
        return (int)4L;
    }
    public static int STGFMT_DOCFILE() {
        return (int)5L;
    }
    public static int STGFMT_DOCUMENT() {
        return (int)0L;
    }
    public static int ROTFLAGS_REGISTRATIONKEEPSALIVE() {
        return (int)1L;
    }
    public static int ROTFLAGS_ALLOWANYCLIENT() {
        return (int)2L;
    }
    public static int ROT_COMPARE_MAX() {
        return (int)2048L;
    }
    public static int STGOPTIONS_VERSION() {
        return (int)2L;
    }
    public static int _FORCENAMELESSUNION() {
        return (int)1L;
    }
    public static int MKSYS_URLMONIKER() {
        return (int)6L;
    }
    public static int URL_MK_LEGACY() {
        return (int)0L;
    }
    public static int URL_MK_UNIFORM() {
        return (int)1L;
    }
    public static int URL_MK_NO_CANONICALIZE() {
        return (int)2L;
    }
    public static int FIEF_FLAG_FORCE_JITUI() {
        return (int)1L;
    }
    public static int FIEF_FLAG_PEEK() {
        return (int)2L;
    }
    public static int FIEF_FLAG_SKIP_INSTALLED_VERSION_CHECK() {
        return (int)4L;
    }
    public static int FMFD_DEFAULT() {
        return (int)0L;
    }
    public static int FMFD_URLASFILENAME() {
        return (int)1L;
    }
    public static int FMFD_ENABLEMIMESNIFFING() {
        return (int)2L;
    }
    public static int FMFD_IGNOREMIMETEXTPLAIN() {
        return (int)4L;
    }
    public static int FMFD_SERVERMIME() {
        return (int)8L;
    }
    public static int FMFD_RESPECTTEXTPLAIN() {
        return (int)16L;
    }
    public static int FMFD_RETURNUPDATEDIMGMIMES() {
        return (int)32L;
    }
    public static int UAS_EXACTLEGACY() {
        return (int)4096L;
    }
    public static int URLMON_OPTION_USERAGENT() {
        return (int)268435457L;
    }
    public static int URLMON_OPTION_USERAGENT_REFRESH() {
        return (int)268435458L;
    }
    public static int URLMON_OPTION_URL_ENCODING() {
        return (int)268435460L;
    }
    public static int URLMON_OPTION_USE_BINDSTRINGCREDS() {
        return (int)268435464L;
    }
    public static int URLMON_OPTION_USE_BROWSERAPPSDOCUMENTS() {
        return (int)268435472L;
    }
    public static int CF_NULL() {
        return (int)0L;
    }
    public static int Uri_CREATE_ALLOW_RELATIVE() {
        return (int)1L;
    }
    public static int Uri_CREATE_ALLOW_IMPLICIT_WILDCARD_SCHEME() {
        return (int)2L;
    }
    public static int Uri_CREATE_ALLOW_IMPLICIT_FILE_SCHEME() {
        return (int)4L;
    }
    public static int Uri_CREATE_NOFRAG() {
        return (int)8L;
    }
    public static int Uri_CREATE_NO_CANONICALIZE() {
        return (int)16L;
    }
    public static int Uri_CREATE_CANONICALIZE() {
        return (int)256L;
    }
    public static int Uri_CREATE_FILE_USE_DOS_PATH() {
        return (int)32L;
    }
    public static int Uri_CREATE_DECODE_EXTRA_INFO() {
        return (int)64L;
    }
    public static int Uri_CREATE_NO_DECODE_EXTRA_INFO() {
        return (int)128L;
    }
    public static int Uri_CREATE_CRACK_UNKNOWN_SCHEMES() {
        return (int)512L;
    }
    public static int Uri_CREATE_NO_CRACK_UNKNOWN_SCHEMES() {
        return (int)1024L;
    }
    public static int Uri_CREATE_PRE_PROCESS_HTML_URI() {
        return (int)2048L;
    }
    public static int Uri_CREATE_NO_PRE_PROCESS_HTML_URI() {
        return (int)4096L;
    }
    public static int Uri_CREATE_IE_SETTINGS() {
        return (int)8192L;
    }
    public static int Uri_CREATE_NO_IE_SETTINGS() {
        return (int)16384L;
    }
    public static int Uri_CREATE_NO_ENCODE_FORBIDDEN_CHARACTERS() {
        return (int)32768L;
    }
    public static int Uri_CREATE_NORMALIZE_INTL_CHARACTERS() {
        return (int)65536L;
    }
    public static int Uri_CREATE_CANONICALIZE_ABSOLUTE() {
        return (int)131072L;
    }
    public static int Uri_DISPLAY_NO_FRAGMENT() {
        return (int)1L;
    }
    public static int Uri_PUNYCODE_IDN_HOST() {
        return (int)2L;
    }
    public static int Uri_DISPLAY_IDN_HOST() {
        return (int)4L;
    }
    public static int Uri_DISPLAY_NO_PUNYCODE() {
        return (int)8L;
    }
    public static int Uri_ENCODING_USER_INFO_AND_PATH_IS_PERCENT_ENCODED_UTF8() {
        return (int)1L;
    }
    public static int Uri_ENCODING_USER_INFO_AND_PATH_IS_CP() {
        return (int)2L;
    }
    public static int Uri_ENCODING_HOST_IS_IDN() {
        return (int)4L;
    }
    public static int Uri_ENCODING_HOST_IS_PERCENT_ENCODED_UTF8() {
        return (int)8L;
    }
    public static int Uri_ENCODING_HOST_IS_PERCENT_ENCODED_CP() {
        return (int)16L;
    }
    public static int Uri_ENCODING_QUERY_AND_FRAGMENT_IS_PERCENT_ENCODED_UTF8() {
        return (int)32L;
    }
    public static int Uri_ENCODING_QUERY_AND_FRAGMENT_IS_CP() {
        return (int)64L;
    }
    public static int UriBuilder_USE_ORIGINAL_FLAGS() {
        return (int)1L;
    }
    public static int WININETINFO_OPTION_LOCK_HANDLE() {
        return (int)65534L;
    }
    public static int URLOSTRM_USECACHEDCOPY_ONLY() {
        return (int)1L;
    }
    public static int URLOSTRM_USECACHEDCOPY() {
        return (int)2L;
    }
    public static int URLOSTRM_GETNEWESTVERSION() {
        return (int)3L;
    }
    public static int SET_FEATURE_ON_THREAD() {
        return (int)1L;
    }
    public static int SET_FEATURE_ON_PROCESS() {
        return (int)2L;
    }
    public static int SET_FEATURE_IN_REGISTRY() {
        return (int)4L;
    }
    public static int SET_FEATURE_ON_THREAD_LOCALMACHINE() {
        return (int)8L;
    }
    public static int SET_FEATURE_ON_THREAD_INTRANET() {
        return (int)16L;
    }
    public static int SET_FEATURE_ON_THREAD_TRUSTED() {
        return (int)32L;
    }
    public static int SET_FEATURE_ON_THREAD_INTERNET() {
        return (int)64L;
    }
    public static int SET_FEATURE_ON_THREAD_RESTRICTED() {
        return (int)128L;
    }
    public static int GET_FEATURE_FROM_THREAD() {
        return (int)1L;
    }
    public static int GET_FEATURE_FROM_PROCESS() {
        return (int)2L;
    }
    public static int GET_FEATURE_FROM_REGISTRY() {
        return (int)4L;
    }
    public static int GET_FEATURE_FROM_THREAD_LOCALMACHINE() {
        return (int)8L;
    }
    public static int GET_FEATURE_FROM_THREAD_INTRANET() {
        return (int)16L;
    }
    public static int GET_FEATURE_FROM_THREAD_TRUSTED() {
        return (int)32L;
    }
    public static int GET_FEATURE_FROM_THREAD_INTERNET() {
        return (int)64L;
    }
    public static int GET_FEATURE_FROM_THREAD_RESTRICTED() {
        return (int)128L;
    }
    public static int PROTOCOLFLAG_NO_PICS_CHECK() {
        return (int)1L;
    }
    public static int MUTZ_NOSAVEDFILECHECK() {
        return (int)1L;
    }
    public static int MUTZ_ISFILE() {
        return (int)2L;
    }
    public static int MUTZ_ACCEPT_WILDCARD_SCHEME() {
        return (int)128L;
    }
    public static int MUTZ_ENFORCERESTRICTED() {
        return (int)256L;
    }
    public static int MUTZ_RESERVED() {
        return (int)512L;
    }
    public static int MUTZ_REQUIRESAVEDFILECHECK() {
        return (int)1024L;
    }
    public static int MUTZ_DONT_UNESCAPE() {
        return (int)2048L;
    }
    public static int MUTZ_DONT_USE_CACHE() {
        return (int)4096L;
    }
    public static int MUTZ_FORCE_INTRANET_FLAGS() {
        return (int)8192L;
    }
    public static int MUTZ_IGNORE_ZONE_MAPPINGS() {
        return (int)16384L;
    }
    public static int MAX_SIZE_SECURITY_ID() {
        return (int)512L;
    }
    public static int URLACTION_MIN() {
        return (int)4096L;
    }
    public static int URLACTION_DOWNLOAD_MIN() {
        return (int)4096L;
    }
    public static int URLACTION_DOWNLOAD_SIGNED_ACTIVEX() {
        return (int)4097L;
    }
    public static int URLACTION_DOWNLOAD_UNSIGNED_ACTIVEX() {
        return (int)4100L;
    }
    public static int URLACTION_DOWNLOAD_CURR_MAX() {
        return (int)4100L;
    }
    public static int URLACTION_DOWNLOAD_MAX() {
        return (int)4607L;
    }
    public static int URLACTION_ACTIVEX_MIN() {
        return (int)4608L;
    }
    public static int URLACTION_ACTIVEX_RUN() {
        return (int)4608L;
    }
    public static int URLPOLICY_ACTIVEX_CHECK_LIST() {
        return (int)65536L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_OBJECT_SAFETY() {
        return (int)4609L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_DATA_SAFETY() {
        return (int)4610L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_SCRIPT_SAFETY() {
        return (int)4611L;
    }
    public static int URLACTION_SCRIPT_OVERRIDE_SAFETY() {
        return (int)5121L;
    }
    public static int URLACTION_ACTIVEX_CONFIRM_NOOBJECTSAFETY() {
        return (int)4612L;
    }
    public static int URLACTION_ACTIVEX_TREATASUNTRUSTED() {
        return (int)4613L;
    }
    public static int URLACTION_ACTIVEX_NO_WEBOC_SCRIPT() {
        return (int)4614L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_REPURPOSEDETECTION() {
        return (int)4615L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_OPTIN() {
        return (int)4616L;
    }
    public static int URLACTION_ACTIVEX_SCRIPTLET_RUN() {
        return (int)4617L;
    }
    public static int URLACTION_ACTIVEX_DYNSRC_VIDEO_AND_ANIMATION() {
        return (int)4618L;
    }
    public static int URLACTION_ACTIVEX_OVERRIDE_DOMAINLIST() {
        return (int)4619L;
    }
    public static int URLACTION_ACTIVEX_CURR_MAX() {
        return (int)4619L;
    }
    public static int URLACTION_ACTIVEX_MAX() {
        return (int)5119L;
    }
    public static int URLACTION_SCRIPT_MIN() {
        return (int)5120L;
    }
    public static int URLACTION_SCRIPT_RUN() {
        return (int)5120L;
    }
    public static int URLACTION_SCRIPT_JAVA_USE() {
        return (int)5122L;
    }
    public static int URLACTION_SCRIPT_SAFE_ACTIVEX() {
        return (int)5125L;
    }
    public static int URLACTION_CROSS_DOMAIN_DATA() {
        return (int)5126L;
    }
    public static int URLACTION_SCRIPT_PASTE() {
        return (int)5127L;
    }
    public static int URLACTION_ALLOW_XDOMAIN_SUBFRAME_RESIZE() {
        return (int)5128L;
    }
    public static int URLACTION_SCRIPT_XSSFILTER() {
        return (int)5129L;
    }
    public static int URLACTION_SCRIPT_NAVIGATE() {
        return (int)5130L;
    }
    public static int URLACTION_PLUGGABLE_PROTOCOL_XHR() {
        return (int)5131L;
    }
    public static int URLACTION_SCRIPT_CURR_MAX() {
        return (int)5131L;
    }
    public static int URLACTION_SCRIPT_MAX() {
        return (int)5631L;
    }
    public static int URLACTION_HTML_MIN() {
        return (int)5632L;
    }
    public static int URLACTION_HTML_SUBMIT_FORMS() {
        return (int)5633L;
    }
    public static int URLACTION_HTML_SUBMIT_FORMS_FROM() {
        return (int)5634L;
    }
    public static int URLACTION_HTML_SUBMIT_FORMS_TO() {
        return (int)5635L;
    }
    public static int URLACTION_HTML_FONT_DOWNLOAD() {
        return (int)5636L;
    }
    public static int URLACTION_HTML_JAVA_RUN() {
        return (int)5637L;
    }
    public static int URLACTION_HTML_USERDATA_SAVE() {
        return (int)5638L;
    }
    public static int URLACTION_HTML_SUBFRAME_NAVIGATE() {
        return (int)5639L;
    }
    public static int URLACTION_HTML_META_REFRESH() {
        return (int)5640L;
    }
    public static int URLACTION_HTML_MIXED_CONTENT() {
        return (int)5641L;
    }
    public static int URLACTION_HTML_INCLUDE_FILE_PATH() {
        return (int)5642L;
    }
    public static int URLACTION_HTML_ALLOW_INJECTED_DYNAMIC_HTML() {
        return (int)5643L;
    }
    public static int URLACTION_HTML_REQUIRE_UTF8_DOCUMENT_CODEPAGE() {
        return (int)5644L;
    }
    public static int URLACTION_HTML_ALLOW_CROSS_DOMAIN_CANVAS() {
        return (int)5645L;
    }
    public static int URLACTION_HTML_ALLOW_WINDOW_CLOSE() {
        return (int)5646L;
    }
    public static int URLACTION_HTML_ALLOW_CROSS_DOMAIN_WEBWORKER() {
        return (int)5647L;
    }
    public static int URLACTION_HTML_ALLOW_CROSS_DOMAIN_TEXTTRACK() {
        return (int)5648L;
    }
    public static int URLACTION_HTML_ALLOW_INDEXEDDB() {
        return (int)5649L;
    }
    public static int URLACTION_HTML_MAX() {
        return (int)6143L;
    }
    public static int URLACTION_SHELL_MIN() {
        return (int)6144L;
    }
    public static int URLACTION_SHELL_INSTALL_DTITEMS() {
        return (int)6144L;
    }
    public static int URLACTION_SHELL_MOVE_OR_COPY() {
        return (int)6146L;
    }
    public static int URLACTION_SHELL_FILE_DOWNLOAD() {
        return (int)6147L;
    }
    public static int URLACTION_SHELL_VERB() {
        return (int)6148L;
    }
    public static int URLACTION_SHELL_WEBVIEW_VERB() {
        return (int)6149L;
    }
    public static int URLACTION_SHELL_SHELLEXECUTE() {
        return (int)6150L;
    }
    public static int URLACTION_SHELL_EXECUTE_HIGHRISK() {
        return (int)6150L;
    }
    public static int URLACTION_SHELL_EXECUTE_MODRISK() {
        return (int)6151L;
    }
    public static int URLACTION_SHELL_EXECUTE_LOWRISK() {
        return (int)6152L;
    }
    public static int URLACTION_SHELL_POPUPMGR() {
        return (int)6153L;
    }
    public static int URLACTION_SHELL_RTF_OBJECTS_LOAD() {
        return (int)6154L;
    }
    public static int URLACTION_SHELL_ENHANCED_DRAGDROP_SECURITY() {
        return (int)6155L;
    }
    public static int URLACTION_SHELL_EXTENSIONSECURITY() {
        return (int)6156L;
    }
    public static int URLACTION_SHELL_SECURE_DRAGSOURCE() {
        return (int)6157L;
    }
    public static int URLACTION_SHELL_REMOTEQUERY() {
        return (int)6158L;
    }
    public static int URLACTION_SHELL_PREVIEW() {
        return (int)6159L;
    }
    public static int URLACTION_SHELL_SHARE() {
        return (int)6160L;
    }
    public static int URLACTION_SHELL_ALLOW_CROSS_SITE_SHARE() {
        return (int)6161L;
    }
    public static int URLACTION_SHELL_CURR_MAX() {
        return (int)6161L;
    }
    public static int URLACTION_SHELL_MAX() {
        return (int)6655L;
    }
    public static int URLACTION_NETWORK_MIN() {
        return (int)6656L;
    }
    public static int URLACTION_CREDENTIALS_USE() {
        return (int)6656L;
    }
    public static int URLPOLICY_CREDENTIALS_SILENT_LOGON_OK() {
        return (int)0L;
    }
    public static int URLPOLICY_CREDENTIALS_MUST_PROMPT_USER() {
        return (int)65536L;
    }
    public static int URLPOLICY_CREDENTIALS_CONDITIONAL_PROMPT() {
        return (int)131072L;
    }
    public static int URLPOLICY_CREDENTIALS_ANONYMOUS_ONLY() {
        return (int)196608L;
    }
    public static int URLACTION_AUTHENTICATE_CLIENT() {
        return (int)6657L;
    }
    public static int URLPOLICY_AUTHENTICATE_CLEARTEXT_OK() {
        return (int)0L;
    }
    public static int URLPOLICY_AUTHENTICATE_CHALLENGE_RESPONSE() {
        return (int)65536L;
    }
    public static int URLPOLICY_AUTHENTICATE_MUTUAL_ONLY() {
        return (int)196608L;
    }
    public static int URLACTION_COOKIES() {
        return (int)6658L;
    }
    public static int URLACTION_COOKIES_SESSION() {
        return (int)6659L;
    }
    public static int URLACTION_CLIENT_CERT_PROMPT() {
        return (int)6660L;
    }
    public static int URLACTION_COOKIES_THIRD_PARTY() {
        return (int)6661L;
    }
    public static int URLACTION_COOKIES_SESSION_THIRD_PARTY() {
        return (int)6662L;
    }
    public static int URLACTION_COOKIES_ENABLED() {
        return (int)6672L;
    }
    public static int URLACTION_NETWORK_CURR_MAX() {
        return (int)6672L;
    }
    public static int URLACTION_NETWORK_MAX() {
        return (int)7167L;
    }
    public static int URLACTION_JAVA_MIN() {
        return (int)7168L;
    }
    public static int URLACTION_JAVA_PERMISSIONS() {
        return (int)7168L;
    }
    public static int URLPOLICY_JAVA_PROHIBIT() {
        return (int)0L;
    }
    public static int URLPOLICY_JAVA_HIGH() {
        return (int)65536L;
    }
    public static int URLPOLICY_JAVA_MEDIUM() {
        return (int)131072L;
    }
    public static int URLPOLICY_JAVA_LOW() {
        return (int)196608L;
    }
    public static int URLPOLICY_JAVA_CUSTOM() {
        return (int)8388608L;
    }
    public static int URLACTION_JAVA_CURR_MAX() {
        return (int)7168L;
    }
    public static int URLACTION_JAVA_MAX() {
        return (int)7423L;
    }
    public static int URLACTION_INFODELIVERY_MIN() {
        return (int)7424L;
    }
    public static int URLACTION_INFODELIVERY_NO_ADDING_CHANNELS() {
        return (int)7424L;
    }
    public static int URLACTION_INFODELIVERY_NO_EDITING_CHANNELS() {
        return (int)7425L;
    }
    public static int URLACTION_INFODELIVERY_NO_REMOVING_CHANNELS() {
        return (int)7426L;
    }
    public static int URLACTION_INFODELIVERY_NO_ADDING_SUBSCRIPTIONS() {
        return (int)7427L;
    }
    public static int URLACTION_INFODELIVERY_NO_EDITING_SUBSCRIPTIONS() {
        return (int)7428L;
    }
    public static int URLACTION_INFODELIVERY_NO_REMOVING_SUBSCRIPTIONS() {
        return (int)7429L;
    }
    public static int URLACTION_INFODELIVERY_NO_CHANNEL_LOGGING() {
        return (int)7430L;
    }
    public static int URLACTION_INFODELIVERY_CURR_MAX() {
        return (int)7430L;
    }
    public static int URLACTION_INFODELIVERY_MAX() {
        return (int)7679L;
    }
    public static int URLACTION_CHANNEL_SOFTDIST_MIN() {
        return (int)7680L;
    }
    public static int URLACTION_CHANNEL_SOFTDIST_PERMISSIONS() {
        return (int)7685L;
    }
    public static int URLPOLICY_CHANNEL_SOFTDIST_PROHIBIT() {
        return (int)65536L;
    }
    public static int URLPOLICY_CHANNEL_SOFTDIST_PRECACHE() {
        return (int)131072L;
    }
    public static int URLPOLICY_CHANNEL_SOFTDIST_AUTOINSTALL() {
        return (int)196608L;
    }
    public static int URLACTION_CHANNEL_SOFTDIST_MAX() {
        return (int)7935L;
    }
    public static int URLACTION_DOTNET_USERCONTROLS() {
        return (int)8197L;
    }
    public static int URLACTION_BEHAVIOR_MIN() {
        return (int)8192L;
    }
    public static int URLACTION_BEHAVIOR_RUN() {
        return (int)8192L;
    }
    public static int URLPOLICY_BEHAVIOR_CHECK_LIST() {
        return (int)65536L;
    }
    public static int URLACTION_FEATURE_MIN() {
        return (int)8448L;
    }
    public static int URLACTION_FEATURE_MIME_SNIFFING() {
        return (int)8448L;
    }
    public static int URLACTION_FEATURE_ZONE_ELEVATION() {
        return (int)8449L;
    }
    public static int URLACTION_FEATURE_WINDOW_RESTRICTIONS() {
        return (int)8450L;
    }
    public static int URLACTION_FEATURE_SCRIPT_STATUS_BAR() {
        return (int)8451L;
    }
    public static int URLACTION_FEATURE_FORCE_ADDR_AND_STATUS() {
        return (int)8452L;
    }
    public static int URLACTION_FEATURE_BLOCK_INPUT_PROMPTS() {
        return (int)8453L;
    }
    public static int URLACTION_FEATURE_DATA_BINDING() {
        return (int)8454L;
    }
    public static int URLACTION_FEATURE_CROSSDOMAIN_FOCUS_CHANGE() {
        return (int)8455L;
    }
    public static int URLACTION_AUTOMATIC_DOWNLOAD_UI_MIN() {
        return (int)8704L;
    }
    public static int URLACTION_AUTOMATIC_DOWNLOAD_UI() {
        return (int)8704L;
    }
    public static int URLACTION_AUTOMATIC_ACTIVEX_UI() {
        return (int)8705L;
    }
    public static int URLACTION_ALLOW_RESTRICTEDPROTOCOLS() {
        return (int)8960L;
    }
    public static int URLACTION_ALLOW_APEVALUATION() {
        return (int)8961L;
    }
    public static int URLACTION_ALLOW_XHR_EVALUATION() {
        return (int)8962L;
    }
    public static int URLACTION_WINDOWS_BROWSER_APPLICATIONS() {
        return (int)9216L;
    }
    public static int URLACTION_XPS_DOCUMENTS() {
        return (int)9217L;
    }
    public static int URLACTION_LOOSE_XAML() {
        return (int)9218L;
    }
    public static int URLACTION_LOWRIGHTS() {
        return (int)9472L;
    }
    public static int URLACTION_WINFX_SETUP() {
        return (int)9728L;
    }
    public static int URLACTION_INPRIVATE_BLOCKING() {
        return (int)9984L;
    }
    public static int URLACTION_ALLOW_AUDIO_VIDEO() {
        return (int)9985L;
    }
    public static int URLACTION_ALLOW_ACTIVEX_FILTERING() {
        return (int)9986L;
    }
    public static int URLACTION_ALLOW_STRUCTURED_STORAGE_SNIFFING() {
        return (int)9987L;
    }
    public static int URLACTION_ALLOW_AUDIO_VIDEO_PLUGINS() {
        return (int)9988L;
    }
    public static int URLACTION_ALLOW_ZONE_ELEVATION_VIA_OPT_OUT() {
        return (int)9989L;
    }
    public static int URLACTION_ALLOW_ZONE_ELEVATION_OPT_OUT_ADDITION() {
        return (int)9990L;
    }
    public static int URLACTION_ALLOW_CROSSDOMAIN_DROP_WITHIN_WINDOW() {
        return (int)9992L;
    }
    public static int URLACTION_ALLOW_CROSSDOMAIN_DROP_ACROSS_WINDOWS() {
        return (int)9993L;
    }
    public static int URLACTION_ALLOW_CROSSDOMAIN_APPCACHE_MANIFEST() {
        return (int)9994L;
    }
    public static int URLACTION_ALLOW_RENDER_LEGACY_DXTFILTERS() {
        return (int)9995L;
    }
    public static int URLPOLICY_ALLOW() {
        return (int)0L;
    }
    public static int URLPOLICY_QUERY() {
        return (int)1L;
    }
    public static int URLPOLICY_DISALLOW() {
        return (int)3L;
    }
    public static int URLPOLICY_NOTIFY_ON_ALLOW() {
        return (int)16L;
    }
    public static int URLPOLICY_NOTIFY_ON_DISALLOW() {
        return (int)32L;
    }
    public static int URLPOLICY_LOG_ON_ALLOW() {
        return (int)64L;
    }
    public static int URLPOLICY_LOG_ON_DISALLOW() {
        return (int)128L;
    }
    public static int URLPOLICY_MASK_PERMISSIONS() {
        return (int)15L;
    }
    public static int URLPOLICY_DONTCHECKDLGBOX() {
        return (int)256L;
    }
    public static int URLZONE_ESC_FLAG() {
        return (int)256L;
    }
    public static int SECURITY_IE_STATE_GREEN() {
        return (int)0L;
    }
    public static int SECURITY_IE_STATE_RED() {
        return (int)1L;
    }
    public static int SOFTDIST_FLAG_USAGE_EMAIL() {
        return (int)1L;
    }
    public static int SOFTDIST_FLAG_USAGE_PRECACHE() {
        return (int)2L;
    }
    public static int SOFTDIST_FLAG_USAGE_AUTOINSTALL() {
        return (int)4L;
    }
    public static int SOFTDIST_FLAG_DELETE_SUBSCRIPTION() {
        return (int)8L;
    }
    public static int SOFTDIST_ADSTATE_NONE() {
        return (int)0L;
    }
    public static int SOFTDIST_ADSTATE_AVAILABLE() {
        return (int)1L;
    }
    public static int SOFTDIST_ADSTATE_DOWNLOADED() {
        return (int)2L;
    }
    public static int SOFTDIST_ADSTATE_INSTALLED() {
        return (int)3L;
    }
    public static int CONFIRMSAFETYACTION_LOADOBJECT() {
        return (int)1L;
    }
    public static int PIDDSI_CATEGORY() {
        return (int)2L;
    }
    public static int PIDDSI_PRESFORMAT() {
        return (int)3L;
    }
    public static int PIDDSI_BYTECOUNT() {
        return (int)4L;
    }
    public static int PIDDSI_LINECOUNT() {
        return (int)5L;
    }
    public static int PIDDSI_PARCOUNT() {
        return (int)6L;
    }
    public static int PIDDSI_SLIDECOUNT() {
        return (int)7L;
    }
    public static int PIDDSI_NOTECOUNT() {
        return (int)8L;
    }
    public static int PIDDSI_HIDDENCOUNT() {
        return (int)9L;
    }
    public static int PIDDSI_MMCLIPCOUNT() {
        return (int)10L;
    }
    public static int PIDDSI_SCALE() {
        return (int)11L;
    }
    public static int PIDDSI_HEADINGPAIR() {
        return (int)12L;
    }
    public static int PIDDSI_DOCPARTS() {
        return (int)13L;
    }
    public static int PIDDSI_MANAGER() {
        return (int)14L;
    }
    public static int PIDDSI_COMPANY() {
        return (int)15L;
    }
    public static int PIDDSI_LINKSDIRTY() {
        return (int)16L;
    }
    public static int CCH_MAX_PROPSTG_NAME() {
        return (int)31L;
    }
    public static int STDOLE_MAJORVERNUM() {
        return (int)1L;
    }
    public static int STDOLE_MINORVERNUM() {
        return (int)0L;
    }
    public static int STDOLE_LCID() {
        return (int)0L;
    }
    public static int STDOLE2_MAJORVERNUM() {
        return (int)2L;
    }
    public static int STDOLE2_MINORVERNUM() {
        return (int)0L;
    }
    public static int STDOLE2_LCID() {
        return (int)0L;
    }
    public static int VARIANT_NOVALUEPROP() {
        return (int)1L;
    }
    public static int VARIANT_ALPHABOOL() {
        return (int)2L;
    }
    public static int VARIANT_NOUSEROVERRIDE() {
        return (int)4L;
    }
    public static int VARIANT_CALENDAR_HIJRI() {
        return (int)8L;
    }
    public static int VARIANT_LOCALBOOL() {
        return (int)16L;
    }
    public static int VARIANT_CALENDAR_THAI() {
        return (int)32L;
    }
    public static int VARIANT_CALENDAR_GREGORIAN() {
        return (int)64L;
    }
    public static int VARIANT_USE_NLS() {
        return (int)128L;
    }
    public static int LOCALE_USE_NLS() {
        return (int)268435456L;
    }
    public static int VTDATEGRE_MAX() {
        return (int)2958465L;
    }
    public static int NUMPRS_LEADING_WHITE() {
        return (int)1L;
    }
    public static int NUMPRS_TRAILING_WHITE() {
        return (int)2L;
    }
    public static int NUMPRS_LEADING_PLUS() {
        return (int)4L;
    }
    public static int NUMPRS_TRAILING_PLUS() {
        return (int)8L;
    }
    public static int NUMPRS_LEADING_MINUS() {
        return (int)16L;
    }
    public static int NUMPRS_TRAILING_MINUS() {
        return (int)32L;
    }
    public static int NUMPRS_HEX_OCT() {
        return (int)64L;
    }
    public static int NUMPRS_PARENS() {
        return (int)128L;
    }
    public static int NUMPRS_DECIMAL() {
        return (int)256L;
    }
    public static int NUMPRS_THOUSANDS() {
        return (int)512L;
    }
    public static int NUMPRS_CURRENCY() {
        return (int)1024L;
    }
    public static int NUMPRS_EXPONENT() {
        return (int)2048L;
    }
    public static int NUMPRS_USE_ALL() {
        return (int)4096L;
    }
    public static int NUMPRS_STD() {
        return (int)8191L;
    }
    public static int NUMPRS_NEG() {
        return (int)65536L;
    }
    public static int NUMPRS_INEXACT() {
        return (int)131072L;
    }
    public static int VARCMP_LT() {
        return (int)0L;
    }
    public static int VARCMP_EQ() {
        return (int)1L;
    }
    public static int VARCMP_GT() {
        return (int)2L;
    }
    public static int VARCMP_NULL() {
        return (int)3L;
    }
    public static int DISPATCH_METHOD() {
        return (int)1L;
    }
    public static int DISPATCH_PROPERTYGET() {
        return (int)2L;
    }
    public static int DISPATCH_PROPERTYPUT() {
        return (int)4L;
    }
    public static int DISPATCH_PROPERTYPUTREF() {
        return (int)8L;
    }
    public static int LOAD_TLB_AS_32BIT() {
        return (int)32L;
    }
    public static int LOAD_TLB_AS_64BIT() {
        return (int)64L;
    }
    public static int ACTIVEOBJECT_STRONG() {
        return (int)0L;
    }
    public static int ACTIVEOBJECT_WEAK() {
        return (int)1L;
    }
    public static int OLECREATE_LEAVERUNNING() {
        return (int)1L;
    }
    public static int FILE_DEVICE_BEEP() {
        return (int)1L;
    }
    public static int FILE_DEVICE_CD_ROM() {
        return (int)2L;
    }
    public static int FILE_DEVICE_CD_ROM_FILE_SYSTEM() {
        return (int)3L;
    }
    public static int FILE_DEVICE_CONTROLLER() {
        return (int)4L;
    }
    public static int FILE_DEVICE_DATALINK() {
        return (int)5L;
    }
    public static int FILE_DEVICE_DFS() {
        return (int)6L;
    }
    public static int FILE_DEVICE_DISK() {
        return (int)7L;
    }
    public static int FILE_DEVICE_DISK_FILE_SYSTEM() {
        return (int)8L;
    }
    public static int FILE_DEVICE_FILE_SYSTEM() {
        return (int)9L;
    }
    public static int FILE_DEVICE_INPORT_PORT() {
        return (int)10L;
    }
    public static int FILE_DEVICE_KEYBOARD() {
        return (int)11L;
    }
    public static int FILE_DEVICE_MAILSLOT() {
        return (int)12L;
    }
    public static int FILE_DEVICE_MIDI_IN() {
        return (int)13L;
    }
    public static int FILE_DEVICE_MIDI_OUT() {
        return (int)14L;
    }
    public static int FILE_DEVICE_MOUSE() {
        return (int)15L;
    }
    public static int FILE_DEVICE_MULTI_UNC_PROVIDER() {
        return (int)16L;
    }
    public static int FILE_DEVICE_NAMED_PIPE() {
        return (int)17L;
    }
    public static int FILE_DEVICE_NETWORK() {
        return (int)18L;
    }
    public static int FILE_DEVICE_NETWORK_BROWSER() {
        return (int)19L;
    }
    public static int FILE_DEVICE_NETWORK_FILE_SYSTEM() {
        return (int)20L;
    }
    public static int FILE_DEVICE_NULL() {
        return (int)21L;
    }
    public static int FILE_DEVICE_PARALLEL_PORT() {
        return (int)22L;
    }
    public static int FILE_DEVICE_PHYSICAL_NETCARD() {
        return (int)23L;
    }
    public static int FILE_DEVICE_PRINTER() {
        return (int)24L;
    }
    public static int FILE_DEVICE_SCANNER() {
        return (int)25L;
    }
    public static int FILE_DEVICE_SERIAL_MOUSE_PORT() {
        return (int)26L;
    }
    public static int FILE_DEVICE_SERIAL_PORT() {
        return (int)27L;
    }
    public static int FILE_DEVICE_SCREEN() {
        return (int)28L;
    }
    public static int FILE_DEVICE_SOUND() {
        return (int)29L;
    }
    public static int FILE_DEVICE_STREAMS() {
        return (int)30L;
    }
    public static int FILE_DEVICE_TAPE() {
        return (int)31L;
    }
    public static int FILE_DEVICE_TAPE_FILE_SYSTEM() {
        return (int)32L;
    }
    public static int FILE_DEVICE_TRANSPORT() {
        return (int)33L;
    }
    public static int FILE_DEVICE_UNKNOWN() {
        return (int)34L;
    }
    public static int FILE_DEVICE_VIDEO() {
        return (int)35L;
    }
    public static int FILE_DEVICE_VIRTUAL_DISK() {
        return (int)36L;
    }
    public static int FILE_DEVICE_WAVE_IN() {
        return (int)37L;
    }
    public static int FILE_DEVICE_WAVE_OUT() {
        return (int)38L;
    }
    public static int FILE_DEVICE_8042_PORT() {
        return (int)39L;
    }
    public static int FILE_DEVICE_NETWORK_REDIRECTOR() {
        return (int)40L;
    }
    public static int FILE_DEVICE_BATTERY() {
        return (int)41L;
    }
    public static int FILE_DEVICE_BUS_EXTENDER() {
        return (int)42L;
    }
    public static int FILE_DEVICE_MODEM() {
        return (int)43L;
    }
    public static int FILE_DEVICE_VDM() {
        return (int)44L;
    }
    public static int FILE_DEVICE_MASS_STORAGE() {
        return (int)45L;
    }
    public static int FILE_DEVICE_SMB() {
        return (int)46L;
    }
    public static int FILE_DEVICE_KS() {
        return (int)47L;
    }
    public static int FILE_DEVICE_CHANGER() {
        return (int)48L;
    }
    public static int FILE_DEVICE_SMARTCARD() {
        return (int)49L;
    }
    public static int FILE_DEVICE_ACPI() {
        return (int)50L;
    }
    public static int FILE_DEVICE_DVD() {
        return (int)51L;
    }
    public static int FILE_DEVICE_FULLSCREEN_VIDEO() {
        return (int)52L;
    }
    public static int FILE_DEVICE_DFS_FILE_SYSTEM() {
        return (int)53L;
    }
    public static int FILE_DEVICE_DFS_VOLUME() {
        return (int)54L;
    }
    public static int FILE_DEVICE_SERENUM() {
        return (int)55L;
    }
    public static int FILE_DEVICE_TERMSRV() {
        return (int)56L;
    }
    public static int FILE_DEVICE_KSEC() {
        return (int)57L;
    }
    public static int FILE_DEVICE_FIPS() {
        return (int)58L;
    }
    public static int FILE_DEVICE_INFINIBAND() {
        return (int)59L;
    }
    public static int FILE_DEVICE_VMBUS() {
        return (int)62L;
    }
    public static int FILE_DEVICE_CRYPT_PROVIDER() {
        return (int)63L;
    }
    public static int FILE_DEVICE_WPD() {
        return (int)64L;
    }
    public static int FILE_DEVICE_BLUETOOTH() {
        return (int)65L;
    }
    public static int FILE_DEVICE_MT_COMPOSITE() {
        return (int)66L;
    }
    public static int FILE_DEVICE_MT_TRANSPORT() {
        return (int)67L;
    }
    public static int FILE_DEVICE_BIOMETRIC() {
        return (int)68L;
    }
    public static int FILE_DEVICE_PMI() {
        return (int)69L;
    }
    public static int FILE_DEVICE_EHSTOR() {
        return (int)70L;
    }
    public static int FILE_DEVICE_DEVAPI() {
        return (int)71L;
    }
    public static int FILE_DEVICE_GPIO() {
        return (int)72L;
    }
    public static int FILE_DEVICE_USBEX() {
        return (int)73L;
    }
    public static int FILE_DEVICE_CONSOLE() {
        return (int)80L;
    }
    public static int FILE_DEVICE_NFP() {
        return (int)81L;
    }
    public static int FILE_DEVICE_SYSENV() {
        return (int)82L;
    }
    public static int FILE_DEVICE_VIRTUAL_BLOCK() {
        return (int)83L;
    }
    public static int FILE_DEVICE_POINT_OF_SERVICE() {
        return (int)84L;
    }
    public static int FILE_DEVICE_STORAGE_REPLICATION() {
        return (int)85L;
    }
    public static int FILE_DEVICE_TRUST_ENV() {
        return (int)86L;
    }
    public static int FILE_DEVICE_UCM() {
        return (int)87L;
    }
    public static int FILE_DEVICE_UCMTCPCI() {
        return (int)88L;
    }
    public static int FILE_DEVICE_PERSISTENT_MEMORY() {
        return (int)89L;
    }
    public static int FILE_DEVICE_NVDIMM() {
        return (int)90L;
    }
    public static int FILE_DEVICE_HOLOGRAPHIC() {
        return (int)91L;
    }
    public static int FILE_DEVICE_SDFXHCI() {
        return (int)92L;
    }
    public static int FILE_DEVICE_UCMUCSI() {
        return (int)93L;
    }
    public static int METHOD_BUFFERED() {
        return (int)0L;
    }
    public static int METHOD_IN_DIRECT() {
        return (int)1L;
    }
    public static int METHOD_OUT_DIRECT() {
        return (int)2L;
    }
    public static int METHOD_NEITHER() {
        return (int)3L;
    }
    public static int FILE_ANY_ACCESS() {
        return (int)0L;
    }
    public static int DeviceDsmAction_None() {
        return (int)0L;
    }
    public static int DeviceDsmAction_Trim() {
        return (int)1L;
    }
    public static int DEVICE_DSM_NOTIFY_FLAG_BEGIN() {
        return (int)1L;
    }
    public static int DEVICE_DSM_NOTIFY_FLAG_END() {
        return (int)2L;
    }
    public static int IOCTL_STORAGE_BC_VERSION() {
        return (int)1L;
    }
    public static int STORAGE_PRIORITY_HINT_SUPPORTED() {
        return (int)1L;
    }
    public static int RECOVERED_WRITES_VALID() {
        return (int)1L;
    }
    public static int UNRECOVERED_WRITES_VALID() {
        return (int)2L;
    }
    public static int RECOVERED_READS_VALID() {
        return (int)4L;
    }
    public static int UNRECOVERED_READS_VALID() {
        return (int)8L;
    }
    public static int WRITE_COMPRESSION_INFO_VALID() {
        return (int)16L;
    }
    public static int READ_COMPRESSION_INFO_VALID() {
        return (int)32L;
    }
    public static int MEDIA_ERASEABLE() {
        return (int)1L;
    }
    public static int MEDIA_WRITE_ONCE() {
        return (int)2L;
    }
    public static int MEDIA_READ_ONLY() {
        return (int)4L;
    }
    public static int MEDIA_READ_WRITE() {
        return (int)8L;
    }
    public static int MEDIA_WRITE_PROTECTED() {
        return (int)256L;
    }
    public static int PARTITION_ENTRY_UNUSED() {
        return (int)0L;
    }
    public static int PARTITION_FAT_12() {
        return (int)1L;
    }
    public static int PARTITION_XENIX_1() {
        return (int)2L;
    }
    public static int PARTITION_XENIX_2() {
        return (int)3L;
    }
    public static int PARTITION_FAT_16() {
        return (int)4L;
    }
    public static int PARTITION_EXTENDED() {
        return (int)5L;
    }
    public static int PARTITION_HUGE() {
        return (int)6L;
    }
    public static int PARTITION_IFS() {
        return (int)7L;
    }
    public static int PARTITION_OS2BOOTMGR() {
        return (int)10L;
    }
    public static int PARTITION_FAT32() {
        return (int)11L;
    }
    public static int PARTITION_FAT32_XINT13() {
        return (int)12L;
    }
    public static int PARTITION_XINT13() {
        return (int)14L;
    }
    public static int PARTITION_XINT13_EXTENDED() {
        return (int)15L;
    }
    public static int PARTITION_PREP() {
        return (int)65L;
    }
    public static int PARTITION_LDM() {
        return (int)66L;
    }
    public static int PARTITION_UNIX() {
        return (int)99L;
    }
    public static int VALID_NTFT() {
        return (int)192L;
    }
    public static int PARTITION_NTFT() {
        return (int)128L;
    }
    public static int HIST_NO_OF_BUCKETS() {
        return (int)24L;
    }
    public static int DISK_LOGGING_START() {
        return (int)0L;
    }
    public static int DISK_LOGGING_STOP() {
        return (int)1L;
    }
    public static int DISK_LOGGING_DUMP() {
        return (int)2L;
    }
    public static int DISK_BINNING() {
        return (int)3L;
    }
    public static int CAP_ATA_ID_CMD() {
        return (int)1L;
    }
    public static int CAP_ATAPI_ID_CMD() {
        return (int)2L;
    }
    public static int CAP_SMART_CMD() {
        return (int)4L;
    }
    public static int ATAPI_ID_CMD() {
        return (int)161L;
    }
    public static int ID_CMD() {
        return (int)236L;
    }
    public static int SMART_CMD() {
        return (int)176L;
    }
    public static int SMART_CYL_LOW() {
        return (int)79L;
    }
    public static int SMART_CYL_HI() {
        return (int)194L;
    }
    public static int SMART_NO_ERROR() {
        return (int)0L;
    }
    public static int SMART_IDE_ERROR() {
        return (int)1L;
    }
    public static int SMART_INVALID_FLAG() {
        return (int)2L;
    }
    public static int SMART_INVALID_COMMAND() {
        return (int)3L;
    }
    public static int SMART_INVALID_BUFFER() {
        return (int)4L;
    }
    public static int SMART_INVALID_DRIVE() {
        return (int)5L;
    }
    public static int SMART_INVALID_IOCTL() {
        return (int)6L;
    }
    public static int SMART_ERROR_NO_MEM() {
        return (int)7L;
    }
    public static int SMART_INVALID_REGISTER() {
        return (int)8L;
    }
    public static int SMART_NOT_SUPPORTED() {
        return (int)9L;
    }
    public static int SMART_NO_IDE_DEVICE() {
        return (int)10L;
    }
    public static int SMART_OFFLINE_ROUTINE_OFFLINE() {
        return (int)0L;
    }
    public static int SMART_SHORT_SELFTEST_OFFLINE() {
        return (int)1L;
    }
    public static int SMART_EXTENDED_SELFTEST_OFFLINE() {
        return (int)2L;
    }
    public static int SMART_ABORT_OFFLINE_SELFTEST() {
        return (int)127L;
    }
    public static int SMART_SHORT_SELFTEST_CAPTIVE() {
        return (int)129L;
    }
    public static int SMART_EXTENDED_SELFTEST_CAPTIVE() {
        return (int)130L;
    }
    public static int READ_ATTRIBUTE_BUFFER_SIZE() {
        return (int)512L;
    }
    public static int IDENTIFY_BUFFER_SIZE() {
        return (int)512L;
    }
    public static int READ_THRESHOLD_BUFFER_SIZE() {
        return (int)512L;
    }
    public static int SMART_LOG_SECTOR_SIZE() {
        return (int)512L;
    }
    public static int READ_ATTRIBUTES() {
        return (int)208L;
    }
    public static int READ_THRESHOLDS() {
        return (int)209L;
    }
    public static int ENABLE_DISABLE_AUTOSAVE() {
        return (int)210L;
    }
    public static int SAVE_ATTRIBUTE_VALUES() {
        return (int)211L;
    }
    public static int EXECUTE_OFFLINE_DIAGS() {
        return (int)212L;
    }
    public static int SMART_READ_LOG() {
        return (int)213L;
    }
    public static int SMART_WRITE_LOG() {
        return (int)214L;
    }
    public static int ENABLE_SMART() {
        return (int)216L;
    }
    public static int DISABLE_SMART() {
        return (int)217L;
    }
    public static int RETURN_SMART_STATUS() {
        return (int)218L;
    }
    public static int ENABLE_DISABLE_AUTO_OFFLINE() {
        return (int)219L;
    }
    public static int MAX_VOLUME_ID_SIZE() {
        return (int)36L;
    }
    public static int MAX_VOLUME_TEMPLATE_SIZE() {
        return (int)40L;
    }
    public static int VENDOR_ID_LENGTH() {
        return (int)8L;
    }
    public static int PRODUCT_ID_LENGTH() {
        return (int)16L;
    }
    public static int REVISION_LENGTH() {
        return (int)4L;
    }
    public static int SERIAL_NUMBER_LENGTH() {
        return (int)32L;
    }
    public static int CHANGER_BAR_CODE_SCANNER_INSTALLED() {
        return (int)1L;
    }
    public static int CHANGER_INIT_ELEM_STAT_WITH_RANGE() {
        return (int)2L;
    }
    public static int CHANGER_CLOSE_IEPORT() {
        return (int)4L;
    }
    public static int CHANGER_OPEN_IEPORT() {
        return (int)8L;
    }
    public static int CHANGER_STATUS_NON_VOLATILE() {
        return (int)16L;
    }
    public static int CHANGER_EXCHANGE_MEDIA() {
        return (int)32L;
    }
    public static int CHANGER_CLEANER_SLOT() {
        return (int)64L;
    }
    public static int CHANGER_LOCK_UNLOCK() {
        return (int)128L;
    }
    public static int CHANGER_CARTRIDGE_MAGAZINE() {
        return (int)256L;
    }
    public static int CHANGER_MEDIUM_FLIP() {
        return (int)512L;
    }
    public static int CHANGER_POSITION_TO_ELEMENT() {
        return (int)1024L;
    }
    public static int CHANGER_REPORT_IEPORT_STATE() {
        return (int)2048L;
    }
    public static int CHANGER_STORAGE_DRIVE() {
        return (int)4096L;
    }
    public static int CHANGER_STORAGE_IEPORT() {
        return (int)8192L;
    }
    public static int CHANGER_STORAGE_SLOT() {
        return (int)16384L;
    }
    public static int CHANGER_STORAGE_TRANSPORT() {
        return (int)32768L;
    }
    public static int CHANGER_DRIVE_CLEANING_REQUIRED() {
        return (int)65536L;
    }
    public static int CHANGER_PREDISMOUNT_EJECT_REQUIRED() {
        return (int)131072L;
    }
    public static int CHANGER_CLEANER_ACCESS_NOT_VALID() {
        return (int)262144L;
    }
    public static int CHANGER_PREMOUNT_EJECT_REQUIRED() {
        return (int)524288L;
    }
    public static int CHANGER_VOLUME_IDENTIFICATION() {
        return (int)1048576L;
    }
    public static int CHANGER_VOLUME_SEARCH() {
        return (int)2097152L;
    }
    public static int CHANGER_VOLUME_ASSERT() {
        return (int)4194304L;
    }
    public static int CHANGER_VOLUME_REPLACE() {
        return (int)8388608L;
    }
    public static int CHANGER_VOLUME_UNDEFINE() {
        return (int)16777216L;
    }
    public static int CHANGER_SERIAL_NUMBER_VALID() {
        return (int)67108864L;
    }
    public static int CHANGER_DEVICE_REINITIALIZE_CAPABLE() {
        return (int)134217728L;
    }
    public static int CHANGER_KEYPAD_ENABLE_DISABLE() {
        return (int)268435456L;
    }
    public static int CHANGER_DRIVE_EMPTY_ON_DOOR_ACCESS() {
        return (int)536870912L;
    }
    public static int CHANGER_TO_TRANSPORT() {
        return (int)1L;
    }
    public static int CHANGER_TO_SLOT() {
        return (int)2L;
    }
    public static int CHANGER_TO_IEPORT() {
        return (int)4L;
    }
    public static int CHANGER_TO_DRIVE() {
        return (int)8L;
    }
    public static int LOCK_UNLOCK_IEPORT() {
        return (int)1L;
    }
    public static int LOCK_UNLOCK_DOOR() {
        return (int)2L;
    }
    public static int LOCK_UNLOCK_KEYPAD() {
        return (int)4L;
    }
    public static int LOCK_ELEMENT() {
        return (int)0L;
    }
    public static int UNLOCK_ELEMENT() {
        return (int)1L;
    }
    public static int EXTEND_IEPORT() {
        return (int)2L;
    }
    public static int RETRACT_IEPORT() {
        return (int)3L;
    }
    public static int ELEMENT_STATUS_FULL() {
        return (int)1L;
    }
    public static int ELEMENT_STATUS_IMPEXP() {
        return (int)2L;
    }
    public static int ELEMENT_STATUS_EXCEPT() {
        return (int)4L;
    }
    public static int ELEMENT_STATUS_ACCESS() {
        return (int)8L;
    }
    public static int ELEMENT_STATUS_EXENAB() {
        return (int)16L;
    }
    public static int ELEMENT_STATUS_INENAB() {
        return (int)32L;
    }
    public static int ELEMENT_STATUS_PRODUCT_DATA() {
        return (int)64L;
    }
    public static int ELEMENT_STATUS_LUN_VALID() {
        return (int)4096L;
    }
    public static int ELEMENT_STATUS_ID_VALID() {
        return (int)8192L;
    }
    public static int ELEMENT_STATUS_NOT_BUS() {
        return (int)32768L;
    }
    public static int ELEMENT_STATUS_INVERT() {
        return (int)4194304L;
    }
    public static int ELEMENT_STATUS_SVALID() {
        return (int)8388608L;
    }
    public static int ELEMENT_STATUS_PVOLTAG() {
        return (int)268435456L;
    }
    public static int ELEMENT_STATUS_AVOLTAG() {
        return (int)536870912L;
    }
    public static int ERROR_LABEL_UNREADABLE() {
        return (int)1L;
    }
    public static int ERROR_LABEL_QUESTIONABLE() {
        return (int)2L;
    }
    public static int ERROR_SLOT_NOT_PRESENT() {
        return (int)4L;
    }
    public static int ERROR_DRIVE_NOT_INSTALLED() {
        return (int)8L;
    }
    public static int ERROR_TRAY_MALFUNCTION() {
        return (int)16L;
    }
    public static int ERROR_INIT_STATUS_NEEDED() {
        return (int)17L;
    }
    public static int SEARCH_ALL() {
        return (int)0L;
    }
    public static int SEARCH_PRIMARY() {
        return (int)1L;
    }
    public static int SEARCH_ALTERNATE() {
        return (int)2L;
    }
    public static int SEARCH_ALL_NO_SEQ() {
        return (int)4L;
    }
    public static int SEARCH_PRI_NO_SEQ() {
        return (int)5L;
    }
    public static int SEARCH_ALT_NO_SEQ() {
        return (int)6L;
    }
    public static int ASSERT_PRIMARY() {
        return (int)8L;
    }
    public static int ASSERT_ALTERNATE() {
        return (int)9L;
    }
    public static int REPLACE_PRIMARY() {
        return (int)10L;
    }
    public static int REPLACE_ALTERNATE() {
        return (int)11L;
    }
    public static int UNDEFINE_PRIMARY() {
        return (int)12L;
    }
    public static int UNDEFINE_ALTERNATE() {
        return (int)13L;
    }
    public static int FILE_PREFETCH_TYPE_FOR_CREATE() {
        return (int)1L;
    }
    public static int FILE_PREFETCH_TYPE_FOR_DIRENUM() {
        return (int)2L;
    }
    public static int FILE_PREFETCH_TYPE_FOR_CREATE_EX() {
        return (int)3L;
    }
    public static int FILE_PREFETCH_TYPE_FOR_DIRENUM_EX() {
        return (int)4L;
    }
    public static int FILE_PREFETCH_TYPE_MAX() {
        return (int)4L;
    }
    public static int FILESYSTEM_STATISTICS_TYPE_NTFS() {
        return (int)1L;
    }
    public static int FILESYSTEM_STATISTICS_TYPE_FAT() {
        return (int)2L;
    }
    public static int FILESYSTEM_STATISTICS_TYPE_EXFAT() {
        return (int)3L;
    }
    public static int FILE_SET_ENCRYPTION() {
        return (int)1L;
    }
    public static int FILE_CLEAR_ENCRYPTION() {
        return (int)2L;
    }
    public static int STREAM_SET_ENCRYPTION() {
        return (int)3L;
    }
    public static int STREAM_CLEAR_ENCRYPTION() {
        return (int)4L;
    }
    public static int MAXIMUM_ENCRYPTION_VALUE() {
        return (int)4L;
    }
    public static int COPYFILE_SIS_LINK() {
        return (int)1L;
    }
    public static int COPYFILE_SIS_REPLACE() {
        return (int)2L;
    }
    public static int COPYFILE_SIS_FLAGS() {
        return (int)3L;
    }
    public static int SET_REPAIR_ENABLED() {
        return (int)1L;
    }
    public static int SET_REPAIR_VOLUME_BITMAP_SCAN() {
        return (int)2L;
    }
    public static int SET_REPAIR_DELETE_CROSSLINK() {
        return (int)4L;
    }
    public static int SET_REPAIR_WARN_ABOUT_DATA_LOSS() {
        return (int)8L;
    }
    public static int SET_REPAIR_DISABLED_AND_BUGCHECK_ON_CORRUPT() {
        return (int)16L;
    }
    public static int SET_REPAIR_VALID_MASK() {
        return (int)31L;
    }
    public static int TXFS_RM_FLAG_LOGGING_MODE() {
        return (int)1L;
    }
    public static int TXFS_RM_FLAG_RENAME_RM() {
        return (int)2L;
    }
    public static int TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MAX() {
        return (int)4L;
    }
    public static int TXFS_RM_FLAG_LOG_CONTAINER_COUNT_MIN() {
        return (int)8L;
    }
    public static int TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS() {
        return (int)16L;
    }
    public static int TXFS_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT() {
        return (int)32L;
    }
    public static int TXFS_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE() {
        return (int)64L;
    }
    public static int TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX() {
        return (int)128L;
    }
    public static int TXFS_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN() {
        return (int)256L;
    }
    public static int TXFS_RM_FLAG_GROW_LOG() {
        return (int)1024L;
    }
    public static int TXFS_RM_FLAG_SHRINK_LOG() {
        return (int)2048L;
    }
    public static int TXFS_RM_FLAG_ENFORCE_MINIMUM_SIZE() {
        return (int)4096L;
    }
    public static int TXFS_RM_FLAG_PRESERVE_CHANGES() {
        return (int)8192L;
    }
    public static int TXFS_RM_FLAG_RESET_RM_AT_NEXT_START() {
        return (int)16384L;
    }
    public static int TXFS_RM_FLAG_DO_NOT_RESET_RM_AT_NEXT_START() {
        return (int)32768L;
    }
    public static int TXFS_RM_FLAG_PREFER_CONSISTENCY() {
        return (int)65536L;
    }
    public static int TXFS_RM_FLAG_PREFER_AVAILABILITY() {
        return (int)131072L;
    }
    public static int TXFS_LOGGING_MODE_SIMPLE() {
        return (int)1L;
    }
    public static int TXFS_LOGGING_MODE_FULL() {
        return (int)2L;
    }
    public static int TXFS_TRANSACTION_STATE_NONE() {
        return (int)0L;
    }
    public static int TXFS_TRANSACTION_STATE_ACTIVE() {
        return (int)1L;
    }
    public static int TXFS_TRANSACTION_STATE_PREPARED() {
        return (int)2L;
    }
    public static int TXFS_TRANSACTION_STATE_NOTACTIVE() {
        return (int)3L;
    }
    public static int TXFS_RM_STATE_NOT_STARTED() {
        return (int)0L;
    }
    public static int TXFS_RM_STATE_STARTING() {
        return (int)1L;
    }
    public static int TXFS_RM_STATE_ACTIVE() {
        return (int)2L;
    }
    public static int TXFS_RM_STATE_SHUTTING_DOWN() {
        return (int)3L;
    }
    public static int TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_REDO_LSN() {
        return (int)1L;
    }
    public static int TXFS_ROLLFORWARD_REDO_FLAG_USE_LAST_VIRTUAL_CLOCK() {
        return (int)2L;
    }
    public static int TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MAX() {
        return (int)1L;
    }
    public static int TXFS_START_RM_FLAG_LOG_CONTAINER_COUNT_MIN() {
        return (int)2L;
    }
    public static int TXFS_START_RM_FLAG_LOG_CONTAINER_SIZE() {
        return (int)4L;
    }
    public static int TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_NUM_CONTAINERS() {
        return (int)8L;
    }
    public static int TXFS_START_RM_FLAG_LOG_GROWTH_INCREMENT_PERCENT() {
        return (int)16L;
    }
    public static int TXFS_START_RM_FLAG_LOG_AUTO_SHRINK_PERCENTAGE() {
        return (int)32L;
    }
    public static int TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MAX() {
        return (int)64L;
    }
    public static int TXFS_START_RM_FLAG_LOG_NO_CONTAINER_COUNT_MIN() {
        return (int)128L;
    }
    public static int TXFS_START_RM_FLAG_RECOVER_BEST_EFFORT() {
        return (int)512L;
    }
    public static int TXFS_START_RM_FLAG_LOGGING_MODE() {
        return (int)1024L;
    }
    public static int TXFS_START_RM_FLAG_PRESERVE_CHANGES() {
        return (int)2048L;
    }
    public static int TXFS_START_RM_FLAG_PREFER_CONSISTENCY() {
        return (int)4096L;
    }
    public static int TXFS_START_RM_FLAG_PREFER_AVAILABILITY() {
        return (int)8192L;
    }
    public static int TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_CREATED() {
        return (int)1L;
    }
    public static int TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY_FLAG_DELETED() {
        return (int)2L;
    }
    public static int TXFS_SAVEPOINT_SET() {
        return (int)1L;
    }
    public static int TXFS_SAVEPOINT_ROLLBACK() {
        return (int)2L;
    }
    public static int TXFS_SAVEPOINT_CLEAR() {
        return (int)4L;
    }
    public static int TXFS_SAVEPOINT_CLEAR_ALL() {
        return (int)16L;
    }
    public static int REQUEST_OPLOCK_CURRENT_VERSION() {
        return (int)1L;
    }
    public static int SD_GLOBAL_CHANGE_TYPE_MACHINE_SID() {
        return (int)1L;
    }
    public static int ENCRYPTED_DATA_INFO_SPARSE_FILE() {
        return (int)1L;
    }
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_PAGE_FILE() {
        return (int)1L;
    }
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_DENY_DEFRAG_SET() {
        return (int)2L;
    }
    public static int LOOKUP_STREAM_FROM_CLUSTER_ENTRY_FLAG_FS_SYSTEM_FILE() {
        return (int)4L;
    }
}


