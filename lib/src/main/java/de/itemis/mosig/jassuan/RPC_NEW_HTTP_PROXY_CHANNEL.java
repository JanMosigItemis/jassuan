// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public interface RPC_NEW_HTTP_PROXY_CHANNEL {

    int apply(int x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4, jdk.incubator.foreign.MemoryAddress x5, jdk.incubator.foreign.MemoryAddress x6, jdk.incubator.foreign.MemoryAddress x7, jdk.incubator.foreign.MemoryAddress x8, jdk.incubator.foreign.MemoryAddress x9, int x10, jdk.incubator.foreign.MemoryAddress x11, jdk.incubator.foreign.MemoryAddress x12);
    static MemoryAddress allocate(RPC_NEW_HTTP_PROXY_CHANNEL fi) {
        return RuntimeHelper.upcallStub(RPC_NEW_HTTP_PROXY_CHANNEL.class, fi, constants$788.RPC_NEW_HTTP_PROXY_CHANNEL$FUNC, "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I");
    }
    static MemoryAddress allocate(RPC_NEW_HTTP_PROXY_CHANNEL fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(RPC_NEW_HTTP_PROXY_CHANNEL.class, fi, constants$788.RPC_NEW_HTTP_PROXY_CHANNEL$FUNC, "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I", scope);
    }
    static RPC_NEW_HTTP_PROXY_CHANNEL ofAddress(MemoryAddress addr) {
        return (int x0, jdk.incubator.foreign.MemoryAddress x1, jdk.incubator.foreign.MemoryAddress x2, jdk.incubator.foreign.MemoryAddress x3, jdk.incubator.foreign.MemoryAddress x4, jdk.incubator.foreign.MemoryAddress x5, jdk.incubator.foreign.MemoryAddress x6, jdk.incubator.foreign.MemoryAddress x7, jdk.incubator.foreign.MemoryAddress x8, jdk.incubator.foreign.MemoryAddress x9, int x10, jdk.incubator.foreign.MemoryAddress x11, jdk.incubator.foreign.MemoryAddress x12) -> {
            try {
                return (int)constants$788.RPC_NEW_HTTP_PROXY_CHANNEL$MH.invokeExact((Addressable)addr, x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


