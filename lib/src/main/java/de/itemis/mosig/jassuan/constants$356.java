// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$356 {

    static final FunctionDescriptor AddAccessAllowedAce$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle AddAccessAllowedAce$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAccessAllowedAce",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$356.AddAccessAllowedAce$FUNC, false
    );
    static final FunctionDescriptor AddAccessAllowedAceEx$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle AddAccessAllowedAceEx$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AddAccessAllowedAceEx",
        "(Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;)I",
        constants$356.AddAccessAllowedAceEx$FUNC, false
    );
    static final FunctionDescriptor AdjustTokenGroups$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle AdjustTokenGroups$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AdjustTokenGroups",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$356.AdjustTokenGroups$FUNC, false
    );
    static final FunctionDescriptor AdjustTokenPrivileges$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle AdjustTokenPrivileges$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AdjustTokenPrivileges",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$356.AdjustTokenPrivileges$FUNC, false
    );
    static final FunctionDescriptor AllocateAndInitializeSid$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_CHAR,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle AllocateAndInitializeSid$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AllocateAndInitializeSid",
        "(Ljdk/incubator/foreign/MemoryAddress;BIIIIIIIILjdk/incubator/foreign/MemoryAddress;)I",
        constants$356.AllocateAndInitializeSid$FUNC, false
    );
    static final FunctionDescriptor AllocateLocallyUniqueId$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle AllocateLocallyUniqueId$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AllocateLocallyUniqueId",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$356.AllocateLocallyUniqueId$FUNC, false
    );
}


