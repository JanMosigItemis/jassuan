// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$418 {

    static final FunctionDescriptor _hwrite$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle _hwrite$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_hwrite",
        "(ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$418._hwrite$FUNC, false
    );
    static final FunctionDescriptor _lclose$FUNC = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final MethodHandle _lclose$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_lclose",
        "(I)I",
        constants$418._lclose$FUNC, false
    );
    static final FunctionDescriptor _llseek$FUNC = FunctionDescriptor.of(C_LONG,
        C_INT,
        C_LONG,
        C_INT
    );
    static final MethodHandle _llseek$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_llseek",
        "(III)I",
        constants$418._llseek$FUNC, false
    );
    static final FunctionDescriptor IsTextUnicode$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle IsTextUnicode$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IsTextUnicode",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$418.IsTextUnicode$FUNC, false
    );
    static final FunctionDescriptor BackupRead$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_INT,
        C_INT,
        C_POINTER
    );
    static final MethodHandle BackupRead$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "BackupRead",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;)I",
        constants$418.BackupRead$FUNC, false
    );
    static final FunctionDescriptor BackupSeek$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle BackupSeek$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "BackupSeek",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$418.BackupSeek$FUNC, false
    );
}


