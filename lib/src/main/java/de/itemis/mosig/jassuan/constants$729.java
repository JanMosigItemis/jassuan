// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$729 {

    static final FunctionDescriptor WNetGetProviderNameW$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WNetGetProviderNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetGetProviderNameW",
        "(ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$729.WNetGetProviderNameW$FUNC, false
    );
    static final FunctionDescriptor WNetGetNetworkInformationA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WNetGetNetworkInformationA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetGetNetworkInformationA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$729.WNetGetNetworkInformationA$FUNC, false
    );
    static final FunctionDescriptor WNetGetNetworkInformationW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WNetGetNetworkInformationW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WNetGetNetworkInformationW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$729.WNetGetNetworkInformationW$FUNC, false
    );
    static final FunctionDescriptor PFNGETPROFILEPATHA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle PFNGETPROFILEPATHA$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$729.PFNGETPROFILEPATHA$FUNC, false
    );
    static final FunctionDescriptor PFNGETPROFILEPATHW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT
    );
}


