// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public interface HOOKPROC {

    long apply(int x0, long x1, long x2);
    static MemoryAddress allocate(HOOKPROC fi) {
        return RuntimeHelper.upcallStub(HOOKPROC.class, fi, constants$545.HOOKPROC$FUNC, "(IJJ)J");
    }
    static MemoryAddress allocate(HOOKPROC fi, ResourceScope scope) {
        return RuntimeHelper.upcallStub(HOOKPROC.class, fi, constants$545.HOOKPROC$FUNC, "(IJJ)J", scope);
    }
    static HOOKPROC ofAddress(MemoryAddress addr) {
        return (int x0, long x1, long x2) -> {
            try {
                return (long)constants$545.HOOKPROC$MH.invokeExact((Addressable)addr, x0, x1, x2);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


