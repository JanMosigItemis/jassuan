// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$272 {

    static final MemoryLayout PPM_PERFMON_PERFSTATE_GUID$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment PPM_PERFMON_PERFSTATE_GUID$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "PPM_PERFMON_PERFSTATE_GUID", constants$272.PPM_PERFMON_PERFSTATE_GUID$LAYOUT);
    static final MemoryLayout PPM_THERMAL_POLICY_CHANGE_GUID$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment PPM_THERMAL_POLICY_CHANGE_GUID$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "PPM_THERMAL_POLICY_CHANGE_GUID", constants$272.PPM_THERMAL_POLICY_CHANGE_GUID$LAYOUT);
    static final FunctionDescriptor PIMAGE_TLS_CALLBACK$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle PIMAGE_TLS_CALLBACK$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$272.PIMAGE_TLS_CALLBACK$FUNC, false
    );
    static final FunctionDescriptor RtlCaptureStackBackTrace$FUNC = FunctionDescriptor.of(C_SHORT,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RtlCaptureStackBackTrace$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlCaptureStackBackTrace",
        "(IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)S",
        constants$272.RtlCaptureStackBackTrace$FUNC, false
    );
    static final FunctionDescriptor RtlCaptureContext$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle RtlCaptureContext$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RtlCaptureContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$272.RtlCaptureContext$FUNC, false
    );
}


