// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$690 {

    static final FunctionDescriptor ReadConsoleInputA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle ReadConsoleInputA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReadConsoleInputA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$690.ReadConsoleInputA$FUNC, false
    );
    static final FunctionDescriptor ReadConsoleInputW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle ReadConsoleInputW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReadConsoleInputW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$690.ReadConsoleInputW$FUNC, false
    );
    static final FunctionDescriptor WriteConsoleInputA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle WriteConsoleInputA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WriteConsoleInputA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$690.WriteConsoleInputA$FUNC, false
    );
    static final FunctionDescriptor WriteConsoleInputW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle WriteConsoleInputW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WriteConsoleInputW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$690.WriteConsoleInputW$FUNC, false
    );
    static final FunctionDescriptor ReadConsoleOutputA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        MemoryLayout.structLayout(
            C_SHORT.withName("X"),
            C_SHORT.withName("Y")
        ).withName("_COORD"),
        MemoryLayout.structLayout(
            C_SHORT.withName("X"),
            C_SHORT.withName("Y")
        ).withName("_COORD"),
        C_POINTER
    );
    static final MethodHandle ReadConsoleOutputA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReadConsoleOutputA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$690.ReadConsoleOutputA$FUNC, false
    );
    static final FunctionDescriptor ReadConsoleOutputW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        MemoryLayout.structLayout(
            C_SHORT.withName("X"),
            C_SHORT.withName("Y")
        ).withName("_COORD"),
        MemoryLayout.structLayout(
            C_SHORT.withName("X"),
            C_SHORT.withName("Y")
        ).withName("_COORD"),
        C_POINTER
    );
    static final MethodHandle ReadConsoleOutputW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReadConsoleOutputW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemorySegment;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$690.ReadConsoleOutputW$FUNC, false
    );
}


