// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$309 {

    static final FunctionDescriptor HeapLock$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle HeapLock$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapLock",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$309.HeapLock$FUNC, false
    );
    static final FunctionDescriptor HeapUnlock$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle HeapUnlock$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapUnlock",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$309.HeapUnlock$FUNC, false
    );
    static final FunctionDescriptor HeapWalk$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle HeapWalk$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapWalk",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$309.HeapWalk$FUNC, false
    );
    static final FunctionDescriptor HeapQueryInformation$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle HeapQueryInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapQueryInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$309.HeapQueryInformation$FUNC, false
    );
    static final FunctionDescriptor HeapCreate$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle HeapCreate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapCreate",
        "(IJJ)Ljdk/incubator/foreign/MemoryAddress;",
        constants$309.HeapCreate$FUNC, false
    );
    static final FunctionDescriptor HeapCompact$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle HeapCompact$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "HeapCompact",
        "(Ljdk/incubator/foreign/MemoryAddress;I)J",
        constants$309.HeapCompact$FUNC, false
    );
}


