// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$477 {

    static final FunctionDescriptor QueryThreadProfiling$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle QueryThreadProfiling$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryThreadProfiling",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$477.QueryThreadProfiling$FUNC, false
    );
    static final FunctionDescriptor ReadThreadProfilingData$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle ReadThreadProfilingData$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReadThreadProfilingData",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$477.ReadThreadProfilingData$FUNC, false
    );
    static final FunctionDescriptor InitializeThreadpoolEnvironment$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle InitializeThreadpoolEnvironment$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "InitializeThreadpoolEnvironment",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$477.InitializeThreadpoolEnvironment$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolCallbackPool$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetThreadpoolCallbackPool$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetThreadpoolCallbackPool",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$477.SetThreadpoolCallbackPool$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolCallbackCleanupGroup$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetThreadpoolCallbackCleanupGroup$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetThreadpoolCallbackCleanupGroup",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$477.SetThreadpoolCallbackCleanupGroup$FUNC, false
    );
    static final FunctionDescriptor SetThreadpoolCallbackRunsLong$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle SetThreadpoolCallbackRunsLong$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetThreadpoolCallbackRunsLong",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$477.SetThreadpoolCallbackRunsLong$FUNC, false
    );
}


