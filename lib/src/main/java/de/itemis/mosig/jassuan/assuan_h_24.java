// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
 class assuan_h_24 extends assuan_h_23 {

    public static int RPC_S_PROXY_ACCESS_DENIED() {
        return (int)1729L;
    }
    public static int RPC_S_UNSUPPORTED_TRANS_SYN() {
        return (int)1730L;
    }
    public static int RPC_S_UNSUPPORTED_TYPE() {
        return (int)1732L;
    }
    public static int RPC_S_INVALID_TAG() {
        return (int)1733L;
    }
    public static int RPC_S_INVALID_BOUND() {
        return (int)1734L;
    }
    public static int RPC_S_NO_ENTRY_NAME() {
        return (int)1735L;
    }
    public static int RPC_S_INVALID_NAME_SYNTAX() {
        return (int)1736L;
    }
    public static int RPC_S_UNSUPPORTED_NAME_SYNTAX() {
        return (int)1737L;
    }
    public static int RPC_S_UUID_NO_ADDRESS() {
        return (int)1739L;
    }
    public static int RPC_S_DUPLICATE_ENDPOINT() {
        return (int)1740L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_TYPE() {
        return (int)1741L;
    }
    public static int RPC_S_MAX_CALLS_TOO_SMALL() {
        return (int)1742L;
    }
    public static int RPC_S_STRING_TOO_LONG() {
        return (int)1743L;
    }
    public static int RPC_S_PROTSEQ_NOT_FOUND() {
        return (int)1744L;
    }
    public static int RPC_S_PROCNUM_OUT_OF_RANGE() {
        return (int)1745L;
    }
    public static int RPC_S_BINDING_HAS_NO_AUTH() {
        return (int)1746L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_SERVICE() {
        return (int)1747L;
    }
    public static int RPC_S_UNKNOWN_AUTHN_LEVEL() {
        return (int)1748L;
    }
    public static int RPC_S_INVALID_AUTH_IDENTITY() {
        return (int)1749L;
    }
    public static int RPC_S_UNKNOWN_AUTHZ_SERVICE() {
        return (int)1750L;
    }
    public static int EPT_S_INVALID_ENTRY() {
        return (int)1751L;
    }
    public static int EPT_S_CANT_PERFORM_OP() {
        return (int)1752L;
    }
    public static int EPT_S_NOT_REGISTERED() {
        return (int)1753L;
    }
    public static int RPC_S_NOTHING_TO_EXPORT() {
        return (int)1754L;
    }
    public static int RPC_S_INCOMPLETE_NAME() {
        return (int)1755L;
    }
    public static int RPC_S_INVALID_VERS_OPTION() {
        return (int)1756L;
    }
    public static int RPC_S_NO_MORE_MEMBERS() {
        return (int)1757L;
    }
    public static int RPC_S_NOT_ALL_OBJS_UNEXPORTED() {
        return (int)1758L;
    }
    public static int RPC_S_INTERFACE_NOT_FOUND() {
        return (int)1759L;
    }
    public static int RPC_S_ENTRY_ALREADY_EXISTS() {
        return (int)1760L;
    }
    public static int RPC_S_ENTRY_NOT_FOUND() {
        return (int)1761L;
    }
    public static int RPC_S_NAME_SERVICE_UNAVAILABLE() {
        return (int)1762L;
    }
    public static int RPC_S_INVALID_NAF_ID() {
        return (int)1763L;
    }
    public static int RPC_S_CANNOT_SUPPORT() {
        return (int)1764L;
    }
    public static int RPC_S_NO_CONTEXT_AVAILABLE() {
        return (int)1765L;
    }
    public static int RPC_S_INTERNAL_ERROR() {
        return (int)1766L;
    }
    public static int RPC_S_ZERO_DIVIDE() {
        return (int)1767L;
    }
    public static int RPC_S_ADDRESS_ERROR() {
        return (int)1768L;
    }
    public static int RPC_S_FP_DIV_ZERO() {
        return (int)1769L;
    }
    public static int RPC_S_FP_UNDERFLOW() {
        return (int)1770L;
    }
    public static int RPC_S_FP_OVERFLOW() {
        return (int)1771L;
    }
    public static int RPC_X_NO_MORE_ENTRIES() {
        return (int)1772L;
    }
    public static int RPC_X_SS_CHAR_TRANS_OPEN_FAIL() {
        return (int)1773L;
    }
    public static int RPC_X_SS_CHAR_TRANS_SHORT_FILE() {
        return (int)1774L;
    }
    public static int RPC_X_SS_IN_NULL_CONTEXT() {
        return (int)1775L;
    }
    public static int RPC_X_SS_CONTEXT_DAMAGED() {
        return (int)1777L;
    }
    public static int RPC_X_SS_HANDLES_MISMATCH() {
        return (int)1778L;
    }
    public static int RPC_X_SS_CANNOT_GET_CALL_HANDLE() {
        return (int)1779L;
    }
    public static int RPC_X_NULL_REF_POINTER() {
        return (int)1780L;
    }
    public static int RPC_X_ENUM_VALUE_OUT_OF_RANGE() {
        return (int)1781L;
    }
    public static int RPC_X_BYTE_COUNT_TOO_SMALL() {
        return (int)1782L;
    }
    public static int RPC_X_BAD_STUB_DATA() {
        return (int)1783L;
    }
    public static int ERROR_INVALID_USER_BUFFER() {
        return (int)1784L;
    }
    public static int ERROR_UNRECOGNIZED_MEDIA() {
        return (int)1785L;
    }
    public static int ERROR_NO_TRUST_LSA_SECRET() {
        return (int)1786L;
    }
    public static int ERROR_NO_TRUST_SAM_ACCOUNT() {
        return (int)1787L;
    }
    public static int ERROR_TRUSTED_DOMAIN_FAILURE() {
        return (int)1788L;
    }
    public static int ERROR_TRUSTED_RELATIONSHIP_FAILURE() {
        return (int)1789L;
    }
    public static int ERROR_TRUST_FAILURE() {
        return (int)1790L;
    }
    public static int RPC_S_CALL_IN_PROGRESS() {
        return (int)1791L;
    }
    public static int ERROR_NETLOGON_NOT_STARTED() {
        return (int)1792L;
    }
    public static int ERROR_ACCOUNT_EXPIRED() {
        return (int)1793L;
    }
    public static int ERROR_REDIRECTOR_HAS_OPEN_HANDLES() {
        return (int)1794L;
    }
    public static int ERROR_PRINTER_DRIVER_ALREADY_INSTALLED() {
        return (int)1795L;
    }
    public static int ERROR_UNKNOWN_PORT() {
        return (int)1796L;
    }
    public static int ERROR_UNKNOWN_PRINTER_DRIVER() {
        return (int)1797L;
    }
    public static int ERROR_UNKNOWN_PRINTPROCESSOR() {
        return (int)1798L;
    }
    public static int ERROR_INVALID_SEPARATOR_FILE() {
        return (int)1799L;
    }
    public static int ERROR_INVALID_PRIORITY() {
        return (int)1800L;
    }
    public static int ERROR_INVALID_PRINTER_NAME() {
        return (int)1801L;
    }
    public static int ERROR_PRINTER_ALREADY_EXISTS() {
        return (int)1802L;
    }
    public static int ERROR_INVALID_PRINTER_COMMAND() {
        return (int)1803L;
    }
    public static int ERROR_INVALID_DATATYPE() {
        return (int)1804L;
    }
    public static int ERROR_INVALID_ENVIRONMENT() {
        return (int)1805L;
    }
    public static int RPC_S_NO_MORE_BINDINGS() {
        return (int)1806L;
    }
    public static int ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT() {
        return (int)1807L;
    }
    public static int ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT() {
        return (int)1808L;
    }
    public static int ERROR_NOLOGON_SERVER_TRUST_ACCOUNT() {
        return (int)1809L;
    }
    public static int ERROR_DOMAIN_TRUST_INCONSISTENT() {
        return (int)1810L;
    }
    public static int ERROR_SERVER_HAS_OPEN_HANDLES() {
        return (int)1811L;
    }
    public static int ERROR_RESOURCE_DATA_NOT_FOUND() {
        return (int)1812L;
    }
    public static int ERROR_RESOURCE_TYPE_NOT_FOUND() {
        return (int)1813L;
    }
    public static int ERROR_RESOURCE_NAME_NOT_FOUND() {
        return (int)1814L;
    }
    public static int ERROR_RESOURCE_LANG_NOT_FOUND() {
        return (int)1815L;
    }
    public static int ERROR_NOT_ENOUGH_QUOTA() {
        return (int)1816L;
    }
    public static int RPC_S_NO_INTERFACES() {
        return (int)1817L;
    }
    public static int RPC_S_CALL_CANCELLED() {
        return (int)1818L;
    }
    public static int RPC_S_BINDING_INCOMPLETE() {
        return (int)1819L;
    }
    public static int RPC_S_COMM_FAILURE() {
        return (int)1820L;
    }
    public static int RPC_S_UNSUPPORTED_AUTHN_LEVEL() {
        return (int)1821L;
    }
    public static int RPC_S_NO_PRINC_NAME() {
        return (int)1822L;
    }
    public static int RPC_S_NOT_RPC_ERROR() {
        return (int)1823L;
    }
    public static int RPC_S_UUID_LOCAL_ONLY() {
        return (int)1824L;
    }
    public static int RPC_S_SEC_PKG_ERROR() {
        return (int)1825L;
    }
    public static int RPC_S_NOT_CANCELLED() {
        return (int)1826L;
    }
    public static int RPC_X_INVALID_ES_ACTION() {
        return (int)1827L;
    }
    public static int RPC_X_WRONG_ES_VERSION() {
        return (int)1828L;
    }
    public static int RPC_X_WRONG_STUB_VERSION() {
        return (int)1829L;
    }
    public static int RPC_X_INVALID_PIPE_OBJECT() {
        return (int)1830L;
    }
    public static int RPC_X_WRONG_PIPE_ORDER() {
        return (int)1831L;
    }
    public static int RPC_X_WRONG_PIPE_VERSION() {
        return (int)1832L;
    }
    public static int RPC_S_COOKIE_AUTH_FAILED() {
        return (int)1833L;
    }
    public static int RPC_S_DO_NOT_DISTURB() {
        return (int)1834L;
    }
    public static int RPC_S_SYSTEM_HANDLE_COUNT_EXCEEDED() {
        return (int)1835L;
    }
    public static int RPC_S_SYSTEM_HANDLE_TYPE_MISMATCH() {
        return (int)1836L;
    }
    public static int RPC_S_GROUP_MEMBER_NOT_FOUND() {
        return (int)1898L;
    }
    public static int EPT_S_CANT_CREATE() {
        return (int)1899L;
    }
    public static int RPC_S_INVALID_OBJECT() {
        return (int)1900L;
    }
    public static int ERROR_INVALID_TIME() {
        return (int)1901L;
    }
    public static int ERROR_INVALID_FORM_NAME() {
        return (int)1902L;
    }
    public static int ERROR_INVALID_FORM_SIZE() {
        return (int)1903L;
    }
    public static int ERROR_ALREADY_WAITING() {
        return (int)1904L;
    }
    public static int ERROR_PRINTER_DELETED() {
        return (int)1905L;
    }
    public static int ERROR_INVALID_PRINTER_STATE() {
        return (int)1906L;
    }
    public static int ERROR_PASSWORD_MUST_CHANGE() {
        return (int)1907L;
    }
    public static int ERROR_DOMAIN_CONTROLLER_NOT_FOUND() {
        return (int)1908L;
    }
    public static int ERROR_ACCOUNT_LOCKED_OUT() {
        return (int)1909L;
    }
    public static int OR_INVALID_OXID() {
        return (int)1910L;
    }
    public static int OR_INVALID_OID() {
        return (int)1911L;
    }
    public static int OR_INVALID_SET() {
        return (int)1912L;
    }
    public static int RPC_S_SEND_INCOMPLETE() {
        return (int)1913L;
    }
    public static int RPC_S_INVALID_ASYNC_HANDLE() {
        return (int)1914L;
    }
    public static int RPC_S_INVALID_ASYNC_CALL() {
        return (int)1915L;
    }
    public static int RPC_X_PIPE_CLOSED() {
        return (int)1916L;
    }
    public static int RPC_X_PIPE_DISCIPLINE_ERROR() {
        return (int)1917L;
    }
    public static int RPC_X_PIPE_EMPTY() {
        return (int)1918L;
    }
    public static int ERROR_NO_SITENAME() {
        return (int)1919L;
    }
    public static int ERROR_CANT_ACCESS_FILE() {
        return (int)1920L;
    }
    public static int ERROR_CANT_RESOLVE_FILENAME() {
        return (int)1921L;
    }
    public static int RPC_S_ENTRY_TYPE_MISMATCH() {
        return (int)1922L;
    }
    public static int RPC_S_NOT_ALL_OBJS_EXPORTED() {
        return (int)1923L;
    }
    public static int RPC_S_INTERFACE_NOT_EXPORTED() {
        return (int)1924L;
    }
    public static int RPC_S_PROFILE_NOT_ADDED() {
        return (int)1925L;
    }
    public static int RPC_S_PRF_ELT_NOT_ADDED() {
        return (int)1926L;
    }
    public static int RPC_S_PRF_ELT_NOT_REMOVED() {
        return (int)1927L;
    }
    public static int RPC_S_GRP_ELT_NOT_ADDED() {
        return (int)1928L;
    }
    public static int RPC_S_GRP_ELT_NOT_REMOVED() {
        return (int)1929L;
    }
    public static int ERROR_KM_DRIVER_BLOCKED() {
        return (int)1930L;
    }
    public static int ERROR_CONTEXT_EXPIRED() {
        return (int)1931L;
    }
    public static int ERROR_PER_USER_TRUST_QUOTA_EXCEEDED() {
        return (int)1932L;
    }
    public static int ERROR_ALL_USER_TRUST_QUOTA_EXCEEDED() {
        return (int)1933L;
    }
    public static int ERROR_USER_DELETE_TRUST_QUOTA_EXCEEDED() {
        return (int)1934L;
    }
    public static int ERROR_AUTHENTICATION_FIREWALL_FAILED() {
        return (int)1935L;
    }
    public static int ERROR_REMOTE_PRINT_CONNECTIONS_BLOCKED() {
        return (int)1936L;
    }
    public static int ERROR_INVALID_PIXEL_FORMAT() {
        return (int)2000L;
    }
    public static int ERROR_BAD_DRIVER() {
        return (int)2001L;
    }
    public static int ERROR_INVALID_WINDOW_STYLE() {
        return (int)2002L;
    }
    public static int ERROR_METAFILE_NOT_SUPPORTED() {
        return (int)2003L;
    }
    public static int ERROR_TRANSFORM_NOT_SUPPORTED() {
        return (int)2004L;
    }
    public static int ERROR_CLIPPING_NOT_SUPPORTED() {
        return (int)2005L;
    }
    public static int ERROR_INVALID_CMM() {
        return (int)2010L;
    }
    public static int ERROR_INVALID_PROFILE() {
        return (int)2011L;
    }
    public static int ERROR_TAG_NOT_FOUND() {
        return (int)2012L;
    }
    public static int ERROR_TAG_NOT_PRESENT() {
        return (int)2013L;
    }
    public static int ERROR_DUPLICATE_TAG() {
        return (int)2014L;
    }
    public static int ERROR_PROFILE_NOT_ASSOCIATED_WITH_DEVICE() {
        return (int)2015L;
    }
    public static int ERROR_PROFILE_NOT_FOUND() {
        return (int)2016L;
    }
    public static int ERROR_INVALID_COLORSPACE() {
        return (int)2017L;
    }
    public static int ERROR_ICM_NOT_ENABLED() {
        return (int)2018L;
    }
    public static int ERROR_DELETING_ICM_XFORM() {
        return (int)2019L;
    }
    public static int ERROR_INVALID_TRANSFORM() {
        return (int)2020L;
    }
    public static int ERROR_COLORSPACE_MISMATCH() {
        return (int)2021L;
    }
    public static int ERROR_INVALID_COLORINDEX() {
        return (int)2022L;
    }
    public static int ERROR_CONNECTED_OTHER_PASSWORD() {
        return (int)2108L;
    }
    public static int ERROR_CONNECTED_OTHER_PASSWORD_DEFAULT() {
        return (int)2109L;
    }
    public static int ERROR_BAD_USERNAME() {
        return (int)2202L;
    }
    public static int ERROR_NOT_CONNECTED() {
        return (int)2250L;
    }
    public static int ERROR_OPEN_FILES() {
        return (int)2401L;
    }
    public static int ERROR_ACTIVE_CONNECTIONS() {
        return (int)2402L;
    }
    public static int ERROR_DEVICE_IN_USE() {
        return (int)2404L;
    }
    public static int ERROR_UNKNOWN_PRINT_MONITOR() {
        return (int)3000L;
    }
    public static int ERROR_PRINTER_DRIVER_IN_USE() {
        return (int)3001L;
    }
    public static int ERROR_SPOOL_FILE_NOT_FOUND() {
        return (int)3002L;
    }
    public static int ERROR_SPL_NO_STARTDOC() {
        return (int)3003L;
    }
    public static int ERROR_SPL_NO_ADDJOB() {
        return (int)3004L;
    }
    public static int ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED() {
        return (int)3005L;
    }
    public static int ERROR_PRINT_MONITOR_ALREADY_INSTALLED() {
        return (int)3006L;
    }
    public static int ERROR_INVALID_PRINT_MONITOR() {
        return (int)3007L;
    }
    public static int ERROR_PRINT_MONITOR_IN_USE() {
        return (int)3008L;
    }
    public static int ERROR_PRINTER_HAS_JOBS_QUEUED() {
        return (int)3009L;
    }
    public static int ERROR_SUCCESS_REBOOT_REQUIRED() {
        return (int)3010L;
    }
    public static int ERROR_SUCCESS_RESTART_REQUIRED() {
        return (int)3011L;
    }
    public static int ERROR_PRINTER_NOT_FOUND() {
        return (int)3012L;
    }
    public static int ERROR_PRINTER_DRIVER_WARNED() {
        return (int)3013L;
    }
    public static int ERROR_PRINTER_DRIVER_BLOCKED() {
        return (int)3014L;
    }
    public static int ERROR_WINS_INTERNAL() {
        return (int)4000L;
    }
    public static int ERROR_CAN_NOT_DEL_LOCAL_WINS() {
        return (int)4001L;
    }
    public static int ERROR_STATIC_INIT() {
        return (int)4002L;
    }
    public static int ERROR_INC_BACKUP() {
        return (int)4003L;
    }
    public static int ERROR_FULL_BACKUP() {
        return (int)4004L;
    }
    public static int ERROR_REC_NON_EXISTENT() {
        return (int)4005L;
    }
    public static int ERROR_RPL_NOT_ALLOWED() {
        return (int)4006L;
    }
    public static int ERROR_DHCP_ADDRESS_CONFLICT() {
        return (int)4100L;
    }
    public static int ERROR_WMI_GUID_NOT_FOUND() {
        return (int)4200L;
    }
    public static int ERROR_WMI_INSTANCE_NOT_FOUND() {
        return (int)4201L;
    }
    public static int ERROR_WMI_ITEMID_NOT_FOUND() {
        return (int)4202L;
    }
    public static int ERROR_WMI_TRY_AGAIN() {
        return (int)4203L;
    }
    public static int ERROR_WMI_DP_NOT_FOUND() {
        return (int)4204L;
    }
    public static int ERROR_WMI_UNRESOLVED_INSTANCE_REF() {
        return (int)4205L;
    }
    public static int ERROR_WMI_ALREADY_ENABLED() {
        return (int)4206L;
    }
    public static int ERROR_WMI_GUID_DISCONNECTED() {
        return (int)4207L;
    }
    public static int ERROR_WMI_SERVER_UNAVAILABLE() {
        return (int)4208L;
    }
    public static int ERROR_WMI_DP_FAILED() {
        return (int)4209L;
    }
    public static int ERROR_WMI_INVALID_MOF() {
        return (int)4210L;
    }
    public static int ERROR_WMI_INVALID_REGINFO() {
        return (int)4211L;
    }
    public static int ERROR_WMI_ALREADY_DISABLED() {
        return (int)4212L;
    }
    public static int ERROR_WMI_READ_ONLY() {
        return (int)4213L;
    }
    public static int ERROR_WMI_SET_FAILURE() {
        return (int)4214L;
    }
    public static int ERROR_INVALID_MEDIA() {
        return (int)4300L;
    }
    public static int ERROR_INVALID_LIBRARY() {
        return (int)4301L;
    }
    public static int ERROR_INVALID_MEDIA_POOL() {
        return (int)4302L;
    }
    public static int ERROR_DRIVE_MEDIA_MISMATCH() {
        return (int)4303L;
    }
    public static int ERROR_MEDIA_OFFLINE() {
        return (int)4304L;
    }
    public static int ERROR_LIBRARY_OFFLINE() {
        return (int)4305L;
    }
    public static int ERROR_EMPTY() {
        return (int)4306L;
    }
    public static int ERROR_NOT_EMPTY() {
        return (int)4307L;
    }
    public static int ERROR_MEDIA_UNAVAILABLE() {
        return (int)4308L;
    }
    public static int ERROR_RESOURCE_DISABLED() {
        return (int)4309L;
    }
    public static int ERROR_INVALID_CLEANER() {
        return (int)4310L;
    }
    public static int ERROR_UNABLE_TO_CLEAN() {
        return (int)4311L;
    }
    public static int ERROR_OBJECT_NOT_FOUND() {
        return (int)4312L;
    }
    public static int ERROR_DATABASE_FAILURE() {
        return (int)4313L;
    }
    public static int ERROR_DATABASE_FULL() {
        return (int)4314L;
    }
    public static int ERROR_MEDIA_INCOMPATIBLE() {
        return (int)4315L;
    }
    public static int ERROR_RESOURCE_NOT_PRESENT() {
        return (int)4316L;
    }
    public static int ERROR_INVALID_OPERATION() {
        return (int)4317L;
    }
    public static int ERROR_MEDIA_NOT_AVAILABLE() {
        return (int)4318L;
    }
    public static int ERROR_DEVICE_NOT_AVAILABLE() {
        return (int)4319L;
    }
    public static int ERROR_REQUEST_REFUSED() {
        return (int)4320L;
    }
    public static int ERROR_INVALID_DRIVE_OBJECT() {
        return (int)4321L;
    }
    public static int ERROR_LIBRARY_FULL() {
        return (int)4322L;
    }
    public static int ERROR_MEDIUM_NOT_ACCESSIBLE() {
        return (int)4323L;
    }
    public static int ERROR_UNABLE_TO_LOAD_MEDIUM() {
        return (int)4324L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_DRIVE() {
        return (int)4325L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_SLOT() {
        return (int)4326L;
    }
    public static int ERROR_UNABLE_TO_INVENTORY_TRANSPORT() {
        return (int)4327L;
    }
    public static int ERROR_TRANSPORT_FULL() {
        return (int)4328L;
    }
    public static int ERROR_CONTROLLING_IEPORT() {
        return (int)4329L;
    }
    public static int ERROR_UNABLE_TO_EJECT_MOUNTED_MEDIA() {
        return (int)4330L;
    }
    public static int ERROR_CLEANER_SLOT_SET() {
        return (int)4331L;
    }
    public static int ERROR_CLEANER_SLOT_NOT_SET() {
        return (int)4332L;
    }
    public static int ERROR_CLEANER_CARTRIDGE_SPENT() {
        return (int)4333L;
    }
    public static int ERROR_UNEXPECTED_OMID() {
        return (int)4334L;
    }
    public static int ERROR_CANT_DELETE_LAST_ITEM() {
        return (int)4335L;
    }
    public static int ERROR_MESSAGE_EXCEEDS_MAX_SIZE() {
        return (int)4336L;
    }
    public static int ERROR_VOLUME_CONTAINS_SYS_FILES() {
        return (int)4337L;
    }
    public static int ERROR_INDIGENOUS_TYPE() {
        return (int)4338L;
    }
    public static int ERROR_NO_SUPPORTING_DRIVES() {
        return (int)4339L;
    }
    public static int ERROR_CLEANER_CARTRIDGE_INSTALLED() {
        return (int)4340L;
    }
    public static int ERROR_IEPORT_FULL() {
        return (int)4341L;
    }
    public static int ERROR_FILE_OFFLINE() {
        return (int)4350L;
    }
    public static int ERROR_REMOTE_STORAGE_NOT_ACTIVE() {
        return (int)4351L;
    }
    public static int ERROR_REMOTE_STORAGE_MEDIA_ERROR() {
        return (int)4352L;
    }
    public static int ERROR_NOT_A_REPARSE_POINT() {
        return (int)4390L;
    }
    public static int ERROR_REPARSE_ATTRIBUTE_CONFLICT() {
        return (int)4391L;
    }
    public static int ERROR_INVALID_REPARSE_DATA() {
        return (int)4392L;
    }
    public static int ERROR_REPARSE_TAG_INVALID() {
        return (int)4393L;
    }
    public static int ERROR_REPARSE_TAG_MISMATCH() {
        return (int)4394L;
    }
    public static int ERROR_VOLUME_NOT_SIS_ENABLED() {
        return (int)4500L;
    }
    public static int ERROR_DEPENDENT_RESOURCE_EXISTS() {
        return (int)5001L;
    }
    public static int ERROR_DEPENDENCY_NOT_FOUND() {
        return (int)5002L;
    }
    public static int ERROR_DEPENDENCY_ALREADY_EXISTS() {
        return (int)5003L;
    }
    public static int ERROR_RESOURCE_NOT_ONLINE() {
        return (int)5004L;
    }
    public static int ERROR_HOST_NODE_NOT_AVAILABLE() {
        return (int)5005L;
    }
    public static int ERROR_RESOURCE_NOT_AVAILABLE() {
        return (int)5006L;
    }
    public static int ERROR_RESOURCE_NOT_FOUND() {
        return (int)5007L;
    }
    public static int ERROR_SHUTDOWN_CLUSTER() {
        return (int)5008L;
    }
    public static int ERROR_CANT_EVICT_ACTIVE_NODE() {
        return (int)5009L;
    }
    public static int ERROR_OBJECT_ALREADY_EXISTS() {
        return (int)5010L;
    }
    public static int ERROR_OBJECT_IN_LIST() {
        return (int)5011L;
    }
    public static int ERROR_GROUP_NOT_AVAILABLE() {
        return (int)5012L;
    }
    public static int ERROR_GROUP_NOT_FOUND() {
        return (int)5013L;
    }
    public static int ERROR_GROUP_NOT_ONLINE() {
        return (int)5014L;
    }
    public static int ERROR_HOST_NODE_NOT_RESOURCE_OWNER() {
        return (int)5015L;
    }
    public static int ERROR_HOST_NODE_NOT_GROUP_OWNER() {
        return (int)5016L;
    }
    public static int ERROR_RESMON_CREATE_FAILED() {
        return (int)5017L;
    }
    public static int ERROR_RESMON_ONLINE_FAILED() {
        return (int)5018L;
    }
    public static int ERROR_RESOURCE_ONLINE() {
        return (int)5019L;
    }
    public static int ERROR_QUORUM_RESOURCE() {
        return (int)5020L;
    }
    public static int ERROR_NOT_QUORUM_CAPABLE() {
        return (int)5021L;
    }
    public static int ERROR_CLUSTER_SHUTTING_DOWN() {
        return (int)5022L;
    }
    public static int ERROR_INVALID_STATE() {
        return (int)5023L;
    }
    public static int ERROR_RESOURCE_PROPERTIES_STORED() {
        return (int)5024L;
    }
    public static int ERROR_NOT_QUORUM_CLASS() {
        return (int)5025L;
    }
    public static int ERROR_CORE_RESOURCE() {
        return (int)5026L;
    }
    public static int ERROR_QUORUM_RESOURCE_ONLINE_FAILED() {
        return (int)5027L;
    }
    public static int ERROR_QUORUMLOG_OPEN_FAILED() {
        return (int)5028L;
    }
    public static int ERROR_CLUSTERLOG_CORRUPT() {
        return (int)5029L;
    }
    public static int ERROR_CLUSTERLOG_RECORD_EXCEEDS_MAXSIZE() {
        return (int)5030L;
    }
    public static int ERROR_CLUSTERLOG_EXCEEDS_MAXSIZE() {
        return (int)5031L;
    }
    public static int ERROR_CLUSTERLOG_CHKPOINT_NOT_FOUND() {
        return (int)5032L;
    }
    public static int ERROR_CLUSTERLOG_NOT_ENOUGH_SPACE() {
        return (int)5033L;
    }
    public static int ERROR_QUORUM_OWNER_ALIVE() {
        return (int)5034L;
    }
    public static int ERROR_NETWORK_NOT_AVAILABLE() {
        return (int)5035L;
    }
    public static int ERROR_NODE_NOT_AVAILABLE() {
        return (int)5036L;
    }
    public static int ERROR_ALL_NODES_NOT_AVAILABLE() {
        return (int)5037L;
    }
    public static int ERROR_RESOURCE_FAILED() {
        return (int)5038L;
    }
    public static int ERROR_CLUSTER_INVALID_NODE() {
        return (int)5039L;
    }
    public static int ERROR_CLUSTER_NODE_EXISTS() {
        return (int)5040L;
    }
    public static int ERROR_CLUSTER_JOIN_IN_PROGRESS() {
        return (int)5041L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_FOUND() {
        return (int)5042L;
    }
    public static int ERROR_CLUSTER_LOCAL_NODE_NOT_FOUND() {
        return (int)5043L;
    }
    public static int ERROR_CLUSTER_NETWORK_EXISTS() {
        return (int)5044L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND() {
        return (int)5045L;
    }
    public static int ERROR_CLUSTER_NETINTERFACE_EXISTS() {
        return (int)5046L;
    }
    public static int ERROR_CLUSTER_NETINTERFACE_NOT_FOUND() {
        return (int)5047L;
    }
    public static int ERROR_CLUSTER_INVALID_REQUEST() {
        return (int)5048L;
    }
    public static int ERROR_CLUSTER_INVALID_NETWORK_PROVIDER() {
        return (int)5049L;
    }
    public static int ERROR_CLUSTER_NODE_DOWN() {
        return (int)5050L;
    }
    public static int ERROR_CLUSTER_NODE_UNREACHABLE() {
        return (int)5051L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_MEMBER() {
        return (int)5052L;
    }
    public static int ERROR_CLUSTER_JOIN_NOT_IN_PROGRESS() {
        return (int)5053L;
    }
    public static int ERROR_CLUSTER_INVALID_NETWORK() {
        return (int)5054L;
    }
    public static int ERROR_CLUSTER_NODE_UP() {
        return (int)5056L;
    }
    public static int ERROR_CLUSTER_IPADDR_IN_USE() {
        return (int)5057L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_PAUSED() {
        return (int)5058L;
    }
    public static int ERROR_CLUSTER_NO_SECURITY_CONTEXT() {
        return (int)5059L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_INTERNAL() {
        return (int)5060L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_UP() {
        return (int)5061L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_DOWN() {
        return (int)5062L;
    }
    public static int ERROR_CLUSTER_NETWORK_ALREADY_ONLINE() {
        return (int)5063L;
    }
    public static int ERROR_CLUSTER_NETWORK_ALREADY_OFFLINE() {
        return (int)5064L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_MEMBER() {
        return (int)5065L;
    }
    public static int ERROR_CLUSTER_LAST_INTERNAL_NETWORK() {
        return (int)5066L;
    }
    public static int ERROR_CLUSTER_NETWORK_HAS_DEPENDENTS() {
        return (int)5067L;
    }
    public static int ERROR_INVALID_OPERATION_ON_QUORUM() {
        return (int)5068L;
    }
    public static int ERROR_DEPENDENCY_NOT_ALLOWED() {
        return (int)5069L;
    }
    public static int ERROR_CLUSTER_NODE_PAUSED() {
        return (int)5070L;
    }
    public static int ERROR_NODE_CANT_HOST_RESOURCE() {
        return (int)5071L;
    }
    public static int ERROR_CLUSTER_NODE_NOT_READY() {
        return (int)5072L;
    }
    public static int ERROR_CLUSTER_NODE_SHUTTING_DOWN() {
        return (int)5073L;
    }
    public static int ERROR_CLUSTER_JOIN_ABORTED() {
        return (int)5074L;
    }
    public static int ERROR_CLUSTER_INCOMPATIBLE_VERSIONS() {
        return (int)5075L;
    }
    public static int ERROR_CLUSTER_MAXNUM_OF_RESOURCES_EXCEEDED() {
        return (int)5076L;
    }
    public static int ERROR_CLUSTER_SYSTEM_CONFIG_CHANGED() {
        return (int)5077L;
    }
    public static int ERROR_CLUSTER_RESOURCE_TYPE_NOT_FOUND() {
        return (int)5078L;
    }
    public static int ERROR_CLUSTER_RESTYPE_NOT_SUPPORTED() {
        return (int)5079L;
    }
    public static int ERROR_CLUSTER_RESNAME_NOT_FOUND() {
        return (int)5080L;
    }
    public static int ERROR_CLUSTER_NO_RPC_PACKAGES_REGISTERED() {
        return (int)5081L;
    }
    public static int ERROR_CLUSTER_OWNER_NOT_IN_PREFLIST() {
        return (int)5082L;
    }
    public static int ERROR_CLUSTER_DATABASE_SEQMISMATCH() {
        return (int)5083L;
    }
    public static int ERROR_RESMON_INVALID_STATE() {
        return (int)5084L;
    }
    public static int ERROR_CLUSTER_GUM_NOT_LOCKER() {
        return (int)5085L;
    }
    public static int ERROR_QUORUM_DISK_NOT_FOUND() {
        return (int)5086L;
    }
    public static int ERROR_DATABASE_BACKUP_CORRUPT() {
        return (int)5087L;
    }
    public static int ERROR_CLUSTER_NODE_ALREADY_HAS_DFS_ROOT() {
        return (int)5088L;
    }
    public static int ERROR_RESOURCE_PROPERTY_UNCHANGEABLE() {
        return (int)5089L;
    }
    public static int ERROR_CLUSTER_MEMBERSHIP_INVALID_STATE() {
        return (int)5890L;
    }
    public static int ERROR_CLUSTER_QUORUMLOG_NOT_FOUND() {
        return (int)5891L;
    }
    public static int ERROR_CLUSTER_MEMBERSHIP_HALT() {
        return (int)5892L;
    }
    public static int ERROR_CLUSTER_INSTANCE_ID_MISMATCH() {
        return (int)5893L;
    }
    public static int ERROR_CLUSTER_NETWORK_NOT_FOUND_FOR_IP() {
        return (int)5894L;
    }
    public static int ERROR_CLUSTER_PROPERTY_DATA_TYPE_MISMATCH() {
        return (int)5895L;
    }
    public static int ERROR_CLUSTER_EVICT_WITHOUT_CLEANUP() {
        return (int)5896L;
    }
    public static int ERROR_CLUSTER_PARAMETER_MISMATCH() {
        return (int)5897L;
    }
    public static int ERROR_NODE_CANNOT_BE_CLUSTERED() {
        return (int)5898L;
    }
    public static int ERROR_CLUSTER_WRONG_OS_VERSION() {
        return (int)5899L;
    }
    public static int ERROR_CLUSTER_CANT_CREATE_DUP_CLUSTER_NAME() {
        return (int)5900L;
    }
    public static int ERROR_CLUSCFG_ALREADY_COMMITTED() {
        return (int)5901L;
    }
    public static int ERROR_CLUSCFG_ROLLBACK_FAILED() {
        return (int)5902L;
    }
    public static int ERROR_CLUSCFG_SYSTEM_DISK_DRIVE_LETTER_CONFLICT() {
        return (int)5903L;
    }
    public static int ERROR_CLUSTER_OLD_VERSION() {
        return (int)5904L;
    }
    public static int ERROR_CLUSTER_MISMATCHED_COMPUTER_ACCT_NAME() {
        return (int)5905L;
    }
    public static int ERROR_ENCRYPTION_FAILED() {
        return (int)6000L;
    }
    public static int ERROR_DECRYPTION_FAILED() {
        return (int)6001L;
    }
    public static int ERROR_FILE_ENCRYPTED() {
        return (int)6002L;
    }
    public static int ERROR_NO_RECOVERY_POLICY() {
        return (int)6003L;
    }
    public static int ERROR_NO_EFS() {
        return (int)6004L;
    }
    public static int ERROR_WRONG_EFS() {
        return (int)6005L;
    }
    public static int ERROR_NO_USER_KEYS() {
        return (int)6006L;
    }
    public static int ERROR_FILE_NOT_ENCRYPTED() {
        return (int)6007L;
    }
    public static int ERROR_NOT_EXPORT_FORMAT() {
        return (int)6008L;
    }
    public static int ERROR_FILE_READ_ONLY() {
        return (int)6009L;
    }
    public static int ERROR_DIR_EFS_DISALLOWED() {
        return (int)6010L;
    }
    public static int ERROR_EFS_SERVER_NOT_TRUSTED() {
        return (int)6011L;
    }
    public static int ERROR_BAD_RECOVERY_POLICY() {
        return (int)6012L;
    }
    public static int ERROR_EFS_ALG_BLOB_TOO_BIG() {
        return (int)6013L;
    }
    public static int ERROR_VOLUME_NOT_SUPPORT_EFS() {
        return (int)6014L;
    }
    public static int ERROR_EFS_DISABLED() {
        return (int)6015L;
    }
    public static int ERROR_EFS_VERSION_NOT_SUPPORT() {
        return (int)6016L;
    }
    public static int ERROR_NO_BROWSER_SERVERS_FOUND() {
        return (int)6118L;
    }
    public static int SCHED_E_SERVICE_NOT_LOCALSYSTEM() {
        return (int)6200L;
    }
    public static int ERROR_CTX_WINSTATION_NAME_INVALID() {
        return (int)7001L;
    }
    public static int ERROR_CTX_INVALID_PD() {
        return (int)7002L;
    }
    public static int ERROR_CTX_PD_NOT_FOUND() {
        return (int)7003L;
    }
    public static int ERROR_CTX_WD_NOT_FOUND() {
        return (int)7004L;
    }
    public static int ERROR_CTX_CANNOT_MAKE_EVENTLOG_ENTRY() {
        return (int)7005L;
    }
    public static int ERROR_CTX_SERVICE_NAME_COLLISION() {
        return (int)7006L;
    }
    public static int ERROR_CTX_CLOSE_PENDING() {
        return (int)7007L;
    }
    public static int ERROR_CTX_NO_OUTBUF() {
        return (int)7008L;
    }
    public static int ERROR_CTX_MODEM_INF_NOT_FOUND() {
        return (int)7009L;
    }
    public static int ERROR_CTX_INVALID_MODEMNAME() {
        return (int)7010L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_ERROR() {
        return (int)7011L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_TIMEOUT() {
        return (int)7012L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_NO_CARRIER() {
        return (int)7013L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_NO_DIALTONE() {
        return (int)7014L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_BUSY() {
        return (int)7015L;
    }
    public static int ERROR_CTX_MODEM_RESPONSE_VOICE() {
        return (int)7016L;
    }
    public static int ERROR_CTX_TD_ERROR() {
        return (int)7017L;
    }
    public static int ERROR_CTX_WINSTATION_NOT_FOUND() {
        return (int)7022L;
    }
    public static int ERROR_CTX_WINSTATION_ALREADY_EXISTS() {
        return (int)7023L;
    }
    public static int ERROR_CTX_WINSTATION_BUSY() {
        return (int)7024L;
    }
    public static int ERROR_CTX_BAD_VIDEO_MODE() {
        return (int)7025L;
    }
    public static int ERROR_CTX_GRAPHICS_INVALID() {
        return (int)7035L;
    }
    public static int ERROR_CTX_LOGON_DISABLED() {
        return (int)7037L;
    }
    public static int ERROR_CTX_NOT_CONSOLE() {
        return (int)7038L;
    }
    public static int ERROR_CTX_CLIENT_QUERY_TIMEOUT() {
        return (int)7040L;
    }
    public static int ERROR_CTX_CONSOLE_DISCONNECT() {
        return (int)7041L;
    }
    public static int ERROR_CTX_CONSOLE_CONNECT() {
        return (int)7042L;
    }
    public static int ERROR_CTX_SHADOW_DENIED() {
        return (int)7044L;
    }
    public static int ERROR_CTX_WINSTATION_ACCESS_DENIED() {
        return (int)7045L;
    }
    public static int ERROR_CTX_INVALID_WD() {
        return (int)7049L;
    }
    public static int ERROR_CTX_SHADOW_INVALID() {
        return (int)7050L;
    }
    public static int ERROR_CTX_SHADOW_DISABLED() {
        return (int)7051L;
    }
    public static int ERROR_CTX_CLIENT_LICENSE_IN_USE() {
        return (int)7052L;
    }
    public static int ERROR_CTX_CLIENT_LICENSE_NOT_SET() {
        return (int)7053L;
    }
    public static int ERROR_CTX_LICENSE_NOT_AVAILABLE() {
        return (int)7054L;
    }
    public static int ERROR_CTX_LICENSE_CLIENT_INVALID() {
        return (int)7055L;
    }
    public static int ERROR_CTX_LICENSE_EXPIRED() {
        return (int)7056L;
    }
    public static int ERROR_CTX_SHADOW_NOT_RUNNING() {
        return (int)7057L;
    }
    public static int ERROR_CTX_SHADOW_ENDED_BY_MODE_CHANGE() {
        return (int)7058L;
    }
    public static int ERROR_ACTIVATION_COUNT_EXCEEDED() {
        return (int)7059L;
    }
    public static int FRS_ERR_INVALID_API_SEQUENCE() {
        return (int)8001L;
    }
    public static int FRS_ERR_STARTING_SERVICE() {
        return (int)8002L;
    }
    public static int FRS_ERR_STOPPING_SERVICE() {
        return (int)8003L;
    }
    public static int FRS_ERR_INTERNAL_API() {
        return (int)8004L;
    }
    public static int FRS_ERR_INTERNAL() {
        return (int)8005L;
    }
    public static int FRS_ERR_SERVICE_COMM() {
        return (int)8006L;
    }
    public static int FRS_ERR_INSUFFICIENT_PRIV() {
        return (int)8007L;
    }
    public static int FRS_ERR_AUTHENTICATION() {
        return (int)8008L;
    }
    public static int FRS_ERR_PARENT_INSUFFICIENT_PRIV() {
        return (int)8009L;
    }
    public static int FRS_ERR_PARENT_AUTHENTICATION() {
        return (int)8010L;
    }
    public static int FRS_ERR_CHILD_TO_PARENT_COMM() {
        return (int)8011L;
    }
    public static int FRS_ERR_PARENT_TO_CHILD_COMM() {
        return (int)8012L;
    }
    public static int FRS_ERR_SYSVOL_POPULATE() {
        return (int)8013L;
    }
    public static int FRS_ERR_SYSVOL_POPULATE_TIMEOUT() {
        return (int)8014L;
    }
    public static int FRS_ERR_SYSVOL_IS_BUSY() {
        return (int)8015L;
    }
    public static int FRS_ERR_SYSVOL_DEMOTE() {
        return (int)8016L;
    }
    public static int FRS_ERR_INVALID_SERVICE_PARAMETER() {
        return (int)8017L;
    }
    public static int DS_S_SUCCESS() {
        return (int)0L;
    }
    public static int ERROR_DS_NOT_INSTALLED() {
        return (int)8200L;
    }
    public static int ERROR_DS_MEMBERSHIP_EVALUATED_LOCALLY() {
        return (int)8201L;
    }
    public static int ERROR_DS_NO_ATTRIBUTE_OR_VALUE() {
        return (int)8202L;
    }
    public static int ERROR_DS_INVALID_ATTRIBUTE_SYNTAX() {
        return (int)8203L;
    }
    public static int ERROR_DS_ATTRIBUTE_TYPE_UNDEFINED() {
        return (int)8204L;
    }
    public static int ERROR_DS_ATTRIBUTE_OR_VALUE_EXISTS() {
        return (int)8205L;
    }
    public static int ERROR_DS_BUSY() {
        return (int)8206L;
    }
    public static int ERROR_DS_UNAVAILABLE() {
        return (int)8207L;
    }
    public static int ERROR_DS_NO_RIDS_ALLOCATED() {
        return (int)8208L;
    }
    public static int ERROR_DS_NO_MORE_RIDS() {
        return (int)8209L;
    }
    public static int ERROR_DS_INCORRECT_ROLE_OWNER() {
        return (int)8210L;
    }
    public static int ERROR_DS_RIDMGR_INIT_ERROR() {
        return (int)8211L;
    }
    public static int ERROR_DS_OBJ_CLASS_VIOLATION() {
        return (int)8212L;
    }
    public static int ERROR_DS_CANT_ON_NON_LEAF() {
        return (int)8213L;
    }
    public static int ERROR_DS_CANT_ON_RDN() {
        return (int)8214L;
    }
    public static int ERROR_DS_CANT_MOD_OBJ_CLASS() {
        return (int)8215L;
    }
    public static int ERROR_DS_CROSS_DOM_MOVE_ERROR() {
        return (int)8216L;
    }
    public static int ERROR_DS_GC_NOT_AVAILABLE() {
        return (int)8217L;
    }
    public static int ERROR_SHARED_POLICY() {
        return (int)8218L;
    }
    public static int ERROR_POLICY_OBJECT_NOT_FOUND() {
        return (int)8219L;
    }
    public static int ERROR_POLICY_ONLY_IN_DS() {
        return (int)8220L;
    }
    public static int ERROR_PROMOTION_ACTIVE() {
        return (int)8221L;
    }
    public static int ERROR_NO_PROMOTION_ACTIVE() {
        return (int)8222L;
    }
    public static int ERROR_DS_OPERATIONS_ERROR() {
        return (int)8224L;
    }
    public static int ERROR_DS_PROTOCOL_ERROR() {
        return (int)8225L;
    }
    public static int ERROR_DS_TIMELIMIT_EXCEEDED() {
        return (int)8226L;
    }
    public static int ERROR_DS_SIZELIMIT_EXCEEDED() {
        return (int)8227L;
    }
    public static int ERROR_DS_ADMIN_LIMIT_EXCEEDED() {
        return (int)8228L;
    }
    public static int ERROR_DS_COMPARE_FALSE() {
        return (int)8229L;
    }
    public static int ERROR_DS_COMPARE_TRUE() {
        return (int)8230L;
    }
    public static int ERROR_DS_AUTH_METHOD_NOT_SUPPORTED() {
        return (int)8231L;
    }
    public static int ERROR_DS_STRONG_AUTH_REQUIRED() {
        return (int)8232L;
    }
    public static int ERROR_DS_INAPPROPRIATE_AUTH() {
        return (int)8233L;
    }
    public static int ERROR_DS_AUTH_UNKNOWN() {
        return (int)8234L;
    }
    public static int ERROR_DS_REFERRAL() {
        return (int)8235L;
    }
    public static int ERROR_DS_UNAVAILABLE_CRIT_EXTENSION() {
        return (int)8236L;
    }
    public static int ERROR_DS_CONFIDENTIALITY_REQUIRED() {
        return (int)8237L;
    }
    public static int ERROR_DS_INAPPROPRIATE_MATCHING() {
        return (int)8238L;
    }
    public static int ERROR_DS_CONSTRAINT_VIOLATION() {
        return (int)8239L;
    }
    public static int ERROR_DS_NO_SUCH_OBJECT() {
        return (int)8240L;
    }
    public static int ERROR_DS_ALIAS_PROBLEM() {
        return (int)8241L;
    }
    public static int ERROR_DS_INVALID_DN_SYNTAX() {
        return (int)8242L;
    }
    public static int ERROR_DS_IS_LEAF() {
        return (int)8243L;
    }
    public static int ERROR_DS_ALIAS_DEREF_PROBLEM() {
        return (int)8244L;
    }
    public static int ERROR_DS_UNWILLING_TO_PERFORM() {
        return (int)8245L;
    }
    public static int ERROR_DS_LOOP_DETECT() {
        return (int)8246L;
    }
    public static int ERROR_DS_NAMING_VIOLATION() {
        return (int)8247L;
    }
    public static int ERROR_DS_OBJECT_RESULTS_TOO_LARGE() {
        return (int)8248L;
    }
    public static int ERROR_DS_AFFECTS_MULTIPLE_DSAS() {
        return (int)8249L;
    }
    public static int ERROR_DS_SERVER_DOWN() {
        return (int)8250L;
    }
    public static int ERROR_DS_LOCAL_ERROR() {
        return (int)8251L;
    }
    public static int ERROR_DS_ENCODING_ERROR() {
        return (int)8252L;
    }
    public static int ERROR_DS_DECODING_ERROR() {
        return (int)8253L;
    }
    public static int ERROR_DS_FILTER_UNKNOWN() {
        return (int)8254L;
    }
    public static int ERROR_DS_PARAM_ERROR() {
        return (int)8255L;
    }
    public static int ERROR_DS_NOT_SUPPORTED() {
        return (int)8256L;
    }
    public static int ERROR_DS_NO_RESULTS_RETURNED() {
        return (int)8257L;
    }
    public static int ERROR_DS_CONTROL_NOT_FOUND() {
        return (int)8258L;
    }
    public static int ERROR_DS_CLIENT_LOOP() {
        return (int)8259L;
    }
    public static int ERROR_DS_REFERRAL_LIMIT_EXCEEDED() {
        return (int)8260L;
    }
    public static int ERROR_DS_SORT_CONTROL_MISSING() {
        return (int)8261L;
    }
    public static int ERROR_DS_OFFSET_RANGE_ERROR() {
        return (int)8262L;
    }
    public static int ERROR_DS_ROOT_MUST_BE_NC() {
        return (int)8301L;
    }
    public static int ERROR_DS_ADD_REPLICA_INHIBITED() {
        return (int)8302L;
    }
    public static int ERROR_DS_ATT_NOT_DEF_IN_SCHEMA() {
        return (int)8303L;
    }
    public static int ERROR_DS_MAX_OBJ_SIZE_EXCEEDED() {
        return (int)8304L;
    }
    public static int ERROR_DS_OBJ_STRING_NAME_EXISTS() {
        return (int)8305L;
    }
    public static int ERROR_DS_NO_RDN_DEFINED_IN_SCHEMA() {
        return (int)8306L;
    }
    public static int ERROR_DS_RDN_DOESNT_MATCH_SCHEMA() {
        return (int)8307L;
    }
    public static int ERROR_DS_NO_REQUESTED_ATTS_FOUND() {
        return (int)8308L;
    }
    public static int ERROR_DS_USER_BUFFER_TO_SMALL() {
        return (int)8309L;
    }
    public static int ERROR_DS_ATT_IS_NOT_ON_OBJ() {
        return (int)8310L;
    }
    public static int ERROR_DS_ILLEGAL_MOD_OPERATION() {
        return (int)8311L;
    }
    public static int ERROR_DS_OBJ_TOO_LARGE() {
        return (int)8312L;
    }
    public static int ERROR_DS_BAD_INSTANCE_TYPE() {
        return (int)8313L;
    }
    public static int ERROR_DS_MASTERDSA_REQUIRED() {
        return (int)8314L;
    }
    public static int ERROR_DS_OBJECT_CLASS_REQUIRED() {
        return (int)8315L;
    }
    public static int ERROR_DS_MISSING_REQUIRED_ATT() {
        return (int)8316L;
    }
    public static int ERROR_DS_ATT_NOT_DEF_FOR_CLASS() {
        return (int)8317L;
    }
    public static int ERROR_DS_ATT_ALREADY_EXISTS() {
        return (int)8318L;
    }
    public static int ERROR_DS_CANT_ADD_ATT_VALUES() {
        return (int)8320L;
    }
    public static int ERROR_DS_SINGLE_VALUE_CONSTRAINT() {
        return (int)8321L;
    }
    public static int ERROR_DS_RANGE_CONSTRAINT() {
        return (int)8322L;
    }
    public static int ERROR_DS_ATT_VAL_ALREADY_EXISTS() {
        return (int)8323L;
    }
    public static int ERROR_DS_CANT_REM_MISSING_ATT() {
        return (int)8324L;
    }
    public static int ERROR_DS_CANT_REM_MISSING_ATT_VAL() {
        return (int)8325L;
    }
    public static int ERROR_DS_ROOT_CANT_BE_SUBREF() {
        return (int)8326L;
    }
    public static int ERROR_DS_NO_CHAINING() {
        return (int)8327L;
    }
    public static int ERROR_DS_NO_CHAINED_EVAL() {
        return (int)8328L;
    }
    public static int ERROR_DS_NO_PARENT_OBJECT() {
        return (int)8329L;
    }
    public static int ERROR_DS_PARENT_IS_AN_ALIAS() {
        return (int)8330L;
    }
    public static int ERROR_DS_CANT_MIX_MASTER_AND_REPS() {
        return (int)8331L;
    }
    public static int ERROR_DS_CHILDREN_EXIST() {
        return (int)8332L;
    }
    public static int ERROR_DS_OBJ_NOT_FOUND() {
        return (int)8333L;
    }
    public static int ERROR_DS_ALIASED_OBJ_MISSING() {
        return (int)8334L;
    }
    public static int ERROR_DS_BAD_NAME_SYNTAX() {
        return (int)8335L;
    }
    public static int ERROR_DS_ALIAS_POINTS_TO_ALIAS() {
        return (int)8336L;
    }
    public static int ERROR_DS_CANT_DEREF_ALIAS() {
        return (int)8337L;
    }
    public static int ERROR_DS_OUT_OF_SCOPE() {
        return (int)8338L;
    }
    public static int ERROR_DS_OBJECT_BEING_REMOVED() {
        return (int)8339L;
    }
    public static int ERROR_DS_CANT_DELETE_DSA_OBJ() {
        return (int)8340L;
    }
    public static int ERROR_DS_GENERIC_ERROR() {
        return (int)8341L;
    }
    public static int ERROR_DS_DSA_MUST_BE_INT_MASTER() {
        return (int)8342L;
    }
    public static int ERROR_DS_CLASS_NOT_DSA() {
        return (int)8343L;
    }
    public static int ERROR_DS_INSUFF_ACCESS_RIGHTS() {
        return (int)8344L;
    }
    public static int ERROR_DS_ILLEGAL_SUPERIOR() {
        return (int)8345L;
    }
    public static int ERROR_DS_ATTRIBUTE_OWNED_BY_SAM() {
        return (int)8346L;
    }
    public static int ERROR_DS_NAME_TOO_MANY_PARTS() {
        return (int)8347L;
    }
    public static int ERROR_DS_NAME_TOO_LONG() {
        return (int)8348L;
    }
    public static int ERROR_DS_NAME_VALUE_TOO_LONG() {
        return (int)8349L;
    }
    public static int ERROR_DS_NAME_UNPARSEABLE() {
        return (int)8350L;
    }
    public static int ERROR_DS_NAME_TYPE_UNKNOWN() {
        return (int)8351L;
    }
    public static int ERROR_DS_NOT_AN_OBJECT() {
        return (int)8352L;
    }
    public static int ERROR_DS_SEC_DESC_TOO_SHORT() {
        return (int)8353L;
    }
    public static int ERROR_DS_SEC_DESC_INVALID() {
        return (int)8354L;
    }
    public static int ERROR_DS_NO_DELETED_NAME() {
        return (int)8355L;
    }
    public static int ERROR_DS_SUBREF_MUST_HAVE_PARENT() {
        return (int)8356L;
    }
    public static int ERROR_DS_NCNAME_MUST_BE_NC() {
        return (int)8357L;
    }
    public static int ERROR_DS_CANT_ADD_SYSTEM_ONLY() {
        return (int)8358L;
    }
    public static int ERROR_DS_CLASS_MUST_BE_CONCRETE() {
        return (int)8359L;
    }
    public static int ERROR_DS_INVALID_DMD() {
        return (int)8360L;
    }
    public static int ERROR_DS_OBJ_GUID_EXISTS() {
        return (int)8361L;
    }
    public static int ERROR_DS_NOT_ON_BACKLINK() {
        return (int)8362L;
    }
    public static int ERROR_DS_NO_CROSSREF_FOR_NC() {
        return (int)8363L;
    }
    public static int ERROR_DS_SHUTTING_DOWN() {
        return (int)8364L;
    }
    public static int ERROR_DS_UNKNOWN_OPERATION() {
        return (int)8365L;
    }
    public static int ERROR_DS_INVALID_ROLE_OWNER() {
        return (int)8366L;
    }
    public static int ERROR_DS_COULDNT_CONTACT_FSMO() {
        return (int)8367L;
    }
    public static int ERROR_DS_CROSS_NC_DN_RENAME() {
        return (int)8368L;
    }
    public static int ERROR_DS_CANT_MOD_SYSTEM_ONLY() {
        return (int)8369L;
    }
    public static int ERROR_DS_REPLICATOR_ONLY() {
        return (int)8370L;
    }
    public static int ERROR_DS_OBJ_CLASS_NOT_DEFINED() {
        return (int)8371L;
    }
    public static int ERROR_DS_OBJ_CLASS_NOT_SUBCLASS() {
        return (int)8372L;
    }
    public static int ERROR_DS_NAME_REFERENCE_INVALID() {
        return (int)8373L;
    }
    public static int ERROR_DS_CROSS_REF_EXISTS() {
        return (int)8374L;
    }
    public static int ERROR_DS_CANT_DEL_MASTER_CROSSREF() {
        return (int)8375L;
    }
    public static int ERROR_DS_SUBTREE_NOTIFY_NOT_NC_HEAD() {
        return (int)8376L;
    }
    public static int ERROR_DS_NOTIFY_FILTER_TOO_COMPLEX() {
        return (int)8377L;
    }
    public static int ERROR_DS_DUP_RDN() {
        return (int)8378L;
    }
    public static int ERROR_DS_DUP_OID() {
        return (int)8379L;
    }
    public static int ERROR_DS_DUP_MAPI_ID() {
        return (int)8380L;
    }
    public static int ERROR_DS_DUP_SCHEMA_ID_GUID() {
        return (int)8381L;
    }
    public static int ERROR_DS_DUP_LDAP_DISPLAY_NAME() {
        return (int)8382L;
    }
    public static int ERROR_DS_SEMANTIC_ATT_TEST() {
        return (int)8383L;
    }
    public static int ERROR_DS_SYNTAX_MISMATCH() {
        return (int)8384L;
    }
    public static int ERROR_DS_EXISTS_IN_MUST_HAVE() {
        return (int)8385L;
    }
    public static int ERROR_DS_EXISTS_IN_MAY_HAVE() {
        return (int)8386L;
    }
    public static int ERROR_DS_NONEXISTENT_MAY_HAVE() {
        return (int)8387L;
    }
    public static int ERROR_DS_NONEXISTENT_MUST_HAVE() {
        return (int)8388L;
    }
    public static int ERROR_DS_AUX_CLS_TEST_FAIL() {
        return (int)8389L;
    }
    public static int ERROR_DS_NONEXISTENT_POSS_SUP() {
        return (int)8390L;
    }
    public static int ERROR_DS_SUB_CLS_TEST_FAIL() {
        return (int)8391L;
    }
    public static int ERROR_DS_BAD_RDN_ATT_ID_SYNTAX() {
        return (int)8392L;
    }
    public static int ERROR_DS_EXISTS_IN_AUX_CLS() {
        return (int)8393L;
    }
    public static int ERROR_DS_EXISTS_IN_SUB_CLS() {
        return (int)8394L;
    }
    public static int ERROR_DS_EXISTS_IN_POSS_SUP() {
        return (int)8395L;
    }
    public static int ERROR_DS_RECALCSCHEMA_FAILED() {
        return (int)8396L;
    }
    public static int ERROR_DS_TREE_DELETE_NOT_FINISHED() {
        return (int)8397L;
    }
    public static int ERROR_DS_CANT_DELETE() {
        return (int)8398L;
    }
    public static int ERROR_DS_ATT_SCHEMA_REQ_ID() {
        return (int)8399L;
    }
    public static int ERROR_DS_BAD_ATT_SCHEMA_SYNTAX() {
        return (int)8400L;
    }
    public static int ERROR_DS_CANT_CACHE_ATT() {
        return (int)8401L;
    }
    public static int ERROR_DS_CANT_CACHE_CLASS() {
        return (int)8402L;
    }
    public static int ERROR_DS_CANT_REMOVE_ATT_CACHE() {
        return (int)8403L;
    }
    public static int ERROR_DS_CANT_REMOVE_CLASS_CACHE() {
        return (int)8404L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_DN() {
        return (int)8405L;
    }
    public static int ERROR_DS_MISSING_SUPREF() {
        return (int)8406L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_INSTANCE() {
        return (int)8407L;
    }
    public static int ERROR_DS_CODE_INCONSISTENCY() {
        return (int)8408L;
    }
    public static int ERROR_DS_DATABASE_ERROR() {
        return (int)8409L;
    }
    public static int ERROR_DS_GOVERNSID_MISSING() {
        return (int)8410L;
    }
    public static int ERROR_DS_MISSING_EXPECTED_ATT() {
        return (int)8411L;
    }
    public static int ERROR_DS_NCNAME_MISSING_CR_REF() {
        return (int)8412L;
    }
    public static int ERROR_DS_SECURITY_CHECKING_ERROR() {
        return (int)8413L;
    }
    public static int ERROR_DS_SCHEMA_NOT_LOADED() {
        return (int)8414L;
    }
    public static int ERROR_DS_SCHEMA_ALLOC_FAILED() {
        return (int)8415L;
    }
    public static int ERROR_DS_ATT_SCHEMA_REQ_SYNTAX() {
        return (int)8416L;
    }
    public static int ERROR_DS_GCVERIFY_ERROR() {
        return (int)8417L;
    }
    public static int ERROR_DS_DRA_SCHEMA_MISMATCH() {
        return (int)8418L;
    }
    public static int ERROR_DS_CANT_FIND_DSA_OBJ() {
        return (int)8419L;
    }
    public static int ERROR_DS_CANT_FIND_EXPECTED_NC() {
        return (int)8420L;
    }
    public static int ERROR_DS_CANT_FIND_NC_IN_CACHE() {
        return (int)8421L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_CHILD() {
        return (int)8422L;
    }
    public static int ERROR_DS_SECURITY_ILLEGAL_MODIFY() {
        return (int)8423L;
    }
    public static int ERROR_DS_CANT_REPLACE_HIDDEN_REC() {
        return (int)8424L;
    }
    public static int ERROR_DS_BAD_HIERARCHY_FILE() {
        return (int)8425L;
    }
    public static int ERROR_DS_BUILD_HIERARCHY_TABLE_FAILED() {
        return (int)8426L;
    }
    public static int ERROR_DS_CONFIG_PARAM_MISSING() {
        return (int)8427L;
    }
    public static int ERROR_DS_COUNTING_AB_INDICES_FAILED() {
        return (int)8428L;
    }
    public static int ERROR_DS_HIERARCHY_TABLE_MALLOC_FAILED() {
        return (int)8429L;
    }
    public static int ERROR_DS_INTERNAL_FAILURE() {
        return (int)8430L;
    }
    public static int ERROR_DS_UNKNOWN_ERROR() {
        return (int)8431L;
    }
    public static int ERROR_DS_ROOT_REQUIRES_CLASS_TOP() {
        return (int)8432L;
    }
    public static int ERROR_DS_REFUSING_FSMO_ROLES() {
        return (int)8433L;
    }
    public static int ERROR_DS_MISSING_FSMO_SETTINGS() {
        return (int)8434L;
    }
    public static int ERROR_DS_UNABLE_TO_SURRENDER_ROLES() {
        return (int)8435L;
    }
    public static int ERROR_DS_DRA_GENERIC() {
        return (int)8436L;
    }
    public static int ERROR_DS_DRA_INVALID_PARAMETER() {
        return (int)8437L;
    }
    public static int ERROR_DS_DRA_BUSY() {
        return (int)8438L;
    }
    public static int ERROR_DS_DRA_BAD_DN() {
        return (int)8439L;
    }
    public static int ERROR_DS_DRA_BAD_NC() {
        return (int)8440L;
    }
    public static int ERROR_DS_DRA_DN_EXISTS() {
        return (int)8441L;
    }
    public static int ERROR_DS_DRA_INTERNAL_ERROR() {
        return (int)8442L;
    }
    public static int ERROR_DS_DRA_INCONSISTENT_DIT() {
        return (int)8443L;
    }
    public static int ERROR_DS_DRA_CONNECTION_FAILED() {
        return (int)8444L;
    }
    public static int ERROR_DS_DRA_BAD_INSTANCE_TYPE() {
        return (int)8445L;
    }
    public static int ERROR_DS_DRA_OUT_OF_MEM() {
        return (int)8446L;
    }
    public static int ERROR_DS_DRA_MAIL_PROBLEM() {
        return (int)8447L;
    }
    public static int ERROR_DS_DRA_REF_ALREADY_EXISTS() {
        return (int)8448L;
    }
    public static int ERROR_DS_DRA_REF_NOT_FOUND() {
        return (int)8449L;
    }
    public static int ERROR_DS_DRA_OBJ_IS_REP_SOURCE() {
        return (int)8450L;
    }
    public static int ERROR_DS_DRA_DB_ERROR() {
        return (int)8451L;
    }
    public static int ERROR_DS_DRA_NO_REPLICA() {
        return (int)8452L;
    }
    public static int ERROR_DS_DRA_ACCESS_DENIED() {
        return (int)8453L;
    }
    public static int ERROR_DS_DRA_NOT_SUPPORTED() {
        return (int)8454L;
    }
    public static int ERROR_DS_DRA_RPC_CANCELLED() {
        return (int)8455L;
    }
    public static int ERROR_DS_DRA_SOURCE_DISABLED() {
        return (int)8456L;
    }
    public static int ERROR_DS_DRA_SINK_DISABLED() {
        return (int)8457L;
    }
    public static int ERROR_DS_DRA_NAME_COLLISION() {
        return (int)8458L;
    }
    public static int ERROR_DS_DRA_SOURCE_REINSTALLED() {
        return (int)8459L;
    }
    public static int ERROR_DS_DRA_MISSING_PARENT() {
        return (int)8460L;
    }
    public static int ERROR_DS_DRA_PREEMPTED() {
        return (int)8461L;
    }
    public static int ERROR_DS_DRA_ABANDON_SYNC() {
        return (int)8462L;
    }
    public static int ERROR_DS_DRA_SHUTDOWN() {
        return (int)8463L;
    }
    public static int ERROR_DS_DRA_INCOMPATIBLE_PARTIAL_SET() {
        return (int)8464L;
    }
    public static int ERROR_DS_DRA_SOURCE_IS_PARTIAL_REPLICA() {
        return (int)8465L;
    }
    public static int ERROR_DS_DRA_EXTN_CONNECTION_FAILED() {
        return (int)8466L;
    }
    public static int ERROR_DS_INSTALL_SCHEMA_MISMATCH() {
        return (int)8467L;
    }
    public static int ERROR_DS_DUP_LINK_ID() {
        return (int)8468L;
    }
    public static int ERROR_DS_NAME_ERROR_RESOLVING() {
        return (int)8469L;
    }
    public static int ERROR_DS_NAME_ERROR_NOT_FOUND() {
        return (int)8470L;
    }
    public static int ERROR_DS_NAME_ERROR_NOT_UNIQUE() {
        return (int)8471L;
    }
    public static int ERROR_DS_NAME_ERROR_NO_MAPPING() {
        return (int)8472L;
    }
    public static int ERROR_DS_NAME_ERROR_DOMAIN_ONLY() {
        return (int)8473L;
    }
    public static int ERROR_DS_NAME_ERROR_NO_SYNTACTICAL_MAPPING() {
        return (int)8474L;
    }
    public static int ERROR_DS_CONSTRUCTED_ATT_MOD() {
        return (int)8475L;
    }
    public static int ERROR_DS_WRONG_OM_OBJ_CLASS() {
        return (int)8476L;
    }
    public static int ERROR_DS_DRA_REPL_PENDING() {
        return (int)8477L;
    }
    public static int ERROR_DS_DS_REQUIRED() {
        return (int)8478L;
    }
    public static int ERROR_DS_INVALID_LDAP_DISPLAY_NAME() {
        return (int)8479L;
    }
    public static int ERROR_DS_NON_BASE_SEARCH() {
        return (int)8480L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_ATTS() {
        return (int)8481L;
    }
    public static int ERROR_DS_BACKLINK_WITHOUT_LINK() {
        return (int)8482L;
    }
    public static int ERROR_DS_EPOCH_MISMATCH() {
        return (int)8483L;
    }
    public static int ERROR_DS_SRC_NAME_MISMATCH() {
        return (int)8484L;
    }
    public static int ERROR_DS_SRC_AND_DST_NC_IDENTICAL() {
        return (int)8485L;
    }
    public static int ERROR_DS_DST_NC_MISMATCH() {
        return (int)8486L;
    }
    public static int ERROR_DS_NOT_AUTHORITIVE_FOR_DST_NC() {
        return (int)8487L;
    }
    public static int ERROR_DS_SRC_GUID_MISMATCH() {
        return (int)8488L;
    }
    public static int ERROR_DS_CANT_MOVE_DELETED_OBJECT() {
        return (int)8489L;
    }
    public static int ERROR_DS_PDC_OPERATION_IN_PROGRESS() {
        return (int)8490L;
    }
    public static int ERROR_DS_CROSS_DOMAIN_CLEANUP_REQD() {
        return (int)8491L;
    }
    public static int ERROR_DS_ILLEGAL_XDOM_MOVE_OPERATION() {
        return (int)8492L;
    }
    public static int ERROR_DS_CANT_WITH_ACCT_GROUP_MEMBERSHPS() {
        return (int)8493L;
    }
    public static int ERROR_DS_NC_MUST_HAVE_NC_PARENT() {
        return (int)8494L;
    }
    public static int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE() {
        return (int)8495L;
    }
    public static int ERROR_DS_DST_DOMAIN_NOT_NATIVE() {
        return (int)8496L;
    }
    public static int ERROR_DS_MISSING_INFRASTRUCTURE_CONTAINER() {
        return (int)8497L;
    }
    public static int ERROR_DS_CANT_MOVE_ACCOUNT_GROUP() {
        return (int)8498L;
    }
    public static int ERROR_DS_CANT_MOVE_RESOURCE_GROUP() {
        return (int)8499L;
    }
    public static int ERROR_DS_INVALID_SEARCH_FLAG() {
        return (int)8500L;
    }
    public static int ERROR_DS_NO_TREE_DELETE_ABOVE_NC() {
        return (int)8501L;
    }
    public static int ERROR_DS_COULDNT_LOCK_TREE_FOR_DELETE() {
        return (int)8502L;
    }
    public static int ERROR_DS_COULDNT_IDENTIFY_OBJECTS_FOR_TREE_DELETE() {
        return (int)8503L;
    }
    public static int ERROR_DS_SAM_INIT_FAILURE() {
        return (int)8504L;
    }
    public static int ERROR_DS_SENSITIVE_GROUP_VIOLATION() {
        return (int)8505L;
    }
    public static int ERROR_DS_CANT_MOD_PRIMARYGROUPID() {
        return (int)8506L;
    }
    public static int ERROR_DS_ILLEGAL_BASE_SCHEMA_MOD() {
        return (int)8507L;
    }
    public static int ERROR_DS_NONSAFE_SCHEMA_CHANGE() {
        return (int)8508L;
    }
    public static int ERROR_DS_SCHEMA_UPDATE_DISALLOWED() {
        return (int)8509L;
    }
    public static int ERROR_DS_CANT_CREATE_UNDER_SCHEMA() {
        return (int)8510L;
    }
    public static int ERROR_DS_INSTALL_NO_SRC_SCH_VERSION() {
        return (int)8511L;
    }
    public static int ERROR_DS_INSTALL_NO_SCH_VERSION_IN_INIFILE() {
        return (int)8512L;
    }
    public static int ERROR_DS_INVALID_GROUP_TYPE() {
        return (int)8513L;
    }
    public static int ERROR_DS_NO_NEST_GLOBALGROUP_IN_MIXEDDOMAIN() {
        return (int)8514L;
    }
    public static int ERROR_DS_NO_NEST_LOCALGROUP_IN_MIXEDDOMAIN() {
        return (int)8515L;
    }
    public static int ERROR_DS_GLOBAL_CANT_HAVE_LOCAL_MEMBER() {
        return (int)8516L;
    }
    public static int ERROR_DS_GLOBAL_CANT_HAVE_UNIVERSAL_MEMBER() {
        return (int)8517L;
    }
    public static int ERROR_DS_UNIVERSAL_CANT_HAVE_LOCAL_MEMBER() {
        return (int)8518L;
    }
    public static int ERROR_DS_GLOBAL_CANT_HAVE_CROSSDOMAIN_MEMBER() {
        return (int)8519L;
    }
    public static int ERROR_DS_LOCAL_CANT_HAVE_CROSSDOMAIN_LOCAL_MEMBER() {
        return (int)8520L;
    }
    public static int ERROR_DS_HAVE_PRIMARY_MEMBERS() {
        return (int)8521L;
    }
    public static int ERROR_DS_STRING_SD_CONVERSION_FAILED() {
        return (int)8522L;
    }
    public static int ERROR_DS_NAMING_MASTER_GC() {
        return (int)8523L;
    }
    public static int ERROR_DS_DNS_LOOKUP_FAILURE() {
        return (int)8524L;
    }
    public static int ERROR_DS_COULDNT_UPDATE_SPNS() {
        return (int)8525L;
    }
    public static int ERROR_DS_CANT_RETRIEVE_SD() {
        return (int)8526L;
    }
    public static int ERROR_DS_KEY_NOT_UNIQUE() {
        return (int)8527L;
    }
    public static int ERROR_DS_WRONG_LINKED_ATT_SYNTAX() {
        return (int)8528L;
    }
    public static int ERROR_DS_SAM_NEED_BOOTKEY_PASSWORD() {
        return (int)8529L;
    }
    public static int ERROR_DS_SAM_NEED_BOOTKEY_FLOPPY() {
        return (int)8530L;
    }
    public static int ERROR_DS_CANT_START() {
        return (int)8531L;
    }
    public static int ERROR_DS_INIT_FAILURE() {
        return (int)8532L;
    }
    public static int ERROR_DS_NO_PKT_PRIVACY_ON_CONNECTION() {
        return (int)8533L;
    }
    public static int ERROR_DS_SOURCE_DOMAIN_IN_FOREST() {
        return (int)8534L;
    }
    public static int ERROR_DS_DESTINATION_DOMAIN_NOT_IN_FOREST() {
        return (int)8535L;
    }
    public static int ERROR_DS_DESTINATION_AUDITING_NOT_ENABLED() {
        return (int)8536L;
    }
    public static int ERROR_DS_CANT_FIND_DC_FOR_SRC_DOMAIN() {
        return (int)8537L;
    }
    public static int ERROR_DS_SRC_OBJ_NOT_GROUP_OR_USER() {
        return (int)8538L;
    }
    public static int ERROR_DS_SRC_SID_EXISTS_IN_FOREST() {
        return (int)8539L;
    }
    public static int ERROR_DS_SRC_AND_DST_OBJECT_CLASS_MISMATCH() {
        return (int)8540L;
    }
    public static int ERROR_SAM_INIT_FAILURE() {
        return (int)8541L;
    }
    public static int ERROR_DS_DRA_SCHEMA_INFO_SHIP() {
        return (int)8542L;
    }
    public static int ERROR_DS_DRA_SCHEMA_CONFLICT() {
        return (int)8543L;
    }
    public static int ERROR_DS_DRA_EARLIER_SCHEMA_CONFLICT() {
        return (int)8544L;
    }
    public static int ERROR_DS_DRA_OBJ_NC_MISMATCH() {
        return (int)8545L;
    }
    public static int ERROR_DS_NC_STILL_HAS_DSAS() {
        return (int)8546L;
    }
    public static int ERROR_DS_GC_REQUIRED() {
        return (int)8547L;
    }
    public static int ERROR_DS_LOCAL_MEMBER_OF_LOCAL_ONLY() {
        return (int)8548L;
    }
    public static int ERROR_DS_NO_FPO_IN_UNIVERSAL_GROUPS() {
        return (int)8549L;
    }
    public static int ERROR_DS_CANT_ADD_TO_GC() {
        return (int)8550L;
    }
    public static int ERROR_DS_NO_CHECKPOINT_WITH_PDC() {
        return (int)8551L;
    }
    public static int ERROR_DS_SOURCE_AUDITING_NOT_ENABLED() {
        return (int)8552L;
    }
    public static int ERROR_DS_CANT_CREATE_IN_NONDOMAIN_NC() {
        return (int)8553L;
    }
    public static int ERROR_DS_INVALID_NAME_FOR_SPN() {
        return (int)8554L;
    }
    public static int ERROR_DS_FILTER_USES_CONTRUCTED_ATTRS() {
        return (int)8555L;
    }
    public static int ERROR_DS_UNICODEPWD_NOT_IN_QUOTES() {
        return (int)8556L;
    }
    public static int ERROR_DS_MACHINE_ACCOUNT_QUOTA_EXCEEDED() {
        return (int)8557L;
    }
    public static int ERROR_DS_MUST_BE_RUN_ON_DST_DC() {
        return (int)8558L;
    }
    public static int ERROR_DS_SRC_DC_MUST_BE_SP4_OR_GREATER() {
        return (int)8559L;
    }
    public static int ERROR_DS_CANT_TREE_DELETE_CRITICAL_OBJ() {
        return (int)8560L;
    }
    public static int ERROR_DS_INIT_FAILURE_CONSOLE() {
        return (int)8561L;
    }
    public static int ERROR_DS_SAM_INIT_FAILURE_CONSOLE() {
        return (int)8562L;
    }
    public static int ERROR_DS_FOREST_VERSION_TOO_HIGH() {
        return (int)8563L;
    }
    public static int ERROR_DS_DOMAIN_VERSION_TOO_HIGH() {
        return (int)8564L;
    }
    public static int ERROR_DS_FOREST_VERSION_TOO_LOW() {
        return (int)8565L;
    }
    public static int ERROR_DS_DOMAIN_VERSION_TOO_LOW() {
        return (int)8566L;
    }
    public static int ERROR_DS_INCOMPATIBLE_VERSION() {
        return (int)8567L;
    }
    public static int ERROR_DS_LOW_DSA_VERSION() {
        return (int)8568L;
    }
    public static int ERROR_DS_NO_BEHAVIOR_VERSION_IN_MIXEDDOMAIN() {
        return (int)8569L;
    }
    public static int ERROR_DS_NOT_SUPPORTED_SORT_ORDER() {
        return (int)8570L;
    }
    public static int ERROR_DS_NAME_NOT_UNIQUE() {
        return (int)8571L;
    }
    public static int ERROR_DS_MACHINE_ACCOUNT_CREATED_PRENT4() {
        return (int)8572L;
    }
    public static int ERROR_DS_OUT_OF_VERSION_STORE() {
        return (int)8573L;
    }
    public static int ERROR_DS_INCOMPATIBLE_CONTROLS_USED() {
        return (int)8574L;
    }
    public static int ERROR_DS_NO_REF_DOMAIN() {
        return (int)8575L;
    }
    public static int ERROR_DS_RESERVED_LINK_ID() {
        return (int)8576L;
    }
    public static int ERROR_DS_LINK_ID_NOT_AVAILABLE() {
        return (int)8577L;
    }
    public static int ERROR_DS_AG_CANT_HAVE_UNIVERSAL_MEMBER() {
        return (int)8578L;
    }
    public static int ERROR_DS_MODIFYDN_DISALLOWED_BY_INSTANCE_TYPE() {
        return (int)8579L;
    }
    public static int ERROR_DS_NO_OBJECT_MOVE_IN_SCHEMA_NC() {
        return (int)8580L;
    }
    public static int ERROR_DS_MODIFYDN_DISALLOWED_BY_FLAG() {
        return (int)8581L;
    }
    public static int ERROR_DS_MODIFYDN_WRONG_GRANDPARENT() {
        return (int)8582L;
    }
    public static int ERROR_DS_NAME_ERROR_TRUST_REFERRAL() {
        return (int)8583L;
    }
    public static int ERROR_NOT_SUPPORTED_ON_STANDARD_SERVER() {
        return (int)8584L;
    }
    public static int ERROR_DS_CANT_ACCESS_REMOTE_PART_OF_AD() {
        return (int)8585L;
    }
    public static int ERROR_DS_CR_IMPOSSIBLE_TO_VALIDATE_V2() {
        return (int)8586L;
    }
    public static int ERROR_DS_THREAD_LIMIT_EXCEEDED() {
        return (int)8587L;
    }
    public static int ERROR_DS_NOT_CLOSEST() {
        return (int)8588L;
    }
    public static int ERROR_DS_CANT_DERIVE_SPN_WITHOUT_SERVER_REF() {
        return (int)8589L;
    }
    public static int ERROR_DS_SINGLE_USER_MODE_FAILED() {
        return (int)8590L;
    }
    public static int ERROR_DS_NTDSCRIPT_SYNTAX_ERROR() {
        return (int)8591L;
    }
    public static int ERROR_DS_NTDSCRIPT_PROCESS_ERROR() {
        return (int)8592L;
    }
    public static int ERROR_DS_DIFFERENT_REPL_EPOCHS() {
        return (int)8593L;
    }
    public static int ERROR_DS_DRS_EXTENSIONS_CHANGED() {
        return (int)8594L;
    }
    public static int ERROR_DS_REPLICA_SET_CHANGE_NOT_ALLOWED_ON_DISABLED_CR() {
        return (int)8595L;
    }
    public static int ERROR_DS_NO_MSDS_INTID() {
        return (int)8596L;
    }
    public static int ERROR_DS_DUP_MSDS_INTID() {
        return (int)8597L;
    }
    public static int ERROR_DS_EXISTS_IN_RDNATTID() {
        return (int)8598L;
    }
    public static int ERROR_DS_AUTHORIZATION_FAILED() {
        return (int)8599L;
    }
    public static int ERROR_DS_INVALID_SCRIPT() {
        return (int)8600L;
    }
    public static int ERROR_DS_REMOTE_CROSSREF_OP_FAILED() {
        return (int)8601L;
    }
    public static int ERROR_DS_CROSS_REF_BUSY() {
        return (int)8602L;
    }
    public static int ERROR_DS_CANT_DERIVE_SPN_FOR_DELETED_DOMAIN() {
        return (int)8603L;
    }
    public static int ERROR_DS_CANT_DEMOTE_WITH_WRITEABLE_NC() {
        return (int)8604L;
    }
    public static int ERROR_DS_DUPLICATE_ID_FOUND() {
        return (int)8605L;
    }
    public static int ERROR_DS_INSUFFICIENT_ATTR_TO_CREATE_OBJECT() {
        return (int)8606L;
    }
    public static int ERROR_DS_GROUP_CONVERSION_ERROR() {
        return (int)8607L;
    }
    public static int ERROR_DS_CANT_MOVE_APP_BASIC_GROUP() {
        return (int)8608L;
    }
    public static int ERROR_DS_CANT_MOVE_APP_QUERY_GROUP() {
        return (int)8609L;
    }
    public static int ERROR_DS_ROLE_NOT_VERIFIED() {
        return (int)8610L;
    }
    public static int ERROR_DS_WKO_CONTAINER_CANNOT_BE_SPECIAL() {
        return (int)8611L;
    }
    public static int ERROR_DS_DOMAIN_RENAME_IN_PROGRESS() {
        return (int)8612L;
    }
    public static int ERROR_DS_EXISTING_AD_CHILD_NC() {
        return (int)8613L;
    }
    public static int ERROR_DS_REPL_LIFETIME_EXCEEDED() {
        return (int)8614L;
    }
    public static int ERROR_DS_DISALLOWED_IN_SYSTEM_CONTAINER() {
        return (int)8615L;
    }
    public static int ERROR_DS_LDAP_SEND_QUEUE_FULL() {
        return (int)8616L;
    }
    public static int ERROR_DS_DRA_OUT_SCHEDULE_WINDOW() {
        return (int)8617L;
    }
    public static int DNS_ERROR_RCODE_NO_ERROR() {
        return (int)0L;
    }
    public static int DNS_ERROR_RCODE_FORMAT_ERROR() {
        return (int)9001L;
    }
    public static int DNS_ERROR_RCODE_SERVER_FAILURE() {
        return (int)9002L;
    }
    public static int DNS_ERROR_RCODE_NAME_ERROR() {
        return (int)9003L;
    }
    public static int DNS_ERROR_RCODE_NOT_IMPLEMENTED() {
        return (int)9004L;
    }
    public static int DNS_ERROR_RCODE_REFUSED() {
        return (int)9005L;
    }
    public static int DNS_ERROR_RCODE_YXDOMAIN() {
        return (int)9006L;
    }
    public static int DNS_ERROR_RCODE_YXRRSET() {
        return (int)9007L;
    }
    public static int DNS_ERROR_RCODE_NXRRSET() {
        return (int)9008L;
    }
    public static int DNS_ERROR_RCODE_NOTAUTH() {
        return (int)9009L;
    }
    public static int DNS_ERROR_RCODE_NOTZONE() {
        return (int)9010L;
    }
    public static int DNS_ERROR_RCODE_BADSIG() {
        return (int)9016L;
    }
    public static int DNS_ERROR_RCODE_BADKEY() {
        return (int)9017L;
    }
    public static int DNS_ERROR_RCODE_BADTIME() {
        return (int)9018L;
    }
    public static int DNS_ERROR_RCODE_LAST() {
        return (int)9018L;
    }
    public static int DNS_INFO_NO_RECORDS() {
        return (int)9501L;
    }
    public static int DNS_ERROR_BAD_PACKET() {
        return (int)9502L;
    }
    public static int DNS_ERROR_NO_PACKET() {
        return (int)9503L;
    }
    public static int DNS_ERROR_RCODE() {
        return (int)9504L;
    }
    public static int DNS_ERROR_UNSECURE_PACKET() {
        return (int)9505L;
    }
    public static int DNS_STATUS_PACKET_UNSECURE() {
        return (int)9505L;
    }
    public static int DNS_ERROR_NO_MEMORY() {
        return (int)14L;
    }
    public static int DNS_ERROR_INVALID_NAME() {
        return (int)123L;
    }
    public static int DNS_ERROR_INVALID_DATA() {
        return (int)13L;
    }
    public static int DNS_ERROR_INVALID_TYPE() {
        return (int)9551L;
    }
    public static int DNS_ERROR_INVALID_IP_ADDRESS() {
        return (int)9552L;
    }
    public static int DNS_ERROR_INVALID_PROPERTY() {
        return (int)9553L;
    }
    public static int DNS_ERROR_TRY_AGAIN_LATER() {
        return (int)9554L;
    }
    public static int DNS_ERROR_NOT_UNIQUE() {
        return (int)9555L;
    }
    public static int DNS_ERROR_NON_RFC_NAME() {
        return (int)9556L;
    }
    public static int DNS_STATUS_FQDN() {
        return (int)9557L;
    }
    public static int DNS_STATUS_DOTTED_NAME() {
        return (int)9558L;
    }
    public static int DNS_STATUS_SINGLE_PART_NAME() {
        return (int)9559L;
    }
    public static int DNS_ERROR_INVALID_NAME_CHAR() {
        return (int)9560L;
    }
    public static int DNS_ERROR_NUMERIC_NAME() {
        return (int)9561L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_ON_ROOT_SERVER() {
        return (int)9562L;
    }
    public static int DNS_ERROR_NOT_ALLOWED_UNDER_DELEGATION() {
        return (int)9563L;
    }
    public static int DNS_ERROR_CANNOT_FIND_ROOT_HINTS() {
        return (int)9564L;
    }
    public static int DNS_ERROR_INCONSISTENT_ROOT_HINTS() {
        return (int)9565L;
    }
    public static int DNS_ERROR_ZONE_DOES_NOT_EXIST() {
        return (int)9601L;
    }
    public static int DNS_ERROR_NO_ZONE_INFO() {
        return (int)9602L;
    }
    public static int DNS_ERROR_INVALID_ZONE_OPERATION() {
        return (int)9603L;
    }
    public static int DNS_ERROR_ZONE_CONFIGURATION_ERROR() {
        return (int)9604L;
    }
    public static int DNS_ERROR_ZONE_HAS_NO_SOA_RECORD() {
        return (int)9605L;
    }
    public static int DNS_ERROR_ZONE_HAS_NO_NS_RECORDS() {
        return (int)9606L;
    }
    public static int DNS_ERROR_ZONE_LOCKED() {
        return (int)9607L;
    }
    public static int DNS_ERROR_ZONE_CREATION_FAILED() {
        return (int)9608L;
    }
    public static int DNS_ERROR_ZONE_ALREADY_EXISTS() {
        return (int)9609L;
    }
    public static int DNS_ERROR_AUTOZONE_ALREADY_EXISTS() {
        return (int)9610L;
    }
    public static int DNS_ERROR_INVALID_ZONE_TYPE() {
        return (int)9611L;
    }
    public static int DNS_ERROR_SECONDARY_REQUIRES_MASTER_IP() {
        return (int)9612L;
    }
    public static int DNS_ERROR_ZONE_NOT_SECONDARY() {
        return (int)9613L;
    }
    public static int DNS_ERROR_NEED_SECONDARY_ADDRESSES() {
        return (int)9614L;
    }
    public static int DNS_ERROR_WINS_INIT_FAILED() {
        return (int)9615L;
    }
    public static int DNS_ERROR_NEED_WINS_SERVERS() {
        return (int)9616L;
    }
    public static int DNS_ERROR_NBSTAT_INIT_FAILED() {
        return (int)9617L;
    }
    public static int DNS_ERROR_SOA_DELETE_INVALID() {
        return (int)9618L;
    }
    public static int DNS_ERROR_FORWARDER_ALREADY_EXISTS() {
        return (int)9619L;
    }
    public static int DNS_ERROR_ZONE_REQUIRES_MASTER_IP() {
        return (int)9620L;
    }
    public static int DNS_ERROR_ZONE_IS_SHUTDOWN() {
        return (int)9621L;
    }
    public static int DNS_ERROR_PRIMARY_REQUIRES_DATAFILE() {
        return (int)9651L;
    }
    public static int DNS_ERROR_INVALID_DATAFILE_NAME() {
        return (int)9652L;
    }
    public static int DNS_ERROR_DATAFILE_OPEN_FAILURE() {
        return (int)9653L;
    }
    public static int DNS_ERROR_FILE_WRITEBACK_FAILED() {
        return (int)9654L;
    }
    public static int DNS_ERROR_DATAFILE_PARSING() {
        return (int)9655L;
    }
    public static int DNS_ERROR_RECORD_DOES_NOT_EXIST() {
        return (int)9701L;
    }
    public static int DNS_ERROR_RECORD_FORMAT() {
        return (int)9702L;
    }
    public static int DNS_ERROR_NODE_CREATION_FAILED() {
        return (int)9703L;
    }
    public static int DNS_ERROR_UNKNOWN_RECORD_TYPE() {
        return (int)9704L;
    }
    public static int DNS_ERROR_RECORD_TIMED_OUT() {
        return (int)9705L;
    }
    public static int DNS_ERROR_NAME_NOT_IN_ZONE() {
        return (int)9706L;
    }
    public static int DNS_ERROR_CNAME_LOOP() {
        return (int)9707L;
    }
    public static int DNS_ERROR_NODE_IS_CNAME() {
        return (int)9708L;
    }
    public static int DNS_ERROR_CNAME_COLLISION() {
        return (int)9709L;
    }
    public static int DNS_ERROR_RECORD_ONLY_AT_ZONE_ROOT() {
        return (int)9710L;
    }
    public static int DNS_ERROR_RECORD_ALREADY_EXISTS() {
        return (int)9711L;
    }
    public static int DNS_ERROR_SECONDARY_DATA() {
        return (int)9712L;
    }
    public static int DNS_ERROR_NO_CREATE_CACHE_DATA() {
        return (int)9713L;
    }
    public static int DNS_ERROR_NAME_DOES_NOT_EXIST() {
        return (int)9714L;
    }
    public static int DNS_WARNING_PTR_CREATE_FAILED() {
        return (int)9715L;
    }
    public static int DNS_WARNING_DOMAIN_UNDELETED() {
        return (int)9716L;
    }
    public static int DNS_ERROR_DS_UNAVAILABLE() {
        return (int)9717L;
    }
    public static int DNS_ERROR_DS_ZONE_ALREADY_EXISTS() {
        return (int)9718L;
    }
    public static int DNS_ERROR_NO_BOOTFILE_IF_DS_ZONE() {
        return (int)9719L;
    }
    public static int DNS_INFO_AXFR_COMPLETE() {
        return (int)9751L;
    }
    public static int DNS_ERROR_AXFR() {
        return (int)9752L;
    }
    public static int DNS_INFO_ADDED_LOCAL_WINS() {
        return (int)9753L;
    }
    public static int DNS_STATUS_CONTINUE_NEEDED() {
        return (int)9801L;
    }
    public static int DNS_ERROR_NO_TCPIP() {
        return (int)9851L;
    }
    public static int DNS_ERROR_NO_DNS_SERVERS() {
        return (int)9852L;
    }
    public static int DNS_ERROR_DP_DOES_NOT_EXIST() {
        return (int)9901L;
    }
    public static int DNS_ERROR_DP_ALREADY_EXISTS() {
        return (int)9902L;
    }
    public static int DNS_ERROR_DP_NOT_ENLISTED() {
        return (int)9903L;
    }
    public static int DNS_ERROR_DP_ALREADY_ENLISTED() {
        return (int)9904L;
    }
    public static int DNS_ERROR_DP_NOT_AVAILABLE() {
        return (int)9905L;
    }
    public static int DNS_ERROR_DP_FSMO_ERROR() {
        return (int)9906L;
    }
    public static int WSAEINTR() {
        return (int)10004L;
    }
    public static int WSAEBADF() {
        return (int)10009L;
    }
    public static int WSAEACCES() {
        return (int)10013L;
    }
    public static int WSAEFAULT() {
        return (int)10014L;
    }
    public static int WSAEINVAL() {
        return (int)10022L;
    }
    public static int WSAEMFILE() {
        return (int)10024L;
    }
    public static int WSAEWOULDBLOCK() {
        return (int)10035L;
    }
    public static int WSAEINPROGRESS() {
        return (int)10036L;
    }
    public static int WSAEALREADY() {
        return (int)10037L;
    }
    public static int WSAENOTSOCK() {
        return (int)10038L;
    }
    public static int WSAEDESTADDRREQ() {
        return (int)10039L;
    }
    public static int WSAEMSGSIZE() {
        return (int)10040L;
    }
    public static int WSAEPROTOTYPE() {
        return (int)10041L;
    }
    public static int WSAENOPROTOOPT() {
        return (int)10042L;
    }
    public static int WSAEPROTONOSUPPORT() {
        return (int)10043L;
    }
    public static int WSAESOCKTNOSUPPORT() {
        return (int)10044L;
    }
    public static int WSAEOPNOTSUPP() {
        return (int)10045L;
    }
    public static int WSAEPFNOSUPPORT() {
        return (int)10046L;
    }
    public static int WSAEAFNOSUPPORT() {
        return (int)10047L;
    }
    public static int WSAEADDRINUSE() {
        return (int)10048L;
    }
    public static int WSAEADDRNOTAVAIL() {
        return (int)10049L;
    }
    public static int WSAENETDOWN() {
        return (int)10050L;
    }
    public static int WSAENETUNREACH() {
        return (int)10051L;
    }
    public static int WSAENETRESET() {
        return (int)10052L;
    }
    public static int WSAECONNABORTED() {
        return (int)10053L;
    }
    public static int WSAECONNRESET() {
        return (int)10054L;
    }
    public static int WSAENOBUFS() {
        return (int)10055L;
    }
    public static int WSAEISCONN() {
        return (int)10056L;
    }
    public static int WSAENOTCONN() {
        return (int)10057L;
    }
    public static int WSAESHUTDOWN() {
        return (int)10058L;
    }
    public static int WSAETOOMANYREFS() {
        return (int)10059L;
    }
    public static int WSAETIMEDOUT() {
        return (int)10060L;
    }
    public static int WSAECONNREFUSED() {
        return (int)10061L;
    }
    public static int WSAELOOP() {
        return (int)10062L;
    }
    public static int WSAENAMETOOLONG() {
        return (int)10063L;
    }
    public static int WSAEHOSTDOWN() {
        return (int)10064L;
    }
    public static int WSAEHOSTUNREACH() {
        return (int)10065L;
    }
    public static int WSAENOTEMPTY() {
        return (int)10066L;
    }
    public static int WSAEPROCLIM() {
        return (int)10067L;
    }
    public static int WSAEUSERS() {
        return (int)10068L;
    }
    public static int WSAEDQUOT() {
        return (int)10069L;
    }
    public static int WSAESTALE() {
        return (int)10070L;
    }
    public static int WSAEREMOTE() {
        return (int)10071L;
    }
    public static int WSASYSNOTREADY() {
        return (int)10091L;
    }
    public static int WSAVERNOTSUPPORTED() {
        return (int)10092L;
    }
    public static int WSANOTINITIALISED() {
        return (int)10093L;
    }
    public static int WSAEDISCON() {
        return (int)10101L;
    }
    public static int WSAENOMORE() {
        return (int)10102L;
    }
    public static int WSAECANCELLED() {
        return (int)10103L;
    }
    public static int WSAEINVALIDPROCTABLE() {
        return (int)10104L;
    }
    public static int WSAEINVALIDPROVIDER() {
        return (int)10105L;
    }
    public static int WSAEPROVIDERFAILEDINIT() {
        return (int)10106L;
    }
    public static int WSASYSCALLFAILURE() {
        return (int)10107L;
    }
    public static int WSASERVICE_NOT_FOUND() {
        return (int)10108L;
    }
    public static int WSATYPE_NOT_FOUND() {
        return (int)10109L;
    }
    public static int WSA_E_NO_MORE() {
        return (int)10110L;
    }
    public static int WSA_E_CANCELLED() {
        return (int)10111L;
    }
    public static int WSAEREFUSED() {
        return (int)10112L;
    }
    public static int WSAHOST_NOT_FOUND() {
        return (int)11001L;
    }
    public static int WSATRY_AGAIN() {
        return (int)11002L;
    }
    public static int WSANO_RECOVERY() {
        return (int)11003L;
    }
    public static int WSANO_DATA() {
        return (int)11004L;
    }
    public static int WSA_QOS_RECEIVERS() {
        return (int)11005L;
    }
    public static int WSA_QOS_SENDERS() {
        return (int)11006L;
    }
    public static int WSA_QOS_NO_SENDERS() {
        return (int)11007L;
    }
    public static int WSA_QOS_NO_RECEIVERS() {
        return (int)11008L;
    }
    public static int WSA_QOS_REQUEST_CONFIRMED() {
        return (int)11009L;
    }
    public static int WSA_QOS_ADMISSION_FAILURE() {
        return (int)11010L;
    }
    public static int WSA_QOS_POLICY_FAILURE() {
        return (int)11011L;
    }
    public static int WSA_QOS_BAD_STYLE() {
        return (int)11012L;
    }
    public static int WSA_QOS_BAD_OBJECT() {
        return (int)11013L;
    }
    public static int WSA_QOS_TRAFFIC_CTRL_ERROR() {
        return (int)11014L;
    }
    public static int WSA_QOS_GENERIC_ERROR() {
        return (int)11015L;
    }
    public static int WSA_QOS_ESERVICETYPE() {
        return (int)11016L;
    }
    public static int WSA_QOS_EFLOWSPEC() {
        return (int)11017L;
    }
    public static int WSA_QOS_EPROVSPECBUF() {
        return (int)11018L;
    }
    public static int WSA_QOS_EFILTERSTYLE() {
        return (int)11019L;
    }
    public static int WSA_QOS_EFILTERTYPE() {
        return (int)11020L;
    }
    public static int WSA_QOS_EFILTERCOUNT() {
        return (int)11021L;
    }
    public static int WSA_QOS_EOBJLENGTH() {
        return (int)11022L;
    }
    public static int WSA_QOS_EFLOWCOUNT() {
        return (int)11023L;
    }
    public static int WSA_QOS_EUNKNOWNPSOBJ() {
        return (int)11024L;
    }
    public static int WSA_QOS_EUNKOWNPSOBJ() {
        return (int)11024L;
    }
    public static int WSA_QOS_EPOLICYOBJ() {
        return (int)11025L;
    }
    public static int WSA_QOS_EFLOWDESC() {
        return (int)11026L;
    }
    public static int WSA_QOS_EPSFLOWSPEC() {
        return (int)11027L;
    }
}


