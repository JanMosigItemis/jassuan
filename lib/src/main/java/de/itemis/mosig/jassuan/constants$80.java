// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$80 {

    static final FunctionDescriptor _wcsset_s_l$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle _wcsset_s_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wcsset_s_l",
        "(Ljdk/incubator/foreign/MemoryAddress;JILjdk/incubator/foreign/MemoryAddress;)I",
        constants$80._wcsset_s_l$FUNC, false
    );
    static final FunctionDescriptor _wcsnset_s_l$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_INT,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle _wcsnset_s_l$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_wcsnset_s_l",
        "(Ljdk/incubator/foreign/MemoryAddress;JIJLjdk/incubator/foreign/MemoryAddress;)I",
        constants$80._wcsnset_s_l$FUNC, false
    );
    static final FunctionDescriptor wcsnlen_s$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle wcsnlen_s$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "wcsnlen_s",
        "(Ljdk/incubator/foreign/MemoryAddress;J)J",
        constants$80.wcsnlen_s$FUNC, false
    );
    static final FunctionDescriptor _getcwd$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle _getcwd$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_getcwd",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$80._getcwd$FUNC, false
    );
    static final FunctionDescriptor _access$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle _access$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_access",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$80._access$FUNC, false
    );
    static final FunctionDescriptor _access_s$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle _access_s$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_access_s",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$80._access_s$FUNC, false
    );
}


