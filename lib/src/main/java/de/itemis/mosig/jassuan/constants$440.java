// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$440 {

    static final FunctionDescriptor MoveFileExA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle MoveFileExA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MoveFileExA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$440.MoveFileExA$FUNC, false
    );
    static final FunctionDescriptor MoveFileExW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle MoveFileExW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MoveFileExW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$440.MoveFileExW$FUNC, false
    );
    static final FunctionDescriptor MoveFileWithProgressA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle MoveFileWithProgressA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MoveFileWithProgressA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$440.MoveFileWithProgressA$FUNC, false
    );
    static final FunctionDescriptor MoveFileWithProgressW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle MoveFileWithProgressW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MoveFileWithProgressW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$440.MoveFileWithProgressW$FUNC, false
    );
    static final FunctionDescriptor MoveFileTransactedA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle MoveFileTransactedA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MoveFileTransactedA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$440.MoveFileTransactedA$FUNC, false
    );
    static final FunctionDescriptor MoveFileTransactedW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle MoveFileTransactedW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "MoveFileTransactedW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$440.MoveFileTransactedW$FUNC, false
    );
}


