// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class _STORAGE_ALLOCATE_BC_STREAM_OUTPUT {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        C_LONG_LONG.withName("RequestSize"),
        C_LONG.withName("NumOutStandingRequests"),
        MemoryLayout.paddingLayout(32)
    ).withName("_STORAGE_ALLOCATE_BC_STREAM_OUTPUT");
    public static MemoryLayout $LAYOUT() {
        return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT.$struct$LAYOUT;
    }
    static final VarHandle RequestSize$VH = $struct$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("RequestSize"));
    public static VarHandle RequestSize$VH() {
        return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT.RequestSize$VH;
    }
    public static long RequestSize$get(MemorySegment seg) {
        return (long)_STORAGE_ALLOCATE_BC_STREAM_OUTPUT.RequestSize$VH.get(seg);
    }
    public static void RequestSize$set( MemorySegment seg, long x) {
        _STORAGE_ALLOCATE_BC_STREAM_OUTPUT.RequestSize$VH.set(seg, x);
    }
    public static long RequestSize$get(MemorySegment seg, long index) {
        return (long)_STORAGE_ALLOCATE_BC_STREAM_OUTPUT.RequestSize$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void RequestSize$set(MemorySegment seg, long index, long x) {
        _STORAGE_ALLOCATE_BC_STREAM_OUTPUT.RequestSize$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle NumOutStandingRequests$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("NumOutStandingRequests"));
    public static VarHandle NumOutStandingRequests$VH() {
        return _STORAGE_ALLOCATE_BC_STREAM_OUTPUT.NumOutStandingRequests$VH;
    }
    public static int NumOutStandingRequests$get(MemorySegment seg) {
        return (int)_STORAGE_ALLOCATE_BC_STREAM_OUTPUT.NumOutStandingRequests$VH.get(seg);
    }
    public static void NumOutStandingRequests$set( MemorySegment seg, int x) {
        _STORAGE_ALLOCATE_BC_STREAM_OUTPUT.NumOutStandingRequests$VH.set(seg, x);
    }
    public static int NumOutStandingRequests$get(MemorySegment seg, long index) {
        return (int)_STORAGE_ALLOCATE_BC_STREAM_OUTPUT.NumOutStandingRequests$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void NumOutStandingRequests$set(MemorySegment seg, long index, int x) {
        _STORAGE_ALLOCATE_BC_STREAM_OUTPUT.NumOutStandingRequests$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


