// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$859 {

    static final FunctionDescriptor NCryptFinalizeKey$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG_LONG,
        C_LONG
    );
    static final MethodHandle NCryptFinalizeKey$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NCryptFinalizeKey",
        "(JI)I",
        constants$859.NCryptFinalizeKey$FUNC, false
    );
    static final FunctionDescriptor NCryptEncrypt$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NCryptEncrypt$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NCryptEncrypt",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$859.NCryptEncrypt$FUNC, false
    );
    static final FunctionDescriptor NCryptDecrypt$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NCryptDecrypt$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NCryptDecrypt",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$859.NCryptDecrypt$FUNC, false
    );
    static final FunctionDescriptor NCryptImportKey$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG_LONG,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final MethodHandle NCryptImportKey$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NCryptImportKey",
        "(JJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$859.NCryptImportKey$FUNC, false
    );
    static final FunctionDescriptor NCryptExportKey$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG_LONG,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NCryptExportKey$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NCryptExportKey",
        "(JJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$859.NCryptExportKey$FUNC, false
    );
    static final FunctionDescriptor NCryptSignHash$FUNC = FunctionDescriptor.of(C_LONG,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle NCryptSignHash$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NCryptSignHash",
        "(JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;I)I",
        constants$859.NCryptSignHash$FUNC, false
    );
}


