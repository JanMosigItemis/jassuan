// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$960 {

    static final FunctionDescriptor RpcSsDisableAllocate$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle RpcSsDisableAllocate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSsDisableAllocate",
        "()V",
        constants$960.RpcSsDisableAllocate$FUNC, false
    );
    static final FunctionDescriptor RpcSsEnableAllocate$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle RpcSsEnableAllocate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSsEnableAllocate",
        "()V",
        constants$960.RpcSsEnableAllocate$FUNC, false
    );
    static final FunctionDescriptor RpcSsFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle RpcSsFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSsFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$960.RpcSsFree$FUNC, false
    );
    static final FunctionDescriptor RpcSsGetThreadHandle$FUNC = FunctionDescriptor.of(C_POINTER);
    static final MethodHandle RpcSsGetThreadHandle$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSsGetThreadHandle",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        constants$960.RpcSsGetThreadHandle$FUNC, false
    );
    static final FunctionDescriptor RpcSsSetClientAllocFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcSsSetClientAllocFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSsSetClientAllocFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$960.RpcSsSetClientAllocFree$FUNC, false
    );
    static final FunctionDescriptor RpcSsSetThreadHandle$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle RpcSsSetThreadHandle$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSsSetThreadHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$960.RpcSsSetThreadHandle$FUNC, false
    );
}


