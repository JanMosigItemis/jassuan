// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1378 {

    static final FunctionDescriptor gpgrt_set_alloc_func$f$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle gpgrt_set_alloc_func$f$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1378.gpgrt_set_alloc_func$f$FUNC, false
    );
    static final FunctionDescriptor gpgrt_set_alloc_func$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle gpgrt_set_alloc_func$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "gpgrt_set_alloc_func",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1378.gpgrt_set_alloc_func$FUNC, false
    );
    static final FunctionDescriptor gpgrt_add_emergency_cleanup$f$FUNC = FunctionDescriptor.ofVoid();
    static final MethodHandle gpgrt_add_emergency_cleanup$f$MH = RuntimeHelper.downcallHandle(
        "()V",
        constants$1378.gpgrt_add_emergency_cleanup$f$FUNC, false
    );
    static final FunctionDescriptor gpgrt_add_emergency_cleanup$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle gpgrt_add_emergency_cleanup$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "gpgrt_add_emergency_cleanup",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1378.gpgrt_add_emergency_cleanup$FUNC, false
    );
}


