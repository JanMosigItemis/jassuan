// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$961 {

    static final FunctionDescriptor RpcSsSwapClientAllocFree$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcSsSwapClientAllocFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSsSwapClientAllocFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$961.RpcSsSwapClientAllocFree$FUNC, false
    );
    static final FunctionDescriptor RpcSmAllocate$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle RpcSmAllocate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmAllocate",
        "(JLjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$961.RpcSmAllocate$FUNC, false
    );
    static final FunctionDescriptor RpcSmClientFree$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle RpcSmClientFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmClientFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$961.RpcSmClientFree$FUNC, false
    );
    static final FunctionDescriptor RpcSmDestroyClientContext$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle RpcSmDestroyClientContext$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmDestroyClientContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$961.RpcSmDestroyClientContext$FUNC, false
    );
    static final FunctionDescriptor RpcSmDisableAllocate$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle RpcSmDisableAllocate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmDisableAllocate",
        "()I",
        constants$961.RpcSmDisableAllocate$FUNC, false
    );
    static final FunctionDescriptor RpcSmEnableAllocate$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle RpcSmEnableAllocate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmEnableAllocate",
        "()I",
        constants$961.RpcSmEnableAllocate$FUNC, false
    );
}


