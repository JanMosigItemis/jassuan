// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$921 {

    static final FunctionDescriptor CertFreeServerOcspResponseContext$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle CertFreeServerOcspResponseContext$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertFreeServerOcspResponseContext",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$921.CertFreeServerOcspResponseContext$FUNC, false
    );
    static final FunctionDescriptor CertRetrieveLogoOrBiometricInfo$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CertRetrieveLogoOrBiometricInfo$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertRetrieveLogoOrBiometricInfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;IIILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$921.CertRetrieveLogoOrBiometricInfo$FUNC, false
    );
    static final FunctionDescriptor CertSelectCertificateChains$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CertSelectCertificateChains$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertSelectCertificateChains",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$921.CertSelectCertificateChains$FUNC, false
    );
    static final FunctionDescriptor CertFreeCertificateChainList$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle CertFreeCertificateChainList$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CertFreeCertificateChainList",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$921.CertFreeCertificateChainList$FUNC, false
    );
    static final FunctionDescriptor CryptRetrieveTimeStamp$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptRetrieveTimeStamp$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptRetrieveTimeStamp",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$921.CryptRetrieveTimeStamp$FUNC, false
    );
    static final FunctionDescriptor CryptVerifyTimeStampSignature$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CryptVerifyTimeStampSignature$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CryptVerifyTimeStampSignature",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$921.CryptVerifyTimeStampSignature$FUNC, false
    );
}


