// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class __WIDL_wtypes_generated_name_0000000B {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("tyspec"),
        MemoryLayout.paddingLayout(32),
        MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
            ).withName("clsid"),
            C_POINTER.withName("pFileExt"),
            C_POINTER.withName("pMimeType"),
            C_POINTER.withName("pProgId"),
            C_POINTER.withName("pFileName"),
            MemoryLayout.structLayout(
                C_POINTER.withName("pPackageName"),
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            ).withName("ByName"),
            MemoryLayout.structLayout(
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("ObjectId"),
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            ).withName("ByObjectId")
        ).withName("tagged_union")
    ).withName("__WIDL_wtypes_generated_name_0000000B");
    public static MemoryLayout $LAYOUT() {
        return __WIDL_wtypes_generated_name_0000000B.$struct$LAYOUT;
    }
    static final VarHandle tyspec$VH = $struct$LAYOUT.varHandle(int.class, MemoryLayout.PathElement.groupElement("tyspec"));
    public static VarHandle tyspec$VH() {
        return __WIDL_wtypes_generated_name_0000000B.tyspec$VH;
    }
    public static int tyspec$get(MemorySegment seg) {
        return (int)__WIDL_wtypes_generated_name_0000000B.tyspec$VH.get(seg);
    }
    public static void tyspec$set( MemorySegment seg, int x) {
        __WIDL_wtypes_generated_name_0000000B.tyspec$VH.set(seg, x);
    }
    public static int tyspec$get(MemorySegment seg, long index) {
        return (int)__WIDL_wtypes_generated_name_0000000B.tyspec$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void tyspec$set(MemorySegment seg, long index, int x) {
        __WIDL_wtypes_generated_name_0000000B.tyspec$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static class __WIDL_wtypes_generated_name_0000000A {

        static final MemoryLayout __WIDL_wtypes_generated_name_0000000A$union$LAYOUT = MemoryLayout.unionLayout(
            MemoryLayout.structLayout(
                C_LONG.withName("Data1"),
                C_SHORT.withName("Data2"),
                C_SHORT.withName("Data3"),
                MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
            ).withName("clsid"),
            C_POINTER.withName("pFileExt"),
            C_POINTER.withName("pMimeType"),
            C_POINTER.withName("pProgId"),
            C_POINTER.withName("pFileName"),
            MemoryLayout.structLayout(
                C_POINTER.withName("pPackageName"),
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            ).withName("ByName"),
            MemoryLayout.structLayout(
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("ObjectId"),
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            ).withName("ByObjectId")
        ).withName("__WIDL_wtypes_generated_name_0000000A");
        public static MemoryLayout $LAYOUT() {
            return __WIDL_wtypes_generated_name_0000000A.__WIDL_wtypes_generated_name_0000000A$union$LAYOUT;
        }
        public static MemorySegment clsid$slice(MemorySegment seg) {
            return seg.asSlice(0, 16);
        }
        static final VarHandle pFileExt$VH = MemoryHandles.asAddressVarHandle(__WIDL_wtypes_generated_name_0000000A$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFileExt")));
        public static VarHandle pFileExt$VH() {
            return __WIDL_wtypes_generated_name_0000000A.pFileExt$VH;
        }
        public static MemoryAddress pFileExt$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pFileExt$VH.get(seg);
        }
        public static void pFileExt$set( MemorySegment seg, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pFileExt$VH.set(seg, x);
        }
        public static MemoryAddress pFileExt$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pFileExt$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void pFileExt$set(MemorySegment seg, long index, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pFileExt$VH.set(seg.asSlice(index*sizeof()), x);
        }
        static final VarHandle pMimeType$VH = MemoryHandles.asAddressVarHandle(__WIDL_wtypes_generated_name_0000000A$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pMimeType")));
        public static VarHandle pMimeType$VH() {
            return __WIDL_wtypes_generated_name_0000000A.pMimeType$VH;
        }
        public static MemoryAddress pMimeType$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pMimeType$VH.get(seg);
        }
        public static void pMimeType$set( MemorySegment seg, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pMimeType$VH.set(seg, x);
        }
        public static MemoryAddress pMimeType$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pMimeType$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void pMimeType$set(MemorySegment seg, long index, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pMimeType$VH.set(seg.asSlice(index*sizeof()), x);
        }
        static final VarHandle pProgId$VH = MemoryHandles.asAddressVarHandle(__WIDL_wtypes_generated_name_0000000A$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pProgId")));
        public static VarHandle pProgId$VH() {
            return __WIDL_wtypes_generated_name_0000000A.pProgId$VH;
        }
        public static MemoryAddress pProgId$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pProgId$VH.get(seg);
        }
        public static void pProgId$set( MemorySegment seg, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pProgId$VH.set(seg, x);
        }
        public static MemoryAddress pProgId$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pProgId$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void pProgId$set(MemorySegment seg, long index, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pProgId$VH.set(seg.asSlice(index*sizeof()), x);
        }
        static final VarHandle pFileName$VH = MemoryHandles.asAddressVarHandle(__WIDL_wtypes_generated_name_0000000A$union$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pFileName")));
        public static VarHandle pFileName$VH() {
            return __WIDL_wtypes_generated_name_0000000A.pFileName$VH;
        }
        public static MemoryAddress pFileName$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pFileName$VH.get(seg);
        }
        public static void pFileName$set( MemorySegment seg, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pFileName$VH.set(seg, x);
        }
        public static MemoryAddress pFileName$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)__WIDL_wtypes_generated_name_0000000A.pFileName$VH.get(seg.asSlice(index*sizeof()));
        }
        public static void pFileName$set(MemorySegment seg, long index, MemoryAddress x) {
            __WIDL_wtypes_generated_name_0000000A.pFileName$VH.set(seg.asSlice(index*sizeof()), x);
        }
        public static class ByName {

            static final MemoryLayout __WIDL_wtypes_generated_name_0000000A$ByName$struct$LAYOUT = MemoryLayout.structLayout(
                C_POINTER.withName("pPackageName"),
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            );
            public static MemoryLayout $LAYOUT() {
                return ByName.__WIDL_wtypes_generated_name_0000000A$ByName$struct$LAYOUT;
            }
            static final VarHandle pPackageName$VH = MemoryHandles.asAddressVarHandle(__WIDL_wtypes_generated_name_0000000A$ByName$struct$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("pPackageName")));
            public static VarHandle pPackageName$VH() {
                return ByName.pPackageName$VH;
            }
            public static MemoryAddress pPackageName$get(MemorySegment seg) {
                return (jdk.incubator.foreign.MemoryAddress)ByName.pPackageName$VH.get(seg);
            }
            public static void pPackageName$set( MemorySegment seg, MemoryAddress x) {
                ByName.pPackageName$VH.set(seg, x);
            }
            public static MemoryAddress pPackageName$get(MemorySegment seg, long index) {
                return (jdk.incubator.foreign.MemoryAddress)ByName.pPackageName$VH.get(seg.asSlice(index*sizeof()));
            }
            public static void pPackageName$set(MemorySegment seg, long index, MemoryAddress x) {
                ByName.pPackageName$VH.set(seg.asSlice(index*sizeof()), x);
            }
            public static MemorySegment PolicyId$slice(MemorySegment seg) {
                return seg.asSlice(8, 16);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
            public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
            public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
                return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
            }
            public static MemorySegment allocateArray(int len, ResourceScope scope) {
                return allocateArray(len, SegmentAllocator.ofScope(scope));
            }
            public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
        }

        public static MemorySegment ByName$slice(MemorySegment seg) {
            return seg.asSlice(0, 24);
        }
        public static class ByObjectId {

            static final MemoryLayout __WIDL_wtypes_generated_name_0000000A$ByObjectId$struct$LAYOUT = MemoryLayout.structLayout(
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("ObjectId"),
                MemoryLayout.structLayout(
                    C_LONG.withName("Data1"),
                    C_SHORT.withName("Data2"),
                    C_SHORT.withName("Data3"),
                    MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
                ).withName("PolicyId")
            );
            public static MemoryLayout $LAYOUT() {
                return ByObjectId.__WIDL_wtypes_generated_name_0000000A$ByObjectId$struct$LAYOUT;
            }
            public static MemorySegment ObjectId$slice(MemorySegment seg) {
                return seg.asSlice(0, 16);
            }
            public static MemorySegment PolicyId$slice(MemorySegment seg) {
                return seg.asSlice(16, 16);
            }
            public static long sizeof() { return $LAYOUT().byteSize(); }
            public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
            public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
            public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
                return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
            }
            public static MemorySegment allocateArray(int len, ResourceScope scope) {
                return allocateArray(len, SegmentAllocator.ofScope(scope));
            }
            public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
        }

        public static MemorySegment ByObjectId$slice(MemorySegment seg) {
            return seg.asSlice(0, 32);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
        public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
        public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
            return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
        }
        public static MemorySegment allocateArray(int len, ResourceScope scope) {
            return allocateArray(len, SegmentAllocator.ofScope(scope));
        }
        public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
    }

    public static MemorySegment tagged_union$slice(MemorySegment seg) {
        return seg.asSlice(8, 32);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


