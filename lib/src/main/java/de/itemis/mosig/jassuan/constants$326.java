// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$326 {

    static final FunctionDescriptor CreateMemoryResourceNotification$FUNC = FunctionDescriptor.of(C_POINTER,
        C_INT
    );
    static final MethodHandle CreateMemoryResourceNotification$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateMemoryResourceNotification",
        "(I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$326.CreateMemoryResourceNotification$FUNC, false
    );
    static final FunctionDescriptor QueryMemoryResourceNotification$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle QueryMemoryResourceNotification$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "QueryMemoryResourceNotification",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$326.QueryMemoryResourceNotification$FUNC, false
    );
    static final FunctionDescriptor GetSystemFileCacheSize$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetSystemFileCacheSize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetSystemFileCacheSize",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$326.GetSystemFileCacheSize$FUNC, false
    );
    static final FunctionDescriptor SetSystemFileCacheSize$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG
    );
    static final MethodHandle SetSystemFileCacheSize$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetSystemFileCacheSize",
        "(JJI)I",
        constants$326.SetSystemFileCacheSize$FUNC, false
    );
    static final FunctionDescriptor AllocateUserPhysicalPages$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle AllocateUserPhysicalPages$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "AllocateUserPhysicalPages",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$326.AllocateUserPhysicalPages$FUNC, false
    );
    static final FunctionDescriptor FreeUserPhysicalPages$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle FreeUserPhysicalPages$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FreeUserPhysicalPages",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$326.FreeUserPhysicalPages$FUNC, false
    );
}


