// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1359 {

    static final FunctionDescriptor WSANtohs$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_SHORT,
        C_POINTER
    );
    static final MethodHandle WSANtohs$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSANtohs",
        "(JSLjdk/incubator/foreign/MemoryAddress;)I",
        constants$1359.WSANtohs$FUNC, false
    );
    static final FunctionDescriptor WSARecv$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WSARecv$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSARecv",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1359.WSARecv$FUNC, false
    );
    static final FunctionDescriptor WSARecvDisconnect$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle WSARecvDisconnect$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSARecvDisconnect",
        "(JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$1359.WSARecvDisconnect$FUNC, false
    );
    static final FunctionDescriptor WSARecvFrom$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WSARecvFrom$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSARecvFrom",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1359.WSARecvFrom$FUNC, false
    );
    static final FunctionDescriptor WSAResetEvent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle WSAResetEvent$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSAResetEvent",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1359.WSAResetEvent$FUNC, false
    );
    static final FunctionDescriptor WSASend$FUNC = FunctionDescriptor.of(C_INT,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle WSASend$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WSASend",
        "(JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1359.WSASend$FUNC, false
    );
}


