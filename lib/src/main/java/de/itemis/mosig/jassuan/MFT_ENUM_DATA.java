// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
public class MFT_ENUM_DATA {

    static final MemoryLayout $struct$LAYOUT = MemoryLayout.structLayout(
        C_LONG_LONG.withName("StartFileReferenceNumber"),
        C_LONG_LONG.withName("LowUsn"),
        C_LONG_LONG.withName("HighUsn")
    );
    public static MemoryLayout $LAYOUT() {
        return MFT_ENUM_DATA.$struct$LAYOUT;
    }
    static final VarHandle StartFileReferenceNumber$VH = $struct$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("StartFileReferenceNumber"));
    public static VarHandle StartFileReferenceNumber$VH() {
        return MFT_ENUM_DATA.StartFileReferenceNumber$VH;
    }
    public static long StartFileReferenceNumber$get(MemorySegment seg) {
        return (long)MFT_ENUM_DATA.StartFileReferenceNumber$VH.get(seg);
    }
    public static void StartFileReferenceNumber$set( MemorySegment seg, long x) {
        MFT_ENUM_DATA.StartFileReferenceNumber$VH.set(seg, x);
    }
    public static long StartFileReferenceNumber$get(MemorySegment seg, long index) {
        return (long)MFT_ENUM_DATA.StartFileReferenceNumber$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void StartFileReferenceNumber$set(MemorySegment seg, long index, long x) {
        MFT_ENUM_DATA.StartFileReferenceNumber$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle LowUsn$VH = $struct$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("LowUsn"));
    public static VarHandle LowUsn$VH() {
        return MFT_ENUM_DATA.LowUsn$VH;
    }
    public static long LowUsn$get(MemorySegment seg) {
        return (long)MFT_ENUM_DATA.LowUsn$VH.get(seg);
    }
    public static void LowUsn$set( MemorySegment seg, long x) {
        MFT_ENUM_DATA.LowUsn$VH.set(seg, x);
    }
    public static long LowUsn$get(MemorySegment seg, long index) {
        return (long)MFT_ENUM_DATA.LowUsn$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void LowUsn$set(MemorySegment seg, long index, long x) {
        MFT_ENUM_DATA.LowUsn$VH.set(seg.asSlice(index*sizeof()), x);
    }
    static final VarHandle HighUsn$VH = $struct$LAYOUT.varHandle(long.class, MemoryLayout.PathElement.groupElement("HighUsn"));
    public static VarHandle HighUsn$VH() {
        return MFT_ENUM_DATA.HighUsn$VH;
    }
    public static long HighUsn$get(MemorySegment seg) {
        return (long)MFT_ENUM_DATA.HighUsn$VH.get(seg);
    }
    public static void HighUsn$set( MemorySegment seg, long x) {
        MFT_ENUM_DATA.HighUsn$VH.set(seg, x);
    }
    public static long HighUsn$get(MemorySegment seg, long index) {
        return (long)MFT_ENUM_DATA.HighUsn$VH.get(seg.asSlice(index*sizeof()));
    }
    public static void HighUsn$set(MemorySegment seg, long index, long x) {
        MFT_ENUM_DATA.HighUsn$VH.set(seg.asSlice(index*sizeof()), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocate(ResourceScope scope) { return allocate(SegmentAllocator.ofScope(scope)); }
    public static MemorySegment allocateArray(int len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment allocateArray(int len, ResourceScope scope) {
        return allocateArray(len, SegmentAllocator.ofScope(scope));
    }
    public static MemorySegment ofAddress(MemoryAddress addr, ResourceScope scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


