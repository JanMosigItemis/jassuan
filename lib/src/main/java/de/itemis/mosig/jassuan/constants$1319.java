// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1319 {

    static final FunctionDescriptor ChooseColorW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle ChooseColorW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ChooseColorW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1319.ChooseColorW$FUNC, false
    );
    static final FunctionDescriptor LPFRHOOKPROC$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_INT,
        C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle LPFRHOOKPROC$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;IJJ)J",
        constants$1319.LPFRHOOKPROC$FUNC, false
    );
    static final FunctionDescriptor FindTextA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle FindTextA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FindTextA",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1319.FindTextA$FUNC, false
    );
    static final FunctionDescriptor FindTextW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle FindTextW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FindTextW",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1319.FindTextW$FUNC, false
    );
    static final FunctionDescriptor ReplaceTextA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle ReplaceTextA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReplaceTextA",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$1319.ReplaceTextA$FUNC, false
    );
}


