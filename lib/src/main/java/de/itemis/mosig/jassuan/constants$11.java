// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$11 {

    static final FunctionDescriptor freopen$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle freopen$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "freopen",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$11.freopen$FUNC, false
    );
    static final FunctionDescriptor fsetpos$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fsetpos$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fsetpos",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$11.fsetpos$FUNC, false
    );
    static final FunctionDescriptor fsetpos64$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle fsetpos64$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fsetpos64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$11.fsetpos64$FUNC, false
    );
    static final FunctionDescriptor fseek$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_INT
    );
    static final MethodHandle fseek$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "fseek",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$11.fseek$FUNC, false
    );
    static final FunctionDescriptor ftell$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle ftell$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ftell",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$11.ftell$FUNC, false
    );
    static final FunctionDescriptor _fseeki64$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_INT
    );
    static final MethodHandle _fseeki64$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_fseeki64",
        "(Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$11._fseeki64$FUNC, false
    );
}


