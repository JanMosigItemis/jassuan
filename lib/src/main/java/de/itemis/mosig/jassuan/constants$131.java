// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$131 {

    static final FunctionDescriptor __popcntq$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_LONG_LONG
    );
    static final MethodHandle __popcntq$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__popcntq",
        "(J)J",
        constants$131.__popcntq$FUNC, false
    );
    static final FunctionDescriptor __readeflags$FUNC = FunctionDescriptor.of(C_LONG_LONG);
    static final MethodHandle __readeflags$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__readeflags",
        "()J",
        constants$131.__readeflags$FUNC, false
    );
    static final FunctionDescriptor __writeeflags$FUNC = FunctionDescriptor.ofVoid(
        C_LONG_LONG
    );
    static final MethodHandle __writeeflags$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__writeeflags",
        "(J)V",
        constants$131.__writeeflags$FUNC, false
    );
    static final FunctionDescriptor __crc32b$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_CHAR
    );
    static final MethodHandle __crc32b$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__crc32b",
        "(IB)I",
        constants$131.__crc32b$FUNC, false
    );
    static final FunctionDescriptor __crc32w$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_SHORT
    );
    static final MethodHandle __crc32w$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__crc32w",
        "(IS)I",
        constants$131.__crc32w$FUNC, false
    );
    static final FunctionDescriptor __crc32d$FUNC = FunctionDescriptor.of(C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle __crc32d$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "__crc32d",
        "(II)I",
        constants$131.__crc32d$FUNC, false
    );
}


