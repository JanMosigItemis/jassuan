// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$216 {

    static final FunctionDescriptor _mm_cvtpd_ps$FUNC = FunctionDescriptor.of(C_FLOAT,
        C_DOUBLE
    );
    static final MethodHandle _mm_cvtpd_ps$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_mm_cvtpd_ps",
        "(D)F",
        constants$216._mm_cvtpd_ps$FUNC, false
    );
    static final FunctionDescriptor _mm_cvtps_pd$FUNC = FunctionDescriptor.of(C_DOUBLE,
        C_FLOAT
    );
    static final MethodHandle _mm_cvtps_pd$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_mm_cvtps_pd",
        "(F)D",
        constants$216._mm_cvtps_pd$FUNC, false
    );
    static final FunctionDescriptor _mm_cvtepi32_pd$FUNC = FunctionDescriptor.of(C_DOUBLE,
        C_LONG_LONG
    );
    static final MethodHandle _mm_cvtepi32_pd$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_mm_cvtepi32_pd",
        "(J)D",
        constants$216._mm_cvtepi32_pd$FUNC, false
    );
    static final FunctionDescriptor _mm_cvtpd_epi32$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_DOUBLE
    );
    static final MethodHandle _mm_cvtpd_epi32$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_mm_cvtpd_epi32",
        "(D)J",
        constants$216._mm_cvtpd_epi32$FUNC, false
    );
    static final FunctionDescriptor _mm_cvtsd_si32$FUNC = FunctionDescriptor.of(C_INT,
        C_DOUBLE
    );
    static final MethodHandle _mm_cvtsd_si32$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_mm_cvtsd_si32",
        "(D)I",
        constants$216._mm_cvtsd_si32$FUNC, false
    );
    static final FunctionDescriptor _mm_cvtsd_ss$FUNC = FunctionDescriptor.of(C_FLOAT,
        C_FLOAT,
        C_DOUBLE
    );
    static final MethodHandle _mm_cvtsd_ss$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "_mm_cvtsd_ss",
        "(FD)F",
        constants$216._mm_cvtsd_ss$FUNC, false
    );
}


