// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$366 {

    static final FunctionDescriptor OpenMutexW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle OpenMutexW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenMutexW",
        "(IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$366.OpenMutexW$FUNC, false
    );
    static final FunctionDescriptor OpenEventA$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle OpenEventA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenEventA",
        "(IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$366.OpenEventA$FUNC, false
    );
    static final FunctionDescriptor OpenEventW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle OpenEventW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenEventW",
        "(IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$366.OpenEventW$FUNC, false
    );
    static final FunctionDescriptor OpenSemaphoreW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_LONG,
        C_INT,
        C_POINTER
    );
    static final MethodHandle OpenSemaphoreW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenSemaphoreW",
        "(IILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$366.OpenSemaphoreW$FUNC, false
    );
    static final FunctionDescriptor WaitOnAddress$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG
    );
    static final MethodHandle WaitOnAddress$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WaitOnAddress",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JI)I",
        constants$366.WaitOnAddress$FUNC, false
    );
    static final FunctionDescriptor WakeByAddressSingle$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle WakeByAddressSingle$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "WakeByAddressSingle",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$366.WakeByAddressSingle$FUNC, false
    );
}


