// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$448 {

    static final FunctionDescriptor OpenBackupEventLogW$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle OpenBackupEventLogW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "OpenBackupEventLogW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$448.OpenBackupEventLogW$FUNC, false
    );
    static final FunctionDescriptor ReadEventLogA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle ReadEventLogA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReadEventLogA",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$448.ReadEventLogA$FUNC, false
    );
    static final FunctionDescriptor ReadEventLogW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle ReadEventLogW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReadEventLogW",
        "(Ljdk/incubator/foreign/MemoryAddress;IILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$448.ReadEventLogW$FUNC, false
    );
    static final FunctionDescriptor ReportEventA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_SHORT,
        C_SHORT,
        C_LONG,
        C_POINTER,
        C_SHORT,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle ReportEventA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReportEventA",
        "(Ljdk/incubator/foreign/MemoryAddress;SSILjdk/incubator/foreign/MemoryAddress;SILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$448.ReportEventA$FUNC, false
    );
    static final FunctionDescriptor ReportEventW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_SHORT,
        C_SHORT,
        C_LONG,
        C_POINTER,
        C_SHORT,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle ReportEventW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "ReportEventW",
        "(Ljdk/incubator/foreign/MemoryAddress;SSILjdk/incubator/foreign/MemoryAddress;SILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$448.ReportEventW$FUNC, false
    );
    static final FunctionDescriptor GetEventLogInformation$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle GetEventLogInformation$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetEventLogInformation",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$448.GetEventLogInformation$FUNC, false
    );
}


