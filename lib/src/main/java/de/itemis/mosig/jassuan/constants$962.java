// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$962 {

    static final FunctionDescriptor RpcSmFree$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle RpcSmFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmFree",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$962.RpcSmFree$FUNC, false
    );
    static final FunctionDescriptor RpcSmGetThreadHandle$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcSmGetThreadHandle$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmGetThreadHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$962.RpcSmGetThreadHandle$FUNC, false
    );
    static final FunctionDescriptor RpcSmSetClientAllocFree$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcSmSetClientAllocFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmSetClientAllocFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$962.RpcSmSetClientAllocFree$FUNC, false
    );
    static final FunctionDescriptor RpcSmSetThreadHandle$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle RpcSmSetThreadHandle$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmSetThreadHandle",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$962.RpcSmSetThreadHandle$FUNC, false
    );
    static final FunctionDescriptor RpcSmSwapClientAllocFree$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle RpcSmSwapClientAllocFree$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "RpcSmSwapClientAllocFree",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$962.RpcSmSwapClientAllocFree$FUNC, false
    );
    static final FunctionDescriptor NdrRpcSsEnableAllocate$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final MethodHandle NdrRpcSsEnableAllocate$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "NdrRpcSsEnableAllocate",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$962.NdrRpcSsEnableAllocate$FUNC, false
    );
}


