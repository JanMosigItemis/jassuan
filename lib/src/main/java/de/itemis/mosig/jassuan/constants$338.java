// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$338 {

    static final FunctionDescriptor GetThreadContext$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetThreadContext$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetThreadContext",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$338.GetThreadContext$FUNC, false
    );
    static final FunctionDescriptor FlushInstructionCache$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle FlushInstructionCache$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "FlushInstructionCache",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$338.FlushInstructionCache$FUNC, false
    );
    static final FunctionDescriptor GetThreadTimes$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle GetThreadTimes$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetThreadTimes",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$338.GetThreadTimes$FUNC, false
    );
    static final FunctionDescriptor GetCurrentProcessorNumber$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle GetCurrentProcessorNumber$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetCurrentProcessorNumber",
        "()I",
        constants$338.GetCurrentProcessorNumber$FUNC, false
    );
    static final FunctionDescriptor TerminateProcess$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle TerminateProcess$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "TerminateProcess",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$338.TerminateProcess$FUNC, false
    );
    static final FunctionDescriptor CreateRemoteThread$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final MethodHandle CreateRemoteThread$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CreateRemoteThread",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$338.CreateRemoteThread$FUNC, false
    );
}


