// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1287 {

    static final FunctionDescriptor LPOCNDSCPROC$FUNC = FunctionDescriptor.ofVoid(
        C_LONG_LONG,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle LPOCNDSCPROC$MH = RuntimeHelper.downcallHandle(
        "(JJLjdk/incubator/foreign/MemoryAddress;)V",
        constants$1287.LPOCNDSCPROC$FUNC, false
    );
    static final FunctionDescriptor SCardUIDlgSelectCardA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle SCardUIDlgSelectCardA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SCardUIDlgSelectCardA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1287.SCardUIDlgSelectCardA$FUNC, false
    );
    static final FunctionDescriptor SCardUIDlgSelectCardW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle SCardUIDlgSelectCardW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SCardUIDlgSelectCardW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1287.SCardUIDlgSelectCardW$FUNC, false
    );
    static final FunctionDescriptor GetOpenCardNameA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle GetOpenCardNameA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetOpenCardNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1287.GetOpenCardNameA$FUNC, false
    );
    static final FunctionDescriptor GetOpenCardNameW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle GetOpenCardNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetOpenCardNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1287.GetOpenCardNameW$FUNC, false
    );
}


