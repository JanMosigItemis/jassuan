// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$301 {

    static final FunctionDescriptor GetVolumeInformationByHandleW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle GetVolumeInformationByHandleW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetVolumeInformationByHandleW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$301.GetVolumeInformationByHandleW$FUNC, false
    );
    static final FunctionDescriptor GetLongPathNameA$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle GetLongPathNameA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetLongPathNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$301.GetLongPathNameA$FUNC, false
    );
    static final FunctionDescriptor GetLongPathNameW$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle GetLongPathNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetLongPathNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$301.GetLongPathNameW$FUNC, false
    );
    static final FunctionDescriptor GetTempFileNameA$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle GetTempFileNameA$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetTempFileNameA",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$301.GetTempFileNameA$FUNC, false
    );
    static final FunctionDescriptor GetTempFileNameW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle GetTempFileNameW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetTempFileNameW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$301.GetTempFileNameW$FUNC, false
    );
    static final FunctionDescriptor GetVolumeInformationW$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final MethodHandle GetVolumeInformationW$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "GetVolumeInformationW",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$301.GetVolumeInformationW$FUNC, false
    );
}


