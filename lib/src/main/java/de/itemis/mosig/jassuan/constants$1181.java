// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$1181 {

    static final FunctionDescriptor IWinInetInfo_QueryOption_Proxy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IWinInetInfo_QueryOption_Proxy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IWinInetInfo_QueryOption_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1181.IWinInetInfo_QueryOption_Proxy$FUNC, false
    );
    static final FunctionDescriptor IWinInetInfo_QueryOption_Stub$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IWinInetInfo_QueryOption_Stub$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IWinInetInfo_QueryOption_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1181.IWinInetInfo_QueryOption_Stub$FUNC, false
    );
    static final MemoryLayout IID_IHttpSecurity$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IHttpSecurity$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IHttpSecurity", constants$1181.IID_IHttpSecurity$LAYOUT);
    static final MemoryLayout IID_IWinInetHttpInfo$LAYOUT = MemoryLayout.structLayout(
        C_LONG.withName("Data1"),
        C_SHORT.withName("Data2"),
        C_SHORT.withName("Data3"),
        MemoryLayout.sequenceLayout(8, C_CHAR).withName("Data4")
    ).withName("_GUID");
    static final MemorySegment IID_IWinInetHttpInfo$SEGMENT = RuntimeHelper.lookupGlobalVariable(assuan_h.LIBRARIES, "IID_IWinInetHttpInfo", constants$1181.IID_IWinInetHttpInfo$LAYOUT);
    static final FunctionDescriptor IWinInetHttpInfo_RemoteQueryInfo_Proxy$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IWinInetHttpInfo_RemoteQueryInfo_Proxy$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IWinInetHttpInfo_RemoteQueryInfo_Proxy",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$1181.IWinInetHttpInfo_RemoteQueryInfo_Proxy$FUNC, false
    );
    static final FunctionDescriptor IWinInetHttpInfo_RemoteQueryInfo_Stub$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle IWinInetHttpInfo_RemoteQueryInfo_Stub$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "IWinInetHttpInfo_RemoteQueryInfo_Stub",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$1181.IWinInetHttpInfo_RemoteQueryInfo_Stub$FUNC, false
    );
}


