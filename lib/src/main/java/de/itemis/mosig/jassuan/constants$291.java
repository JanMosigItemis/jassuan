// Generated by jextract

package de.itemis.mosig.jassuan;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$291 {

    static final FunctionDescriptor CheckRemoteDebuggerPresent$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle CheckRemoteDebuggerPresent$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "CheckRemoteDebuggerPresent",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$291.CheckRemoteDebuggerPresent$FUNC, false
    );
    static final FunctionDescriptor PTOP_LEVEL_EXCEPTION_FILTER$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle PTOP_LEVEL_EXCEPTION_FILTER$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$291.PTOP_LEVEL_EXCEPTION_FILTER$FUNC, false
    );
    static final FunctionDescriptor LPTOP_LEVEL_EXCEPTION_FILTER$FUNC = FunctionDescriptor.of(C_LONG,
        C_POINTER
    );
    static final MethodHandle LPTOP_LEVEL_EXCEPTION_FILTER$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$291.LPTOP_LEVEL_EXCEPTION_FILTER$FUNC, false
    );
    static final FunctionDescriptor SetUnhandledExceptionFilter$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER
    );
    static final MethodHandle SetUnhandledExceptionFilter$MH = RuntimeHelper.downcallHandle(
        assuan_h.LIBRARIES, "SetUnhandledExceptionFilter",
        "(Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$291.SetUnhandledExceptionFilter$FUNC, false
    );
}


